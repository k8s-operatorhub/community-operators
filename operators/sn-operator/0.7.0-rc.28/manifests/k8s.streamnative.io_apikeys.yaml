apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: apikeys.k8s.streamnative.io
spec:
  group: k8s.streamnative.io
  names:
    kind: ApiKeys
    listKind: ApiKeysList
    plural: apikeys
    singular: apikeys
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApiKeys is the Schema for the apikeys API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ApiKeysSpec defines the desired state of ApiKeys
            properties:
              brokerServiceUrl:
                description: brokerServiceUrl defines the service url of pulsar cluster.
                type: string
              config:
                description: Config is the configuration of the api keys svc
                properties:
                  authenticator:
                    description: Authenticator is the configuration of the api keys
                      authenticator
                    properties:
                      acceptedAudience:
                        description: AcceptedAudience Only tokens with aud to this
                          value would be authenticated to this service.
                        type: string
                      enabled:
                        description: Enabled is the enable of the authenticator.
                        type: boolean
                      issuers:
                        description: Issuers only tokens with such issuers will be
                          authenticated to this service.
                        items:
                          type: string
                        type: array
                      jwksFetchInterval:
                        description: JwksFetchInterval is the interval of the jwks
                          fetch, unit is second.
                        format: int64
                        type: integer
                    type: object
                  backend:
                    description: Backend is the configuration of the api keys backend
                    properties:
                      pulsarClient:
                        additionalProperties:
                          type: string
                        description: PulsarClient is the client of the pulsar.
                        type: object
                      pulsarTopic:
                        description: PulsarTopic is the topic of the pulsar.
                        type: string
                      retryInterval:
                        description: RetryInterval is the retry interval of the backend,
                          unit is second.
                        format: int64
                        type: integer
                    type: object
                  customAuthenticators:
                    description: |-
                      CustomAuthenticators is the custom oidc authenticators, currently only support issuer and audience
                      we can expand it in the future
                    items:
                      properties:
                        audience:
                          type: string
                        issuer:
                          type: string
                      type: object
                    type: array
                  loadCustomOIDCConfig:
                    description: |-
                      LoadCustomOIDCConfig is the custom configuration of the api keys svc
                      if this is set to true, the api keys svc will load the custom oidc configuration file
                    type: boolean
                  server:
                    description: Server is the configuration of the api keys server
                    properties:
                      audience:
                        description: Audience aud the token issued for. Should be
                          the pulsar instance id.
                        type: string
                      claimsToCopy:
                        description: ClaimsToCopy These claims from the request token
                          would be copied to the issued tokens.
                        items:
                          type: string
                        type: array
                      currentKid:
                        description: CurrentKid is the current kid of the server.
                        type: string
                      logLevel:
                        description: LogLevel is the log level of the server.
                        enum:
                        - panic
                        - fatal
                        - error
                        - warn
                        - info
                        - debug
                        - trace
                        type: string
                      maxKeys:
                        default: 10000
                        description: MaxKeys is the max keys of the server.
                        type: integer
                      maxRevoked:
                        default: 10000
                        description: MaxRevoked is the max revoked of the server.
                        type: integer
                    type: object
                type: object
              hostname:
                description: The external host exposed by istio or ingress
                type: string
              image:
                description: |-
                  Image is the container image used to run api keys pods.
                  default is docker.cloudsmith.io/streamnative/sn-api-keys-svc:latest
                type: string
              imagePullPolicy:
                description: Image pull policy, one of Always, Never, IfNotPresent,
                  default to Always.
                type: string
              issuerPathPrefix:
                description: IssuerPathPrefix defines the issuer path prefix of the
                  api keys svc
                type: string
              istio:
                description: Istio defines Istio configuration of components
                properties:
                  authRules:
                    description: AuthRules define the AuthorizationPolicies
                    items:
                      properties:
                        fromSource:
                          items:
                            properties:
                              principals:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        toOperation:
                          description: ToOperation defines the ports that the rule
                            applies to
                          items:
                            properties:
                              ports:
                                description: Ports defines the ports that the rule
                                  applies to
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enabled:
                    description: Enabled defines whether to enable Istio
                    type: boolean
                  gateway:
                    description: |-
                      Gateway defines the gateway configuration, Gateway will be ignored if Gateways is not empty
                      The operator could either create a gateway automatically or use an existing one
                    properties:
                      advertisedDomain:
                        description: AdvertisedDomain defines the domain name for
                          the gateway, used solely when serving a list of gateways
                        type: string
                      create:
                        description: Create defines whether to create a gateway
                        type: boolean
                      gateways:
                        description: Gateways defines a list of existing gateways
                        items:
                          type: string
                        nullable: true
                        type: array
                      key:
                        default: istio-generatedid
                        description: Key is used to identify the gateway and related
                          resources, used solely when serving a list of gateways
                        type: string
                      route:
                        description: Route defines route policy for the gateway
                        properties:
                          topologyAware:
                            description: TopologyAware defines
                            properties:
                              key:
                                description: Key defines the node label key used to
                                  detect Pod topology info
                                type: string
                              subDomain:
                                description: SubDomain defines url generation rule
                                  for broker Pod
                                type: string
                            required:
                            - key
                            type: object
                          useWildcardDNS:
                            description: UseWildcardDNS means inherit DNS record from
                              wildcard DNS, only works for externalDNS
                            type: boolean
                        type: object
                      selector:
                        additionalProperties:
                          type: string
                        description: Selector defines the selector for the gateway
                          to create
                        nullable: true
                        type: object
                      tls:
                        properties:
                          certSecretName:
                            description: "SIMPLE mode:\n  CertSecretName defines the
                              name of the secret that contains the\n  certificate
                              to use in Istio Ingress Gateway. The value should be\n
                              \ name of the secret in the gateway workload namespace.\nPASSTHROUGH
                              mode:\n\t CertSecretName defines the name of the secret
                              that contains the\n\t certificate to use in Broker.
                              The value should be name of the secret\n  name of the
                              secret in the Broker workload namespace.\nRequired in
                              both SIMPLE and PASSTHROUGH mode."
                            type: string
                          mode:
                            description: |-
                              Optional: Indicates whether connections to this port should be
                              secured using TLS. The value of this field determines how TLS is
                              enforced.
                            type: string
                          subjectAltNames:
                            description: SubjectAltNames defines the subject alternative
                              names for the certificate
                            items:
                              type: string
                            type: array
                          trustCertsEnabled:
                            description: TrustCertsEnabled defines whether to enable
                              trust store
                            type: boolean
                        type: object
                    type: object
                  gateways:
                    description: Gateways define a list of gateway configurations,
                      Gateway will be used if Gateways is empty
                    items:
                      properties:
                        advertisedDomain:
                          description: AdvertisedDomain defines the domain name for
                            the gateway, used solely when serving a list of gateways
                          type: string
                        create:
                          description: Create defines whether to create a gateway
                          type: boolean
                        gateways:
                          description: Gateways defines a list of existing gateways
                          items:
                            type: string
                          nullable: true
                          type: array
                        key:
                          default: istio-generatedid
                          description: Key is used to identify the gateway and related
                            resources, used solely when serving a list of gateways
                          type: string
                        route:
                          description: Route defines route policy for the gateway
                          properties:
                            topologyAware:
                              description: TopologyAware defines
                              properties:
                                key:
                                  description: Key defines the node label key used
                                    to detect Pod topology info
                                  type: string
                                subDomain:
                                  description: SubDomain defines url generation rule
                                    for broker Pod
                                  type: string
                              required:
                              - key
                              type: object
                            useWildcardDNS:
                              description: UseWildcardDNS means inherit DNS record
                                from wildcard DNS, only works for externalDNS
                              type: boolean
                          type: object
                        selector:
                          additionalProperties:
                            type: string
                          description: Selector defines the selector for the gateway
                            to create
                          nullable: true
                          type: object
                        tls:
                          properties:
                            certSecretName:
                              description: "SIMPLE mode:\n  CertSecretName defines
                                the name of the secret that contains the\n  certificate
                                to use in Istio Ingress Gateway. The value should
                                be\n  name of the secret in the gateway workload namespace.\nPASSTHROUGH
                                mode:\n\t CertSecretName defines the name of the secret
                                that contains the\n\t certificate to use in Broker.
                                The value should be name of the secret\n  name of
                                the secret in the Broker workload namespace.\nRequired
                                in both SIMPLE and PASSTHROUGH mode."
                              type: string
                            mode:
                              description: |-
                                Optional: Indicates whether connections to this port should be
                                secured using TLS. The value of this field determines how TLS is
                                enforced.
                              type: string
                            subjectAltNames:
                              description: SubjectAltNames defines the subject alternative
                                names for the certificate
                              items:
                                type: string
                              type: array
                            trustCertsEnabled:
                              description: TrustCertsEnabled defines whether to enable
                                trust store
                              type: boolean
                          type: object
                      type: object
                    maxItems: 10
                    type: array
                    x-kubernetes-list-map-keys:
                    - key
                    x-kubernetes-list-type: map
                  mtls:
                    description: Mtls defines the mTLS configuration
                    properties:
                      mode:
                        default: strict
                        type: string
                    type: object
                  revision:
                    default: default
                    description: Revision defines which Istio control plane inject
                      sidecar
                    type: string
                  trustDomain:
                    description: TrustDomain corresponds to the trust root of a system
                      and is part of a workload identity
                    type: string
                type: object
              oxiaServiceUrl:
                description: |-
                  OxiaServiceUrl defines the service url of oxia.
                  It includes oxia namespace on the url.
                  for example: oxiacluster-example-oxia.default.svc.cluster.local:6648/ns-test
                  oxiacluster-example-oxia.default.svc.cluster.local:6648 is the service address, ns-test is the oxia namespace
                type: string
              pod:
                description: Pod defines the policy for creating api key pod for the
                  cluster
                properties:
                  imagePullSecrets:
                    description: |-
                      ImagePullSecrets is an optional list of references to secrets in the same namespace
                      to use for pulling any of the images used by this PodSpec.
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    nullable: true
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    nullable: true
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: Resources is the resource requirement of api key
                      service
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  tolerations:
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    nullable: true
                    type: array
                type: object
              replicas:
                default: 2
                description: |-
                  Replicas is the expected size of the api keys svc
                  If unspecified, defaults to 2.
                format: int32
                minimum: 0
                type: integer
            type: object
          status:
            description: ApiKeysStatus defines the observed state of ApiKeys
            properties:
              conditions:
                description: Conditions is an array of current observed conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              customAuthenticators:
                description: |-
                  CustomAuthenticators is the custom oidc authenticators, currently only support issuer and audience
                  we can expand it in the future
                items:
                  properties:
                    audience:
                      type: string
                    issuer:
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this api keys service.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
