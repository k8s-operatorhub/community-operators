apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: recipes.couchdb.databases.cloud.ibm.com
spec:
  group: couchdb.databases.cloud.ibm.com
  names:
    kind: Recipe
    listKind: RecipeList
    plural: recipes
    shortNames:
    - rp
    singular: recipe
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.template
      name: Type
      type: string
    - jsonPath: .spec.formation_id
      name: Status
      type: string
    - jsonPath: .spec.formation_type
      name: Formation
      type: string
    - jsonPath: .spec.formation_version
      name: Database
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Recipe represents an imperative action to be taken against a
          Formation. Recipes are specified by RecipeTemplates and parameterized by
          user-defined arguments. The RecipeTemplate language supports a wide variety
          of actions to be expressed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecipeSpec represents the basic specification of a Recipe.
              Under normal operations, only Template, ArgsSecretRef, and FormationID
              are specified by the caller; other fields are populated by recipe-controller
              based on those three.
            properties:
              args_secret:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              formation_id:
                type: string
              formation_type:
                type: string
              formation_version:
                type: string
              lock_strategy:
                description: LockStrategy defines the locking strategy for a given
                  Recipe (or RecipeTemplate). Recipe locks semantics follow an extended
                  rwlock pattern. See plumbing/pkg/controllers/recipes for more information.
                enum:
                - write
                - read
                - noop
                - ""
                type: string
              on_failure_operation_groups:
                items:
                  properties:
                    build_template:
                      properties:
                        api_template:
                          nullable: true
                          properties:
                            action:
                              enum:
                              - create
                              - update
                              - delete
                              - ""
                              type: string
                            kind:
                              type: string
                            resource_json:
                              type: string
                            target:
                              type: string
                            wait_for_status:
                              description: "ResourceState represents the state of
                                various CDCP resources, such as Formations and Recipes.
                                It is used to drive the state machines in recipe-controller,
                                bucket-controller (and perhaps others?) as well as
                                by APIOperations to coordinate Recipe activity. Note
                                that formation-controller uses FormationState, not
                                ResourceState. See RecipeStatus for more details on
                                the use of ResourceState by recipe-controller. \n
                                The awkwardness here is due to APIOperations' need
                                for a consistent type across resources to allow flexibility
                                to Recipe authors. If and when APIOperations are deprecated,
                                the scope of ResourceState will be reduced. \n ResourceState
                                should be considered deprecated and is not be used
                                in any newly developed packages."
                              enum:
                              - new
                              - prepared
                              - running
                              - watching
                              - skipped
                              - failing
                              - failed
                              - completed
                              - OK
                              - Error
                              - ""
                              type: string
                          type: object
                        cdb_template:
                          nullable: true
                          properties:
                            command:
                              properties:
                                args:
                                  type: string
                                exec:
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              nullable: true
                              type: object
                            strategy:
                              enum:
                              - all
                              - one
                              - ""
                              type: string
                          type: object
                        guard:
                          type: string
                        primitive_template:
                          nullable: true
                          properties:
                            args:
                              additionalProperties:
                                type: string
                              nullable: true
                              type: object
                            name:
                              type: string
                            selector:
                              description: A label selector is a label query over
                                a set of resources. The result of matchLabels and
                                matchExpressions are ANDed. An empty label selector
                                matches all objects. A null label selector matches
                                no objects.
                              nullable: true
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          type: object
                        type:
                          enum:
                          - cdb_template
                          - api_template
                          - primitive_template
                          - ""
                          type: string
                      type: object
                    operations:
                      items:
                        properties:
                          api_spec:
                            properties:
                              action:
                                enum:
                                - create
                                - update
                                - delete
                                - ""
                                type: string
                              kind:
                                type: string
                              resource_json:
                                type: string
                              target:
                                type: string
                              wait_for_status:
                                description: "ResourceState represents the state of
                                  various CDCP resources, such as Formations and Recipes.
                                  It is used to drive the state machines in recipe-controller,
                                  bucket-controller (and perhaps others?) as well
                                  as by APIOperations to coordinate Recipe activity.
                                  Note that formation-controller uses FormationState,
                                  not ResourceState. See RecipeStatus for more details
                                  on the use of ResourceState by recipe-controller.
                                  \n The awkwardness here is due to APIOperations'
                                  need for a consistent type across resources to allow
                                  flexibility to Recipe authors. If and when APIOperations
                                  are deprecated, the scope of ResourceState will
                                  be reduced. \n ResourceState should be considered
                                  deprecated and is not be used in any newly developed
                                  packages."
                                enum:
                                - new
                                - prepared
                                - running
                                - watching
                                - skipped
                                - failing
                                - failed
                                - completed
                                - OK
                                - Error
                                - ""
                                type: string
                            type: object
                          cdb_spec:
                            properties:
                              command:
                                items:
                                  type: string
                                type: array
                              pod_name:
                                type: string
                              pod_namespace:
                                type: string
                            type: object
                          nonce:
                            type: string
                          primitive_spec:
                            properties:
                              args:
                                additionalProperties:
                                  type: string
                                nullable: true
                                type: object
                              name:
                                type: string
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                nullable: true
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                            type: object
                          recipe_id:
                            type: string
                          result:
                            properties:
                              error:
                                type: string
                              exit_code:
                                maximum: 2
                                minimum: 0
                                type: integer
                              stderr:
                                type: string
                              stdout:
                                type: string
                            type: object
                          status:
                            description: "ResourceState represents the state of various
                              CDCP resources, such as Formations and Recipes. It is
                              used to drive the state machines in recipe-controller,
                              bucket-controller (and perhaps others?) as well as by
                              APIOperations to coordinate Recipe activity. Note that
                              formation-controller uses FormationState, not ResourceState.
                              See RecipeStatus for more details on the use of ResourceState
                              by recipe-controller. \n The awkwardness here is due
                              to APIOperations' need for a consistent type across
                              resources to allow flexibility to Recipe authors. If
                              and when APIOperations are deprecated, the scope of
                              ResourceState will be reduced. \n ResourceState should
                              be considered deprecated and is not be used in any newly
                              developed packages."
                            enum:
                            - new
                            - prepared
                            - running
                            - watching
                            - skipped
                            - failing
                            - failed
                            - completed
                            - OK
                            - Error
                            - ""
                            type: string
                          type:
                            enum:
                            - cdb
                            - api
                            - primitive
                            - ""
                            type: string
                        type: object
                      nullable: true
                      type: array
                  type: object
                nullable: true
                type: array
              operation_groups:
                items:
                  properties:
                    build_template:
                      properties:
                        api_template:
                          nullable: true
                          properties:
                            action:
                              enum:
                              - create
                              - update
                              - delete
                              - ""
                              type: string
                            kind:
                              type: string
                            resource_json:
                              type: string
                            target:
                              type: string
                            wait_for_status:
                              description: "ResourceState represents the state of
                                various CDCP resources, such as Formations and Recipes.
                                It is used to drive the state machines in recipe-controller,
                                bucket-controller (and perhaps others?) as well as
                                by APIOperations to coordinate Recipe activity. Note
                                that formation-controller uses FormationState, not
                                ResourceState. See RecipeStatus for more details on
                                the use of ResourceState by recipe-controller. \n
                                The awkwardness here is due to APIOperations' need
                                for a consistent type across resources to allow flexibility
                                to Recipe authors. If and when APIOperations are deprecated,
                                the scope of ResourceState will be reduced. \n ResourceState
                                should be considered deprecated and is not be used
                                in any newly developed packages."
                              enum:
                              - new
                              - prepared
                              - running
                              - watching
                              - skipped
                              - failing
                              - failed
                              - completed
                              - OK
                              - Error
                              - ""
                              type: string
                          type: object
                        cdb_template:
                          nullable: true
                          properties:
                            command:
                              properties:
                                args:
                                  type: string
                                exec:
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              nullable: true
                              type: object
                            strategy:
                              enum:
                              - all
                              - one
                              - ""
                              type: string
                          type: object
                        guard:
                          type: string
                        primitive_template:
                          nullable: true
                          properties:
                            args:
                              additionalProperties:
                                type: string
                              nullable: true
                              type: object
                            name:
                              type: string
                            selector:
                              description: A label selector is a label query over
                                a set of resources. The result of matchLabels and
                                matchExpressions are ANDed. An empty label selector
                                matches all objects. A null label selector matches
                                no objects.
                              nullable: true
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          type: object
                        type:
                          enum:
                          - cdb_template
                          - api_template
                          - primitive_template
                          - ""
                          type: string
                      type: object
                    operations:
                      items:
                        properties:
                          api_spec:
                            properties:
                              action:
                                enum:
                                - create
                                - update
                                - delete
                                - ""
                                type: string
                              kind:
                                type: string
                              resource_json:
                                type: string
                              target:
                                type: string
                              wait_for_status:
                                description: "ResourceState represents the state of
                                  various CDCP resources, such as Formations and Recipes.
                                  It is used to drive the state machines in recipe-controller,
                                  bucket-controller (and perhaps others?) as well
                                  as by APIOperations to coordinate Recipe activity.
                                  Note that formation-controller uses FormationState,
                                  not ResourceState. See RecipeStatus for more details
                                  on the use of ResourceState by recipe-controller.
                                  \n The awkwardness here is due to APIOperations'
                                  need for a consistent type across resources to allow
                                  flexibility to Recipe authors. If and when APIOperations
                                  are deprecated, the scope of ResourceState will
                                  be reduced. \n ResourceState should be considered
                                  deprecated and is not be used in any newly developed
                                  packages."
                                enum:
                                - new
                                - prepared
                                - running
                                - watching
                                - skipped
                                - failing
                                - failed
                                - completed
                                - OK
                                - Error
                                - ""
                                type: string
                            type: object
                          cdb_spec:
                            properties:
                              command:
                                items:
                                  type: string
                                type: array
                              pod_name:
                                type: string
                              pod_namespace:
                                type: string
                            type: object
                          nonce:
                            type: string
                          primitive_spec:
                            properties:
                              args:
                                additionalProperties:
                                  type: string
                                nullable: true
                                type: object
                              name:
                                type: string
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                nullable: true
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                            type: object
                          recipe_id:
                            type: string
                          result:
                            properties:
                              error:
                                type: string
                              exit_code:
                                maximum: 2
                                minimum: 0
                                type: integer
                              stderr:
                                type: string
                              stdout:
                                type: string
                            type: object
                          status:
                            description: "ResourceState represents the state of various
                              CDCP resources, such as Formations and Recipes. It is
                              used to drive the state machines in recipe-controller,
                              bucket-controller (and perhaps others?) as well as by
                              APIOperations to coordinate Recipe activity. Note that
                              formation-controller uses FormationState, not ResourceState.
                              See RecipeStatus for more details on the use of ResourceState
                              by recipe-controller. \n The awkwardness here is due
                              to APIOperations' need for a consistent type across
                              resources to allow flexibility to Recipe authors. If
                              and when APIOperations are deprecated, the scope of
                              ResourceState will be reduced. \n ResourceState should
                              be considered deprecated and is not be used in any newly
                              developed packages."
                            enum:
                            - new
                            - prepared
                            - running
                            - watching
                            - skipped
                            - failing
                            - failed
                            - completed
                            - OK
                            - Error
                            - ""
                            type: string
                          type:
                            enum:
                            - cdb
                            - api
                            - primitive
                            - ""
                            type: string
                        type: object
                      nullable: true
                      type: array
                  type: object
                nullable: true
                type: array
              template:
                type: string
            type: object
          status:
            description: RecipeStatus represents the controller's view of the state
              of a Recipe. This status is generally intended to provide information
              to Recipe API consumers.
            properties:
              details:
                description: An arbitrary human-readable description of the state
                  of the Recipe.
                type: string
              start_timestamp:
                description: The time at which the recipe entered the "running" state.
                format: date-time
                nullable: true
                type: string
              state:
                description: The current "state" of the Recipe. Unlike Formation.Status.State,
                  this field is reliable for external systems. StateFailed and StateCompleted
                  are the only terminal states.
                enum:
                - new
                - prepared
                - running
                - watching
                - skipped
                - failing
                - failed
                - completed
                - OK
                - Error
                - ""
                type: string
              termination_timestamp:
                description: The time at which the recipe entered a terminal state.
                format: date-time
                nullable: true
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
