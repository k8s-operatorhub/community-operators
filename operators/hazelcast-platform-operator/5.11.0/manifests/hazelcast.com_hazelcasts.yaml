apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  creationTimestamp: null
  name: hazelcasts.hazelcast.com
spec:
  group: hazelcast.com
  names:
    kind: Hazelcast
    listKind: HazelcastList
    plural: hazelcasts
    shortNames:
    - hz
    singular: hazelcast
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current state of the Hazelcast deployment
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Current numbers of ready Hazelcast members
      jsonPath: .status.hazelcastClusterStatus.readyMembers
      name: Members
      type: string
    - description: Message for the current Hazelcast Config
      jsonPath: .status.message
      name: Message
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Hazelcast is the Schema for the hazelcasts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            default:
              repository: docker.io/hazelcast/hazelcast
            description: Initial values will be filled with its fields' default values.
            properties:
              advancedNetwork:
                description: Hazelcast Advanced Network configuration
                properties:
                  clientServerSocketEndpointConfig:
                    properties:
                      interfaces:
                        items:
                          type: string
                        type: array
                    type: object
                  memberServerSocketEndpointConfig:
                    properties:
                      interfaces:
                        items:
                          type: string
                        type: array
                    type: object
                  wan:
                    items:
                      properties:
                        name:
                          maxLength: 8
                          type: string
                        port:
                          type: integer
                        portCount:
                          type: integer
                        serviceType:
                          description: Service Type string describes ingress methods
                            for a service
                          type: string
                      type: object
                    type: array
                type: object
              agent:
                default:
                  repository: docker.io/hazelcast/platform-operator-agent
                  version: 0.1.26
                description: B&R Agent configurations
                properties:
                  repository:
                    default: docker.io/hazelcast/platform-operator-agent
                    description: Repository to pull Hazelcast Platform Operator Agent(https://github.com/hazelcast/platform-operator-agent)
                    type: string
                  resources:
                    description: Compute Resources required by the Agent container.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  version:
                    default: 0.1.26
                    description: Version of Hazelcast Platform Operator Agent.
                    type: string
                type: object
              annotations:
                additionalProperties:
                  type: string
                description: Hazelcast Kubernetes resource annotations
                type: object
              clusterName:
                default: dev
                description: Name of the Hazelcast cluster.
                type: string
              clusterSize:
                default: 3
                description: Number of Hazelcast members in the cluster.
                format: int32
                minimum: 0
                type: integer
              cpSubsystem:
                description: CPSubsystem is the configuration of the Hazelcast CP
                  Subsystem.
                properties:
                  dataLoadTimeoutSeconds:
                    description: DataLoadTimeoutSeconds is the timeout duration in
                      seconds for CP members to restore their persisted data from
                      disk
                    format: int32
                    minimum: 1
                    type: integer
                  failOnIndeterminateOperationState:
                    description: FailOnIndeterminateOperationState indicated whether
                      CP Subsystem operations use at-least-once and at-most-once execution
                      guarantees.
                    type: boolean
                  missingCpMemberAutoRemovalSeconds:
                    description: MissingCpMemberAutoRemovalSeconds is the duration
                      in seconds to wait before automatically removing a missing CP
                      member from the CP Subsystem.
                    format: int32
                    type: integer
                  pvc:
                    description: PVC is the configuration of PersistenceVolumeClaim.
                    properties:
                      accessModes:
                        description: 'AccessModes contains the actual access modes
                          of the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      requestStorage:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 8Gi
                        description: A description of the PVC request capacity.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: Name of StorageClass which this persistent volume
                          belongs to.
                        type: string
                    type: object
                  sessionHeartbeatIntervalSeconds:
                    description: SessionHeartbeatIntervalSeconds Interval in seconds
                      for the periodically committed CP session heartbeats. Must be
                      smaller than SessionTTLSeconds.
                    format: int32
                    type: integer
                  sessionTTLSeconds:
                    description: SessionTTLSeconds is the duration for a CP session
                      to be kept alive after the last received heartbeat. Must be
                      greater than or equal to SessionHeartbeatIntervalSeconds and
                      smaller than or equal to MissingCpMemberAutoRemovalSeconds.
                    format: int32
                    type: integer
                type: object
              customConfigCmName:
                description: Name of the ConfigMap with the Hazelcast custom configuration.
                  This configuration from the ConfigMap might be overridden by the
                  Hazelcast CR configuration.
                type: string
              durableExecutorServices:
                description: Durable Executor Service configurations, see https://docs.hazelcast.com/hazelcast/latest/computing/durable-executor-service
                items:
                  properties:
                    capacity:
                      default: 100
                      description: Capacity of the executor task per partition.
                      format: int32
                      type: integer
                    durability:
                      default: 1
                      description: Durability of the executor.
                      format: int32
                      minimum: 1
                      type: integer
                    name:
                      default: default
                      description: The name of the executor service
                      type: string
                    poolSize:
                      default: 16
                      description: The number of executor threads per member.
                      format: int32
                      minimum: 1
                      type: integer
                  type: object
                type: array
              executorServices:
                description: Java Executor Service configurations, see https://docs.hazelcast.com/hazelcast/latest/computing/executor-service
                items:
                  properties:
                    name:
                      default: default
                      description: The name of the executor service
                      type: string
                    poolSize:
                      default: 8
                      description: The number of executor threads per member.
                      format: int32
                      minimum: 1
                      type: integer
                    queueCapacity:
                      default: 0
                      description: Task queue capacity of the executor.
                      format: int32
                      type: integer
                  type: object
                type: array
              exposeExternally:
                description: Configuration to expose Hazelcast cluster to external
                  clients.
                properties:
                  discoveryServiceType:
                    default: LoadBalancer
                    description: Type of the service used to discover Hazelcast cluster.
                    type: string
                  memberAccess:
                    description: 'How each member is accessed from the external client.
                      Only available for "Smart" client and valid values are: - "NodePortExternalIP"
                      (default): each member is accessed by the NodePort service and
                      the node external IP/hostname - "NodePortNodeName": each member
                      is accessed by the NodePort service and the node name - "LoadBalancer":
                      each member is accessed by the LoadBalancer service external
                      address'
                    enum:
                    - NodePortExternalIP
                    - NodePortNodeName
                    - LoadBalancer
                    type: string
                  type:
                    default: Smart
                    description: 'Specifies how members are exposed. Valid values
                      are: - "Smart" (default): each member pod is exposed with a
                      separate external address - "Unisocket": all member pods are
                      exposed with one external address'
                    enum:
                    - Smart
                    - Unisocket
                    type: string
                type: object
              highAvailabilityMode:
                description: Configuration to create clusters resilient to node and
                  zone failures
                enum:
                - NODE
                - ZONE
                type: string
              imagePullPolicy:
                default: IfNotPresent
                description: Pull policy for the Hazelcast Platform image
                type: string
              imagePullSecrets:
                description: Image pull secrets for the Hazelcast Platform image
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              jet:
                default:
                  enabled: true
                  resourceUploadEnabled: false
                description: Jet Engine configuration
                properties:
                  bucketConfig:
                    description: Bucket config from where the JAR files will be downloaded.
                    properties:
                      bucketURI:
                        description: 'URL of the bucket to download HotBackup folders.
                          AWS S3, GCP Bucket and Azure Blob storage buckets are supported.
                          Example bucket URIs: - AWS S3     -> s3://bucket-name/path/to/folder
                          - GCP Bucket -> gs://bucket-name/path/to/folder - Azure
                          Blob -> azblob://bucket-name/path/to/folder'
                        minLength: 6
                        type: string
                      secret:
                        description: secret is a deprecated alias for secretName.
                        type: string
                      secretName:
                        description: Name of the secret with credentials for cloud
                          providers.
                        type: string
                    required:
                    - bucketURI
                    type: object
                  configMaps:
                    description: Names of the list of ConfigMaps. Files in each ConfigMap
                      will be downloaded.
                    items:
                      type: string
                    type: array
                  edgeDefaults:
                    description: Jet Edge Defaults Configuration
                    properties:
                      packetSizeLimit:
                        description: Limits the size of the packet in bytes.
                        format: int32
                        type: integer
                      queueSize:
                        description: Sets the capacity of processor-to-processor concurrent
                          queues.
                        format: int32
                        type: integer
                      receiveWindowMultiplier:
                        description: Sets the scaling factor used by the adaptive
                          receive window sizing function.
                        type: integer
                    type: object
                  enabled:
                    default: true
                    description: When false, disables Jet Engine.
                    type: boolean
                  instance:
                    description: Jet Instance Configuration
                    properties:
                      backupCount:
                        default: 1
                        description: The number of synchronous backups to configure
                          on the IMap that Jet needs internally to store job metadata
                          and snapshots.
                        format: int32
                        maximum: 6
                        type: integer
                      cooperativeThreadCount:
                        description: The number of threads Jet creates in its cooperative
                          multithreading pool. Its default value is the number of
                          cores
                        format: int32
                        minimum: 1
                        type: integer
                      flowControlPeriodMillis:
                        default: 100
                        description: The duration of the interval between flow-control
                          packets.
                        format: int32
                        type: integer
                      losslessRestartEnabled:
                        default: false
                        description: Specifies whether the Lossless Cluster Restart
                          feature is enabled.
                        type: boolean
                      maxProcessorAccumulatedRecords:
                        description: Specifies the maximum number of records that
                          can be accumulated by any single processor instance. Default
                          value is Long.MAX_VALUE
                        format: int64
                        type: integer
                      scaleUpDelayMillis:
                        default: 10000
                        description: The delay after which the auto-scaled jobs restart
                          if a new member joins the cluster.
                        format: int32
                        type: integer
                    type: object
                  remoteURLs:
                    description: List of URLs from where the files will be downloaded.
                    items:
                      type: string
                    type: array
                  resourceUploadEnabled:
                    default: false
                    description: When true, enables resource uploading for Jet jobs.
                    type: boolean
                type: object
              jvm:
                description: Hazelcast JVM configuration
                properties:
                  args:
                    description: Args is for arbitrary JVM arguments
                    items:
                      type: string
                    type: array
                  gc:
                    description: GC is for configuring JVM Garbage Collector
                    properties:
                      collector:
                        description: Collector is the Garbage Collector type
                        enum:
                        - Serial
                        - Parallel
                        - G1
                        type: string
                      logging:
                        description: Logging enables logging when set to true
                        type: boolean
                    type: object
                  memory:
                    description: Memory is a JVM memory configuration
                    properties:
                      initialRAMPercentage:
                        description: InitialRAMPercentage configures JVM initial heap
                          size
                        type: string
                      maxRAMPercentage:
                        description: MaxRAMPercentage sets the maximum heap size for
                          a JVM
                        type: string
                      minRAMPercentage:
                        description: MinRAMPercentage sets the minimum heap size for
                          a JVM
                        type: string
                    type: object
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Hazelcast Kubernetes resource labels
                type: object
              licenseKeySecret:
                description: licenseKeySecret is a deprecated alias for licenseKeySecretName.
                type: string
              licenseKeySecretName:
                description: Name of the secret with Hazelcast Enterprise License
                  Key.
                type: string
              localDevices:
                description: Hazelcast LocalDevice configuration
                items:
                  properties:
                    blockSize:
                      default: 4096
                      description: BlockSize defines Device block/sector size in bytes.
                      format: int32
                      minimum: 512
                      type: integer
                    name:
                      description: Name represents the name of the local device
                      type: string
                    pvc:
                      description: Configuration of PersistenceVolumeClaim.
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            of the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        requestStorage:
                          anyOf:
                          - type: integer
                          - type: string
                          default: 8Gi
                          description: A description of the PVC request capacity.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        storageClassName:
                          description: Name of StorageClass which this persistent
                            volume belongs to.
                          type: string
                      type: object
                    readIOThreadCount:
                      default: 4
                      description: ReadIOThreadCount is Read IO thread count.
                      format: int32
                      minimum: 1
                      type: integer
                    writeIOThreadCount:
                      default: 4
                      description: WriteIOThreadCount is Write IO thread count.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              loggingLevel:
                default: INFO
                description: Logging level for Hazelcast members
                enum:
                - "OFF"
                - FATAL
                - ERROR
                - WARN
                - INFO
                - DEBUG
                - TRACE
                - ALL
                type: string
              managementCenter:
                description: Hazelcast Management Center Configuration
                properties:
                  consoleEnabled:
                    default: false
                    description: Allows you to execute commands from a built-in console
                      in the user interface.
                    type: boolean
                  dataAccessEnabled:
                    default: false
                    description: Allows you to access contents of Hazelcast data structures
                      via SQL Browser or Map Browser.
                    type: boolean
                  scriptingEnabled:
                    default: false
                    description: Allows you to execute scripts that can automate interactions
                      with the cluster.
                    type: boolean
                type: object
              nativeMemory:
                description: Hazelcast Native Memory (HD Memory) configuration
                properties:
                  allocatorType:
                    default: STANDARD
                    description: AllocatorType specifies one of 2 types of mechanism
                      for allocating memory to HD
                    enum:
                    - STANDARD
                    - POOLED
                    type: string
                  metadataSpacePercentage:
                    default: 12
                    description: MetadataSpacePercentage defines percentage of the
                      allocated native memory that is used for the metadata of other
                      map components such as index (for predicates), offset, etc.
                    format: int32
                    type: integer
                  minBlockSize:
                    description: MinBlockSize is the size of smallest block that will
                      be allocated. It is used only by the POOLED memory allocator.
                    format: int32
                    type: integer
                  pageSize:
                    default: 4194304
                    description: PageSize is the size of the page in bytes to allocate
                      memory as a block. It is used only by the POOLED memory allocator.
                    format: int32
                    type: integer
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 512M
                    description: Size of the total native memory to allocate
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              persistence:
                description: Persistence configuration
                properties:
                  baseDir:
                    description: BaseDir is deprecated. Use restore.localConfig to
                      restore from a local backup.
                    type: string
                  clusterDataRecoveryPolicy:
                    default: FullRecoveryOnly
                    description: Configuration of the cluster recovery strategy.
                    enum:
                    - FullRecoveryOnly
                    - PartialRecoveryMostRecent
                    - PartialRecoveryMostComplete
                    type: string
                  dataRecoveryTimeout:
                    description: 'DataRecoveryTimeout is timeout for each step of
                      data recovery in seconds. Maximum timeout is equal to DataRecoveryTimeout*2
                      (for each step: validation and data-load).'
                    format: int32
                    type: integer
                  pvc:
                    description: Configuration of PersistenceVolumeClaim.
                    properties:
                      accessModes:
                        description: 'AccessModes contains the actual access modes
                          of the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      requestStorage:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 8Gi
                        description: A description of the PVC request capacity.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: Name of StorageClass which this persistent volume
                          belongs to.
                        type: string
                    type: object
                  restore:
                    description: Restore configuration
                    maxProperties: 1
                    properties:
                      bucketConfig:
                        description: Bucket Configuration from which the backup will
                          be downloaded.
                        properties:
                          bucketURI:
                            description: 'URL of the bucket to download HotBackup
                              folders. AWS S3, GCP Bucket and Azure Blob storage buckets
                              are supported. Example bucket URIs: - AWS S3     ->
                              s3://bucket-name/path/to/folder - GCP Bucket -> gs://bucket-name/path/to/folder
                              - Azure Blob -> azblob://bucket-name/path/to/folder'
                            minLength: 6
                            type: string
                          secret:
                            description: secret is a deprecated alias for secretName.
                            type: string
                          secretName:
                            description: Name of the secret with credentials for cloud
                              providers.
                            type: string
                        required:
                        - bucketURI
                        type: object
                      hotBackupResourceName:
                        description: Name of the HotBackup resource from which backup
                          will be fetched.
                        type: string
                      localConfig:
                        description: Configuration to restore from local backup
                        properties:
                          backupDir:
                            description: Local backup base directory
                            type: string
                          backupFolder:
                            description: Backup directory
                            minLength: 1
                            type: string
                          baseDir:
                            description: Persistence base directory
                            type: string
                          pvcNamePrefix:
                            default: persistence
                            description: PVC name prefix used in existing PVCs
                            enum:
                            - persistence
                            - hot-restart-persistence
                            type: string
                        type: object
                    type: object
                  startupAction:
                    description: StartupAction represents the action triggered when
                      the cluster starts to force the cluster startup.
                    enum:
                    - ForceStart
                    - PartialStart
                    type: string
                type: object
              properties:
                additionalProperties:
                  type: string
                description: Hazelcast system properties, see https://docs.hazelcast.com/hazelcast/latest/system-properties
                type: object
              repository:
                default: docker.io/hazelcast/hazelcast
                description: Repository to pull the Hazelcast Platform image from.
                type: string
              resources:
                description: Compute Resources required by the Hazelcast container.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              scheduledExecutorServices:
                description: Scheduled Executor Service configurations, see https://docs.hazelcast.com/hazelcast/latest/computing/scheduled-executor-service
                items:
                  properties:
                    capacity:
                      default: 100
                      description: Capacity of the executor task per partition.
                      format: int32
                      type: integer
                    capacityPolicy:
                      default: PER_NODE
                      description: The active policy for the capacity setting.
                      type: string
                    durability:
                      default: 1
                      description: Durability of the executor.
                      format: int32
                      minimum: 1
                      type: integer
                    name:
                      default: default
                      description: The name of the executor service
                      type: string
                    poolSize:
                      default: 16
                      description: The number of executor threads per member.
                      format: int32
                      minimum: 1
                      type: integer
                  type: object
                type: array
              scheduling:
                description: Scheduling details
                properties:
                  affinity:
                    description: Affinity
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector
                    type: object
                  tolerations:
                    description: Tolerations
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: TopologySpreadConstraints
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine
                            the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: "MatchLabelKeys is a set of pod label keys
                            to select the pods over which spreading will be calculated.
                            The keys are used to lookup values from the incoming pod
                            labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading
                            will be calculated for the incoming pod. The same key
                            is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            MatchLabelKeys cannot be set when LabelSelector isn't
                            set. Keys that don't exist in the incoming pod labels
                            will be ignored. A null or empty list means only match
                            against labelSelector. \n This is a beta field and requires
                            the MatchLabelKeysInPodTopologySpread feature gate to
                            be enabled (enabled by default)."
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods
                            may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                            it is the maximum permitted difference between the number
                            of matching pods in the target topology and the global
                            minimum. The global minimum is the minimum number of matching
                            pods in an eligible domain or zero if the number of eligible
                            domains is less than MinDomains. For example, in a 3-zone
                            cluster, MaxSkew is set to 1, and pods with the same labelSelector
                            spread as 2/2/1: In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | -
                            if MaxSkew is 1, incoming pod can only be scheduled to
                            zone3 to become 2/2/2; scheduling it onto zone1(zone2)
                            would make the ActualSkew(3-1) on zone1(zone2) violate
                            MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled
                            onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                            it is used to give higher precedence to topologies that
                            satisfy it. It''s a required field. Default value is 1
                            and 0 is not allowed.'
                          format: int32
                          type: integer
                        minDomains:
                          description: "MinDomains indicates a minimum number of eligible
                            domains. When the number of eligible domains with matching
                            topology keys is less than minDomains, Pod Topology Spread
                            treats \"global minimum\" as 0, and then the calculation
                            of Skew is performed. And when the number of eligible
                            domains with matching topology keys equals or greater
                            than minDomains, this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less
                            than minDomains, scheduler won't schedule more than maxSkew
                            Pods to those domains. If value is nil, the constraint
                            behaves as if MinDomains is equal to 1. Valid values are
                            integers greater than 0. When value is not nil, WhenUnsatisfiable
                            must be DoNotSchedule. \n For example, in a 3-zone cluster,
                            MaxSkew is set to 2, MinDomains is set to 5 and pods with
                            the same labelSelector spread as 2/2/2: | zone1 | zone2
                            | zone3 | |  P P  |  P P  |  P P  | The number of domains
                            is less than 5(MinDomains), so \"global minimum\" is treated
                            as 0. In this situation, new pod with the same labelSelector
                            cannot be scheduled, because computed skew will be 3(3
                            - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew. \n This is a beta field and requires
                            the MinDomainsInPodTopologySpread feature gate to be enabled
                            (enabled by default)."
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: "NodeAffinityPolicy indicates how we will treat
                            Pod's nodeAffinity/nodeSelector when calculating pod topology
                            spread skew. Options are: - Honor: only nodes matching
                            nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes
                            are included in the calculations. \n If this value is
                            nil, the behavior is equivalent to the Honor policy. This
                            is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        nodeTaintsPolicy:
                          description: "NodeTaintsPolicy indicates how we will treat
                            node taints when calculating pod topology spread skew.
                            Options are: - Honor: nodes without taints, along with
                            tainted nodes for which the incoming pod has a toleration,
                            are included. - Ignore: node taints are ignored. All nodes
                            are included. \n If this value is nil, the behavior is
                            equivalent to the Ignore policy. This is a beta-level
                            feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes
                            that have a label with this key and identical values are
                            considered to be in the same topology. We consider each
                            <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket. We define a domain as a particular
                            instance of a topology. Also, we define an eligible domain
                            as a domain whose nodes meet the requirements of nodeAffinityPolicy
                            and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname",
                            each Node is a domain of that topology. And, if TopologyKey
                            is "topology.kubernetes.io/zone", each zone is a domain
                            of that topology. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with
                            a pod if it doesn''t satisfy the spread constraint. -
                            DoNotSchedule (default) tells the scheduler not to schedule
                            it. - ScheduleAnyway tells the scheduler to schedule the
                            pod in any location, but giving higher precedence to topologies
                            that would help reduce the skew. A constraint is considered
                            "Unsatisfiable" for an incoming pod if and only if every
                            possible node assignment for that pod would violate "MaxSkew"
                            on some topology. For example, in a 3-zone cluster, MaxSkew
                            is set to 1, and pods with the same labelSelector spread
                            as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming
                            pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2)
                            as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1).
                            In other words, the cluster can still be imbalanced, but
                            scheduler won''t make it *more* imbalanced. It''s a required
                            field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                type: object
              serialization:
                description: Hazelcast serialization configuration
                properties:
                  allowUnsafe:
                    default: false
                    description: Allow the usage of unsafe.
                    type: boolean
                  byteOrder:
                    default: BigEndian
                    description: Specifies the byte order that the serialization will
                      use.
                    enum:
                    - Native
                    - BigEndian
                    - LittleEndian
                    type: string
                  compactSerialization:
                    description: Configuration attributes the compact serialization.
                    minProperties: 1
                    properties:
                      classes:
                        description: Classes is the list of class names for which
                          a zero-config serializer will be registered, without implementing
                          an explicit serializer.
                        items:
                          type: string
                        type: array
                      serializers:
                        description: Serializers is the list of explicit serializers
                          to be registered.
                        items:
                          type: string
                        type: array
                    type: object
                  dataSerializableFactories:
                    description: Lists class implementations of Hazelcast's DataSerializableFactory.
                    items:
                      type: string
                    type: array
                  enableCompression:
                    default: false
                    description: Enables compression when default Java serialization
                      is used.
                    type: boolean
                  enableSharedObject:
                    default: false
                    description: Enables shared object when default Java serialization
                      is used.
                    type: boolean
                  globalSerializer:
                    description: List of global serializers.
                    properties:
                      className:
                        description: Class name of the GlobalSerializer.
                        type: string
                      overrideJavaSerialization:
                        description: If set to true, will replace the internal Java
                          serialization.
                        type: boolean
                    required:
                    - className
                    type: object
                  javaSerializationFilter:
                    description: Blacklist and whitelist for deserialized classes
                      when Java serialization is used.
                    minProperties: 1
                    properties:
                      blacklist:
                        description: Java deserialization protection Blacklist.
                        minProperties: 1
                        properties:
                          classes:
                            description: List of class names to be filtered.
                            items:
                              type: string
                            type: array
                          packages:
                            description: List of packages to be filtered
                            items:
                              type: string
                            type: array
                          prefixes:
                            description: List of prefixes to be filtered.
                            items:
                              type: string
                            type: array
                        type: object
                      whitelist:
                        description: Java deserialization protection Whitelist.
                        minProperties: 1
                        properties:
                          classes:
                            description: List of class names to be filtered.
                            items:
                              type: string
                            type: array
                          packages:
                            description: List of packages to be filtered
                            items:
                              type: string
                            type: array
                          prefixes:
                            description: List of prefixes to be filtered.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  overrideDefaultSerializers:
                    default: false
                    description: Allows override of built-in default serializers.
                    type: boolean
                  portableFactories:
                    description: Lists class implementations of Hazelcast's PortableFactory.
                    items:
                      type: string
                    type: array
                  serializers:
                    description: List of serializers (classes) that implemented using
                      Hazelcast's StreamSerializer, ByteArraySerializer etc.
                    items:
                      description: Serializer allows to plug in a custom serializer
                        for serializing objects.
                      properties:
                        className:
                          description: Class name of the implementation of the serializer
                            class.
                          type: string
                        typeClass:
                          description: Name of the class that will be serialized via
                            this implementation.
                          type: string
                      required:
                      - className
                      - typeClass
                      type: object
                    type: array
                type: object
              serviceAccountName:
                description: 'ServiceAccountName is the name of the ServiceAccount
                  to use to run Hazelcast cluster. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                type: string
              sql:
                description: Hazelcast SQL configuration
                properties:
                  catalogPersistenceEnabled:
                    default: false
                    description: CatalogPersistenceEnabled sets whether SQL Catalog
                      persistence is enabled for the node. With SQL Catalog persistence
                      enabled you can restart the whole cluster without losing schema
                      definition objects (such as MAPPINGs, TYPEs, VIEWs and DATA
                      CONNECTIONs). The feature is implemented on top of the Hot Restart
                      feature of Hazelcast which persists the data to disk. If enabled,
                      you have to also configure Hot Restart. Feature is disabled
                      by default.
                    type: boolean
                  statementTimeout:
                    default: 0
                    description: StatementTimeout defines the timeout in milliseconds
                      that is applied to queries without an explicit timeout.
                    format: int32
                    type: integer
                type: object
              tls:
                description: Hazelcast TLS configuration
                properties:
                  mutualAuthentication:
                    default: None
                    description: Mutual authentication configuration. It’s None by
                      default which means the client side of connection is not authenticated.
                    enum:
                    - None
                    - Required
                    - Optional
                    type: string
                  secretName:
                    description: Name of the secret with TLS certificate and key.
                    type: string
                required:
                - secretName
                type: object
              userCodeDeployment:
                description: User Codes to Download into CLASSPATH
                properties:
                  bucketConfig:
                    description: Bucket config from where the JAR files will be downloaded.
                    properties:
                      bucketURI:
                        description: 'URL of the bucket to download HotBackup folders.
                          AWS S3, GCP Bucket and Azure Blob storage buckets are supported.
                          Example bucket URIs: - AWS S3     -> s3://bucket-name/path/to/folder
                          - GCP Bucket -> gs://bucket-name/path/to/folder - Azure
                          Blob -> azblob://bucket-name/path/to/folder'
                        minLength: 6
                        type: string
                      secret:
                        description: secret is a deprecated alias for secretName.
                        type: string
                      secretName:
                        description: Name of the secret with credentials for cloud
                          providers.
                        type: string
                    required:
                    - bucketURI
                    type: object
                  clientEnabled:
                    description: When true, allows user code deployment from clients.
                    type: boolean
                  configMaps:
                    description: Names of the list of ConfigMaps. Files in each ConfigMap
                      will be downloaded.
                    items:
                      type: string
                    type: array
                  remoteURLs:
                    description: List of URLs from where the files will be downloaded.
                    items:
                      type: string
                    type: array
                  triggerSequence:
                    description: A string for triggering a rolling restart for re-downloading
                      the user code.
                    type: string
                type: object
              version:
                default: 5.4.0
                description: Version of Hazelcast Platform.
                type: string
            type: object
          status:
            description: HazelcastStatus defines the observed state of Hazelcast
            properties:
              clusterSize:
                description: Number of Hazelcast members in the cluster.
                format: int32
                type: integer
              hazelcastClusterStatus:
                description: Status of the Hazelcast cluster
                properties:
                  readyMembers:
                    description: ReadyMembers represents the number of members that
                      are connected to cluster from the desired number of members
                      in the format <ready>/<desired>
                    type: string
                type: object
              members:
                description: Status of Hazelcast members
                items:
                  description: HazelcastMemberStatus defines the observed state of
                    the individual Hazelcast member.
                  properties:
                    connected:
                      description: Ready is the flag that is set to true when the
                        member is successfully started, connected to cluster and ready
                        to accept connections.
                      type: boolean
                    ip:
                      description: Ip is the IP address of the member within the cluster.
                      type: string
                    lite:
                      description: Lite is the flag that is true when the member is
                        lite-member.
                      type: boolean
                    master:
                      description: Master flag is set to true if the member is master.
                      type: boolean
                    message:
                      description: Message contains the optional message with the
                        details of the cluster state.
                      type: string
                    ownedPartitions:
                      description: OwnedPartitions represents the partitions count
                        on the member.
                      format: int32
                      type: integer
                    podName:
                      description: PodName is the name of the Hazelcast member pod.
                      type: string
                    reason:
                      description: Reason contains the optional reason of member crash
                        or restart.
                      type: string
                    restartCount:
                      description: RestartCount is the number of times the member
                        has been restarted.
                      format: int32
                      type: integer
                    state:
                      description: State represents the observed state of the member.
                      enum:
                      - PASSIVE
                      - ACTIVE
                      - SHUT_DOWN
                      - STARTING
                      type: string
                    uid:
                      description: Uid is the unique member identifier within the
                        cluster.
                      type: string
                    version:
                      description: Version represents the Hazelcast version of the
                        member.
                      type: string
                  type: object
                type: array
              message:
                description: Message about the Hazelcast cluster state
                type: string
              phase:
                description: Phase of the Hazelcast cluster
                enum:
                - Running
                - Failed
                - Pending
                - Terminating
                type: string
              restore:
                description: Status of restore process of the Hazelcast cluster
                properties:
                  remainingDataLoadTime:
                    description: RemainingDataLoadTime show the time in seconds remained
                      for the restore data load step.
                    format: int64
                    type: integer
                  remainingValidationTime:
                    description: RemainingValidationTime show the time in seconds
                      remained for the restore validation step.
                    format: int64
                    type: integer
                  state:
                    description: State shows the current phase of the restore process
                      of the cluster.
                    enum:
                    - Unknown
                    - Failed
                    - InProgress
                    - Succeeded
                    type: string
                type: object
              selector:
                description: Selector is a label selector used by HorizontalPodAutoscaler
                  to autoscale Hazelcast resource.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.clusterSize
        statusReplicasPath: .status.clusterSize
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
