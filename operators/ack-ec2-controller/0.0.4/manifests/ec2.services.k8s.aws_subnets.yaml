apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: subnets.ec2.services.k8s.aws
spec:
  group: ec2.services.k8s.aws
  names:
    kind: Subnet
    listKind: SubnetList
    plural: subnets
    singular: subnet
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subnet is the Schema for the Subnets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "SubnetSpec defines the desired state of Subnet. \n Describes
              a subnet."
            properties:
              availabilityZone:
                description: "The Availability Zone or Local Zone for the subnet.
                  \n Default: AWS selects one for you. If you create more than one
                  subnet in your VPC, we do not necessarily select a different zone
                  for each subnet. \n To create a subnet in a Local Zone, set this
                  value to the Local Zone ID, for example us-west-2-lax-1a. For information
                  about the Regions that support Local Zones, see Available Regions
                  (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions)
                  in the Amazon Elastic Compute Cloud User Guide. \n To create a subnet
                  in an Outpost, set this value to the Availability Zone for the Outpost
                  and specify the Outpost ARN."
                type: string
              availabilityZoneID:
                description: The AZ ID or the Local Zone ID of the subnet.
                type: string
              cidrBlock:
                description: The IPv4 network range for the subnet, in CIDR notation.
                  For example, 10.0.0.0/24. We modify the specified CIDR block to
                  its canonical form; for example, if you specify 100.68.0.18/18,
                  we modify it to 100.68.0.0/18.
                type: string
              ipv6CIDRBlock:
                description: The IPv6 network range for the subnet, in CIDR notation.
                  The subnet size must use a /64 prefix length.
                type: string
              outpostARN:
                description: The Amazon Resource Name (ARN) of the Outpost. If you
                  specify an Outpost ARN, you must also specify the Availability Zone
                  of the Outpost subnet.
                type: string
              tagSpecifications:
                description: The tags to assign to the subnet.
                items:
                  description: The tags to apply to a resource when the resource is
                    being created.
                  properties:
                    resourceType:
                      type: string
                    tags:
                      items:
                        description: Describes a tag.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              vpcID:
                description: The ID of the VPC.
                type: string
            required:
            - cidrBlock
            - vpcID
            type: object
          status:
            description: SubnetStatus defines the observed state of Subnet
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              assignIPv6AddressOnCreation:
                description: Indicates whether a network interface created in this
                  subnet (including a network interface created by RunInstances) receives
                  an IPv6 address.
                type: boolean
              availableIPAddressCount:
                description: The number of unused private IPv4 addresses in the subnet.
                  The IPv4 addresses for any stopped instances are considered unavailable.
                format: int64
                type: integer
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              customerOwnedIPv4Pool:
                description: The customer-owned IPv4 address pool associated with
                  the subnet.
                type: string
              defaultForAZ:
                description: Indicates whether this is the default subnet for the
                  Availability Zone.
                type: boolean
              ipv6CIDRBlockAssociationSet:
                description: Information about the IPv6 CIDR blocks associated with
                  the subnet.
                items:
                  description: Describes an IPv6 CIDR block associated with a subnet.
                  properties:
                    associationID:
                      type: string
                    ipv6CIDRBlock:
                      type: string
                    ipv6CIDRBlockState:
                      description: Describes the state of a CIDR block.
                      properties:
                        state:
                          type: string
                        statusMessage:
                          type: string
                      type: object
                  type: object
                type: array
              mapCustomerOwnedIPOnLaunch:
                description: Indicates whether a network interface created in this
                  subnet (including a network interface created by RunInstances) receives
                  a customer-owned IPv4 address.
                type: boolean
              mapPublicIPOnLaunch:
                description: Indicates whether instances launched in this subnet receive
                  a public IPv4 address.
                type: boolean
              ownerID:
                description: The ID of the AWS account that owns the subnet.
                type: string
              state:
                description: The current state of the subnet.
                type: string
              subnetID:
                description: The ID of the subnet.
                type: string
              tags:
                description: Any tags assigned to the subnet.
                items:
                  description: Describes a tag.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
