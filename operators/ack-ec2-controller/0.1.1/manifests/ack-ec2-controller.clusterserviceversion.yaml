apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "DHCPOptions",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "ElasticIPAddress",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "Instance",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "InternetGateway",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "NATGateway",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "RouteTable",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "SecurityGroup",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "Subnet",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "TransitGateway",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "VPC",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "ec2.services.k8s.aws/v1alpha1",
          "kind": "VPCEndpoint",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ]
    capabilities: Basic Install
    categories: Cloud Provider
    certified: "false"
    containerImage: public.ecr.aws/aws-controllers-k8s/ec2-controller:v0.1.1
    createdAt: "2023-02-02 19:58:26"
    description: AWS EC2 controller is a service controller for managing EC2 resources
      in Kubernetes
    operatorframework.io/suggested-namespace: ack-system
    operators.operatorframework.io/builder: operator-sdk-v1.19.0+git
    operators.operatorframework.io/project_layout: unknown
    repository: https://github.com/aws-controllers-k8s
    support: Community
  name: ack-ec2-controller.v0.1.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DHCPOptions represents the state of an AWS ec2 DHCPOptions resource.
      displayName: DHCPOptions
      kind: DHCPOptions
      name: dhcpoptions.ec2.services.k8s.aws
      version: v1alpha1
    - description: ElasticIPAddress represents the state of an AWS ec2 ElasticIPAddress
        resource.
      displayName: ElasticIPAddress
      kind: ElasticIPAddress
      name: elasticipaddresses.ec2.services.k8s.aws
      version: v1alpha1
    - description: Instance represents the state of an AWS ec2 Instance resource.
      displayName: Instance
      kind: Instance
      name: instances.ec2.services.k8s.aws
      version: v1alpha1
    - description: InternetGateway represents the state of an AWS ec2 InternetGateway
        resource.
      displayName: InternetGateway
      kind: InternetGateway
      name: internetgateways.ec2.services.k8s.aws
      version: v1alpha1
    - description: NATGateway represents the state of an AWS ec2 NATGateway resource.
      displayName: NATGateway
      kind: NATGateway
      name: natgateways.ec2.services.k8s.aws
      version: v1alpha1
    - description: RouteTable represents the state of an AWS ec2 RouteTable resource.
      displayName: RouteTable
      kind: RouteTable
      name: routetables.ec2.services.k8s.aws
      version: v1alpha1
    - description: SecurityGroup represents the state of an AWS ec2 SecurityGroup
        resource.
      displayName: SecurityGroup
      kind: SecurityGroup
      name: securitygroups.ec2.services.k8s.aws
      version: v1alpha1
    - description: Subnet represents the state of an AWS ec2 Subnet resource.
      displayName: Subnet
      kind: Subnet
      name: subnets.ec2.services.k8s.aws
      version: v1alpha1
    - description: TransitGateway represents the state of an AWS ec2 TransitGateway
        resource.
      displayName: TransitGateway
      kind: TransitGateway
      name: transitgateways.ec2.services.k8s.aws
      version: v1alpha1
    - description: VPCEndpoint represents the state of an AWS ec2 VPCEndpoint resource.
      displayName: VPCEndpoint
      kind: VPCEndpoint
      name: vpcendpoints.ec2.services.k8s.aws
      version: v1alpha1
    - description: VPC represents the state of an AWS ec2 VPC resource.
      displayName: VPC
      kind: VPC
      name: vpcs.ec2.services.k8s.aws
      version: v1alpha1
  description: |-
    Manage Elastic Compute Cloud (EC2) resources in AWS from within your Kubernetes cluster.

    **About Amazon EC2**

    Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the Amazon Web Services (AWS) Cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EC2 enables you to scale up or down to handle changes in requirements or spikes in popularity, reducing your need to forecast traffic.

    **About the AWS Controllers for Kubernetes**

    This controller is a component of the [AWS Controller for Kubernetes](https://github.com/aws/aws-controllers-k8s) project.

    **Pre-Installation Steps**

    Please follow the following link: [Red Hat OpenShift](https://aws-controllers-k8s.github.io/community/docs/user-docs/openshift/)
  displayName: AWS Controllers for Kubernetes - Amazon EC2
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgMzA0IDE4MiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMzA0IDE4MjsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMyNTJGM0U7fQoJLnN0MXtmaWxsLXJ1bGU6ZXZlbm9kZDtjbGlwLXJ1bGU6ZXZlbm9kZDtmaWxsOiNGRjk5MDA7fQo8L3N0eWxlPgo8Zz4KCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04Ni40LDY2LjRjMCwzLjcsMC40LDYuNywxLjEsOC45YzAuOCwyLjIsMS44LDQuNiwzLjIsNy4yYzAuNSwwLjgsMC43LDEuNiwwLjcsMi4zYzAsMS0wLjYsMi0xLjksM2wtNi4zLDQuMiAgIGMtMC45LDAuNi0xLjgsMC45LTIuNiwwLjljLTEsMC0yLTAuNS0zLTEuNEM3Ni4yLDkwLDc1LDg4LjQsNzQsODYuOGMtMS0xLjctMi0zLjYtMy4xLTUuOWMtNy44LDkuMi0xNy42LDEzLjgtMjkuNCwxMy44ICAgYy04LjQsMC0xNS4xLTIuNC0yMC03LjJjLTQuOS00LjgtNy40LTExLjItNy40LTE5LjJjMC04LjUsMy0xNS40LDkuMS0yMC42YzYuMS01LjIsMTQuMi03LjgsMjQuNS03LjhjMy40LDAsNi45LDAuMywxMC42LDAuOCAgIGMzLjcsMC41LDcuNSwxLjMsMTEuNSwyLjJ2LTcuM2MwLTcuNi0xLjYtMTIuOS00LjctMTZjLTMuMi0zLjEtOC42LTQuNi0xNi4zLTQuNmMtMy41LDAtNy4xLDAuNC0xMC44LDEuM2MtMy43LDAuOS03LjMsMi0xMC44LDMuNCAgIGMtMS42LDAuNy0yLjgsMS4xLTMuNSwxLjNjLTAuNywwLjItMS4yLDAuMy0xLjYsMC4zYy0xLjQsMC0yLjEtMS0yLjEtMy4xdi00LjljMC0xLjYsMC4yLTIuOCwwLjctMy41YzAuNS0wLjcsMS40LTEuNCwyLjgtMi4xICAgYzMuNS0xLjgsNy43LTMuMywxMi42LTQuNWM0LjktMS4zLDEwLjEtMS45LDE1LjYtMS45YzExLjksMCwyMC42LDIuNywyNi4yLDguMWM1LjUsNS40LDguMywxMy42LDguMywyNC42VjY2LjR6IE00NS44LDgxLjYgICBjMy4zLDAsNi43LTAuNiwxMC4zLTEuOGMzLjYtMS4yLDYuOC0zLjQsOS41LTYuNGMxLjYtMS45LDIuOC00LDMuNC02LjRjMC42LTIuNCwxLTUuMywxLTguN3YtNC4yYy0yLjktMC43LTYtMS4zLTkuMi0xLjcgICBjLTMuMi0wLjQtNi4zLTAuNi05LjQtMC42Yy02LjcsMC0xMS42LDEuMy0xNC45LDRjLTMuMywyLjctNC45LDYuNS00LjksMTEuNWMwLDQuNywxLjIsOC4yLDMuNywxMC42ICAgQzM3LjcsODAuNCw0MS4yLDgxLjYsNDUuOCw4MS42eiBNMTI2LjEsOTIuNGMtMS44LDAtMy0wLjMtMy44LTFjLTAuOC0wLjYtMS41LTItMi4xLTMuOUw5Ni43LDEwLjJjLTAuNi0yLTAuOS0zLjMtMC45LTQgICBjMC0xLjYsMC44LTIuNSwyLjQtMi41aDkuOGMxLjksMCwzLjIsMC4zLDMuOSwxYzAuOCwwLjYsMS40LDIsMiwzLjlsMTYuOCw2Ni4ybDE1LjYtNjYuMmMwLjUtMiwxLjEtMy4zLDEuOS0zLjljMC44LTAuNiwyLjItMSw0LTEgICBoOGMxLjksMCwzLjIsMC4zLDQsMWMwLjgsMC42LDEuNSwyLDEuOSwzLjlsMTUuOCw2N2wxNy4zLTY3YzAuNi0yLDEuMy0zLjMsMi0zLjljMC44LTAuNiwyLjEtMSwzLjktMWg5LjNjMS42LDAsMi41LDAuOCwyLjUsMi41ICAgYzAsMC41LTAuMSwxLTAuMiwxLjZjLTAuMSwwLjYtMC4zLDEuNC0wLjcsMi41bC0yNC4xLDc3LjNjLTAuNiwyLTEuMywzLjMtMi4xLDMuOWMtMC44LDAuNi0yLjEsMS0zLjgsMWgtOC42Yy0xLjksMC0zLjItMC4zLTQtMSAgIGMtMC44LTAuNy0xLjUtMi0xLjktNEwxNTYsMjNsLTE1LjQsNjQuNGMtMC41LDItMS4xLDMuMy0xLjksNGMtMC44LDAuNy0yLjIsMS00LDFIMTI2LjF6IE0yNTQuNiw5NS4xYy01LjIsMC0xMC40LTAuNi0xNS40LTEuOCAgIGMtNS0xLjItOC45LTIuNS0xMS41LTRjLTEuNi0wLjktMi43LTEuOS0zLjEtMi44Yy0wLjQtMC45LTAuNi0xLjktMC42LTIuOHYtNS4xYzAtMi4xLDAuOC0zLjEsMi4zLTMuMWMwLjYsMCwxLjIsMC4xLDEuOCwwLjMgICBjMC42LDAuMiwxLjUsMC42LDIuNSwxYzMuNCwxLjUsNy4xLDIuNywxMSwzLjVjNCwwLjgsNy45LDEuMiwxMS45LDEuMmM2LjMsMCwxMS4yLTEuMSwxNC42LTMuM2MzLjQtMi4yLDUuMi01LjQsNS4yLTkuNSAgIGMwLTIuOC0wLjktNS4xLTIuNy03Yy0xLjgtMS45LTUuMi0zLjYtMTAuMS01LjJMMjQ2LDUyYy03LjMtMi4zLTEyLjctNS43LTE2LTEwLjJjLTMuMy00LjQtNS05LjMtNS0xNC41YzAtNC4yLDAuOS03LjksMi43LTExLjEgICBjMS44LTMuMiw0LjItNiw3LjItOC4yYzMtMi4zLDYuNC00LDEwLjQtNS4yYzQtMS4yLDguMi0xLjcsMTIuNi0xLjdjMi4yLDAsNC41LDAuMSw2LjcsMC40YzIuMywwLjMsNC40LDAuNyw2LjUsMS4xICAgYzIsMC41LDMuOSwxLDUuNywxLjZjMS44LDAuNiwzLjIsMS4yLDQuMiwxLjhjMS40LDAuOCwyLjQsMS42LDMsMi41YzAuNiwwLjgsMC45LDEuOSwwLjksMy4zdjQuN2MwLDIuMS0wLjgsMy4yLTIuMywzLjIgICBjLTAuOCwwLTIuMS0wLjQtMy44LTEuMmMtNS43LTIuNi0xMi4xLTMuOS0xOS4yLTMuOWMtNS43LDAtMTAuMiwwLjktMTMuMywyLjhjLTMuMSwxLjktNC43LDQuOC00LjcsOC45YzAsMi44LDEsNS4yLDMsNy4xICAgYzIsMS45LDUuNywzLjgsMTEsNS41bDE0LjIsNC41YzcuMiwyLjMsMTIuNCw1LjUsMTUuNSw5LjZjMy4xLDQuMSw0LjYsOC44LDQuNiwxNGMwLDQuMy0wLjksOC4yLTIuNiwxMS42ICAgYy0xLjgsMy40LTQuMiw2LjQtNy4zLDguOGMtMy4xLDIuNS02LjgsNC4zLTExLjEsNS42QzI2NC40LDk0LjQsMjU5LjcsOTUuMSwyNTQuNiw5NS4xeiIvPgoJPGc+CgkJPHBhdGggY2xhc3M9InN0MSIgZD0iTTI3My41LDE0My43Yy0zMi45LDI0LjMtODAuNywzNy4yLTEyMS44LDM3LjJjLTU3LjYsMC0xMDkuNS0yMS4zLTE0OC43LTU2LjdjLTMuMS0yLjgtMC4zLTYuNiwzLjQtNC40ICAgIGM0Mi40LDI0LjYsOTQuNywzOS41LDE0OC44LDM5LjVjMzYuNSwwLDc2LjYtNy42LDExMy41LTIzLjJDMjc0LjIsMTMzLjYsMjc4LjksMTM5LjcsMjczLjUsMTQzLjd6Ii8+CgkJPHBhdGggY2xhc3M9InN0MSIgZD0iTTI4Ny4yLDEyOC4xYy00LjItNS40LTI3LjgtMi42LTM4LjUtMS4zYy0zLjIsMC40LTMuNy0yLjQtMC44LTQuNWMxOC44LTEzLjIsNDkuNy05LjQsNTMuMy01ICAgIGMzLjYsNC41LTEsMzUuNC0xOC42LDUwLjJjLTIuNywyLjMtNS4zLDEuMS00LjEtMS45QzI4Mi41LDE1NS43LDI5MS40LDEzMy40LDI4Ny4yLDEyOC4xeiIvPgoJPC9nPgo8L2c+Cjwvc3ZnPg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - dhcpoptions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - dhcpoptions/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - elasticipaddresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - elasticipaddresses/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - instances
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - instances/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - internetgateways
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - internetgateways/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - natgateways
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - natgateways/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - routetables
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - routetables/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - securitygroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - securitygroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - subnets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - subnets/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - transitgateways
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - transitgateways/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - vpcendpoints
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - vpcendpoints/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - vpcs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ec2.services.k8s.aws
          resources:
          - vpcs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - services.k8s.aws
          resources:
          - adoptedresources
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - services.k8s.aws
          resources:
          - adoptedresources/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - services.k8s.aws
          resources:
          - fieldexports
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - services.k8s.aws
          resources:
          - fieldexports/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: ack-ec2-controller
      deployments:
      - label:
          app.kubernetes.io/name: ack-ec2-controller
          app.kubernetes.io/part-of: ack-system
        name: ack-ec2-controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: ack-ec2-controller
          strategy: {}
          template:
            metadata:
              labels:
                app.kubernetes.io/name: ack-ec2-controller
            spec:
              containers:
              - args:
                - --aws-region
                - $(AWS_REGION)
                - --aws-endpoint-url
                - $(AWS_ENDPOINT_URL)
                - --enable-development-logging
                - $(ACK_ENABLE_DEVELOPMENT_LOGGING)
                - --log-level
                - $(ACK_LOG_LEVEL)
                - --resource-tags
                - $(ACK_RESOURCE_TAGS)
                - --watch-namespace
                - $(ACK_WATCH_NAMESPACE)
                command:
                - ./bin/controller
                env:
                - name: ACK_SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                envFrom:
                - configMapRef:
                    name: ack-ec2-user-config
                    optional: false
                - secretRef:
                    name: ack-ec2-user-secrets
                    optional: true
                image: public.ecr.aws/aws-controllers-k8s/ec2-controller:v0.1.1
                name: controller
                ports:
                - containerPort: 8080
                  name: http
                resources:
                  limits:
                    cpu: 100m
                    memory: 300Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  privileged: false
                  runAsNonRoot: true
              serviceAccountName: ack-ec2-controller
              terminationGracePeriodSeconds: 10
    strategy: deployment
  installModes:
  - supported: true
    type: AllNamespaces
  keywords:
  - ec2
  - aws
  - amazon
  - ack
  links:
  - name: AWS Controllers for Kubernetes
    url: https://github.com/aws-controllers-k8s/community
  - name: Documentation
    url: https://aws-controllers-k8s.github.io/community/
  - name: Amazon EC2 Developer Resources
    url: https://aws.amazon.com/ec2/resources/
  maintainers:
  - email: ack-maintainers@amazon.com
    name: ec2 maintainer team
  maturity: alpha
  provider:
    name: Amazon, Inc.
    url: https://aws.amazon.com
  version: 0.1.1
