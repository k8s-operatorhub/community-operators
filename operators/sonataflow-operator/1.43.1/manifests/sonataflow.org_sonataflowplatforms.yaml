apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: sonataflowplatforms.sonataflow.org
spec:
  group: sonataflow.org
  names:
    kind: SonataFlowPlatform
    listKind: SonataFlowPlatformList
    plural: sonataflowplatforms
    shortNames:
    - sfp
    - sfplatform
    - sfplatforms
    singular: sonataflowplatform
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.cluster
      name: Cluster
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeed')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeed')].reason
      name: Reason
      type: string
    name: v1alpha08
    schema:
      openAPIV3Schema:
        description: SonataFlowPlatform is the descriptor for the workflow platform
          infrastructure.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SonataFlowPlatformSpec defines the desired state of SonataFlowPlatform
            properties:
              build:
                description: Attributes for building workflows in the target platform
                properties:
                  config:
                    description: Describes the platform configuration for building
                      workflows.
                    properties:
                      baseImage:
                        description: a base image that can be used as base layer for
                          all images. It can be useful if you want to provide some
                          custom base image with further utility software
                        type: string
                      registry:
                        description: Registry the registry where to publish the built
                          image
                        properties:
                          address:
                            description: the URI to access
                            type: string
                          ca:
                            description: the configmap which stores the Certificate
                              Authority
                            type: string
                          insecure:
                            description: if the container registry is insecure (ie,
                              http only)
                            type: boolean
                          organization:
                            description: the registry organization
                            type: string
                          secret:
                            description: the secret where credentials are stored
                            type: string
                        type: object
                      strategy:
                        description: BuildStrategy to use to build workflows in the
                          platform. Usually, the operator elect the strategy based
                          on the platform. Note that this field might be read only
                          in certain scenarios.
                        type: string
                      strategyOptions:
                        additionalProperties:
                          type: string
                        description: BuildStrategyOptions additional options to add
                          to the build strategy. See https://sonataflow.org/serverlessworkflow/main/cloud/operator/build-and-deploy-workflows.html
                        type: object
                      timeout:
                        description: how much time to wait before time out the build
                          process
                        type: string
                    type: object
                  template:
                    description: Describes a build template for building workflows.
                      Base for the internal SonataFlowBuild resource.
                    properties:
                      arguments:
                        description: Arguments lists the command line arguments to
                          send to the builder
                        items:
                          type: string
                        type: array
                      resources:
                        description: Resources optional compute resource requirements
                          for the builder
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      timeout:
                        description: Timeout defines the Build maximum execution duration.
                          The Build deadline is set to the Build start time plus the
                          Timeout duration. If the Build deadline is exceeded, the
                          Build context is canceled, and its phase set to BuildPhaseFailed.
                        format: duration
                        type: string
                    type: object
                type: object
              devMode:
                description: Attributes for running workflows in devmode (immutable,
                  no build required)
                properties:
                  baseImage:
                    description: Base image to run the Workflow in dev mode instead
                      of the operator's default.
                    type: string
                type: object
            type: object
          status:
            description: SonataFlowPlatformStatus defines the observed state of SonataFlowPlatform
            properties:
              cluster:
                description: Cluster what kind of cluster you're running (ie, plain
                  Kubernetes or OpenShift)
                enum:
                - kubernetes
                - openshift
                type: string
              conditions:
                description: The latest available observations of a resource's current
                  state.
                items:
                  description: Condition describes the common structure for conditions
                    in our types
                  properties:
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type condition for the given object
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              info:
                additionalProperties:
                  type: string
                description: Info generic information related to the build
                type: object
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int64
                type: integer
              version:
                description: Version the operator version controlling this Platform
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
