apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  name: managedzones.kuadrant.io
spec:
  group: kuadrant.io
  names:
    kind: ManagedZone
    listKind: ManagedZoneList
    plural: managedzones
    singular: managedzone
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Domain of this Managed Zone
      jsonPath: .spec.domainName
      name: Domain Name
      type: string
    - description: The ID assigned by this provider for this zone .
      jsonPath: .status.id
      name: ID
      type: string
    - description: Number of records in the provider zone.
      jsonPath: .status.recordCount
      name: Record Count
      type: string
    - description: The NameServers assigned by the provider for this zone.
      jsonPath: .status.nameServers
      name: NameServers
      type: string
    - description: Managed Zone ready.
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedZone is the Schema for the managedzones API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManagedZoneSpec defines the desired state of ManagedZone
            properties:
              description:
                description: Description for this ManagedZone
                type: string
              dnsProviderSecretRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              domainName:
                description: Domain name of this ManagedZone
                pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                type: string
              id:
                description: ID is the provider assigned id of this  zone (i.e. route53.HostedZone.ID).
                type: string
              parentManagedZone:
                description: Reference to another managed zone that this managed zone
                  belongs to.
                properties:
                  name:
                    description: '`name` is the name of the managed zone. Required'
                    type: string
                required:
                - name
                type: object
            required:
            - description
            - dnsProviderSecretRef
            - domainName
            type: object
          status:
            description: ManagedZoneStatus defines the observed state of a Zone
            properties:
              conditions:
                description: List of status conditions to indicate the status of a
                  ManagedZone. Known condition types are `Ready`.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: The ID assigned by this provider for this zone (i.e.
                  route53.HostedZone.ID)
                type: string
              nameServers:
                description: The NameServers assigned by the provider for this zone
                  (i.e. route53.DelegationSet.NameServers)
                items:
                  type: string
                type: array
              observedGeneration:
                description: observedGeneration is the most recently observed generation
                  of the ManagedZone.
                format: int64
                type: integer
              recordCount:
                description: The number of records in the provider zone
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
