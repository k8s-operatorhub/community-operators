apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/version: v1.1.0
  name: pubsubpluseventbrokers.pubsubplus.solace.com
spec:
  group: pubsubplus.solace.com
  names:
    kind: PubSubPlusEventBroker
    listKind: PubSubPlusEventBrokerList
    plural: pubsubpluseventbrokers
    shortNames:
    - eb
    - eventbroker
    singular: pubsubpluseventbroker
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: PubSub+ Event Broker
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EventBrokerSpec defines the desired state of PubSubPlusEventBroker
            properties:
              adminCredentialsSecret:
                description: |-
                  Defines the password for PubSubPlusEventBroker if provided. Random one will be generated if not provided.
                  When provided, ensure the secret key name is `username_admin_password`. For valid values refer to the Solace documentation https://docs.solace.com/Admin/Configuring-Internal-CLI-User-Accounts.htm.
                nullable: true
                type: string
              brokerContainerSecurity:
                description: ContainerSecurityContext defines the container security
                  context for the PubSubPlusEventBroker.
                properties:
                  runAsGroup:
                    description: Specifies runAsGroup in container security context.
                      0 or unset defaults either to 1000002, or if OpenShift detected
                      to unspecified (see documentation)
                    format: int64
                    type: number
                  runAsUser:
                    description: Specifies runAsUser in container security context.
                      0 or unset defaults either to 1000001, or if OpenShift detected
                      to unspecified (see documentation)
                    format: int64
                    type: number
                type: object
              developer:
                default: false
                description: |-
                  Developer true specifies a minimum footprint scaled-down deployment, not for production use.
                  If set to true it overrides SystemScaling parameters.
                type: boolean
              enableServiceLinks:
                default: false
                description: |-
                  EnableServiceLinks indicates whether information about services should be injected into pod's environment
                  variables, matching the syntax of Docker links. Optional: Defaults to false.
                type: boolean
              extraEnvVars:
                description: |-
                  List of extra environment variables to be added to the PubSubPlusEventBroker container. Note: Do not configure Timezone or SystemScaling parameters here as it could cause unintended consequences.
                  A primary use case is to specify configuration keys, although the variables defined here will not override the ones defined in ConfigMap
                items:
                  description: ExtraEnvVar defines environment variables to be added
                    to the PubSubPlusEventBroker container
                  properties:
                    name:
                      description: Specifies the Name of an environment variable to
                        be added to the PubSubPlusEventBroker container
                      type: string
                    value:
                      description: Specifies the Value of an environment variable
                        to be added to the PubSubPlusEventBroker container
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              extraEnvVarsCM:
                description: 'List of extra environment variables to be added to the
                  PubSubPlusEventBroker container from an existing ConfigMap. Note:
                  Do not configure Timezone or SystemScaling parameters here as it
                  could cause unintended consequences.'
                type: string
              extraEnvVarsSecret:
                description: List of extra environment variables to be added to the
                  PubSubPlusEventBroker container from an existing Secret
                type: string
              image:
                description: Image defines container image parameters for the event
                  broker.
                properties:
                  pullPolicy:
                    default: IfNotPresent
                    description: Specifies ImagePullPolicy of the container image
                      for the event broker.
                    type: string
                  pullSecrets:
                    description: pullSecrets is an optional list of references to
                      secrets in the same namespace to use for pulling any of the
                      images used by this PodSpec.
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  repository:
                    description: Defines the container image repo where the event
                      broker image is pulled from
                    type: string
                  tag:
                    default: latest
                    description: Specifies the tag of the container image to be used
                      for the event broker.
                    type: string
                type: object
              monitoring:
                description: Monitoring specifies a Prometheus monitoring endpoint
                  for the event broker
                properties:
                  enabled:
                    default: false
                    description: Enabled true enables the setup of the Prometheus
                      Exporter.
                    type: boolean
                  extraEnvVars:
                    description: List of extra environment variables to be added to
                      the Prometheus Exporter container.
                    items:
                      description: MonitoringExtraEnvVar defines environment variables
                        to be added to the Prometheus Exporter container for Monitoring
                      properties:
                        name:
                          description: Specifies the Name of an environment variable
                            to be added to the Prometheus Exporter container for Monitoring
                          type: string
                        value:
                          description: Specifies the Value of an environment variable
                            to be added to the Prometheus Exporter container for Monitoring
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  image:
                    description: Image defines container image parameters for the
                      Prometheus Exporter.
                    properties:
                      pullPolicy:
                        default: IfNotPresent
                        description: Specifies ImagePullPolicy of the container image
                          for the Prometheus Exporter.
                        type: string
                      pullSecrets:
                        description: pullSecrets is an optional list of references
                          to secrets in the same namespace to use for pulling any
                          of the images used by this PodSpec.
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      repository:
                        description: Defines the container image repo where the Prometheus
                          Exporter image is pulled from
                        type: string
                      tag:
                        default: latest
                        description: Specifies the tag of the container image to be
                          used for the Prometheus Exporter.
                        type: string
                    type: object
                  includeRates:
                    default: false
                    description: Defines if Prometheus Exporter should include rates
                    type: boolean
                  metricsEndpoint:
                    description: MetricsEndpoint defines parameters to configure monitoring
                      for the Prometheus Exporter.
                    properties:
                      containerPort:
                        default: 9628
                        description: ContainerPort is the port number to expose on
                          the Prometheus Exporter pod.
                        format: int32
                        type: number
                      endpointTlsConfigPrivateKeyName:
                        default: tls.key
                        description: EndpointTlsConfigPrivateKeyName is the file name
                          of the Private Key used to set up TLS configuration
                        type: string
                      endpointTlsConfigSecret:
                        description: EndpointTLSConfigSecret defines TLS secret name
                          to set up TLS configuration
                        type: string
                      endpointTlsConfigServerCertName:
                        default: tls.crt
                        description: EndpointTlsConfigServerCertName is the file name
                          of the Server Certificate used to set up TLS configuration
                        type: string
                      listenTLS:
                        default: false
                        description: Defines if Metrics Service Endpoint uses TLS
                          configuration
                        type: boolean
                      name:
                        description: Name is a unique name for the port that can be
                          referred to by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                        enum:
                        - TCP
                        - UDP
                        - SCTP
                        type: string
                      servicePort:
                        default: 9628
                        description: ServicePort is the port number to expose on the
                          service
                        format: int32
                        type: number
                      serviceType:
                        default: ClusterIP
                        description: Defines the service type for the Metrics Service
                          Endpoint
                        type: string
                    type: object
                  sslVerify:
                    default: false
                    description: Defines if Prometheus Exporter verifies SSL
                    type: boolean
                  timeOut:
                    default: 5
                    description: Timeout configuration for Prometheus Exporter scrapper
                    format: int32
                    type: number
                type: object
              monitoringCredentialsSecret:
                description: |-
                  Defines the password for PubSubPlusEventBroker to be used by the Exporter for monitoring.
                  When provided, ensure the secret key name is `username_monitor_password`. For valid values refer to the Solace documentation https://docs.solace.com/Admin/Configuring-Internal-CLI-User-Accounts.htm.
                nullable: true
                type: string
              nodeAssignment:
                description: NodeAssignment defines labels to constrain PubSubPlusEventBroker
                  nodes to run on particular node(s), or to prefer to run on particular
                  nodes.
                items:
                  description: NodeAssignment defines labels to constrain PubSubPlusEventBroker
                    nodes to specific nodes
                  properties:
                    name:
                      description: Defines the name of broker node type that has the
                        nodeAssignment spec defined
                      enum:
                      - Primary
                      - Backup
                      - Monitor
                      type: string
                    spec:
                      description: If provided defines the labels to constrain the
                        PubSubPlusEventBroker node to specific nodes
                      properties:
                        affinity:
                          default: {}
                          description: Affinity if provided defines the conditional
                            approach to assign PubSubPlusEventBroker nodes to specific
                            nodes to which they can be scheduled
                          nullable: true
                          properties:
                            nodeAffinity:
                              description: Describes node affinity scheduling rules
                                for the pod.
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                    the affinity expressions specified by this field, but it may choose
                                    a node that violates one or more of the expressions. The node that is
                                    most preferred is the one with the greatest sum of weights, i.e.
                                    for each node that meets all of the scheduling requirements (resource
                                    request, requiredDuringScheduling affinity expressions, etc.),
                                    compute a sum by iterating through the elements of this field and adding
                                    "weight" to the sum if the node matches the corresponding matchExpressions; the
                                    node(s) with the highest sum are the most preferred.
                                  items:
                                    description: |-
                                      An empty preferred scheduling term matches all objects with implicit weight 0
                                      (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                    properties:
                                      preference:
                                        description: A node selector term, associated
                                          with the corresponding weight.
                                        properties:
                                          matchExpressions:
                                            description: A list of node selector requirements
                                              by node's labels.
                                            items:
                                              description: |-
                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                that relates the key and values.
                                              properties:
                                                key:
                                                  description: The label key that
                                                    the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    An array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                    array must have a single element, which will be interpreted as an integer.
                                                    This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchFields:
                                            description: A list of node selector requirements
                                              by node's fields.
                                            items:
                                              description: |-
                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                that relates the key and values.
                                              properties:
                                                key:
                                                  description: The label key that
                                                    the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    An array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                    array must have a single element, which will be interpreted as an integer.
                                                    This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      weight:
                                        description: Weight associated with matching
                                          the corresponding nodeSelectorTerm, in the
                                          range 1-100.
                                        format: int32
                                        type: integer
                                    required:
                                    - preference
                                    - weight
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    If the affinity requirements specified by this field are not met at
                                    scheduling time, the pod will not be scheduled onto the node.
                                    If the affinity requirements specified by this field cease to be met
                                    at some point during pod execution (e.g. due to an update), the system
                                    may or may not try to eventually evict the pod from its node.
                                  properties:
                                    nodeSelectorTerms:
                                      description: Required. A list of node selector
                                        terms. The terms are ORed.
                                      items:
                                        description: |-
                                          A null or empty node selector term matches no objects. The requirements of
                                          them are ANDed.
                                          The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                        properties:
                                          matchExpressions:
                                            description: A list of node selector requirements
                                              by node's labels.
                                            items:
                                              description: |-
                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                that relates the key and values.
                                              properties:
                                                key:
                                                  description: The label key that
                                                    the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    An array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                    array must have a single element, which will be interpreted as an integer.
                                                    This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchFields:
                                            description: A list of node selector requirements
                                              by node's fields.
                                            items:
                                              description: |-
                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                that relates the key and values.
                                              properties:
                                                key:
                                                  description: The label key that
                                                    the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    An array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                    array must have a single element, which will be interpreted as an integer.
                                                    This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  required:
                                  - nodeSelectorTerms
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            podAffinity:
                              description: Describes pod affinity scheduling rules
                                (e.g. co-locate this pod in the same node, zone, etc.
                                as some other pod(s)).
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                    the affinity expressions specified by this field, but it may choose
                                    a node that violates one or more of the expressions. The node that is
                                    most preferred is the one with the greatest sum of weights, i.e.
                                    for each node that meets all of the scheduling requirements (resource
                                    request, requiredDuringScheduling affinity expressions, etc.),
                                    compute a sum by iterating through the elements of this field and adding
                                    "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                    node(s) with the highest sum are the most preferred.
                                  items:
                                    description: The weights of all of the matched
                                      WeightedPodAffinityTerm fields are added per-node
                                      to find the most preferred node(s)
                                    properties:
                                      podAffinityTerm:
                                        description: Required. A pod affinity term,
                                          associated with the corresponding weight.
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                              Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                              Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      weight:
                                        description: |-
                                          weight associated with matching the corresponding podAffinityTerm,
                                          in the range 1-100.
                                        format: int32
                                        type: integer
                                    required:
                                    - podAffinityTerm
                                    - weight
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    If the affinity requirements specified by this field are not met at
                                    scheduling time, the pod will not be scheduled onto the node.
                                    If the affinity requirements specified by this field cease to be met
                                    at some point during pod execution (e.g. due to a pod label update), the
                                    system may or may not try to eventually evict the pod from its node.
                                    When there are multiple elements, the lists of nodes corresponding to each
                                    podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                  items:
                                    description: |-
                                      Defines a set of pods (namely those matching the labelSelector
                                      relative to the given namespace(s)) that this pod should be
                                      co-located (affinity) or not co-located (anti-affinity) with,
                                      where co-located is defined as running on a node whose value of
                                      the label with key <topologyKey> matches that of any node on which
                                      a pod of the set of pods is running
                                    properties:
                                      labelSelector:
                                        description: |-
                                          A label query over a set of resources, in this case pods.
                                          If it's null, this PodAffinityTerm matches with no Pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      mismatchLabelKeys:
                                        description: |-
                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                          Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      namespaceSelector:
                                        description: |-
                                          A label query over the set of namespaces that the term applies to.
                                          The term is applied to the union of the namespaces selected by this field
                                          and the ones listed in the namespaces field.
                                          null selector and null or empty namespaces list means "this pod's namespace".
                                          An empty selector ({}) matches all namespaces.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        description: |-
                                          namespaces specifies a static list of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces listed in this field
                                          and the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: |-
                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                          selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              description: Describes pod anti-affinity scheduling
                                rules (e.g. avoid putting this pod in the same node,
                                zone, etc. as some other pod(s)).
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                    the anti-affinity expressions specified by this field, but it may choose
                                    a node that violates one or more of the expressions. The node that is
                                    most preferred is the one with the greatest sum of weights, i.e.
                                    for each node that meets all of the scheduling requirements (resource
                                    request, requiredDuringScheduling anti-affinity expressions, etc.),
                                    compute a sum by iterating through the elements of this field and adding
                                    "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                    node(s) with the highest sum are the most preferred.
                                  items:
                                    description: The weights of all of the matched
                                      WeightedPodAffinityTerm fields are added per-node
                                      to find the most preferred node(s)
                                    properties:
                                      podAffinityTerm:
                                        description: Required. A pod affinity term,
                                          associated with the corresponding weight.
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                              Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                              Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      weight:
                                        description: |-
                                          weight associated with matching the corresponding podAffinityTerm,
                                          in the range 1-100.
                                        format: int32
                                        type: integer
                                    required:
                                    - podAffinityTerm
                                    - weight
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: |-
                                    If the anti-affinity requirements specified by this field are not met at
                                    scheduling time, the pod will not be scheduled onto the node.
                                    If the anti-affinity requirements specified by this field cease to be met
                                    at some point during pod execution (e.g. due to a pod label update), the
                                    system may or may not try to eventually evict the pod from its node.
                                    When there are multiple elements, the lists of nodes corresponding to each
                                    podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                  items:
                                    description: |-
                                      Defines a set of pods (namely those matching the labelSelector
                                      relative to the given namespace(s)) that this pod should be
                                      co-located (affinity) or not co-located (anti-affinity) with,
                                      where co-located is defined as running on a node whose value of
                                      the label with key <topologyKey> matches that of any node on which
                                      a pod of the set of pods is running
                                    properties:
                                      labelSelector:
                                        description: |-
                                          A label query over a set of resources, in this case pods.
                                          If it's null, this PodAffinityTerm matches with no Pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      mismatchLabelKeys:
                                        description: |-
                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                          Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      namespaceSelector:
                                        description: |-
                                          A label query over the set of namespaces that the term applies to.
                                          The term is applied to the union of the namespaces selected by this field
                                          and the ones listed in the namespaces field.
                                          null selector and null or empty namespaces list means "this pod's namespace".
                                          An empty selector ({}) matches all namespaces.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        description: |-
                                          namespaces specifies a static list of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces listed in this field
                                          and the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: |-
                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                          selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  type: array
                              type: object
                          type: object
                        nodeSelector:
                          additionalProperties:
                            type: string
                          default: {}
                          description: NodeSelector if provided defines the exact
                            labels of nodes to which PubSubPlusEventBroker nodes can
                            be scheduled
                          type: object
                        tolerations:
                          description: Toleration if provided defines the exact properties
                            of the PubSubPlusEventBroker nodes can be scheduled on
                            nodes with d matching taint.
                          items:
                            description: |-
                              The pod this Toleration is attached to tolerates any taint that matches
                              the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: |-
                                  Effect indicates the taint effect to match. Empty means match all taint effects.
                                  When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: |-
                                  Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                  If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: |-
                                  Operator represents a key's relationship to the value.
                                  Valid operators are Exists and Equal. Defaults to Equal.
                                  Exists is equivalent to wildcard for value, so that a pod can
                                  tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: |-
                                  TolerationSeconds represents the period of time the toleration (which must be
                                  of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                  it is not set, which means tolerate the taint forever (do not evict). Zero and
                                  negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: |-
                                  Value is the taint value the toleration matches to.
                                  If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                  required:
                  - name
                  - spec
                  type: object
                type: array
              podAnnotations:
                additionalProperties:
                  type: string
                default: {}
                description: PodAnnotations allows adding provider-specific pod annotations
                  to PubSubPlusEventBroker pods
                type: object
              podDisruptionBudgetForHA:
                default: false
                description: |-
                  PodDisruptionBudgetForHA enables setting up PodDisruptionBudget for the broker pods in HA deployment.
                  This parameter is ignored for non-HA deployments (if redundancy is false).
                type: boolean
              podLabels:
                additionalProperties:
                  type: string
                default: {}
                description: PodLabels allows adding provider-specific pod labels
                  to PubSubPlusEventBroker pods
                type: object
              preSharedAuthKeySecret:
                description: |-
                  PreSharedAuthKeySecret defines the PreSharedAuthKey Secret for PubSubPlusEventBroker. Random one will be generated if not provided.
                  When provided, ensure the secret key name is `preshared_auth_key`. For valid values refer to the Solace documentation https://docs.solace.com/Features/HA-Redundancy/Pre-Shared-Keys-SMB.htm?Highlight=pre%20shared.
                nullable: true
                type: string
              redundancy:
                default: false
                description: Redundancy true specifies HA deployment, false specifies
                  Non-HA.
                type: boolean
              securityContext:
                description: SecurityContext defines the pod security context for
                  the event broker.
                properties:
                  fsGroup:
                    description: Specifies fsGroup in pod security context. 0 or unset
                      defaults either to 1000002, or if OpenShift detected to unspecified
                      (see documentation)
                    format: int64
                    type: number
                  runAsUser:
                    description: Specifies runAsUser in pod security context. 0 or
                      unset defaults either to 1000001, or if OpenShift detected to
                      unspecified (see documentation)
                    format: int64
                    type: number
                type: object
              service:
                description: Service defines broker service details.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    default: {}
                    description: Annotations allows adding provider-specific service
                      annotations
                    type: object
                  ports:
                    default:
                    - containerPort: 2222
                      name: tcp-ssh
                      protocol: TCP
                      servicePort: 2222
                    - containerPort: 8080
                      name: tcp-semp
                      protocol: TCP
                      servicePort: 8080
                    - containerPort: 1943
                      name: tls-semp
                      protocol: TCP
                      servicePort: 1943
                    - containerPort: 55555
                      name: tcp-smf
                      protocol: TCP
                      servicePort: 55555
                    - containerPort: 55003
                      name: tcp-smfcomp
                      protocol: TCP
                      servicePort: 55003
                    - containerPort: 55443
                      name: tls-smf
                      protocol: TCP
                      servicePort: 55443
                    - containerPort: 55556
                      name: tcp-smfroute
                      protocol: TCP
                      servicePort: 55556
                    - containerPort: 8008
                      name: tcp-web
                      protocol: TCP
                      servicePort: 8008
                    - containerPort: 1443
                      name: tls-web
                      protocol: TCP
                      servicePort: 1443
                    - containerPort: 9000
                      name: tcp-rest
                      protocol: TCP
                      servicePort: 9000
                    - containerPort: 9443
                      name: tls-rest
                      protocol: TCP
                      servicePort: 9443
                    - containerPort: 5672
                      name: tcp-amqp
                      protocol: TCP
                      servicePort: 5672
                    - containerPort: 5671
                      name: tls-amqp
                      protocol: TCP
                      servicePort: 5671
                    - containerPort: 1883
                      name: tcp-mqtt
                      protocol: TCP
                      servicePort: 1883
                    - containerPort: 8883
                      name: tls-mqtt
                      protocol: TCP
                      servicePort: 8883
                    - containerPort: 8000
                      name: tcp-mqttweb
                      protocol: TCP
                      servicePort: 8000
                    - containerPort: 8443
                      name: tls-mqttweb
                      protocol: TCP
                      servicePort: 8443
                    description: Ports specifies the ports to expose PubSubPlusEventBroker
                      services.
                    items:
                      description: Port defines parameters configure Service details
                        for the Broker
                      properties:
                        containerPort:
                          description: Port number to expose on the pod.
                          format: int32
                          type: number
                        name:
                          description: Unique name for the port that can be referred
                            to by services.
                          type: string
                        protocol:
                          default: TCP
                          description: Protocol for port. Must be UDP, TCP, or SCTP.
                          enum:
                          - TCP
                          - UDP
                          - SCTP
                          type: string
                        servicePort:
                          description: Port number to expose on the service
                          format: int32
                          type: number
                      required:
                      - containerPort
                      - name
                      - protocol
                      - servicePort
                      type: object
                    type: array
                  type:
                    default: LoadBalancer
                    description: ServiceType specifies how to expose the broker services.
                      Options include ClusterIP, NodePort, LoadBalancer (default).
                    type: string
                type: object
              serviceAccount:
                description: ServiceAccount defines a ServiceAccount dedicated to
                  the PubSubPlusEventBroker
                properties:
                  name:
                    description: |-
                      Name specifies the name of an existing ServiceAccount dedicated to the PubSubPlusEventBroker.
                      If this value is missing a new ServiceAccount will be created.
                    type: string
                required:
                - name
                type: object
              storage:
                description: Storage defines storage details for the broker.
                properties:
                  customVolumeMount:
                    description: CustomVolumeMount can be used to show the data volume
                      should be mounted instead of using a storage class.
                    items:
                      description: StorageCustomVolumeMount defines Image details
                        and pulling configurations
                      properties:
                        name:
                          description: Defines the name of PubSubPlusEventBroker node
                            type that has the customVolumeMount spec defined
                          enum:
                          - Primary
                          - Backup
                          - Monitor
                          type: string
                        persistentVolumeClaim:
                          description: Defines the customVolumeMount that can be used
                            mount the data volume instead of using a storage class
                          properties:
                            claimName:
                              description: Defines the claimName of a custom PersistentVolumeClaim
                                to be used instead
                              type: string
                          required:
                          - claimName
                          type: object
                      type: object
                    type: array
                  messagingNodeStorageSize:
                    default: 30Gi
                    description: MessagingNodeStorageSize if provided will assign
                      the minimum persistent storage to be used by the message nodes.
                    type: string
                  monitorNodeStorageSize:
                    default: 3Gi
                    description: MonitorNodeStorageSize if provided this will create
                      and assign the minimum recommended storage to Monitor pods.
                    type: string
                  slow:
                    default: false
                    description: Slow indicate slow storage is in use, an example
                      is NFS.
                    type: boolean
                  useStorageClass:
                    description: UseStrorageClass Name of the StorageClass to be used
                      to request persistent storage volumes. If undefined, the "default"
                      StorageClass will be used.
                    type: string
                type: object
              systemScaling:
                description: |-
                  SystemScaling provides exact fine-grained specification of the event broker scaling parameters
                  and the assigned CPU / memory resources to the Pod.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              timezone:
                default: UTC
                description: Defines the timezone for the event broker container,
                  if undefined default is UTC. Valid values are tz database time zone
                  names.
                type: string
              tls:
                description: TLS provides TLS configuration for the event broker.
                properties:
                  certFilename:
                    default: tls.key
                    description: Name of the Certificate file in the `serverCertificatesSecret`
                    type: string
                  certKeyFilename:
                    default: tls.crt
                    description: Name of the Key file in the `serverCertificatesSecret`
                    type: string
                  enabled:
                    default: false
                    description: Enabled true enables TLS for the broker.
                    type: boolean
                  serverTlsConfigSecret:
                    default: example-tls-secret
                    description: Specifies the tls configuration secret to be used
                      for the broker
                    type: string
                type: object
              updateStrategy:
                default: automatedRolling
                description: UpdateStrategy specifies how to update an existing deployment.
                  manualPodRestart waits for user intervention.
                enum:
                - automatedRolling
                - manualPodRestart
                type: string
            type: object
          status:
            description: EventBrokerStatus defines the observed state of the PubSubPlusEventBroker
            properties:
              broker:
                description: Broker section provides the broker status
                properties:
                  adminCredentialsSecret:
                    type: string
                  brokerImage:
                    type: string
                  haDeployment:
                    type: string
                  serviceName:
                    type: string
                  serviceType:
                    type: string
                  statefulSets:
                    items:
                      type: string
                    type: array
                  tlsSecret:
                    type: string
                  tlsSupport:
                    type: string
                type: object
              conditions:
                description: Conditions provide information about the observed status
                  of the deployment
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podsList:
                description: PodsList are the names of the eventbroker and optionally
                  the monitoring pods
                items:
                  type: string
                type: array
              prometheusMonitoring:
                description: Monitoring sectionprovides monitoring support status
                properties:
                  enabled:
                    type: string
                  exporterImage:
                    type: string
                  serviceName:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
