apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "falcon.crowdstrike.com/v1alpha1",
          "kind": "FalconContainer",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "falcon_api": {
              "client_id": "PLEASE_FILL_IN",
              "client_secret": "PLEASE_FILL_IN",
              "cloud_region": "autodiscover"
            },
            "installer_args": [
              "-falconctl-opts",
              "--tags=test-cluster"
            ],
            "registry": {
              "type": "crowdstrike"
            }
          }
        },
        {
          "apiVersion": "falcon.crowdstrike.com/v1alpha1",
          "kind": "FalconNodeSensor",
          "metadata": {
            "name": "falcon-node-sensor"
          },
          "spec": {
            "falcon_api": {
              "client_id": "PLEASE_FILL_IN",
              "client_secret": "PLEASE_FILL_IN",
              "cloud_region": "autodiscover"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Security,Monitoring
    containerImage: quay.io/crowdstrike/falcon-operator
    createdAt: "2021-07-30T10:00:00Z"
    description: Falcon Operator installs CrowdStrike Falcon Sensors on the cluster
    operatorframework.io/suggested-namespace: falcon-operator
    operators.operatorframework.io/builder: operator-sdk-v1.22.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/CrowdStrike/falcon-operator
    support: Community Only
  name: falcon-operator.v0.5.5
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: FalconContainer is the Schema for the falconcontainers API
      displayName: Falcon Container
      kind: FalconContainer
      name: falconcontainers.falcon.crowdstrike.com
      specDescriptors:
      - description: Falcon OAuth2 API Client ID
        displayName: Client ID
        path: falcon_api.client_id
      - description: Falcon OAuth2 API Client Secret
        displayName: Client Secret
        path: falcon_api.client_secret
      - description: Cloud Region defines CrowdStrike Falcon Cloud Region to which
          the operator will connect and register.
        displayName: CrowdStrike Falcon Cloud Region
        path: falcon_api.cloud_region
      - description: Falcon Customer ID (CID) Override (optional, default is derived
          from the API Key pair)
        displayName: Falcon Customer ID (CID)
        path: falcon_api.cid
      version: v1alpha1
    - description: FalconNodeSensor is the Schema for the falconnodesensors API
      displayName: Falcon Node Sensor
      kind: FalconNodeSensor
      name: falconnodesensors.falcon.crowdstrike.com
      specDescriptors:
      - description: Falcon Customer ID (CID)
        displayName: Falcon Customer ID (CID)
        path: falcon.cid
      - description: "FalconAPI configures connection from your local Falcon operator
          to CrowdStrike Falcon platform. \n When configured, it will pull the sensor
          from registry.crowdstrike.com and deploy the appropriate sensor to the cluster.
          \n If using the API is not desired, the sensor can be manually configured."
        displayName: Falcon Platform API Configuration
        path: falcon_api
      - description: Falcon OAuth2 API Client ID
        displayName: Client ID
        path: falcon_api.client_id
      - description: ImagePullSecrets is an optional list of references to secrets
          in the falcon-system namespace to use for pulling image from image_override
          location.
        displayName: Image Pull Secrets
        path: node.imagePullSecrets
      - displayName: Falcon Sensor Configuration
        path: falcon
      - description: Installation token that prevents unauthorized hosts from being
          accidentally or maliciously added to your customer ID (CID).
        displayName: Provisioning Token
        path: falcon.provisioning_token
      - description: Falcon OAuth2 API Client Secret
        displayName: Client Secret
        path: falcon_api.client_secret
      - description: Location of the Falcon Sensor image. Use only in cases when you
          mirror the original image to your repository/name:tag
        displayName: Image Override
        path: node.image_override
      - description: Disable the Falcon Sensor's use of a proxy.
        displayName: Disable Falcon Proxy
        path: falcon.apd
      - description: Cloud Region defines CrowdStrike Falcon Cloud Region to which
          the operator will connect and register.
        displayName: CrowdStrike Falcon Cloud Region
        path: falcon_api.cloud_region
      - description: Various configuration for DaemonSet Deployment
        displayName: DaemonSet Configuration
        path: node
      - displayName: Image Pull Policy
        path: node.imagePullPolicy
      - description: The application proxy host to use for Falcon sensor proxy configuration.
        displayName: Disable Falcon Proxy Host
        path: falcon.aph
      - description: Falcon Customer ID (CID) Override (optional, default is derived
          from the API Key pair)
        displayName: Falcon Customer ID (CID)
        path: falcon_api.cid
      - description: Specifies tolerations for custom taints. Defaults to allowing
          scheduling on all nodes.
        displayName: Tolerations
        path: node.tolerations
      - description: The application proxy port to use for Falcon sensor proxy configuration.
        displayName: Falcon Proxy Port
        path: falcon.app
      - description: Type of DaemonSet update. Can be "RollingUpdate" or "OnDelete".
          Default is RollingUpdate.
        displayName: DaemonSet Update Strategy
        path: node.updateStrategy
      - description: 'Sensor grouping tags are optional, user-defined identifiers
          that can used to group and filter hosts. Allowed characters: all alphanumerics,
          ''/'', ''-'', and ''_''.'
        displayName: Sensor Grouping Tags
        path: falcon.tags
      - description: Kills pod after a specificed amount of time (in seconds). Default
          is 30 seconds.
        displayName: Termination Grace Period
        path: node.terminationGracePeriod
      - description: Set sensor trace level.
        displayName: Trace Level
        path: falcon.trace
      - description: Disables the cleanup of the sensor through DaemonSet on the nodes.
          Disabling might have unintended consequences for certain operations such
          as sensor downgrading.
        displayName: Node Cleanup
        path: node.disableCleanup
      - description: Utilize default or Pay-As-You-Go billing.
        displayName: Billing
        path: falcon.billing
      - description: Add metadata to the DaemonSet Service Account for IAM roles.
        displayName: Service Account
        path: node.serviceAccount
      - description: Define annotations that will be passed down to the Service Account.
          This is useful for passing along AWS IAM Role or GCP Workload Identity.
        displayName: Annotations
        path: node.serviceAccount.annotations
      - displayName: Type
        path: node.updateStrategy.type
      version: v1alpha1
  description: |-
    The CrowdStrike Falcon Operator installs CrowdStrike Falcon Container Sensor or CrowdStrike Falcon Node Sensor on the cluster.
    The CrowdStrike Falcon Operator is an open source project and not a CrowdStrike product. As such, it carries no formal support, expressed, or implied.

    ## About the CrowdStrike Falcon Operator
    The CrowdStrike Falcon Operator deploys CrowdStrike Falcon Workload Protection to the cluster. The operator exposes 2 custom resources that allows you to deploy either the Falcon Container Sensor or Falcon Node Sensor.

    ## About Custom Resources

    | Custom Resource                   | Description                                                      |
    | :--------                         | :------------                                                    |
    | [FalconContainer](https://github.com/CrowdStrike/falcon-operator/tree/main/docs/container) | Manages installation of Falcon Container Sensor on the cluster   |
    | [FalconNodeSensor](https://github.com/CrowdStrike/falcon-operator/tree/main/docs/node)     | Manages installation of Falcon Linux Sensor on the cluster nodes |

    ## Getting Help
    If you encounter any issues while using the Falcon Operator, you can create an issue on our [Github repo](https://github.com/CrowdStrike/falcon-operator) for bugs, enhancements, or other requests.

    ## Contributing
    You can contribute by:

    * Raising any issues you find using Falcon Operator
    * Fixing issues by opening [Pull Requests](https://github.com/CrowdStrike/falcon-operator/pulls)
    * Improving documentation
    * Talking about the CrowdStrike Falcon Operator

    All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/CrowdStrike/falcon-operator/issues).

    ## Additional Resources
     - CrowdStrike Container Security: [Product Page](https://www.crowdstrike.com/products/cloud-security/falcon-cloud-workload-protection/container-security/)
     - So You Think Your Containers Are Secure? Four Steps to Ensure a Secure Container Deployment: [Blog Post](https://www.crowdstrike.com/blog/four-steps-to-ensure-a-secure-containter-deployment/)
     - Container Security With CrowdStrike: [Blog Post](https://www.crowdstrike.com/blog/tech-center/container-security/)
     - To learn more about Falcon Container Sensor for Linux: [Deployment Guide](https://falcon.crowdstrike.com/support/documentation/146/falcon-container-sensor-for-linux), [Release Notes](https://falcon.crowdstrike.com/support/news/release-notes-falcon-container-sensor-for-linux)
     - [Developer Documentation](https://github.com/CrowdStrike/falcon-operator/tree/main/docs/developer_guide.md)
  displayName: CrowdStrike Falcon Platform - Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - deletecollection
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/log
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - create
          - delete
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconcontainers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconcontainers/finalizers
          verbs:
          - update
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconcontainers/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconnodesensors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconnodesensors/finalizers
          verbs:
          - update
        - apiGroups:
          - falcon.crowdstrike.com
          resources:
          - falconnodesensors/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - create
          - get
          - list
          - use
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: falcon-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: falcon-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: falcon-operator
                - name: RELATED_IMAGE_NODE_SENSOR
                image: quay.io/crowdstrike/falcon-operator:v0.5.5
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 256Mi
                  requests:
                    cpu: 100m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  privileged: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: falcon-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: falcon-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - security
  - runtime-protection
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
  links:
  - name: Falcon Operator
    url: https://github.com/CrowdStrike/falcon-operator
  maintainers:
  - email: simon.lukasik@crowdstrike.com
    name: isimluk
  maturity: alpha
  minKubeVersion: 1.17.0
  provider:
    name: CrowdStrike
    url: https://crowdStrike.com
  relatedImages:
  - image: ""
    name: node-sensor
  version: 0.5.5
  replaces: falcon-operator.v0.5.4
