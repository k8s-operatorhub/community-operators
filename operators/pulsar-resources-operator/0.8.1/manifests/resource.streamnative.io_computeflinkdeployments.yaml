apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: computeflinkdeployments.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - streamnative
    - all
    kind: ComputeFlinkDeployment
    listKind: ComputeFlinkDeploymentList
    plural: computeflinkdeployments
    singular: computeflinkdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComputeFlinkDeployment is the Schema for the flinkdeployments
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ComputeFlinkDeploymentSpec defines the desired state of ComputeFlinkDeployment
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations to add to the deployment
                type: object
              apiServerRef:
                description: |-
                  APIServerRef is the reference to the StreamNativeCloudConnection.
                  If not specified, the APIServerRef from the referenced ComputeWorkspace will be used.
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              communityTemplate:
                description: CommunityTemplate is the community deployment template
                properties:
                  metadata:
                    description: Metadata defines the metadata for the deployment
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to add to the deployment
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to add to the deployment
                        type: object
                    type: object
                  spec:
                    description: Spec defines the deployment specification
                    properties:
                      entryClass:
                        description: EntryClass defines the entry class of the JAR
                        type: string
                      flinkConfiguration:
                        additionalProperties:
                          type: string
                        description: FlinkConfiguration defines the Flink configuration
                        type: object
                      image:
                        description: Image defines the Flink image
                        type: string
                      jarUri:
                        description: JarURI defines the URI of the JAR file
                        type: string
                      jobManagerPodTemplate:
                        description: JobManagerPodTemplate defines the job manager
                          pod template
                        properties:
                          metadata:
                            description: Standard object's metadata.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations of the resource
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels of the resource
                                type: object
                              name:
                                description: Name of the resource
                                type: string
                              namespace:
                                description: Namespace of the resource
                                type: string
                            type: object
                          spec:
                            description: Specification of the desired behavior of
                              the pod.
                            properties:
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: |-
                                            An empty preferred scheduling term matches all objects with implicit weight 0
                                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to an update), the system
                                          may or may not try to eventually evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: |-
                                                A null or empty node selector term matches no objects. The requirements of
                                                them are ANDed.
                                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the anti-affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the anti-affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the anti-affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              containers:
                                description: List of containers belonging to the pod.
                                items:
                                  description: Container defines a single application
                                    container
                                  properties:
                                    args:
                                      description: Arguments to the entrypoint.
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: Entrypoint array. Not executed
                                        within a shell.
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: Docker image name.
                                      type: string
                                    imagePullPolicy:
                                      description: Image pull policy.
                                      type: string
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL.
                                      type: string
                                    resources:
                                      description: Compute Resources required by this
                                        container.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    securityContext:
                                      description: Security context at container level
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                      type: string
                                  type: object
                                type: array
                              imagePullSecrets:
                                description: ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                items:
                                  description: |-
                                    LocalObjectReference contains enough information to let you locate the
                                    referenced object inside the same namespace.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: List of initialization containers belonging
                                  to the pod.
                                items:
                                  description: Container defines a single application
                                    container
                                  properties:
                                    args:
                                      description: Arguments to the entrypoint.
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: Entrypoint array. Not executed
                                        within a shell.
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: Docker image name.
                                      type: string
                                    imagePullPolicy:
                                      description: Image pull policy.
                                      type: string
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL.
                                      type: string
                                    resources:
                                      description: Compute Resources required by this
                                        container.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    securityContext:
                                      description: Security context at container level
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                      type: string
                                  type: object
                                type: array
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector is a selector which must
                                  be true for the pod to fit on a node.
                                type: object
                              securityContext:
                                description: SecurityContext holds pod-level security
                                  attributes and common container settings.
                                properties:
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod.
                                      Some volume types allow the Kubelet to change the ownership of that volume
                                      to be owned by the pod:


                                      1. The owning GID will be the FSGroup
                                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                      3. The permission bits are OR'd with rw-rw----


                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: |-
                                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                      before being exposed inside Pod. This field will only apply to
                                      volume types which support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types such as: secret, configmaps
                                      and emptydir.
                                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to all containers.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                      takes precedence for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:


                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: |-
                                      A list of groups applied to the first process run in each container, in addition
                                      to the container's primary GID, the fsGroup (if specified), and group memberships
                                      defined in the container image for the uid of the container process. If unspecified,
                                      no additional groups are added to any container. Note that group memberships
                                      defined in the container image for the uid of the container process are still effective,
                                      even if they are not included in this list.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: |-
                                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail to launch.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccountName:
                                description: ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod.
                                type: string
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: |-
                                    The pod this Toleration is attached to tolerates any taint that matches
                                    the triple <key,value,effect> using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: |-
                                        Effect indicates the taint effect to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: |-
                                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                      type: string
                                    operator:
                                      description: |-
                                        Operator represents a key's relationship to the value.
                                        Valid operators are Exists and Equal. Defaults to Equal.
                                        Exists is equivalent to wildcard for value, so that a pod can
                                        tolerate all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: |-
                                        TolerationSeconds represents the period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                                        negative values will be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: |-
                                        Value is the taint value the toleration matches to.
                                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                              volumes:
                                description: List of volumes that can be mounted by
                                  containers belonging to the pod.
                                items:
                                  description: Volume represents a named volume in
                                    a pod
                                  properties:
                                    configMap:
                                      description: ConfigMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items if unspecified, each key-value pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the ConfigMap,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: Volume's name.
                                      type: string
                                    secret:
                                      description: Secret represents a secret that
                                        should populate this volume.
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values
                                            for mode bits. Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items If unspecified, each key-value pair in the Data field of the referenced
                                            Secret will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the Secret,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: |-
                                            secretName is the name of the secret in the pod's namespace to use.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            type: object
                        type: object
                      mainArgs:
                        description: MainArgs defines the main arguments
                        type: string
                      taskManagerPodTemplate:
                        description: TaskManagerPodTemplate defines the task manager
                          pod template
                        properties:
                          metadata:
                            description: Standard object's metadata.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations of the resource
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels of the resource
                                type: object
                              name:
                                description: Name of the resource
                                type: string
                              namespace:
                                description: Namespace of the resource
                                type: string
                            type: object
                          spec:
                            description: Specification of the desired behavior of
                              the pod.
                            properties:
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: |-
                                            An empty preferred scheduling term matches all objects with implicit weight 0
                                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to an update), the system
                                          may or may not try to eventually evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: |-
                                                A null or empty node selector term matches no objects. The requirements of
                                                them are ANDed.
                                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the anti-affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the anti-affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the anti-affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              containers:
                                description: List of containers belonging to the pod.
                                items:
                                  description: Container defines a single application
                                    container
                                  properties:
                                    args:
                                      description: Arguments to the entrypoint.
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: Entrypoint array. Not executed
                                        within a shell.
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: Docker image name.
                                      type: string
                                    imagePullPolicy:
                                      description: Image pull policy.
                                      type: string
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL.
                                      type: string
                                    resources:
                                      description: Compute Resources required by this
                                        container.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    securityContext:
                                      description: Security context at container level
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                      type: string
                                  type: object
                                type: array
                              imagePullSecrets:
                                description: ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                items:
                                  description: |-
                                    LocalObjectReference contains enough information to let you locate the
                                    referenced object inside the same namespace.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: List of initialization containers belonging
                                  to the pod.
                                items:
                                  description: Container defines a single application
                                    container
                                  properties:
                                    args:
                                      description: Arguments to the entrypoint.
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: Entrypoint array. Not executed
                                        within a shell.
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: |-
                                                  Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: Docker image name.
                                      type: string
                                    imagePullPolicy:
                                      description: Image pull policy.
                                      type: string
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL.
                                      type: string
                                    resources:
                                      description: Compute Resources required by this
                                        container.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.


                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.


                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    securityContext:
                                      description: Security context at container level
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default is DefaultProcMount which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:


                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                      type: string
                                  type: object
                                type: array
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector is a selector which must
                                  be true for the pod to fit on a node.
                                type: object
                              securityContext:
                                description: SecurityContext holds pod-level security
                                  attributes and common container settings.
                                properties:
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod.
                                      Some volume types allow the Kubelet to change the ownership of that volume
                                      to be owned by the pod:


                                      1. The owning GID will be the FSGroup
                                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                      3. The permission bits are OR'd with rw-rw----


                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: |-
                                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                      before being exposed inside Pod. This field will only apply to
                                      volume types which support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types such as: secret, configmaps
                                      and emptydir.
                                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to all containers.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                      takes precedence for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:


                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: |-
                                      A list of groups applied to the first process run in each container, in addition
                                      to the container's primary GID, the fsGroup (if specified), and group memberships
                                      defined in the container image for the uid of the container process. If unspecified,
                                      no additional groups are added to any container. Note that group memberships
                                      defined in the container image for the uid of the container process are still effective,
                                      even if they are not included in this list.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: |-
                                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail to launch.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccountName:
                                description: ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod.
                                type: string
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: |-
                                    The pod this Toleration is attached to tolerates any taint that matches
                                    the triple <key,value,effect> using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: |-
                                        Effect indicates the taint effect to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: |-
                                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                      type: string
                                    operator:
                                      description: |-
                                        Operator represents a key's relationship to the value.
                                        Valid operators are Exists and Equal. Defaults to Equal.
                                        Exists is equivalent to wildcard for value, so that a pod can
                                        tolerate all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: |-
                                        TolerationSeconds represents the period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                                        negative values will be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: |-
                                        Value is the taint value the toleration matches to.
                                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                              volumes:
                                description: List of volumes that can be mounted by
                                  containers belonging to the pod.
                                items:
                                  description: Volume represents a named volume in
                                    a pod
                                  properties:
                                    configMap:
                                      description: ConfigMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items if unspecified, each key-value pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the ConfigMap,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: Volume's name.
                                      type: string
                                    secret:
                                      description: Secret represents a secret that
                                        should populate this volume.
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values
                                            for mode bits. Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items If unspecified, each key-value pair in the Data field of the referenced
                                            Secret will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the Secret,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: |-
                                            secretName is the name of the secret in the pod's namespace to use.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            type: object
                        type: object
                    required:
                    - image
                    - jarUri
                    type: object
                required:
                - spec
                type: object
              defaultPulsarCluster:
                description: DefaultPulsarCluster is the default pulsar cluster to
                  use
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to add to the deployment
                type: object
              template:
                description: Template is the VVP deployment template
                properties:
                  deployment:
                    description: Deployment defines the deployment configuration
                    properties:
                      spec:
                        description: Spec defines the deployment specification
                        properties:
                          deploymentTargetName:
                            description: DeploymentTargetName defines the target name
                              for the deployment
                            type: string
                          jobFailureExpirationTime:
                            description: JobFailureExpirationTime defines the expiration
                              time for job failures
                            type: string
                          maxJobCreationAttempts:
                            description: MaxJobCreationAttempts defines the maximum
                              number of job creation attempts
                            format: int32
                            minimum: 1
                            type: integer
                          maxSavepointCreationAttempts:
                            description: MaxSavepointCreationAttempts defines the
                              maximum number of savepoint creation attempts
                            format: int32
                            minimum: 1
                            type: integer
                          restoreStrategy:
                            description: RestoreStrategy defines the restore strategy
                              for the deployment
                            properties:
                              allowNonRestoredState:
                                type: boolean
                              kind:
                                type: string
                            type: object
                          sessionClusterName:
                            description: SessionClusterName defines the name of the
                              session cluster
                            type: string
                          state:
                            description: State of the deployment
                            enum:
                            - RUNNING
                            - SUSPENDED
                            - CANCELLED
                            type: string
                          template:
                            description: Template defines the deployment template
                            properties:
                              metadata:
                                description: Metadata of the deployment
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to add to the deployment
                                    type: object
                                type: object
                              spec:
                                description: Spec defines the deployment specification
                                properties:
                                  artifact:
                                    description: Artifact defines the deployment artifact
                                    properties:
                                      additionalDependencies:
                                        items:
                                          type: string
                                        type: array
                                      additionalPythonArchives:
                                        items:
                                          type: string
                                        type: array
                                      additionalPythonLibraries:
                                        items:
                                          type: string
                                        type: array
                                      artifactKind:
                                        enum:
                                        - PYTHON
                                        - SQLSCRIPT
                                        - JAR
                                        - UNKNOWN
                                        type: string
                                      entryClass:
                                        type: string
                                      entryModule:
                                        type: string
                                      flinkImageRegistry:
                                        type: string
                                      flinkImageRepository:
                                        type: string
                                      flinkImageTag:
                                        type: string
                                      flinkVersion:
                                        type: string
                                      jarUri:
                                        type: string
                                      kind:
                                        enum:
                                        - JAR
                                        - PYTHON
                                        - sqlscript
                                        type: string
                                      mainArgs:
                                        type: string
                                      pythonArtifactUri:
                                        type: string
                                      sqlScript:
                                        type: string
                                      uri:
                                        type: string
                                    type: object
                                  flinkConfiguration:
                                    additionalProperties:
                                      type: string
                                    description: FlinkConfiguration defines the Flink
                                      configuration
                                    type: object
                                  kubernetes:
                                    description: VvpDeploymentDetailsTemplateSpecKubernetesSpec
                                      defines the Kubernetes spec for the deployment
                                    properties:
                                      labels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  latestCheckpointFetchInterval:
                                    format: int32
                                    type: integer
                                  logging:
                                    description: Logging defines the logging configuration
                                      for the Flink deployment.
                                    properties:
                                      log4j2ConfigurationTemplate:
                                        type: string
                                      log4jLoggers:
                                        additionalProperties:
                                          type: string
                                        type: object
                                      loggingProfile:
                                        type: string
                                    type: object
                                  numberOfTaskManagers:
                                    format: int32
                                    type: integer
                                  parallelism:
                                    format: int32
                                    type: integer
                                  resources:
                                    description: VvpDeploymentKubernetesResources
                                      defines the Kubernetes resources for the VvpDeployment.
                                    properties:
                                      jobmanager:
                                        description: ResourceSpec defines the resource
                                          requirements for a component.
                                        properties:
                                          cpu:
                                            description: CPU represents the minimum
                                              amount of CPU required.
                                            type: string
                                          memory:
                                            description: Memory represents the minimum
                                              amount of memory required.
                                            type: string
                                        required:
                                        - cpu
                                        - memory
                                        type: object
                                      taskmanager:
                                        description: ResourceSpec defines the resource
                                          requirements for a component.
                                        properties:
                                          cpu:
                                            description: CPU represents the minimum
                                              amount of CPU required.
                                            type: string
                                          memory:
                                            description: Memory represents the minimum
                                              amount of memory required.
                                            type: string
                                        required:
                                        - cpu
                                        - memory
                                        type: object
                                    type: object
                                required:
                                - artifact
                                type: object
                            required:
                            - spec
                            type: object
                        required:
                        - template
                        type: object
                      userMetadata:
                        description: UserMetadata defines the metadata for the deployment
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations of the deployment
                            type: object
                          displayName:
                            description: DisplayName of the deployment
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels of the deployment
                            type: object
                          name:
                            description: Name of the deployment
                            type: string
                          namespace:
                            description: Namespace of the deployment
                            type: string
                        type: object
                    required:
                    - spec
                    - userMetadata
                    type: object
                  syncingMode:
                    description: SyncingMode defines how the deployment should be
                      synced
                    type: string
                required:
                - deployment
                type: object
              workspaceName:
                description: WorkspaceName is the reference to the workspace, and
                  is required
                type: string
            required:
            - workspaceName
            type: object
          status:
            description: ComputeFlinkDeploymentStatus defines the observed state of
              ComputeFlinkDeployment
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentStatus:
                description: DeploymentStatus represents the status from the API server
                type: object
                x-kubernetes-preserve-unknown-fields: true
              observedGeneration:
                description: ObservedGeneration is the last observed generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
