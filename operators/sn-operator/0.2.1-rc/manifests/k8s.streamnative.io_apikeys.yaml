apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apikeys.k8s.streamnative.io
spec:
  group: k8s.streamnative.io
  names:
    kind: ApiKeys
    listKind: ApiKeysList
    plural: apikeys
    singular: apikeys
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApiKeys is the Schema for the apikeys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApiKeysSpec defines the desired state of ApiKeys
            properties:
              brokerServiceUrl:
                description: brokerServiceUrl defines the service url of pulsar cluster.
                type: string
              config:
                description: Config is the configuration of the api keys svc
                properties:
                  authenticator:
                    description: Authenticator is the configuration of the api keys
                      authenticator
                    properties:
                      acceptedAudience:
                        description: AcceptedAudience Only tokens with aud to this
                          value would be authenticated to this service.
                        type: string
                      enabled:
                        description: Enabled is the enable of the authenticator.
                        type: boolean
                      issuers:
                        description: Issuers only tokens with such issuers will be
                          authenticated to this service.
                        items:
                          type: string
                        type: array
                      jwksFetchInterval:
                        description: JwksFetchInterval is the interval of the jwks
                          fetch, unit is second.
                        format: int64
                        type: integer
                    type: object
                  backend:
                    description: Backend is the configuration of the api keys backend
                    properties:
                      pulsarClient:
                        additionalProperties:
                          type: string
                        description: PulsarClient is the client of the pulsar.
                        type: object
                      pulsarTopic:
                        default: api_keys_api.example
                        description: PulsarTopic is the topic of the pulsar.
                        type: string
                      retryInterval:
                        description: RetryInterval is the retry interval of the backend,
                          unit is second.
                        format: int64
                        type: integer
                    type: object
                  server:
                    description: Server is the configuration of the api keys server
                    properties:
                      audience:
                        description: Audience aud the token issued for. Should be
                          the pulsar instance id.
                        type: string
                      claimsToCopy:
                        description: ClaimsToCopy These claims from the request token
                          would be copied to the issued tokens.
                        items:
                          type: string
                        type: array
                      currentKid:
                        description: CurrentKid is the current kid of the server.
                        type: string
                      logLevel:
                        description: LogLevel is the log level of the server.
                        enum:
                        - panic
                        - fatal
                        - error
                        - warn
                        - info
                        - debug
                        - trace
                        type: string
                      maxKeys:
                        default: 10000
                        description: MaxKeys is the max keys of the server.
                        type: integer
                      maxRevoked:
                        default: 10000
                        description: MaxRevoked is the max revoked of the server.
                        type: integer
                    type: object
                type: object
              hostname:
                description: The external host exposed by istio or ingress
                type: string
              image:
                description: Image is the container image used to run api keys pods.
                  default is docker.cloudsmith.io/streamnative/sn-api-keys-svc:latest
                type: string
              imagePullPolicy:
                description: Image pull policy, one of Always, Never, IfNotPresent,
                  default to Always.
                type: string
              istio:
                description: Istio defines Istio configuration of components
                properties:
                  authRules:
                    description: AuthRules define the AuthorzationPolicies
                    items:
                      properties:
                        fromSource:
                          items:
                            properties:
                              principals:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enabled:
                    description: Enabled defines whether to enable Istio
                    type: boolean
                  gateway:
                    description: Gateway defines the gateway configuration The operator
                      could either create a gateway automatically or use an existing
                      one
                    properties:
                      create:
                        description: Create defines whether to create a gateway
                        type: boolean
                      gateways:
                        description: Gateways defines a list of existing gateways
                        items:
                          type: string
                        nullable: true
                        type: array
                      selector:
                        additionalProperties:
                          type: string
                        description: Selector defines the selector for the gateway
                          to create
                        nullable: true
                        type: object
                      tls:
                        properties:
                          certSecretName:
                            description: 'SIMPLE mode: CertSecretName defines the
                              name of the secret that contains the certificate to
                              use in Istio Ingress Gateway. The value should be name
                              of the secret in the gateway workload namespace. PASSTHROUGH
                              mode: CertSecretName defines the name of the secret
                              that contains the certificate to use in Broker. The
                              value should be name of the secret name of the secret
                              in the Broker workload namespace. Required in both SIMPLE
                              and PASSTHROUGH mode.'
                            type: string
                          mode:
                            description: 'Optional: Indicates whether connections
                              to this port should be secured using TLS. The value
                              of this field determines how TLS is enforced.'
                            type: string
                          trustCertsEnabled:
                            description: TrustCertsEnabled defines whether to enable
                              trust store
                            type: boolean
                        type: object
                    type: object
                  mtls:
                    description: Mtls defines the mTLS configuration
                    properties:
                      mode:
                        default: strict
                        type: string
                    type: object
                  revision:
                    default: default
                    description: Revision defines which Istio control plane inject
                      sidecar
                    type: string
                  trustDomain:
                    description: TrustDomain corresponds to the trust root of a system
                      and is part of a workload identity
                    type: string
                type: object
              pod:
                description: Pod defines the policy for creating api key pod for the
                  cluster
                properties:
                  resources:
                    description: Resources is the resource requirement of api key
                      service
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                required:
                - resources
                type: object
              replicas:
                default: 2
                description: Replicas is the expected size of the api keys svc If
                  unspecified, defaults to 2.
                format: int32
                minimum: 0
                type: integer
            required:
            - brokerServiceUrl
            type: object
          status:
            description: ApiKeysStatus defines the observed state of ApiKeys
            properties:
              conditions:
                description: Conditions is an array of current observed conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this api keys service.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
