apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cryostats.operator.cryostat.io
spec:
  group: operator.cryostat.io
  names:
    kind: Cryostat
    listKind: CryostatList
    plural: cryostats
    singular: cryostat
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cryostat contains configuration options for controlling the Deployment of the Cryostat application and its related components. A Cryostat instance must be created to instruct the operator to deploy the Cryostat application.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CryostatSpec defines the desired state of Cryostat
            properties:
              enableCertManager:
                description: Use cert-manager to secure in-cluster communication between Cryostat components. Requires cert-manager to be installed.
                type: boolean
              eventTemplates:
                description: List of Flight Recorder Event Templates to preconfigure in Cryostat
                items:
                  description: A ConfigMap containing a .jfc template file
                  properties:
                    configMapName:
                      description: Name of config map in the local namespace
                      type: string
                    filename:
                      description: Filename within config map containing the template file
                      type: string
                  required:
                  - configMapName
                  - filename
                  type: object
                type: array
              minimal:
                description: Deploy a pared-down Cryostat instance with no Grafana dashboard or jfr-datasource and no web-client UI.
                type: boolean
              networkOptions:
                description: Options to control how the operator exposes the application over a network
                properties:
                  commandConfig:
                    description: Specifications for ingress that exposes the cryostat-command service (which serves the websocket command channel)
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to add to the ingress during its creation.
                        type: object
                      ingressSpec:
                        description: Configuration for an ingress object. Currently subpaths are not supported, so unique hosts must be specified (if a single external IP is being used) to differentiate between ingresses/services
                        properties:
                          defaultBackend:
                            description: DefaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller.
                            properties:
                              resource:
                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              service:
                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                    type: string
                                  port:
                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                        type: string
                                      number:
                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: IngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.
                            type: string
                          rules:
                            description: A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
                            items:
                              description: IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to    the IP in the Spec of the parent Ingress. 2. The `:` delimiter is not respected because ports are not allowed. \t  Currently the port of an Ingress is implicitly :80 for http and \t  :443 for https. Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue. \n Host can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If Host is precise, the request matches this rule if the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule."
                                  type: string
                                http:
                                  description: 'HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last ''/'' and before the first ''?'' or ''#''.'
                                  properties:
                                    paths:
                                      description: A collection of paths that map requests to backends.
                                      items:
                                        description: HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: Backend defines the referenced service endpoint to which the traffic will be forwarded to.
                                            properties:
                                              resource:
                                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              service:
                                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                                properties:
                                                  name:
                                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                                    type: string
                                                  port:
                                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                                        type: string
                                                      number:
                                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: Path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. When unspecified, all paths from incoming requests are matched.
                                            type: string
                                          pathType:
                                            description: 'PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by ''/''. Matching is   done on a path element by element basis. A path element refers is the   list of labels in the path split by the ''/'' separator. A request is a   match for path p if every p is an element-wise prefix of p of the   request path. Note that if the last element of the path is a substring   of the last element in request path, it is not a match (e.g. /foo/bar   matches /foo/bar/baz, but does not match /foo/barbaz). * ImplementationSpecific: Interpretation of the Path matching is up to   the IngressClass. Implementations can treat this as a separate PathType   or treat it identically to Prefix or Exact path types. Implementations are required to support all path types.'
                                            type: string
                                        required:
                                        - backend
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to add to the ingress during its creation. The label with key "app" is reserved for use by the operator.
                        type: object
                    type: object
                  coreConfig:
                    description: Specifications for ingress that exposes the cryostat service (which serves the cryostat web-client)
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to add to the ingress during its creation.
                        type: object
                      ingressSpec:
                        description: Configuration for an ingress object. Currently subpaths are not supported, so unique hosts must be specified (if a single external IP is being used) to differentiate between ingresses/services
                        properties:
                          defaultBackend:
                            description: DefaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller.
                            properties:
                              resource:
                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              service:
                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                    type: string
                                  port:
                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                        type: string
                                      number:
                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: IngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.
                            type: string
                          rules:
                            description: A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
                            items:
                              description: IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to    the IP in the Spec of the parent Ingress. 2. The `:` delimiter is not respected because ports are not allowed. \t  Currently the port of an Ingress is implicitly :80 for http and \t  :443 for https. Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue. \n Host can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If Host is precise, the request matches this rule if the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule."
                                  type: string
                                http:
                                  description: 'HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last ''/'' and before the first ''?'' or ''#''.'
                                  properties:
                                    paths:
                                      description: A collection of paths that map requests to backends.
                                      items:
                                        description: HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: Backend defines the referenced service endpoint to which the traffic will be forwarded to.
                                            properties:
                                              resource:
                                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              service:
                                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                                properties:
                                                  name:
                                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                                    type: string
                                                  port:
                                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                                        type: string
                                                      number:
                                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: Path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. When unspecified, all paths from incoming requests are matched.
                                            type: string
                                          pathType:
                                            description: 'PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by ''/''. Matching is   done on a path element by element basis. A path element refers is the   list of labels in the path split by the ''/'' separator. A request is a   match for path p if every p is an element-wise prefix of p of the   request path. Note that if the last element of the path is a substring   of the last element in request path, it is not a match (e.g. /foo/bar   matches /foo/bar/baz, but does not match /foo/barbaz). * ImplementationSpecific: Interpretation of the Path matching is up to   the IngressClass. Implementations can treat this as a separate PathType   or treat it identically to Prefix or Exact path types. Implementations are required to support all path types.'
                                            type: string
                                        required:
                                        - backend
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to add to the ingress during its creation. The label with key "app" is reserved for use by the operator.
                        type: object
                    type: object
                  grafanaConfig:
                    description: Specifications for ingress that exposes the cryostat-grafana service (which serves the grafana dashboard)
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to add to the ingress during its creation.
                        type: object
                      ingressSpec:
                        description: Configuration for an ingress object. Currently subpaths are not supported, so unique hosts must be specified (if a single external IP is being used) to differentiate between ingresses/services
                        properties:
                          defaultBackend:
                            description: DefaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller.
                            properties:
                              resource:
                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              service:
                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                properties:
                                  name:
                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                    type: string
                                  port:
                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                    properties:
                                      name:
                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                        type: string
                                      number:
                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                        format: int32
                                        type: integer
                                    type: object
                                required:
                                - name
                                type: object
                            type: object
                          ingressClassName:
                            description: IngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.
                            type: string
                          rules:
                            description: A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
                            items:
                              description: IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
                              properties:
                                host:
                                  description: "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to    the IP in the Spec of the parent Ingress. 2. The `:` delimiter is not respected because ports are not allowed. \t  Currently the port of an Ingress is implicitly :80 for http and \t  :443 for https. Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue. \n Host can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If Host is precise, the request matches this rule if the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule."
                                  type: string
                                http:
                                  description: 'HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last ''/'' and before the first ''?'' or ''#''.'
                                  properties:
                                    paths:
                                      description: A collection of paths that map requests to backends.
                                      items:
                                        description: HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.
                                        properties:
                                          backend:
                                            description: Backend defines the referenced service endpoint to which the traffic will be forwarded to.
                                            properties:
                                              resource:
                                                description: Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              service:
                                                description: Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".
                                                properties:
                                                  name:
                                                    description: Name is the referenced service. The service must exist in the same namespace as the Ingress object.
                                                    type: string
                                                  port:
                                                    description: Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                                                    properties:
                                                      name:
                                                        description: Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
                                                        type: string
                                                      number:
                                                        description: Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                            type: object
                                          path:
                                            description: Path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. When unspecified, all paths from incoming requests are matched.
                                            type: string
                                          pathType:
                                            description: 'PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by ''/''. Matching is   done on a path element by element basis. A path element refers is the   list of labels in the path split by the ''/'' separator. A request is a   match for path p if every p is an element-wise prefix of p of the   request path. Note that if the last element of the path is a substring   of the last element in request path, it is not a match (e.g. /foo/bar   matches /foo/bar/baz, but does not match /foo/barbaz). * ImplementationSpecific: Interpretation of the Path matching is up to   the IngressClass. Implementations can treat this as a separate PathType   or treat it identically to Prefix or Exact path types. Implementations are required to support all path types.'
                                            type: string
                                        required:
                                        - backend
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - paths
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          tls:
                            description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                secretName:
                                  description: SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to add to the ingress during its creation. The label with key "app" is reserved for use by the operator.
                        type: object
                    type: object
                type: object
              storageOptions:
                description: Options to customize the storage for Flight Recordings and Templates
                properties:
                  pvc:
                    description: Configuration for the Persistent Volume Claim to be created by the operator.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to add to the Persistent Volume Claim during its creation.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to add to the Persistent Volume Claim during its creation. The label with key "app" is reserved for use by the operator.
                        type: object
                      spec:
                        description: Spec for a Persistent Volume Claim, whose options will override the defaults used by the operator. Unless overriden, the PVC will be created with the default Storage Class and 500MiB of storage. Once the operator has created the PVC, changes to this field have no effect.
                        properties:
                          accessModes:
                            description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                            items:
                              type: string
                            type: array
                          dataSource:
                            description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                            type: object
                          selector:
                            description: A label query over volumes to consider for binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          storageClassName:
                            description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                            type: string
                          volumeMode:
                            description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                            type: string
                          volumeName:
                            description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                            type: string
                        type: object
                    type: object
                type: object
              trustedCertSecrets:
                description: List of TLS certificates to trust when connecting to targets
                items:
                  properties:
                    certificateKey:
                      description: Key within secret containing the certificate
                      type: string
                    secretName:
                      description: Name of secret in the local namespace
                      type: string
                  required:
                  - secretName
                  type: object
                type: array
            required:
            - minimal
            type: object
          status:
            description: CryostatStatus defines the observed state of Cryostat
            properties:
              applicationUrl:
                type: string
            required:
            - applicationUrl
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
