apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: scalingpolicies.applicationautoscaling.services.k8s.aws
spec:
  group: applicationautoscaling.services.k8s.aws
  names:
    kind: ScalingPolicy
    listKind: ScalingPolicyList
    plural: scalingpolicies
    singular: scalingpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScalingPolicy is the Schema for the ScalingPolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ScalingPolicySpec defines the desired state of ScalingPolicy.

              Represents a scaling policy to use with Application Auto Scaling.

              For more information about configuring scaling policies for a specific service,
              see Amazon Web Services services that you can use with Application Auto Scaling
              (https://docs.aws.amazon.com/autoscaling/application/userguide/integrated-services-list.html)
              in the Application Auto Scaling User Guide.
            properties:
              policyName:
                type: string
              policyType:
                type: string
              resourceID:
                type: string
              scalableDimension:
                type: string
              serviceNamespace:
                type: string
              stepScalingPolicyConfiguration:
                description: |-
                  Represents a step scaling policy configuration to use with Application Auto
                  Scaling.

                  For more information, see Step scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html)
                  in the Application Auto Scaling User Guide.
                properties:
                  adjustmentType:
                    type: string
                  cooldown:
                    format: int64
                    type: integer
                  metricAggregationType:
                    type: string
                  minAdjustmentMagnitude:
                    format: int64
                    type: integer
                  stepAdjustments:
                    items:
                      description: |-
                        Represents a step adjustment for a StepScalingPolicyConfiguration (https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html).
                        Describes an adjustment based on the difference between the value of the
                        aggregated CloudWatch metric and the breach threshold that you've defined
                        for the alarm.

                        For the following examples, suppose that you have an alarm with a breach
                        threshold of 50:

                           * To initiate the adjustment when the metric is greater than or equal
                           to 50 and less than 60, specify a lower bound of 0 and an upper bound
                           of 10.

                           * To initiate the adjustment when the metric is greater than 40 and less
                           than or equal to 50, specify a lower bound of -10 and an upper bound of
                           0.

                        There are a few rules for the step adjustments for your step policy:

                           * The ranges of your step adjustments can't overlap or have a gap.

                           * At most one step adjustment can have a null lower bound. If one step
                           adjustment has a negative lower bound, then there must be a step adjustment
                           with a null lower bound.

                           * At most one step adjustment can have a null upper bound. If one step
                           adjustment has a positive upper bound, then there must be a step adjustment
                           with a null upper bound.

                           * The upper and lower bound can't be null in the same step adjustment.
                      properties:
                        metricIntervalLowerBound:
                          type: number
                        metricIntervalUpperBound:
                          type: number
                        scalingAdjustment:
                          format: int64
                          type: integer
                      type: object
                    type: array
                type: object
              targetTrackingScalingPolicyConfiguration:
                description: |-
                  Represents a target tracking scaling policy configuration to use with Application
                  Auto Scaling.

                  For more information, see Target tracking scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html)
                  in the Application Auto Scaling User Guide.
                properties:
                  customizedMetricSpecification:
                    description: |-
                      Represents a CloudWatch metric of your choosing for a target tracking scaling
                      policy to use with Application Auto Scaling.

                      For information about the available metrics for a service, see Amazon Web
                      Services services that publish CloudWatch metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
                      in the Amazon CloudWatch User Guide.

                      To create your customized metric specification:

                         * Add values for each required parameter from CloudWatch. You can use
                         an existing metric, or a new metric that you create. To use your own metric,
                         you must first publish the metric to CloudWatch. For more information,
                         see Publish custom metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html)
                         in the Amazon CloudWatch User Guide.

                         * Choose a metric that changes proportionally with capacity. The value
                         of the metric should increase or decrease in inverse proportion to the
                         number of capacity units. That is, the value of the metric should decrease
                         when capacity increases, and increase when capacity decreases.

                      For more information about the CloudWatch terminology below, see Amazon CloudWatch
                      concepts (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html)
                      in the Amazon CloudWatch User Guide.
                    properties:
                      dimensions:
                        items:
                          description: Describes the dimension names and values associated
                            with a metric.
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      metricName:
                        type: string
                      namespace:
                        type: string
                      statistic:
                        type: string
                      unit:
                        type: string
                    type: object
                  disableScaleIn:
                    type: boolean
                  predefinedMetricSpecification:
                    description: |-
                      Represents a predefined metric for a target tracking scaling policy to use
                      with Application Auto Scaling.

                      For more information, Predefined metrics for target tracking scaling policies
                      (https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html#predefined-metrics)
                      in the Application Auto Scaling User Guide.
                    properties:
                      predefinedMetricType:
                        type: string
                      resourceLabel:
                        type: string
                    type: object
                  scaleInCooldown:
                    format: int64
                    type: integer
                  scaleOutCooldown:
                    format: int64
                    type: integer
                  targetValue:
                    type: number
                type: object
            required:
            - policyName
            - resourceID
            - scalableDimension
            - serviceNamespace
            type: object
          status:
            description: ScalingPolicyStatus defines the observed state of ScalingPolicy
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              alarms:
                description: The CloudWatch alarms created for the target tracking
                  scaling policy.
                items:
                  description: Represents a CloudWatch alarm associated with a scaling
                    policy.
                  properties:
                    alarmARN:
                      type: string
                    alarmName:
                      type: string
                  type: object
                type: array
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The Unix timestamp for when the scaling policy was created.
                format: date-time
                type: string
              lastModifiedTime:
                description: The Unix timestamp for when the scaling policy was created.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
