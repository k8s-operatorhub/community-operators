apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kogitoinfras.app.kiegroup.org
spec:
  group: app.kiegroup.org
  names:
    kind: KogitoInfra
    listKind: KogitoInfraList
    plural: kogitoinfras
    singular: kogitoinfra
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Third Party Infrastructure Resource
      jsonPath: .spec.resource.name
      name: Resource Name
      type: string
    - description: Kubernetes CR Kind
      jsonPath: .spec.resource.kind
      name: Kind
      type: string
    - description: Kubernetes CR API Version
      jsonPath: .spec.resource.apiVersion
      name: API Version
      type: string
    - description: General Status of this resource bind
      jsonPath: .status.condition.status
      name: Status
      type: string
    - description: Status reason
      jsonPath: .status.condition.reason
      name: Reason
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: "KogitoInfra is the resource to bind a Custom Resource (CR) not
          managed by Kogito Operator to a given deployed Kogito service. \n It holds
          the reference of a CR managed by another operator such as Strimzi. For example:
          one can create a Kafka CR via Strimzi and link this resource using KogitoInfra
          to a given Kogito service (custom or supporting, such as Data Index). \n
          Please refer to the Kogito Operator documentation (https://docs.jboss.org/kogito/release/latest/html_single/)
          for more information."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KogitoInfraSpec defines the desired state of KogitoInfra.
            properties:
              configMapEnvFromReferences:
                description: List of secret that should be mounted to the services
                  as envs
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              configMapVolumeReferences:
                description: List of configmap that should be added to the services
                  bound to this infra instance
                items:
                  description: VolumeReference represents the source of a volume to
                    mount.
                  properties:
                    fileMode:
                      description: Permission on the file mounted as volume on deployment.
                        Must be an octal value between 0000 and 0777 or a decimal
                        value between 0 and 511. YAML accepts both octal and decimal
                        values, JSON requires decimal values for mode bits. Defaults
                        to 0644.
                      format: int32
                      type: integer
                    mountPath:
                      description: Path within the container at which the volume should
                        be mounted.  Must not contain ':'. Default mount path is /home/kogito/config
                      type: string
                    name:
                      description: This must match the Name of a ConfigMap.
                      type: string
                    optional:
                      description: Specify whether the Secret or its keys must be
                        defined
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              envs:
                description: Environment variables to be added to the runtime container.
                  Keys must be a C_IDENTIFIER.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              infraProperties:
                additionalProperties:
                  type: string
                description: "Optional properties which would be needed to setup correct
                  runtime/service configuration, based on the resource type. \n For
                  example, MongoDB will require `username` and `database` as properties
                  for a correct setup, else it will fail"
                type: object
                x-kubernetes-map-type: atomic
              resource:
                description: 'Resource for the service. Example: Infinispan/Kafka/Keycloak.'
                properties:
                  apiVersion:
                    description: APIVersion describes the API Version of referred
                      Kubernetes resource for example, infinispan.org/v1
                    type: string
                  kind:
                    description: Kind describes the kind of referred Kubernetes resource
                      for example, Infinispan
                    type: string
                  name:
                    description: Name of referred resource.
                    type: string
                  namespace:
                    description: Namespace where referred resource exists.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              secretEnvFromReferences:
                description: List of secret that should be mounted to the services
                  as envs
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              secretVolumeReferences:
                description: List of secret that should be munted to the services
                  bound to this infra instance
                items:
                  description: VolumeReference represents the source of a volume to
                    mount.
                  properties:
                    fileMode:
                      description: Permission on the file mounted as volume on deployment.
                        Must be an octal value between 0000 and 0777 or a decimal
                        value between 0 and 511. YAML accepts both octal and decimal
                        values, JSON requires decimal values for mode bits. Defaults
                        to 0644.
                      format: int32
                      type: integer
                    mountPath:
                      description: Path within the container at which the volume should
                        be mounted.  Must not contain ':'. Default mount path is /home/kogito/config
                      type: string
                    name:
                      description: This must match the Name of a ConfigMap.
                      type: string
                    optional:
                      description: Specify whether the Secret or its keys must be
                        defined
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: KogitoInfraStatus defines the observed state of KogitoInfra.
            properties:
              conditions:
                description: History of conditions for the resource
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              configMapEnvFromReferences:
                description: List of Configmap that should be mounted to the services
                  as envs
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              configMapVolumeReferences:
                description: List of configmap that should be added as volume mount
                  to this infra instance
                items:
                  description: VolumeReference represents the source of a volume to
                    mount.
                  properties:
                    fileMode:
                      description: Permission on the file mounted as volume on deployment.
                        Must be an octal value between 0000 and 0777 or a decimal
                        value between 0 and 511. YAML accepts both octal and decimal
                        values, JSON requires decimal values for mode bits. Defaults
                        to 0644.
                      format: int32
                      type: integer
                    mountPath:
                      description: Path within the container at which the volume should
                        be mounted.  Must not contain ':'. Default mount path is /home/kogito/config
                      type: string
                    name:
                      description: This must match the Name of a ConfigMap.
                      type: string
                    optional:
                      description: Specify whether the Secret or its keys must be
                        defined
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              env:
                description: Environment variables to be added to the runtime container.
                  Keys must be a C_IDENTIFIER.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              secretEnvFromReferences:
                description: List of secret that should be mounted to the services
                  as envs
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              secretVolumeReferences:
                description: List of secret that should be added as volume mount to
                  this infra instance
                items:
                  description: VolumeReference represents the source of a volume to
                    mount.
                  properties:
                    fileMode:
                      description: Permission on the file mounted as volume on deployment.
                        Must be an octal value between 0000 and 0777 or a decimal
                        value between 0 and 511. YAML accepts both octal and decimal
                        values, JSON requires decimal values for mode bits. Defaults
                        to 0644.
                      format: int32
                      type: integer
                    mountPath:
                      description: Path within the container at which the volume should
                        be mounted.  Must not contain ':'. Default mount path is /home/kogito/config
                      type: string
                    name:
                      description: This must match the Name of a ConfigMap.
                      type: string
                    optional:
                      description: Specify whether the Secret or its keys must be
                        defined
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
