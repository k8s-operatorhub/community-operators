apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: pulsartopics.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - pulsar
    - pulsarres
    kind: PulsarTopic
    listKind: PulsarTopicList
    plural: pulsartopics
    shortNames:
    - ptopic
    singular: pulsartopic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: RESOURCE_NAME
      type: string
    - jsonPath: .metadata.generation
      name: GENERATION
      type: string
    - jsonPath: .status.observedGeneration
      name: OBSERVED_GENERATION
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=="PolicyReady")].status
      name: POLICY_READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PulsarTopic is the Schema for the pulsartopics API
          It represents a Pulsar topic in the Kubernetes cluster and includes both
          the desired state (Spec) and the observed state (Status) of the topic.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PulsarTopicSpec defines the desired state of PulsarTopic.
              It corresponds to the configuration options available in Pulsar's topic admin API.
            properties:
              autoSubscriptionCreation:
                description: |-
                  AutoSubscriptionCreation defines the auto subscription creation override for the topic.
                  This controls whether subscriptions can be created automatically.
                properties:
                  allowAutoSubscriptionCreation:
                    type: boolean
                type: object
              backlogQuotaLimitSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  BacklogQuotaLimitSize specifies the size limit for message backlog.
                  When the limit is reached, older messages will be removed or handled according to the retention policy.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              backlogQuotaLimitTime:
                description: |-
                  BacklogQuotaLimitTime specifies the time limit for message backlog.
                  Messages older than this limit will be removed or handled according to the retention policy.
                type: string
              backlogQuotaRetentionPolicy:
                description: |-
                  BacklogQuotaRetentionPolicy specifies the retention policy for messages when backlog quota is exceeded.
                  Valid values are "producer_request_hold", "producer_exception", or "consumer_backlog_eviction".
                type: string
              compactionThreshold:
                description: |-
                  CompactionThreshold specifies the size threshold in bytes for automatic topic compaction.
                  When the topic reaches this size, compaction will be triggered automatically.
                format: int64
                type: integer
              connectionRef:
                description: |-
                  ConnectionRef is the reference to the PulsarConnection resource
                  used to connect to the Pulsar cluster for this topic.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              deduplication:
                description: Deduplication controls whether to enable message deduplication
                  for the topic.
                type: boolean
              deduplicationSnapshotInterval:
                description: |-
                  DeduplicationSnapshotInterval specifies the interval for taking deduplication snapshots.
                  This affects the deduplication performance and storage overhead.
                format: int32
                type: integer
              delayedDelivery:
                description: |-
                  DelayedDelivery defines the delayed delivery policy for the topic.
                  This allows messages to be delivered with a delay.
                properties:
                  active:
                    description: Active determines whether delayed delivery is enabled
                      for the topic
                    type: boolean
                  tickTimeMillis:
                    description: TickTimeMillis specifies the tick time for delayed
                      message delivery in milliseconds
                    format: int64
                    type: integer
                type: object
              dispatchRate:
                description: |-
                  DispatchRate defines the message dispatch rate limiting policy for the topic.
                  This controls the rate at which messages are delivered to consumers.
                properties:
                  dispatchThrottlingRateInByte:
                    description: |-
                      DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed
                      -1 means unlimited
                    format: int64
                    type: integer
                  dispatchThrottlingRateInMsg:
                    description: |-
                      DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed
                      -1 means unlimited
                    format: int32
                    type: integer
                  ratePeriodInSecond:
                    default: 1
                    description: RatePeriodInSecond specifies the time window in seconds
                      for rate calculation
                    format: int32
                    minimum: 1
                    type: integer
                type: object
              geoReplicationRefs:
                description: |-
                  GeoReplicationRefs is a list of references to PulsarGeoReplication resources,
                  used to configure geo-replication for this topic across multiple Pulsar instances.
                  This is **ONLY** used when you are using PulsarGeoReplication for setting up geo-replication
                  between two Pulsar instances.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        TODO: Add other useful fields. apiVersion, kind, uid?
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              inactiveTopicPolicies:
                description: |-
                  InactiveTopicPolicies defines the inactive topic cleanup policy for the topic.
                  This controls how inactive topics are automatically cleaned up.
                properties:
                  deleteWhileInactive:
                    description: DeleteWhileInactive specifies whether to delete topics
                      while they are inactive
                    type: boolean
                  inactiveTopicDeleteMode:
                    description: |-
                      InactiveTopicDeleteMode specifies how inactive topics should be handled
                      Valid values: "delete_when_no_subscriptions", "delete_when_subscriptions_caught_up"
                    enum:
                    - delete_when_no_subscriptions
                    - delete_when_subscriptions_caught_up
                    type: string
                  maxInactiveDurationInSeconds:
                    description: MaxInactiveDurationInSeconds specifies how long a
                      topic can remain inactive before being deleted
                    format: int32
                    minimum: 1
                    type: integer
                type: object
              lifecyclePolicy:
                description: |-
                  LifecyclePolicy determines whether to keep or delete the Pulsar topic
                  when the Kubernetes resource is deleted.
                enum:
                - CleanUpAfterDeletion
                - KeepAfterDeletion
                type: string
              maxConsumers:
                description: MaxConsumers sets the maximum number of consumers allowed
                  on the topic.
                format: int32
                type: integer
              maxConsumersPerSubscription:
                description: MaxConsumersPerSubscription sets the maximum number of
                  consumers allowed per subscription.
                format: int32
                type: integer
              maxMessageSize:
                description: |-
                  MaxMessageSize specifies the maximum size of messages that can be published to the topic.
                  Messages larger than this size will be rejected.
                format: int32
                type: integer
              maxProducers:
                description: MaxProducers sets the maximum number of producers allowed
                  on the topic.
                format: int32
                type: integer
              maxSubscriptionsPerTopic:
                description: MaxSubscriptionsPerTopic sets the maximum number of subscriptions
                  allowed on the topic.
                format: int32
                type: integer
              maxUnAckedMessagesPerConsumer:
                description: |-
                  MaxUnAckedMessagesPerConsumer sets the maximum number of unacknowledged
                  messages allowed for a consumer before it's blocked from receiving more messages.
                format: int32
                type: integer
              maxUnAckedMessagesPerSubscription:
                description: |-
                  MaxUnAckedMessagesPerSubscription sets the maximum number of unacknowledged
                  messages allowed for a subscription before it's blocked from receiving more messages.
                format: int32
                type: integer
              messageTTL:
                description: |-
                  MessageTTL specifies the Time to Live (TTL) for messages on the topic.
                  Messages older than this TTL will be automatically marked as deleted.
                type: string
              name:
                description: Name is the topic name
                type: string
              offloadPolicies:
                description: |-
                  OffloadPolicies defines the offload policies for the topic.
                  This controls how data is offloaded to external storage systems.
                properties:
                  managedLedgerOffloadAutoTriggerSizeThresholdBytes:
                    format: int64
                    type: integer
                  managedLedgerOffloadDeletionLagInMillis:
                    format: int64
                    type: integer
                  managedLedgerOffloadDriver:
                    type: string
                  managedLedgerOffloadDriverMetadata:
                    additionalProperties:
                      type: string
                    type: object
                  managedLedgerOffloadMaxThreads:
                    type: integer
                  managedLedgerOffloadThresholdInBytes:
                    format: int64
                    type: integer
                  offloadersDirectory:
                    type: string
                  s3ManagedLedgerOffloadBucket:
                    type: string
                  s3ManagedLedgerOffloadCredentialId:
                    type: string
                  s3ManagedLedgerOffloadCredentialSecret:
                    type: string
                  s3ManagedLedgerOffloadRegion:
                    type: string
                  s3ManagedLedgerOffloadRole:
                    type: string
                  s3ManagedLedgerOffloadRoleSessionName:
                    type: string
                  s3ManagedLedgerOffloadServiceEndpoint:
                    type: string
                type: object
              partitions:
                default: 0
                description: |-
                  Partitions specifies the number of partitions for a partitioned topic.
                  Set to 0 for a non-partitioned topic.
                format: int32
                type: integer
              persistencePolicies:
                description: |-
                  PersistencePolicies defines the persistence configuration for the topic.
                  This controls how data is stored and replicated in BookKeeper.
                properties:
                  bookkeeperAckQuorum:
                    description: |-
                      BookkeeperAckQuorum specifies the number of replicas to wait for acknowledgment
                      Must be <= BookkeeperWriteQuorum
                    format: int32
                    minimum: 1
                    type: integer
                  bookkeeperEnsemble:
                    description: |-
                      BookkeeperEnsemble specifies the number of bookies to use for a ledger
                      This determines the replication factor for storing data
                    format: int32
                    minimum: 1
                    type: integer
                  bookkeeperWriteQuorum:
                    description: |-
                      BookkeeperWriteQuorum specifies the number of replicas to write for each entry
                      Must be <= BookkeeperEnsemble
                    format: int32
                    minimum: 1
                    type: integer
                  managedLedgerMaxMarkDeleteRate:
                    description: |-
                      ManagedLedgerMaxMarkDeleteRate specifies the maximum rate at which mark-delete operations can be performed
                      This helps control the rate of acknowledgment processing
                      Value should be a decimal number as string (e.g., "1.5", "2.0")
                    type: string
                type: object
              persistent:
                default: true
                description: |-
                  Persistent determines if the topic is persistent (true) or non-persistent (false).
                  Defaults to true if not specified.
                type: boolean
              properties:
                additionalProperties:
                  type: string
                description: |-
                  Properties is a map of user-defined properties associated with the topic.
                  These can be used to store additional metadata about the topic.
                type: object
              publishRate:
                description: |-
                  PublishRate defines the message publish rate limiting policy for the topic.
                  This controls the rate at which producers can publish messages.
                properties:
                  publishThrottlingRateInByte:
                    description: |-
                      PublishThrottlingRateInByte specifies the maximum number of bytes per second that producers can publish
                      -1 means unlimited
                    format: int64
                    type: integer
                  publishThrottlingRateInMsg:
                    description: |-
                      PublishThrottlingRateInMsg specifies the maximum number of messages per second that producers can publish
                      -1 means unlimited
                    format: int32
                    type: integer
                type: object
              replicationClusters:
                description: |-
                  ReplicationClusters is the list of clusters to which the topic is replicated
                  This is **ONLY** used if you are replicating clusters within the same Pulsar instance.
                  Please use `GeoReplicationRefs` instead if you are setting up geo-replication
                  between two Pulsar instances.
                items:
                  type: string
                type: array
              replicatorDispatchRate:
                description: |-
                  ReplicatorDispatchRate defines the message dispatch rate limiting policy for replicators.
                  This controls the rate at which messages are replicated to other clusters.
                properties:
                  dispatchThrottlingRateInByte:
                    description: |-
                      DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed
                      -1 means unlimited
                    format: int64
                    type: integer
                  dispatchThrottlingRateInMsg:
                    description: |-
                      DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed
                      -1 means unlimited
                    format: int32
                    type: integer
                  ratePeriodInSecond:
                    default: 1
                    description: RatePeriodInSecond specifies the time window in seconds
                      for rate calculation
                    format: int32
                    minimum: 1
                    type: integer
                type: object
              retentionSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  RetentionSize specifies the maximum size of backlog retained on the topic.
                  Should be set in conjunction with RetentionTime for effective retention policy.
                  Retention Quota must exceed configured backlog quota for topic.
                  Use "-1" for infinite retention size.
                  Valid formats: "1Gi", "500Mi", "100M", "-1"
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              retentionTime:
                description: |-
                  RetentionTime specifies the minimum time to retain messages on the topic.
                  Should be set in conjunction with RetentionSize for effective retention policy.
                  Retention Quota must exceed configured backlog quota for topic.
                  Use "-1" for infinite retention time.
                  Valid formats: "1h", "30m", "5s", "-1"
                type: string
              schemaCompatibilityStrategy:
                description: |-
                  SchemaCompatibilityStrategy defines the schema compatibility strategy for the topic.
                  This controls how schema evolution is handled.
                enum:
                - UNDEFINED
                - ALWAYS_INCOMPATIBLE
                - ALWAYS_COMPATIBLE
                - BACKWARD
                - FORWARD
                - FULL
                - BACKWARD_TRANSITIVE
                - FORWARD_TRANSITIVE
                - FULL_TRANSITIVE
                type: string
              schemaInfo:
                description: SchemaInfo defines the schema for the topic, if any.
                properties:
                  properties:
                    additionalProperties:
                      type: string
                    description: |-
                      Properties is a map of user-defined properties associated with the schema.
                      These can be used to store additional metadata about the schema.
                    type: object
                  schema:
                    description: |-
                      Schema contains the actual schema definition.
                      For AVRO and JSON schemas, this should be a JSON string of the schema definition.
                      For PROTOBUF schemas, this should be the protobuf definition string.
                      For BYTES or NONE schemas, this field can be empty.
                    type: string
                  type:
                    description: |-
                      Type determines how to interpret the schema data.
                      Valid values include: "AVRO", "JSON", "PROTOBUF", "PROTOBUF_NATIVE", "KEY_VALUE", "BYTES", or "NONE".
                      For KEY_VALUE schemas, use the format "KEY_VALUE(KeyType,ValueType)" where KeyType and ValueType
                      are one of the other schema types.
                    type: string
                type: object
              schemaValidationEnforced:
                description: |-
                  SchemaValidationEnforced determines whether schema validation is enforced for the topic.
                  When enabled, only messages that conform to the topic's schema will be accepted.
                type: boolean
              subscribeRate:
                description: |-
                  SubscribeRate defines the subscription rate limiting policy for the topic.
                  This controls the rate at which new subscriptions can be created.
                properties:
                  ratePeriodInSecond:
                    default: 30
                    description: RatePeriodInSecond specifies the time window in seconds
                      for rate calculation
                    format: int32
                    minimum: 1
                    type: integer
                  subscribeThrottlingRatePerConsumer:
                    description: |-
                      SubscribeThrottlingRatePerConsumer specifies the maximum subscribe rate per consumer
                      -1 means unlimited
                    format: int32
                    type: integer
                type: object
              subscriptionDispatchRate:
                description: |-
                  SubscriptionDispatchRate defines the message dispatch rate limiting policy for subscriptions.
                  This controls the rate at which messages are delivered to consumers per subscription.
                properties:
                  dispatchThrottlingRateInByte:
                    description: |-
                      DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed
                      -1 means unlimited
                    format: int64
                    type: integer
                  dispatchThrottlingRateInMsg:
                    description: |-
                      DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed
                      -1 means unlimited
                    format: int32
                    type: integer
                  ratePeriodInSecond:
                    default: 1
                    description: RatePeriodInSecond specifies the time window in seconds
                      for rate calculation
                    format: int32
                    minimum: 1
                    type: integer
                type: object
            required:
            - connectionRef
            - name
            type: object
          status:
            description: PulsarTopicStatus defines the observed state of PulsarTopic
            properties:
              conditions:
                description: |-
                  Conditions represent the latest available observations of the PulsarTopic's current state.
                  It follows the Kubernetes conventions for condition types and status.
                  The "Ready" condition type indicates the overall status of the topic.
                  The "PolicyReady" condition type indicates whether the topic policies have been successfully applied.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              geoReplicationEnabled:
                description: |-
                  GeoReplicationEnabled indicates whether geo-replication is enabled for this topic.
                  This is set to true when GeoReplicationRefs are configured in the spec and successfully applied.
                type: boolean
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this resource.
                  It corresponds to the metadata generation, which is updated on mutation by the API Server.
                  This field is used to track whether the controller has processed the latest changes.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
