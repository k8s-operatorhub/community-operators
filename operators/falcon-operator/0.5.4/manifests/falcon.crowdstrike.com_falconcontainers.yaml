apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: falconcontainers.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconContainer
    listKind: FalconContainerList
    plural: falconcontainers
    singular: falconcontainer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Phase of deployment
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Version of Falcon Container
      jsonPath: .status.version
      name: Version
      type: string
    - description: Last error message
      jsonPath: .status.errormsg
      name: Error
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconContainer is the Schema for the falconcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconContainerSpec defines the desired state of FalconContainer
            properties:
              falcon_api:
                description: FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform.
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              injector:
                description: Injector represents additional configuration for Falcon
                  Container Injector
                properties:
                  sa_annotations:
                    additionalProperties:
                      type: string
                    description: Define annotations that will be passed down to injector
                      service account. This is useful for passing along AWS IAM Role
                      or GCP Workload Identity.
                    type: object
                type: object
              installer_args:
                description: InstallerArgs are passed directly down to the Falcon
                  Container Installer. Users are advised to consult Falcon Container
                  documentation to learn about available command line arguments at
                  https://falcon.crowdstrike.com/documentation/146/falcon-container-sensor-for-linux
                items:
                  type: string
                type: array
              registry:
                description: Registry configures container image registry to which
                  the Falcon Container image will be pushed
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of the registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              version:
                description: Falcon Container Version. The latest version will be
                  selected when version specifier is missing.
                type: string
            required:
            - falcon_api
            type: object
          status:
            description: FalconContainerStatus defines the observed state of FalconContainer
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              errormsg:
                description: ErrorMessage informs user of the last notable error.
                  Users are welcomed to see the operator logs to understand the full
                  context.
                type: string
              phase:
                description: Phase or the status of the deployment
                type: string
              retry_attempt:
                description: 'RetryAttempt is number of previous failed attempts.
                  Valid values: 0-5'
                type: integer
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
