apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  creationTimestamp: null
  name: templatepolicies.config.nri
spec:
  group: config.nri
  names:
    kind: TemplatePolicy
    listKind: TemplatePolicyList
    plural: templatepolicies
    singular: templatepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TemplatePolicy represents the configuration for the template
          policy.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TemplatePolicySpec describes a template policy.
            properties:
              agent:
                default:
                  nodeResourceTopology: true
                description: AgentConfig provides access to configuration data for
                  the agent.
                properties:
                  nodeResourceTopology:
                    description: |-
                      NodeResourceTopology enables support for exporting resource usage using
                      NodeResourceTopology Custom Resources.
                    type: boolean
                  podResourceAPI:
                    description: PodResourceAPI enables support for querying kubelet
                      Pod Resource API.
                    type: boolean
                type: object
              availableResources:
                additionalProperties:
                  type: string
                type: object
              control:
                properties:
                  blockio:
                    description: |-
                      Config provides runtime configuration for class based block I/O
                      prioritization and throttling.
                    properties:
                      enable:
                        description: |-
                          Enable class based block I/O prioritization and throttling. When
                          enabled, policy implementations can adjust block I/O priority by
                          by assigning containers to block I/O priority classes.
                        type: boolean
                      usePodQoSAsDefaultClass:
                        description: |-
                          usePodQoSAsDefaultClass controls whether a container's Pod QoS
                          class is used as its block I/O class, if this is otherwise unset.
                        type: boolean
                    type: object
                  cpu:
                    properties:
                      classes:
                        additionalProperties:
                          properties:
                            energyPerformancePreference:
                              description: EnergyPerformancePreference for CPUs in
                                this class.
                              type: integer
                            freqGovernor:
                              description: CPUFreq Governor for this class.
                              type: string
                            maxFreq:
                              description: MaxFreq is the maximum frequency for this
                                class.
                              type: integer
                            minFreq:
                              description: MinFreq is the minimum frequency for this
                                class.
                              type: integer
                            uncoreMaxFreq:
                              description: UncoreMaxFreq is the maximum uncore frequency
                                for this class.
                              type: integer
                            uncoreMinFreq:
                              description: UncoreMinFreq is the minimum uncore frequency
                                for this class.
                              type: integer
                          type: object
                        type: object
                    required:
                    - classes
                    type: object
                  rdt:
                    description: |-
                      Config provides runtime configuration for class based cache allocation
                      and memory bandwidth control.
                    properties:
                      enable:
                        description: |-
                          Enable class based cache allocation and memory bandwidth control.
                          When enabled, policy implementations can adjust cache allocation
                          and memory bandwidth by assigning containers to RDT classes.
                        type: boolean
                      force:
                        description: Force indicates if the configuration should be
                          forced to goresctrl.
                        type: boolean
                      options:
                        description: Options container common goresctrl/rdt settings.
                        properties:
                          l2:
                            description: CatOptions contains the common settings for
                              cache allocation.
                            properties:
                              optional:
                                type: boolean
                            required:
                            - optional
                            type: object
                          l3:
                            description: CatOptions contains the common settings for
                              cache allocation.
                            properties:
                              optional:
                                type: boolean
                            required:
                            - optional
                            type: object
                          mb:
                            description: MbOptions contains the common settings for
                              memory bandwidth allocation.
                            properties:
                              optional:
                                type: boolean
                            required:
                            - optional
                            type: object
                        type: object
                      partitions:
                        additionalProperties:
                          description: PartitionConfig provides configuration for
                            a single cache partition.
                          properties:
                            classes:
                              additionalProperties:
                                description: ClassConfig provides configuration for
                                  a single named cache CLOS/class.
                                properties:
                                  l2Allocation:
                                    additionalProperties:
                                      description: "CacheIdCatConfig is the cache
                                        allocation configuration for one cache id.\nCode
                                        and Data represent an optional configuration
                                        for separate code and data\npaths and only
                                        have effect when RDT CDP (Code and Data Prioritization)
                                        is\nenabled in the system. Code and Data go
                                        in tandem so that both or neither\nmust be
                                        specified - only specifying the other is considered
                                        a configuration\nerror.\n\n\tTODO(klihub):
                                        Ideally we'd have a validation rule ensuring
                                        that either\n\tunified or code+data are set
                                        here. I tried that using a CEL-expression\n\tbut
                                        couldn't avoid hitting the complexity estimation
                                        limit (even with\n\textra MaxProperties limits
                                        thrown in). Maybe we'll be able to do that\n\teventually
                                        with https://github.com/kubernetes-sigs/controller-tools/pull/1212"
                                      properties:
                                        code:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                        data:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                        unified:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                      type: object
                                    description: CatConfig contains the L2 or L3 cache
                                      allocation configuration for one partition or
                                      class.
                                    type: object
                                  l3Allocation:
                                    additionalProperties:
                                      description: "CacheIdCatConfig is the cache
                                        allocation configuration for one cache id.\nCode
                                        and Data represent an optional configuration
                                        for separate code and data\npaths and only
                                        have effect when RDT CDP (Code and Data Prioritization)
                                        is\nenabled in the system. Code and Data go
                                        in tandem so that both or neither\nmust be
                                        specified - only specifying the other is considered
                                        a configuration\nerror.\n\n\tTODO(klihub):
                                        Ideally we'd have a validation rule ensuring
                                        that either\n\tunified or code+data are set
                                        here. I tried that using a CEL-expression\n\tbut
                                        couldn't avoid hitting the complexity estimation
                                        limit (even with\n\textra MaxProperties limits
                                        thrown in). Maybe we'll be able to do that\n\teventually
                                        with https://github.com/kubernetes-sigs/controller-tools/pull/1212"
                                      properties:
                                        code:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                        data:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                        unified:
                                          description: |-
                                            CacheProportion specifies a share of the available cache lines.
                                            Supported formats:

                                            - percentage, e.g. `50%`
                                            - percentage range, e.g. `50-60%`
                                            - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                            - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                          type: string
                                      type: object
                                    description: CatConfig contains the L2 or L3 cache
                                      allocation configuration for one partition or
                                      class.
                                    type: object
                                  mbAllocation:
                                    additionalProperties:
                                      description: |-
                                        CacheIdMbaConfig is the memory bandwidth configuration for one cache id.
                                        It's an array of at most two values, specifying separate values to be used
                                        for percentage based and MBps based memory bandwidth allocation. For
                                        example, `{"80%", "1000MBps"}` would allocate 80% if percentage based
                                        allocation is used by the Linux kernel, or 1000 MBps in case MBps based
                                        allocation is in use.
                                      items:
                                        description: |-
                                          MbProportion specifies a share of available memory bandwidth. It's an
                                          integer value followed by a unit. Two units are supported:

                                          - percentage, e.g. `80%`
                                          - MBps, e.g. `1000MBps`
                                        type: string
                                      type: array
                                    description: MbaConfig contains the memory bandwidth
                                      configuration for one partition or class.
                                    type: object
                                type: object
                              type: object
                            l2Allocation:
                              additionalProperties:
                                description: "CacheIdCatConfig is the cache allocation
                                  configuration for one cache id.\nCode and Data represent
                                  an optional configuration for separate code and
                                  data\npaths and only have effect when RDT CDP (Code
                                  and Data Prioritization) is\nenabled in the system.
                                  Code and Data go in tandem so that both or neither\nmust
                                  be specified - only specifying the other is considered
                                  a configuration\nerror.\n\n\tTODO(klihub): Ideally
                                  we'd have a validation rule ensuring that either\n\tunified
                                  or code+data are set here. I tried that using a
                                  CEL-expression\n\tbut couldn't avoid hitting the
                                  complexity estimation limit (even with\n\textra
                                  MaxProperties limits thrown in). Maybe we'll be
                                  able to do that\n\teventually with https://github.com/kubernetes-sigs/controller-tools/pull/1212"
                                properties:
                                  code:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                  data:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                  unified:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                type: object
                              description: CatConfig contains the L2 or L3 cache allocation
                                configuration for one partition or class.
                              type: object
                            l3Allocation:
                              additionalProperties:
                                description: "CacheIdCatConfig is the cache allocation
                                  configuration for one cache id.\nCode and Data represent
                                  an optional configuration for separate code and
                                  data\npaths and only have effect when RDT CDP (Code
                                  and Data Prioritization) is\nenabled in the system.
                                  Code and Data go in tandem so that both or neither\nmust
                                  be specified - only specifying the other is considered
                                  a configuration\nerror.\n\n\tTODO(klihub): Ideally
                                  we'd have a validation rule ensuring that either\n\tunified
                                  or code+data are set here. I tried that using a
                                  CEL-expression\n\tbut couldn't avoid hitting the
                                  complexity estimation limit (even with\n\textra
                                  MaxProperties limits thrown in). Maybe we'll be
                                  able to do that\n\teventually with https://github.com/kubernetes-sigs/controller-tools/pull/1212"
                                properties:
                                  code:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                  data:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                  unified:
                                    description: |-
                                      CacheProportion specifies a share of the available cache lines.
                                      Supported formats:

                                      - percentage, e.g. `50%`
                                      - percentage range, e.g. `50-60%`
                                      - bit numbers, e.g. `0-5`, `2,3`, must contain one contiguous block of bits set
                                      - hex bitmask, e.g. `0xff0`, must contain one contiguous block of bits set
                                    type: string
                                type: object
                              description: CatConfig contains the L2 or L3 cache allocation
                                configuration for one partition or class.
                              type: object
                            mbAllocation:
                              additionalProperties:
                                description: |-
                                  CacheIdMbaConfig is the memory bandwidth configuration for one cache id.
                                  It's an array of at most two values, specifying separate values to be used
                                  for percentage based and MBps based memory bandwidth allocation. For
                                  example, `{"80%", "1000MBps"}` would allocate 80% if percentage based
                                  allocation is used by the Linux kernel, or 1000 MBps in case MBps based
                                  allocation is in use.
                                items:
                                  description: |-
                                    MbProportion specifies a share of available memory bandwidth. It's an
                                    integer value followed by a unit. Two units are supported:

                                    - percentage, e.g. `80%`
                                    - MBps, e.g. `1000MBps`
                                  type: string
                                type: array
                              description: MbaConfig contains the memory bandwidth
                                configuration for one partition or class.
                              type: object
                          type: object
                        description: Partitions configure cache partitions.
                        type: object
                      usePodQoSAsDefaultClass:
                        description: |-
                          usePodQoSAsDefaultClass controls whether a container's Pod QoS
                          class is used as its RDT class, if this is otherwise unset.
                        type: boolean
                    type: object
                type: object
              instrumentation:
                description: Config provides runtime configuration for instrumentation.
                properties:
                  httpEndpoint:
                    description: |-
                      HTTPEndpoint is the address our HTTP server listens on. This endpoint is used
                      to expose Prometheus metrics among other things.
                    example: :8891
                    type: string
                  metrics:
                    default:
                      enabled:
                      - policy
                      - buildinfo
                    description: Metrics defines which metrics to collect.
                    properties:
                      enabled:
                        description: Enabled enables collection for metrics matched
                          by glob patterns.
                        example:
                        - '*'
                        items:
                          type: string
                        type: array
                      polled:
                        description: Polled forces polled collection for metrics matched
                          by glob patterns.
                        example:
                        - computationally-expensive-metrics
                        items:
                          type: string
                        type: array
                    type: object
                  prometheusExport:
                    description: PrometheusExport enables exporting /metrics for Prometheus.
                    type: boolean
                  reportPeriod:
                    default: 30s
                    description: ReportPeriod is the interval between collecting polled
                      metrics.
                    format: duration
                    type: string
                  samplingRatePerMillion:
                    description: SamplingRatePerMillion is the number of samples to
                      collect per million spans.
                    example: 100000
                    type: integer
                  tracingCollector:
                    description: |-
                      TracingCollector defines the external endpoint for tracing data collection.
                      Endpoints are specified as full URLs, or as plain URL schemes which then
                      imply scheme-specific defaults. The supported schemes and their default
                      URLs are:
                        - otlp-http, http: localhost:4318
                        - otlp-grpc, grpc: localhost:4317
                    example: otlp-http://localhost:4318
                    type: string
                type: object
              log:
                properties:
                  debug:
                    description: Debub turns on debug messages matching listed logger
                      sources.
                    items:
                      type: string
                    type: array
                  klog:
                    description: Klog configures the klog backend.
                    properties:
                      add_dir_header:
                        type: boolean
                      alsologtostderr:
                        type: boolean
                      log_backtrace_at:
                        type: string
                      log_dir:
                        type: string
                      log_file:
                        type: string
                      log_file_max_size:
                        format: int64
                        type: integer
                      logtostderr:
                        type: boolean
                      one_output:
                        type: boolean
                      skip_headers:
                        type: boolean
                      skip_log_headers:
                        type: boolean
                      stderrthreshold:
                        type: string
                      v:
                        type: integer
                      vmodule:
                        type: string
                    type: object
                  source:
                    description: Source controls whether messages are prefixed with
                      their logger source.
                    type: boolean
                type: object
              reservedResources:
                additionalProperties:
                  type: string
                type: object
            required:
            - reservedResources
            type: object
          status:
            description: ConfigStatus is the per-node status for a configuration resource.
            properties:
              nodes:
                additionalProperties:
                  description: NodeStatus is the configuration status for a single
                    node.
                  properties:
                    errors:
                      description: Error can provide further details of a configuration
                        error.
                      type: string
                    generation:
                      description: Generation is the generation the configuration
                        this status was set for.
                      format: int64
                      type: integer
                    status:
                      description: Status of activating the configuration on this
                        node.
                      enum:
                      - Success
                      - Failure
                      type: string
                    timestamp:
                      description: Timestamp of setting this status.
                      format: date-time
                      type: string
                  required:
                  - generation
                  - status
                  type: object
                type: object
            required:
            - nodes
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
