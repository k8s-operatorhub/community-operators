apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: userpools.cognitoidentityprovider.services.k8s.aws
spec:
  group: cognitoidentityprovider.services.k8s.aws
  names:
    kind: UserPool
    listKind: UserPoolList
    plural: userpools
    singular: userpool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserPool is the Schema for the UserPools API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserPoolSpec defines the desired state of UserPool.
            properties:
              accountRecoverySetting:
                description: |-
                  The available verified method a user can use to recover their password when
                  they call ForgotPassword. You can use this setting to define a preferred
                  method when a user has more than one method available. With this setting,
                  SMS doesn't qualify for a valid password recovery mechanism if the user also
                  has SMS multi-factor authentication (MFA) activated. In the absence of this
                  setting, Amazon Cognito uses the legacy behavior to determine the recovery
                  method where SMS is preferred through email.
                properties:
                  recoveryMechanisms:
                    items:
                      description: |-
                        A recovery option for a user. The AccountRecoverySettingType data type is
                        an array of this object. Each RecoveryOptionType has a priority property
                        that determines whether it is a primary or secondary option.

                        For example, if verified_email has a priority of 1 and verified_phone_number
                        has a priority of 2, your user pool sends account-recovery messages to a
                        verified email address but falls back to an SMS message if the user has a
                        verified phone number. The admin_only option prevents self-service account
                        recovery.

                        This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                        and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                        and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                      properties:
                        name:
                          type: string
                        priority:
                          format: int64
                          type: integer
                      type: object
                    type: array
                type: object
              adminCreateUserConfig:
                description: The configuration for AdminCreateUser requests.
                properties:
                  allowAdminCreateUserOnly:
                    type: boolean
                  inviteMessageTemplate:
                    description: The message template structure.
                    properties:
                      emailMessage:
                        type: string
                      emailSubject:
                        type: string
                      sMSMessage:
                        type: string
                    type: object
                  unusedAccountValidityDays:
                    format: int64
                    type: integer
                type: object
              aliasAttributes:
                description: |-
                  Attributes supported as an alias for this user pool. Possible values: phone_number,
                  email, or preferred_username.
                items:
                  type: string
                type: array
              autoVerifiedAttributes:
                description: 'The attributes to be auto-verified. Possible values:
                  email, phone_number.'
                items:
                  type: string
                type: array
              deletionProtection:
                description: |-
                  When active, DeletionProtection prevents accidental deletion of your userpool.
                  Before you can delete a user pool that you have protected against deletion,
                  youmust deactivate this feature.

                  When you try to delete a protected user pool in a DeleteUserPool API request,
                  Amazon Cognito returns an InvalidParameterException error. To delete a protected
                  user pool, send a new DeleteUserPool request after you deactivate deletion
                  protection in an UpdateUserPool API request.
                type: string
              deviceConfiguration:
                description: |-
                  The device-remembering configuration for a user pool. A null value indicates
                  that you have deactivated device remembering in your user pool.

                  When you provide a value for any DeviceConfiguration field, you activate
                  the Amazon Cognito device-remembering feature.
                properties:
                  challengeRequiredOnNewDevice:
                    type: boolean
                  deviceOnlyRememberedOnUserPrompt:
                    type: boolean
                type: object
              emailConfiguration:
                description: |-
                  The email configuration of your user pool. The email configuration type sets
                  your preferred sending method, Amazon Web Services Region, and sender for
                  messages from your user pool.
                properties:
                  configurationSet:
                    type: string
                  emailSendingAccount:
                    type: string
                  from:
                    type: string
                  replyToEmailAddress:
                    type: string
                  sourceARN:
                    type: string
                type: object
              emailVerificationMessage:
                description: |-
                  This parameter is no longer used. See VerificationMessageTemplateType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html).

                  Regex Pattern: `^[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{####\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*$`
                type: string
              emailVerificationSubject:
                description: |-
                  This parameter is no longer used. See VerificationMessageTemplateType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html).

                  Regex Pattern: `^[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+$`
                type: string
              lambdaConfig:
                description: |-
                  A collection of user pool Lambda triggers. Amazon Cognito invokes triggers
                  at several possible stages of authentication operations. Triggers can modify
                  the outcome of the operations that invoked them.
                properties:
                  createAuthChallenge:
                    type: string
                  customEmailSender:
                    description: |-
                      The properties of a custom email sender Lambda trigger.

                      This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                      and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                      and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                    properties:
                      lambdaARN:
                        type: string
                      lambdaVersion:
                        type: string
                    type: object
                  customMessage:
                    type: string
                  customSMSSender:
                    description: |-
                      The properties of a custom SMS sender Lambda trigger.

                      This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                      and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                      and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                    properties:
                      lambdaARN:
                        type: string
                      lambdaVersion:
                        type: string
                    type: object
                  defineAuthChallenge:
                    type: string
                  kmsKeyID:
                    type: string
                  postAuthentication:
                    type: string
                  postConfirmation:
                    type: string
                  preAuthentication:
                    type: string
                  preSignUp:
                    type: string
                  preTokenGeneration:
                    type: string
                  preTokenGenerationConfig:
                    description: |-
                      The properties of a pre token generation Lambda trigger.

                      This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                      and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                      and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                    properties:
                      lambdaARN:
                        type: string
                      lambdaVersion:
                        type: string
                    type: object
                  userMigration:
                    type: string
                  verifyAuthChallengeResponse:
                    type: string
                type: object
              mfaConfiguration:
                description: Specifies MFA configuration details.
                type: string
              name:
                description: |-
                  A string used to name the user pool.

                  Regex Pattern: `^[\w\s+=,.@-]+$`
                type: string
              policies:
                description: The policies associated with the new user pool.
                properties:
                  passwordPolicy:
                    description: |-
                      The password policy settings for a user pool, including complexity, history,
                      and length requirements.

                      This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                      and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                      and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                    properties:
                      minimumLength:
                        format: int64
                        type: integer
                      requireLowercase:
                        type: boolean
                      requireNumbers:
                        type: boolean
                      requireSymbols:
                        type: boolean
                      requireUppercase:
                        type: boolean
                      temporaryPasswordValidityDays:
                        format: int64
                        type: integer
                    type: object
                type: object
              schema:
                description: |-
                  An array of schema attributes for the new user pool. These attributes can
                  be standard or custom attributes.
                items:
                  description: |-
                    A list of the user attributes and their properties in your user pool. The
                    attribute schema contains standard attributes, custom attributes with a custom:
                    prefix, and developer attributes with a dev: prefix. For more information,
                    see User pool attributes (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html).

                    Developer-only dev: attributes are a legacy feature of user pools, and are
                    read-only to all app clients. You can create and update developer-only attributes
                    only with IAM-authenticated API operations. Use app client read/write permissions
                    instead.

                    This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                    and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                    and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                  properties:
                    attributeDataType:
                      type: string
                    developerOnlyAttribute:
                      type: boolean
                    mutable:
                      type: boolean
                    name:
                      type: string
                    numberAttributeConstraints:
                      description: |-
                        The minimum and maximum values of an attribute that is of the number type,
                        for example custom:age.

                        This data type is part of SchemaAttributeType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SchemaAttributeType.html).
                        It defines the length constraints on number-type attributes that you configure
                        in CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                        and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                        and displays the length constraints of all number-type attributes in the
                        response to DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
                      properties:
                        maxValue:
                          type: string
                        minValue:
                          type: string
                      type: object
                    required:
                      type: boolean
                    stringAttributeConstraints:
                      description: |-
                        The minimum and maximum length values of an attribute that is of the string
                        type, for example custom:department.

                        This data type is part of SchemaAttributeType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SchemaAttributeType.html).
                        It defines the length constraints on string-type attributes that you configure
                        in CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                        and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                        and displays the length constraints of all string-type attributes in the
                        response to DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
                      properties:
                        maxLength:
                          type: string
                        minLength:
                          type: string
                      type: object
                  type: object
                type: array
              smsAuthenticationMessage:
                description: |-
                  A string representing the SMS authentication message.

                  Regex Pattern: `\{####\}`
                type: string
              smsConfiguration:
                description: |-
                  The SMS configuration with the settings that your Amazon Cognito user pool
                  must use to send an SMS message from your Amazon Web Services account through
                  Amazon Simple Notification Service. To send SMS messages with Amazon SNS
                  in the Amazon Web Services Region that you want, the Amazon Cognito user
                  pool uses an Identity and Access Management (IAM) role in your Amazon Web
                  Services account.
                properties:
                  externalID:
                    type: string
                  snsCallerARN:
                    type: string
                  snsRegion:
                    type: string
                type: object
              smsVerificationMessage:
                description: |-
                  This parameter is no longer used. See VerificationMessageTemplateType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html).

                  Regex Pattern: `\{####\}`
                type: string
              tags:
                additionalProperties:
                  type: string
                description: The tags to assign to the user pool.
                type: object
              userAttributeUpdateSettings:
                description: |-
                  The settings for updates to user attributes. These settings include the property
                  AttributesRequireVerificationBeforeUpdate,a user-pool setting that tells
                  Amazon Cognito how to handle changes to the value of your users' email address
                  and phone number attributes. Formore information, see Verifying updates to
                  email addresses and phone numbers (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates).
                properties:
                  attributesRequireVerificationBeforeUpdate:
                    items:
                      type: string
                    type: array
                type: object
              userPoolAddOns:
                description: |-
                  User pool add-ons. Contains settings for activation of advanced security
                  features. To log user security information but take no action, set to AUDIT.
                  To configure automatic security responses to risky traffic to your user pool,
                  set to ENFORCED.

                  For more information, see Adding advanced security to a user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html).
                properties:
                  advancedSecurityMode:
                    type: string
                type: object
              userPoolTags:
                additionalProperties:
                  type: string
                description: |-
                  The tag keys and values to assign to the user pool. A tag is a label that
                  you can use to categorize and manage user pools in different ways, such as
                  by purpose, owner, environment, or other criteria.
                type: object
              usernameAttributes:
                description: |-
                  Specifies whether a user can use an email address or phone number as a username
                  when they sign up.
                items:
                  type: string
                type: array
              usernameConfiguration:
                description: |-
                  Case sensitivity on the username input for the selected sign-in option. When
                  case sensitivity is set to False (case insensitive), users can sign in with
                  any combination of capital and lowercase letters. For example, username,
                  USERNAME, or UserName, or for email, email@example.com or EMaiL@eXamplE.Com.
                  For most use cases, set case sensitivity to False (case insensitive) as a
                  best practice. When usernames and email addresses are case insensitive, Amazon
                  Cognito treats any variation in case as the same user, and prevents a case
                  variation from being assigned to the same attribute for a different user.

                  This configuration is immutable after you set it. For more information, see
                  UsernameConfigurationType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html).
                properties:
                  caseSensitive:
                    type: boolean
                type: object
              verificationMessageTemplate:
                description: |-
                  The template for the verification message that your user pool delivers to
                  users who set an email address or phone number attribute.

                  Set the email message type that corresponds to your DefaultEmailOption selection.
                  For CONFIRM_WITH_LINK, specify an EmailMessageByLink and leave EmailMessage
                  blank. For CONFIRM_WITH_CODE, specify an EmailMessage and leave EmailMessageByLink
                  blank. When you supply both parameters with either choice, Amazon Cognito
                  returns an error.
                properties:
                  defaultEmailOption:
                    type: string
                  emailMessage:
                    type: string
                  emailMessageByLink:
                    type: string
                  emailSubject:
                    type: string
                  emailSubjectByLink:
                    type: string
                  smsMessage:
                    type: string
                type: object
            required:
            - name
            type: object
          status:
            description: UserPoolStatus defines the observed state of UserPool
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationDate:
                description: |-
                  The date and time when the item was created. Amazon Cognito returns this
                  timestamp in UNIX epoch time format. Your SDK might render the output in
                  a human-readable format like ISO 8601 or a Java Date object.
                format: date-time
                type: string
              customDomain:
                description: |-
                  A custom domain name that you provide to Amazon Cognito. This parameter applies
                  only if you use a custom domain to host the sign-up and sign-in pages for
                  your application. An example of a custom domain name might be auth.example.com.

                  For more information about adding a custom domain to your user pool, see
                  Using Your Own Domain for the Hosted UI (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html).

                  Regex Pattern: `^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$`
                type: string
              domain:
                description: |-
                  The domain prefix, if the user pool has a domain associated with it.

                  Regex Pattern: `^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$`
                type: string
              emailConfigurationFailure:
                description: |-
                  Deprecated. Review error codes from API requests with EventSource:cognito-idp.amazonaws.com
                  in CloudTrail for information about problems with user pool email configuration.
                type: string
              estimatedNumberOfUsers:
                description: A number estimating the size of the user pool.
                format: int64
                type: integer
              id:
                description: |-
                  The ID of the user pool.

                  Regex Pattern: `^[\w-]+_[0-9a-zA-Z]+$`
                type: string
              lastModifiedDate:
                description: |-
                  The date and time when the item was modified. Amazon Cognito returns this
                  timestamp in UNIX epoch time format. Your SDK might render the output in
                  a human-readable format like ISO 8601 or a Java Date object.
                format: date-time
                type: string
              schemaAttributes:
                description: |-
                  A list of the user attributes and their properties in your user pool. The
                  attribute schema contains standard attributes, custom attributes with a custom:
                  prefix, and developer attributes with a dev: prefix. For more information,
                  see User pool attributes (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html).

                  Developer-only attributes are a legacy feature of user pools, and are read-only
                  to all app clients. You can create and update developer-only attributes only
                  with IAM-authenticated API operations. Use app client read/write permissions
                  instead.
                items:
                  description: |-
                    A list of the user attributes and their properties in your user pool. The
                    attribute schema contains standard attributes, custom attributes with a custom:
                    prefix, and developer attributes with a dev: prefix. For more information,
                    see User pool attributes (https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html).

                    Developer-only dev: attributes are a legacy feature of user pools, and are
                    read-only to all app clients. You can create and update developer-only attributes
                    only with IAM-authenticated API operations. Use app client read/write permissions
                    instead.

                    This data type is a request and response parameter of CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                    and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                    and a response parameter of DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html).
                  properties:
                    attributeDataType:
                      type: string
                    developerOnlyAttribute:
                      type: boolean
                    mutable:
                      type: boolean
                    name:
                      type: string
                    numberAttributeConstraints:
                      description: |-
                        The minimum and maximum values of an attribute that is of the number type,
                        for example custom:age.

                        This data type is part of SchemaAttributeType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SchemaAttributeType.html).
                        It defines the length constraints on number-type attributes that you configure
                        in CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                        and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                        and displays the length constraints of all number-type attributes in the
                        response to DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
                      properties:
                        maxValue:
                          type: string
                        minValue:
                          type: string
                      type: object
                    required:
                      type: boolean
                    stringAttributeConstraints:
                      description: |-
                        The minimum and maximum length values of an attribute that is of the string
                        type, for example custom:department.

                        This data type is part of SchemaAttributeType (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SchemaAttributeType.html).
                        It defines the length constraints on string-type attributes that you configure
                        in CreateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html)
                        and UpdateUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserPool.html),
                        and displays the length constraints of all string-type attributes in the
                        response to DescribeUserPool (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html)
                      properties:
                        maxLength:
                          type: string
                        minLength:
                          type: string
                      type: object
                  type: object
                type: array
              smsConfigurationFailure:
                description: |-
                  The reason why the SMS configuration can't send the messages to your users.

                  This message might include comma-separated values to describe why your SMS
                  configuration can't send messages to user pool end users.

                  InvalidSmsRoleAccessPolicyException

                  The Identity and Access Management role that Amazon Cognito uses to send
                  SMS messages isn't properly configured. For more information, see SmsConfigurationType
                  (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SmsConfigurationType.html).

                  SNSSandbox

                  The Amazon Web Services account is in the SNS SMS Sandbox and messages will
                  only reach verified end users. This parameter won’t get populated with
                  SNSSandbox if the user creating the user pool doesn’t have SNS permissions.
                  To learn how to move your Amazon Web Services account out of the sandbox,
                  see Moving out of the SMS sandbox (https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox-moving-to-production.html).
                type: string
              status:
                description: This parameter is no longer used.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
