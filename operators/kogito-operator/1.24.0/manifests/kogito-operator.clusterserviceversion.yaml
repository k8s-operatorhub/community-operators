apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "app.kiegroup.org/v1beta1",
          "kind": "KogitoBuild",
          "metadata": {
            "name": "process-quarkus-example"
          },
          "spec": {
            "gitSource": {
              "contextDir": "process-quarkus-example",
              "uri": "https://github.com/kiegroup/kogito-examples"
            },
            "type": "RemoteSource"
          }
        },
        {
          "apiVersion": "app.kiegroup.org/v1beta1",
          "kind": "KogitoInfra",
          "metadata": {
            "name": "kogito-infinispan-infra"
          },
          "spec": {
            "resource": {
              "apiVersion": "infinispan.org/v1",
              "kind": "Infinispan"
            }
          }
        },
        {
          "apiVersion": "app.kiegroup.org/v1beta1",
          "kind": "KogitoRuntime",
          "metadata": {
            "name": "process-quarkus-example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "apiVersion": "app.kiegroup.org/v1beta1",
          "kind": "KogitoSupportingService",
          "metadata": {
            "name": "kogito-jobs-service"
          },
          "spec": {
            "replicas": 1,
            "serviceType": "JobsService"
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery
    certified: "false"
    containerImage: quay.io/kiegroup/kogito-operator:1.24.0
    createdAt: "2019-08-22T13:12:22Z"
    description: Kogito Operator for deployment and management of Kogito services.
    operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/kiegroup/kogito-operator
    support: Red Hat
    tectonic-visibility: ocs
  labels:
    operator-kogitocloud: "true"
  name: kogito-operator.v1.24.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: KogitoBuild handles how to build a custom Kogito service in a Kubernetes/OpenShift
        cluster.
      displayName: Kogito Build
      kind: KogitoBuild
      name: kogitobuilds.app.kiegroup.org
      resources:
      - kind: BuildConfig
        name: A Openshift Build Config
        version: build.openshift.io/v1
      - kind: ImageStream
        name: A Openshift Image Stream
        version: image.openshift.io/v1
      specDescriptors:
      - description: "Artifact contains override information for building the Maven
          artifact (used for Local Source builds). \n You might want to override this
          information when building from decisions, rules or process files. In this
          scenario the Kogito Images will generate a new Java project for you underneath.
          This information will be used to generate this project."
        displayName: Final Artifact
        path: artifact
      - description: "Image used to build the Kogito Service from source (Local and
          Remote). \n If not defined the operator will use image provided by the Kogito
          Team based on the \"Runtime\" field. \n Example: \"quay.io/kiegroup/kogito-jvm-builder:latest\".
          \n On OpenShift an ImageStream will be created in the current namespace
          pointing to the given image."
        displayName: Build Image
        path: buildImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: DisableIncremental indicates that source to image builds should
          NOT be incremental. Defaults to false.
        displayName: Disable Incremental Builds
        path: disableIncremental
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to true will print the logs for downloading/uploading
          of maven dependencies. Defaults to false.
        displayName: Enable Maven Download Output
        path: enableMavenDownloadOutput
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Environment variables used during build time.
        displayName: Build Env Variables
        path: env
      - description: "Information about the git repository where the Kogito Service
          source code resides. \n Ignored for binary builds."
        displayName: Kogito Git Source
        path: gitSource
      - description: Context/subdirectory where the code is located, relative to the
          repo root.
        displayName: Git Context
        path: gitSource.contextDir
      - description: Branch to use in the Git repository.
        displayName: Git Reference
        path: gitSource.reference
      - description: Git URI for the s2i source.
        displayName: Git URI
        path: gitSource.uri
      - description: Maven Mirror URL to be used during source-to-image builds (Local
          and Remote) to considerably increase build speed.
        displayName: Maven Mirror URL
        path: mavenMirrorURL
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: "Native indicates if the Kogito Service built should be compiled
          to run on native mode when Runtime is Quarkus (Source to Image build only).
          \n For more information, see https://www.graalvm.org/docs/reference-manual/aot-compilation/."
        displayName: Native Build
        path: native
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources Requirements for builder pods.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'Which runtime Kogito service base image to use when building
          the Kogito service. If "BuildImage" is set, this value is ignored by the
          operator. Default value: quarkus.'
        displayName: Runtime
        path: runtime
      - description: "Image used as the base image for the final Kogito service. This
          image only has the required packages to run the application. \n For example:
          quarkus based services will have only JVM installed, native services only
          the packages required by the OS. \n If not defined the operator will use
          image provided by the Kogito Team based on the \"Runtime\" field. \n Example:
          \"quay.io/kiegroup/kogito-jvm-builder:latest\". \n On OpenShift an ImageStream
          will be created in the current namespace pointing to the given image."
        displayName: Base Image
        path: runtimeImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: "Set this field targeting the desired KogitoRuntime when this
          KogitoBuild instance has a different name than the KogitoRuntime. \n By
          default this KogitoBuild instance will generate a final image named after
          its own name (.metadata.name). \n On OpenShift, an ImageStream will be created
          causing a redeployment on any KogitoRuntime with the same name. On Kubernetes,
          the final image will be pushed to the KogitoRuntime deployment. \n If you
          have multiple KogitoBuild instances (let's say BinaryBuildType and Remote
          Source), you might need that both target the same KogitoRuntime. Both KogitoBuilds
          will update the same ImageStream or generate a final image to the same KogitoRuntime
          deployment."
        displayName: Target kogito Runtime
        path: targetKogitoRuntime
      - description: "Sets the type of build that this instance will handle: \n Binary
          - takes an uploaded binary file already compiled and creates a Kogito service
          image from it. \n RemoteSource - pulls the source code from a Git repository,
          builds the binary and then the final Kogito service image. \n LocalSource
          - takes an uploaded resource file such as DRL (rules), DMN (decision) or
          BPMN (process), builds the binary and the final Kogito service image."
        displayName: Build Type
        path: type
      statusDescriptors:
      - description: History of builds
        displayName: Builds
        path: builds
      - description: History of conditions for the resource
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - displayName: Latest Build
        path: latestBuild
      version: v1beta1
    - description: "KogitoInfra is the resource to bind a Custom Resource (CR) not
        managed by Kogito Operator to a given deployed Kogito service. \n It holds
        the reference of a CR managed by another operator such as Strimzi. For example:
        one can create a Kafka CR via Strimzi and link this resource using KogitoInfra
        to a given Kogito service (custom or supporting, such as Data Index). \n Please
        refer to the Kogito Operator documentation (https://docs.jboss.org/kogito/release/latest/html_single/)
        for more information."
      displayName: Kogito Infra
      kind: KogitoInfra
      name: kogitoinfras.app.kiegroup.org
      resources:
      - kind: Infinispan
        name: A Infinispan instance
        version: infinispan.org/v1
      - kind: Kafka
        name: A Kafka instance
        version: kafka.strimzi.io/v1beta2
      - kind: Keycloak
        name: A Keycloak Instance
        version: keycloak.org/v1alpha1
      - kind: Secret
        name: A Kubernetes Secret
        version: v1
      specDescriptors:
      - description: List of secret that should be mounted to the services as envs
        displayName: Config Map Env From References
        path: configMapEnvFromReferences
      - description: List of configmap that should be added to the services bound
          to this infra instance
        displayName: Config Map Volume References
        path: configMapVolumeReferences
      - description: Environment variables to be added to the runtime container. Keys
          must be a C_IDENTIFIER.
        displayName: Envs
        path: envs
      - description: "Optional properties which would be needed to setup correct runtime/service
          configuration, based on the resource type. \n For example, MongoDB will
          require `username` and `database` as properties for a correct setup, else
          it will fail"
        displayName: Infra Properties
        path: infraProperties
      - description: 'Resource for the service. Example: Infinispan/Kafka/Keycloak.'
        displayName: Resource
        path: resource
      - description: APIVersion describes the API Version of referred Kubernetes resource
          for example, infinispan.org/v1
        displayName: APIVersion
        path: resource.apiVersion
      - description: Kind describes the kind of referred Kubernetes resource for example,
          Infinispan
        displayName: Kind
        path: resource.kind
      - description: Name of referred resource.
        displayName: Name
        path: resource.name
      - description: Namespace where referred resource exists.
        displayName: Namespace
        path: resource.namespace
      - description: List of secret that should be mounted to the services as envs
        displayName: Secret Env From References
        path: secretEnvFromReferences
      - description: List of secret that should be munted to the services bound to
          this infra instance
        displayName: Secret Volume References
        path: secretVolumeReferences
      statusDescriptors:
      - description: History of conditions for the resource
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: List of Configmap that should be mounted to the services as envs
        displayName: Config Map Env From References
        path: configMapEnvFromReferences
      - description: List of configmap that should be added as volume mount to this
          infra instance
        displayName: Config Map Volume References
        path: configMapVolumeReferences
      - description: Environment variables to be added to the runtime container. Keys
          must be a C_IDENTIFIER.
        displayName: Envs
        path: env
      - description: List of secret that should be mounted to the services as envs
        displayName: Secret Env From References
        path: secretEnvFromReferences
      - description: List of secret that should be added as volume mount to this infra
          instance
        displayName: Secret Volume References
        path: secretVolumeReferences
      version: v1beta1
    - description: KogitoRuntime is a custom Kogito service.
      displayName: Kogito Runtime
      kind: KogitoRuntime
      name: kogitoruntimes.app.kiegroup.org
      resources:
      - kind: ConfigMap
        name: A Kubernetes ConfigMap
        version: v1
      - kind: Deployment
        name: A Kubernetes Deployment
        version: apps/v1
      - kind: Service
        name: A Kubernetes Service
        version: v1
      - kind: Route
        name: A Openshift Route
        version: route.openshift.io/v1
      specDescriptors:
      - description: 'Application properties that will be set to the service. For
          example ''MY_VAR: my_value''.'
        displayName: Configs
        path: config
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Additional labels to be added to the Deployment and Pods managed
          by the operator.
        displayName: Additional Deployment Labels
        path: deploymentLabels
      - description: "A flag indicating that routes are disabled. Usable just on OpenShift.
          \n If not provided, defaults to 'false'."
        displayName: DisableRoute
        path: disableRoute
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Annotates the pods managed by the operator with the required
          metadata for Istio to setup its sidecars, enabling the mesh. Defaults to
          false.
        displayName: Enable Istio
        path: enableIstio
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Environment variables to be added to the runtime container. Keys
          must be a C_IDENTIFIER.
        displayName: Env
        path: env
      - description: "Image definition for the service. Example: \"quay.io/kiegroup/kogito-service:latest\".
          \n On OpenShift an ImageStream will be created in the current namespace
          pointing to the given image."
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: "A flag indicating that image streams created by Kogito Operator
          should be configured to allow pulling from insecure registries. Usable just
          on OpenShift. \n Defaults to 'false'."
        displayName: Insecure Image Registry
        path: insecureImageRegistry
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: "Custom ConfigMap with application.properties file to be mounted
          for the Kogito service. \n The ConfigMap must be created in the same namespace.
          \n Use this property if you need custom properties to be mounted before
          the application deployment. \n If left empty, one will be created for you.
          Later it can be updated to add any custom properties to apply to the service."
        displayName: ConfigMap Properties
        path: propertiesConfigMap
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
      - description: "Number of replicas that the service will have deployed in the
          cluster. \n Default value: 1."
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Defined compute resource requirements for the deployed service.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: "The name of the runtime used, either Quarkus or SpringBoot.
          \n Default value: quarkus"
        displayName: Runtime
        path: runtime
      - description: Additional labels to be added to the Service managed by the operator.
        displayName: Additional Service Labels
        path: serviceLabels
      - description: "Custom JKS TrustStore that will be used by this service to make
          calls to TLS endpoints. \n It's expected that the secret has two keys: `keyStorePassword`
          containing the password for the KeyStore and `cacerts` containing the binary
          data of the given KeyStore."
        displayName: Trust Store Secret
        path: trustStoreSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Describes the CloudEvents that this instance can consume or produce
        displayName: Cloud Events
        path: cloudEvents
      - displayName: Consumes
        path: cloudEvents.consumes
      - displayName: Source
        path: cloudEvents.consumes[0].source
      - displayName: Type
        path: cloudEvents.consumes[0].type
      - displayName: Produces
        path: cloudEvents.produces
      - displayName: Source
        path: cloudEvents.produces[0].source
      - displayName: Type
        path: cloudEvents.produces[0].type
      - description: History of conditions for the resource
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: General conditions for the Kogito Service deployment.
        displayName: Deployment Conditions
        path: deploymentConditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: URI is where the service is exposed.
        displayName: External URI
        path: externalURI
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      - description: Image is the resolved image for this service.
        displayName: Image
        path: image
      - description: General conditions for the Kogito Service route.
        displayName: Route Conditions
        path: routeConditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
    - description: KogitoSupportingService deploys the Supporting service in the given
        namespace.
      displayName: Kogito Supporting Service
      kind: KogitoSupportingService
      name: kogitosupportingservices.app.kiegroup.org
      resources:
      - kind: Deployment
        name: A Kubernetes Deployment
        version: apps/v1
      - kind: Service
        name: A Kubernetes Service
        version: v1
      - kind: ImageStream
        name: A Openshift ImageStream
        version: image.openshift.io/v1
      - kind: Route
        name: A Openshift Route
        version: route.openshift.io/v1
      specDescriptors:
      - description: 'Application properties that will be set to the service. For
          example ''MY_VAR: my_value''.'
        displayName: Configs
        path: config
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Additional labels to be added to the Deployment and Pods managed
          by the operator.
        displayName: Additional Deployment Labels
        path: deploymentLabels
      - description: "A flag indicating that routes are disabled. Usable just on OpenShift.
          \n If not provided, defaults to 'false'."
        displayName: DisableRoute
        path: disableRoute
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Environment variables to be added to the runtime container. Keys
          must be a C_IDENTIFIER.
        displayName: Env
        path: env
      - description: "Image definition for the service. Example: \"quay.io/kiegroup/kogito-service:latest\".
          \n On OpenShift an ImageStream will be created in the current namespace
          pointing to the given image."
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: "A flag indicating that image streams created by Kogito Operator
          should be configured to allow pulling from insecure registries. Usable just
          on OpenShift. \n Defaults to 'false'."
        displayName: Insecure Image Registry
        path: insecureImageRegistry
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: "Custom ConfigMap with application.properties file to be mounted
          for the Kogito service. \n The ConfigMap must be created in the same namespace.
          \n Use this property if you need custom properties to be mounted before
          the application deployment. \n If left empty, one will be created for you.
          Later it can be updated to add any custom properties to apply to the service."
        displayName: ConfigMap Properties
        path: propertiesConfigMap
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
      - description: "Number of replicas that the service will have deployed in the
          cluster. \n Default value: 1."
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Defined compute resource requirements for the deployed service.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Additional labels to be added to the Service managed by the operator.
        displayName: Additional Service Labels
        path: serviceLabels
      - description: 'Defines the type for the supporting service, eg: DataIndex,
          JobsService Default value: JobsService'
        displayName: Service Type
        path: serviceType
      - description: "Custom JKS TrustStore that will be used by this service to make
          calls to TLS endpoints. \n It's expected that the secret has two keys: `keyStorePassword`
          containing the password for the KeyStore and `cacerts` containing the binary
          data of the given KeyStore."
        displayName: Trust Store Secret
        path: trustStoreSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Describes the CloudEvents that this instance can consume or produce
        displayName: Cloud Events
        path: cloudEvents
      - displayName: Consumes
        path: cloudEvents.consumes
      - displayName: Source
        path: cloudEvents.consumes[0].source
      - displayName: Type
        path: cloudEvents.consumes[0].type
      - displayName: Produces
        path: cloudEvents.produces
      - displayName: Source
        path: cloudEvents.produces[0].source
      - displayName: Type
        path: cloudEvents.produces[0].type
      - description: History of conditions for the resource
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: General conditions for the Kogito Service deployment.
        displayName: Deployment Conditions
        path: deploymentConditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: URI is where the service is exposed.
        displayName: External URI
        path: externalURI
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      - description: Image is the resolved image for this service.
        displayName: Image
        path: image
      - description: General conditions for the Kogito Service route.
        displayName: Route Conditions
        path: routeConditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1beta1
  description: |-
    Kogito Operator is designed to deploy Kogito services from source (only on OpenShift) and every piece of infrastructure that the services might need:

    * Creates two kinds of build configuration: Native or JVM. For more information refer to [Native build and deployment](https://docs.jboss.org/kogito/release/latest/html_single/#_native_build_and_deployment) section on our docs
    * Builds a Kogito service from a remote git repository and creates a custom image for the given runtime: Quarkus or Springboot. [See more](https://docs.jboss.org/kogito/release/latest/html_single/#con-kogito-operator-deployment-options_kogito-deploying-on-openshift).
    * Installs the [Kogito Data Index Service](https://docs.jboss.org/kogito/release/latest/html_single/#con-kogito-operator-with-data-index-service_kogito-deploying-on-openshift) to enable data index feature for Kogito services.
    * Installs the [Kogito Jobs Service](https://docs.jboss.org/kogito/release/latest/html_single/#con-kogito-operator-with-jobs-service_kogito-deploying-on-openshift) to enable jobs scheduling.

    For Kubernetes deployment of Kogito services, please refer to the section [Deploying Kogito services on Kubernetes](https://docs.jboss.org/kogito/release/latest/html_single/#proc-kogito-deploying-on-kubernetes_kogito-deploying-on-openshift) on our docs.

    **IMPORTANT!** Kogito Operator might need Infinispan Operator and Strimzi to implement persistence and messaging use cases if you do not provide these services beforehand.
    If you need these features to be automatically provisioned for you, bear in mind that those operators must be installed in the same namespace as the Kogito Operator.
  displayName: Kogito
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiPjxkZWZzPjxzdHlsZT4uY2xzLTF7ZmlsbDojMDg1ODcwO30uY2xzLTJ7ZmlsbDojZmZmO30uY2xzLTN7ZmlsbDojZjU4OTFmO30uY2xzLTR7ZmlsbDojOTdkNGU4O308L3N0eWxlPjwvZGVmcz48dGl0bGU+a29naXRvX2ljb25fcmdiX2NvbG9yX2RlZmF1bHQ8L3RpdGxlPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTkyOS4zNywzMC41QTcwLjMxLDcwLjMxLDAsMCwwLDg3Mi4xOSwxQzg2OC4wOSwxLDczOCwyMy42Nyw3MzgsMjMuNjdhNzAuMTUsNzAuMTUsMCwwLDAtNDguMSwzMy4yNUw2NjgsOTMuNzdjLTQ4LjQxLTQyLjQ2LTEwMS43NC02NC43LTE1Ni02NC43UzQwNC40Myw1MS4zMSwzNTYsOTMuNzdMMzM0LjExLDU2LjkyQTcwLjEzLDcwLjEzLDAsMCwwLDI4NiwyMy42N1MxNTUuOSwxLDE1MS44MSwxQTcwLjE5LDcwLjE5LDAsMCwwLDkwLjU0LDEwNS40MWw1MC4yNCw5MGExMTUuMTIsMTE1LjEyLDAsMCwwLDYwLjMsMTY5LjlMMTA4LjMsNzk0LjYsNTEyLDEwMjMsOTE1LjcsNzk0LjYsODIyLjkyLDM2NS4yN2ExMTUuMTIsMTE1LjEyLDAsMCwwLDYwLjMtMTY5LjlsNTAuMjQtOTBBNzAuNDksNzAuNDksMCwwLDAsOTI5LjM3LDMwLjVaIi8+PHBhdGggY2xhc3M9ImNscy0yIiBkPSJNNDgwLjA5LDI3OC4zbDguNTctLjA5TDUxMiwzMDEuNGwyMy4xOS0yMy4xOSw4LjYuMDhjNjMuMjMuNjMsMTIzLjgyLDMuMTQsMTc2LjI4LDcuMjctNDUuOTQtOTkuNDktMTIyLTE4Ni4zLTIwOC0xODYuM1MzNDkuOSwxODYuMDcsMzA0LDI4NS41N0MzNTYuMzksMjgxLjQ0LDQxNi45NCwyNzguOTIsNDgwLjA5LDI3OC4zWiIvPjxwYXRoIGNsYXNzPSJjbHMtMyIgZD0iTTQ0OC43LDY5Ni4xNmExMTYuMzYsMTE2LjM2LDAsMCwwLDEzMS4xNy41MSw1ODEuNDcsNTgxLjQ3LDAsMCwwLTEzMS4xNy0uNTFaIi8+PHBhdGggY2xhc3M9ImNscy00IiBkPSJNNjkxLjU3LDY3OS43M2ExODUuNDQsMTg1LjQ0LDAsMCwwLTE3LjI3LTQxLjQ3Yy0xLjIxLTIuMTItMi41LTQuMTgtMy43OC02LjI0LS43My0xLjE5LTEuNDMtMi40MS0yLjE5LTMuNTgtMS4yLTEuODUtMi40OS0zLjYzLTMuNzUtNS40My0uOTQtMS4zNC0xLjg1LTIuNzEtMi44Mi00LTEuMTItMS41MS0yLjMyLTMtMy40OC00LjQzcy0yLjM4LTMuMDgtMy42NC00LjU3Yy0xLTEuMTgtMi0yLjI5LTMtMy40NEExODYuNjksMTg2LjY5LDAsMCwwLDU3MC43Myw1NTNjLTE3LjI1LDExLjU2LTM5LDIyLjY5LTU4LjczLDIyLjY5UzQ3MC41Miw1NjQuNTcsNDUzLjI3LDU1M2ExODYuNTksMTg2LjU5LDAsMCwwLTgwLjkxLDUzLjZjLTEsMS4xMy0yLDIuMjItMywzLjM3LTEuMjYsMS41LTIuNDQsMy4wNi0zLjY2LDQuNnMtMi4zNCwyLjkxLTMuNDYsNC40MWMtMSwxLjMyLTEuODgsMi42OS0yLjgzLDQtMS4yNiwxLjc5LTIuNTQsMy41Ni0zLjczLDUuNC0uNzcsMS4xOS0xLjQ4LDIuNDItMi4yMiwzLjYyLTEuMjcsMi4wNS0yLjU2LDQuMS0zLjc1LDYuMjFhMTg1LDE4NSwwLDAsMC0xNy4yOCw0MS40N2MxMi44NC00LjQsMjYuNDMtOC4yMyw0MC40Ni0xMS42NywwLDAtLjA1LS4wOS0uMDctLjE0LDEuNDUtLjM1LDIuOTUtLjY2LDQuNDEtMWwxNi45NS00Ny4yNnY0My41MWMxLS4yLDItLjM0LDMtLjU0cTkuNDQtMS44NSwxOS4xNC0zLjM5Yy43OS0uMTMsMS41Ny0uMjcsMi4zNi0uMzlxMTEuNzQtMS44MywyMy44Ni0zLjJsMTMuODctNTUuNTF2NTQuMDljOC41Ni0uNzcsMTcuMjYtMS4zMSwyNi0xLjcybDMuOTItLjE3YzMuMjctLjEzLDYuNTMtLjI3LDkuODMtLjM1LDUuMjMtLjE0LDEwLjUtLjIzLDE1LjgtLjIzLDUuNDksMCwxMC45My4xLDE2LjM0LjI1LDIuOS4wOCw1Ljc5LjE5LDguNjcuMzFsNS43NS4yNmM4LjM2LjQxLDE2LjY2Ljk0LDI0LjgyLDEuNjhWNjAwLjEzbDEzLjg4LDU1LjUzYy41NS4wNiwxLjA5LjE1LDEuNjUuMjIsNy4zLjg1LDE0LjU0LDEuNzksMjEuNjUsMi44OSwyLjczLjQxLDUuMzguOTIsOC4wOCwxLjM3LDMuOTUuNjgsNy45LDEuMzUsMTEuNzgsMi4xLDEuNzIuMzIsMy41LjU4LDUuMi45MlY2MTkuNjVsMTcsNDcuMjljMS4yMy4yOSwyLjQuNjQsMy42Mi45NCwxLjg0LjQ1LDMuNzIuODYsNS41NCwxLjMybC0uMDYuMUM2NjguMTksNjcyLjQ0LDY4MC4yMSw2NzUuODMsNjkxLjU3LDY3OS43M1oiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik03MzcuNTcsMzI4LjA3bC0xMC0uODRjLTUxLjU2LTQuMzgtMTEyLjEzLTcuMS0xNzUuNjctNy45TDUxMiwzNTkuMjRsLTQwLjA5LTM5LjkxYy02My40OC44MS0xMjQsMy41My0xNzUuNTQsNy45bC0xMCwuODVDMjY4LjI3LDM3Ny44MiwyNTgsNDI4LjExLDI1OCw0NzAuMjRjMCw2OS45NCwyOC4zMSwxMDQuMTYsNzQsMTIwLjkzQTIyOS40OCwyMjkuNDgsMCwwLDEsNDE4LjI4LDUyM2EyMC40MywyMC40MywwLDAsMSwzMi4xNi0yNC4xNmMxNi4xMiwxNC45LDQ1Ljg5LDM1LjkxLDYxLjU2LDM1LjkxczQ1Ljk0LTIxLjQzLDYxLjU1LTM1LjkxQTIwLjQzLDIwLjQzLDAsMCwxLDYwNS43Miw1MjMsMjI5LjY1LDIyOS42NSwwLDAsMSw2OTIsNTkxLjE3YzQ1Ljc0LTE2Ljc3LDc0LTUxLDc0LTEyMC45M0M3NjYsNDI4LjExLDc1NS43MywzNzcuODIsNzM3LjU3LDMyOC4wN1pNNDAzLjUsNDYyLjc3Yy0yOS4zMS42Ni01Ni0xNi4yLTc0LjgyLTQzLjUxLDE3LjUzLTI4LjEzLDQzLjQ3LTQ2LjE3LDcyLjc4LTQ2LjgzczU2LDE2LjE5LDc0LjgyLDQzLjUxQzQ1OC43NSw0NDQuMDcsNDMyLjgxLDQ2Mi4xMSw0MDMuNSw0NjIuNzdabTI5MS44Mi0xMy4xOC0zMiwzMi0zMi0zMi0zMiwzMi0zMi0zMiwzMi0zMi0zMi0zMiwzMi0zMiwzMiwzMiwzMi0zMiwzMiwzMi0zMiwzMloiLz48cGF0aCBjbGFzcz0iY2xzLTQiIGQ9Ik02MDguMjMsNzk3bDE5LjkxLDc5LjY3LDc2LjMyLTQzLjE4Vjc0NWwxOS4zOCw3Ny41MywxMTIuMzUtNjMuNTZMNzkxLjUyLDU1Mi4yN2MtMTQuOTQsMzMuOTItNDAuNjgsNTguNzctNzcuMiw3NC4xMkEyMjUuMTQsMjI1LjE0LDAsMCwxLDczMSw2NjguNzFhNDAuOTQsNDAuOTQsMCwwLDEtNTIuNzIsNDkuNzUsNDM4LjI3LDQzOC4yNywwLDAsMC00Ni43My0xMywxNTcuMDcsMTU3LjA3LDAsMCwxLTIzNC42LTEsNDQzLjg2LDQ0My44NiwwLDAsMC01MS4yMywxNEE0MC45NCw0MC45NCwwLDAsMSwyOTMsNjY4LjcxYTIyNC44NiwyMjQuODYsMCwwLDEsMTYuNjktNDIuMzNjLTM2LjUzLTE1LjM0LTYyLjI3LTQwLjItNzcuMjEtNzQuMTFMMTg3LjgxLDc1OC45NCwzMDAuMTYsODIyLjUsMzE5LjU0LDc0NXY4OC41bDc2LjMyLDQzLjE4TDQxNS43Nyw3OTd2OTAuOTNMNTEyLDk0Mi4zNmw5Ni4yMy01NC40NVoiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0yNTMuOTEsMjk4LjQzYTU4MC4wNiw1ODAuMDYsMCwwLDEsNDMuNTUtODcuNjRxMTEuOTMtMTkuNTEsMjQuNjktMzYuNjRMMjczLjc4LDkyLjc5bC0xMjItMjEuNiw3OC43NiwxNDEsLjA2LjA3YTQ0LjgxLDQ0LjgxLDAsMSwwLDIzLjI3LDg2LjEzWiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTc5My4zNSwyMTIuM2wuMDctLjA3LDc4Ljc2LTE0MS0xMjIsMjEuNi00OC4zNyw4MS4zNnExMi43MiwxNy4xNywyNC42OSwzNi42NGE1ODAuMDYsNTgwLjA2LDAsMCwxLDQzLjU1LDg3LjY0LDQ0LjgsNDQuOCwwLDEsMCwyMy4yNi04Ni4xM1oiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitobuilds
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitobuilds/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitobuilds/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoinfras
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoinfras/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoinfras/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoruntimes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoruntimes/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitoruntimes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitosupportingservices
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitosupportingservices/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - app.kiegroup.org
          resources:
          - kogitosupportingservices/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - replicasets
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - build.openshift.io
          resources:
          - buildconfigs
          - builds
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - events
          - pods
          - secrets
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - events
          - pods
          - secrets
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - eventing.knative.dev
          resources:
          - brokers
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - eventing.knative.dev
          resources:
          - triggers
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreamtags
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - infinispan.org
          resources:
          - infinispans
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - integreatly.org
          resources:
          - grafanadashboards
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - kafka.strimzi.io
          resources:
          - kafkas
          - kafkatopics
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - keycloak.org
          resources:
          - keycloaks
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - mongodbcommunity.mongodb.com
          resources:
          - mongodbcommunity
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - sources.knative.dev
          resources:
          - sinkbindings
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: kogito-operator-controller-manager
      deployments:
      - name: kogito-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: BUILDER_IMAGE
                  value: kogito-builder
                - name: RUNTIME_IMAGE
                  value: kogito-runtime-jvm
                - name: RUNTIME_NATIVE_IMAGE
                  value: kogito-runtime-native
                - name: IMAGE_REGISTRY
                  value: quay.io/kiegroup
                image: quay.io/kiegroup/kogito-operator:1.24.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 200Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: kogito-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: kogito-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - cloud
  - kogito
  - quarkus
  - springboot
  - operator
  - native
  - automation
  labels:
    alm-owner-kogito: kogito-operator
    operated-by: kogito-operator.1.24.0
  links:
  - name: Product Page
    url: https://kogito.kie.org/
  - name: Documentation
    url: https://github.com/kiegroup/kogito-operator/blob/main/README.md
  - name: Source
    url: https://github.com/kiegroup/kogito-operator/
  maintainers:
  - email: bsig-cloud@redhat.com
    name: Red Hat
  maturity: beta
  provider:
    name: Red Hat
  replaces: kogito-operator.v1.23.0
  version: 1.24.0
