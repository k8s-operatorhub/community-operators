apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: restapis.apigateway.services.k8s.aws
spec:
  group: apigateway.services.k8s.aws
  names:
    kind: RestAPI
    listKind: RestAPIList
    plural: restapis
    singular: restapi
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RestAPI is the Schema for the RestAPIS API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              RestApiSpec defines the desired state of RestApi.


              Represents a REST API.
            properties:
              apiKeySource:
                description: |-
                  The source of the API key for metering requests according to a usage plan.
                  Valid values are: HEADER to read the API key from the X-API-Key header of
                  a request. AUTHORIZER to read the API key from the UsageIdentifierKey from
                  a custom authorizer.
                type: string
              binaryMediaTypes:
                description: |-
                  The list of binary media types supported by the RestApi. By default, the
                  RestApi supports only UTF-8-encoded text payloads.
                items:
                  type: string
                type: array
              cloneFrom:
                description: The ID of the RestApi that you want to clone from.
                type: string
              description:
                description: The description of the RestApi.
                type: string
              disableExecuteAPIEndpoint:
                description: |-
                  Specifies whether clients can invoke your API by using the default execute-api
                  endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com
                  endpoint. To require that clients use a custom domain name to invoke your
                  API, disable the default endpoint
                type: boolean
              endpointConfiguration:
                description: |-
                  The endpoint configuration of this RestApi showing the endpoint types of
                  the API.
                properties:
                  types:
                    items:
                      type: string
                    type: array
                  vpcEndpointIDs:
                    items:
                      type: string
                    type: array
                  vpcEndpointRefs:
                    description: Reference field for VPCEndpointIDs
                    items:
                      description: "AWSResourceReferenceWrapper provides a wrapper
                        around *AWSResourceReference\ntype to provide more user friendly
                        syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                        \ name: my-api"
                      properties:
                        from:
                          description: |-
                            AWSResourceReference provides all the values necessary to reference another
                            k8s resource for finding the identifier(Id/ARN/Name)
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              minimumCompressionSize:
                description: |-
                  A nullable integer that is used to enable compression (with non-negative
                  between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with
                  a null value) on an API. When compression is enabled, compression or decompression
                  is not applied on the payload if the payload size is smaller than this value.
                  Setting it to zero allows compression for any payload size.
                format: int64
                type: integer
              name:
                description: The name of the RestApi.
                type: string
              policy:
                description: |-
                  A stringified JSON policy document that applies to this RestApi regardless
                  of the caller and Method configuration.
                type: string
              tags:
                additionalProperties:
                  type: string
                description: |-
                  The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
                  The tag key can be up to 128 characters and must not start with aws:. The
                  tag value can be up to 256 characters.
                type: object
              version:
                description: A version identifier for the API.
                type: string
            required:
            - name
            type: object
          status:
            description: RestAPIStatus defines the observed state of RestAPI
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdDate:
                description: The timestamp when the API was created.
                format: date-time
                type: string
              id:
                description: |-
                  The API's identifier. This identifier is unique across all of your APIs in
                  API Gateway.
                type: string
              rootResourceID:
                description: The API's root resource ID.
                type: string
              warnings:
                description: |-
                  The warning messages reported when failonwarnings is turned on during API
                  import.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
