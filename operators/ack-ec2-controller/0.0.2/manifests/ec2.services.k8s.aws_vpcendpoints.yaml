apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: vpcendpoints.ec2.services.k8s.aws
spec:
  group: ec2.services.k8s.aws
  names:
    kind: VPCEndpoint
    listKind: VPCEndpointList
    plural: vpcendpoints
    singular: vpcendpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VPCEndpoint is the Schema for the VPCEndpoints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "VpcEndpointSpec defines the desired state of VpcEndpoint.
              \n Describes a VPC endpoint."
            properties:
              clientToken:
                description: Unique, case-sensitive identifier that you provide to
                  ensure the idempotency of the request. For more information, see
                  How to Ensure Idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
                type: string
              policyDocument:
                description: (Interface and gateway endpoints) A policy to attach
                  to the endpoint that controls access to the service. The policy
                  must be in valid JSON format. If this parameter is not specified,
                  we attach a default policy that allows full access to the service.
                type: string
              privateDNSEnabled:
                description: "(Interface endpoint) Indicates whether to associate
                  a private hosted zone with the specified VPC. The private hosted
                  zone contains a record set for the default public DNS name for the
                  service for the Region (for example, kinesis.us-east-1.amazonaws.com),
                  which resolves to the private IP addresses of the endpoint network
                  interfaces in the VPC. This enables you to make requests to the
                  default public DNS name for the service instead of the public DNS
                  names that are automatically generated by the VPC endpoint service.
                  \n To use a private hosted zone, you must set the following VPC
                  attributes to true: enableDnsHostnames and enableDnsSupport. Use
                  ModifyVpcAttribute to set the VPC attributes. \n Private DNS is
                  not supported for Amazon S3 interface endpoints. \n Default: true
                  for supported endpoints"
                type: boolean
              routeTableIDs:
                description: (Gateway endpoint) One or more route table IDs.
                items:
                  type: string
                type: array
              securityGroupIDs:
                description: (Interface endpoint) The ID of one or more security groups
                  to associate with the endpoint network interface.
                items:
                  type: string
                type: array
              serviceName:
                description: The service name. To get a list of available services,
                  use the DescribeVpcEndpointServices request, or get the name from
                  the service provider.
                type: string
              subnetIDs:
                description: (Interface and Gateway Load Balancer endpoints) The ID
                  of one or more subnets in which to create an endpoint network interface.
                  For a Gateway Load Balancer endpoint, you can specify one subnet
                  only.
                items:
                  type: string
                type: array
              tagSpecifications:
                description: The tags to associate with the endpoint.
                items:
                  description: The tags to apply to a resource when the resource is
                    being created.
                  properties:
                    resourceType:
                      type: string
                    tags:
                      items:
                        description: Describes a tag.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              vpcEndpointType:
                description: "The type of endpoint. \n Default: Gateway"
                type: string
              vpcID:
                description: The ID of the VPC in which the endpoint will be used.
                type: string
            required:
            - serviceName
            - vpcID
            type: object
          status:
            description: VPCEndpointStatus defines the observed state of VPCEndpoint
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTimestamp:
                description: The date and time that the VPC endpoint was created.
                format: date-time
                type: string
              dnsEntries:
                description: (Interface endpoint) The DNS entries for the endpoint.
                items:
                  description: Describes a DNS entry.
                  properties:
                    dnsName:
                      type: string
                    hostedZoneID:
                      type: string
                  type: object
                type: array
              groups:
                description: (Interface endpoint) Information about the security groups
                  that are associated with the network interface.
                items:
                  description: Describes a security group.
                  properties:
                    groupID:
                      type: string
                    groupName:
                      type: string
                  type: object
                type: array
              lastError:
                description: The last error that occurred for VPC endpoint.
                properties:
                  code:
                    type: string
                  message:
                    type: string
                type: object
              networkInterfaceIDs:
                description: (Interface endpoint) One or more network interfaces for
                  the endpoint.
                items:
                  type: string
                type: array
              ownerID:
                description: The ID of the AWS account that owns the VPC endpoint.
                type: string
              requesterManaged:
                description: Indicates whether the VPC endpoint is being managed by
                  its service.
                type: boolean
              state:
                description: The state of the VPC endpoint.
                type: string
              tags:
                description: Any tags assigned to the VPC endpoint.
                items:
                  description: Describes a tag.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              vpcEndpointID:
                description: The ID of the VPC endpoint.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
