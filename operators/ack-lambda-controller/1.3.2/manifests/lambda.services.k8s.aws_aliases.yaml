apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: aliases.lambda.services.k8s.aws
spec:
  group: lambda.services.k8s.aws
  names:
    kind: Alias
    listKind: AliasList
    plural: aliases
    singular: alias
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Alias is the Schema for the Aliases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A description of the alias.
                type: string
              functionEventInvokeConfig:
                description: "Configures options for asynchronous invocation on an
                  alias. \n - DestinationConfig A destination for events after they
                  have been sent to a function for processing. \n Types of Destinations:
                  Function - The Amazon Resource Name (ARN) of a Lambda function.
                  Queue - The ARN of a standard SQS queue. Topic - The ARN of a standard
                  SNS topic. Event Bus - The ARN of an Amazon EventBridge event bus.
                  \n - MaximumEventAgeInSeconds The maximum age of a request that
                  Lambda sends to a function for processing. \n - MaximumRetryAttempts
                  The maximum number of times to retry when the function returns an
                  error."
                properties:
                  destinationConfig:
                    description: A configuration object that specifies the destination
                      of an event after Lambda processes it.
                    properties:
                      onFailure:
                        description: A destination for events that failed processing.
                        properties:
                          destination:
                            type: string
                        type: object
                      onSuccess:
                        description: A destination for events that were processed
                          successfully.
                        properties:
                          destination:
                            type: string
                        type: object
                    type: object
                  functionName:
                    type: string
                  maximumEventAgeInSeconds:
                    format: int64
                    type: integer
                  maximumRetryAttempts:
                    format: int64
                    type: integer
                  qualifier:
                    type: string
                type: object
              functionName:
                description: "The name of the Lambda function. \n Name formats \n
                  * Function name - MyFunction. \n * Function ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction.
                  \n * Partial ARN - 123456789012:function:MyFunction. \n The length
                  constraint applies only to the full ARN. If you specify only the
                  function name, it is limited to 64 characters in length."
                type: string
              functionRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference type to provide more user friendly syntax
                  for references using 'from' field Ex: APIIDRef: \n from: name: my-api"
                properties:
                  from:
                    description: AWSResourceReference provides all the values necessary
                      to reference another k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              functionVersion:
                description: The function version that the alias invokes.
                type: string
              name:
                description: The name of the alias.
                type: string
              provisionedConcurrencyConfig:
                description: "Configures provisioned concurrency to a function's alias
                  \n - ProvisionedConcurrentExecutions The amount of provisioned concurrency
                  to allocate for the version or alias. Minimum value of 1 is required"
                properties:
                  functionName:
                    type: string
                  provisionedConcurrentExecutions:
                    format: int64
                    type: integer
                  qualifier:
                    type: string
                type: object
              routingConfig:
                description: The routing configuration (https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html#configuring-alias-routing)
                  of the alias.
                properties:
                  additionalVersionWeights:
                    additionalProperties:
                      type: number
                    type: object
                type: object
            required:
            - functionVersion
            - name
            type: object
          status:
            description: AliasStatus defines the observed state of Alias
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              revisionID:
                description: A unique identifier that changes when you update the
                  alias.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
