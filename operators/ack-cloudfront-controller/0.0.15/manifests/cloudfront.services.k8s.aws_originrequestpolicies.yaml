apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: originrequestpolicies.cloudfront.services.k8s.aws
spec:
  group: cloudfront.services.k8s.aws
  names:
    kind: OriginRequestPolicy
    listKind: OriginRequestPolicyList
    plural: originrequestpolicies
    singular: originrequestpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OriginRequestPolicy is the Schema for the OriginRequestPolicies
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              OriginRequestPolicySpec defines the desired state of OriginRequestPolicy.


              An origin request policy.


              When it's attached to a cache behavior, the origin request policy determines
              the values that CloudFront includes in requests that it sends to the origin.
              Each request that CloudFront sends to the origin includes the following:


                 * The request body and the URL path (without the domain name) from the
                 viewer request.


                 * The headers that CloudFront automatically includes in every origin request,
                 including Host, User-Agent, and X-Amz-Cf-Id.


                 * All HTTP headers, cookies, and URL query strings that are specified
                 in the cache policy or the origin request policy. These can include items
                 from the viewer request and, in the case of headers, additional ones that
                 are added by CloudFront.


              CloudFront sends a request when it can't find an object in its cache that
              matches the request. If you want to send values to the origin and also include
              them in the cache key, use CachePolicy.
            properties:
              originRequestPolicyConfig:
                description: An origin request policy configuration.
                properties:
                  comment:
                    type: string
                  cookiesConfig:
                    description: |-
                      An object that determines whether any cookies in viewer requests (and if
                      so, which cookies) are included in requests that CloudFront sends to the
                      origin.
                    properties:
                      cookieBehavior:
                        type: string
                      cookies:
                        description: Contains a list of cookie names.
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  headersConfig:
                    description: |-
                      An object that determines whether any HTTP headers (and if so, which headers)
                      are included in requests that CloudFront sends to the origin.
                    properties:
                      headerBehavior:
                        type: string
                      headers:
                        description: Contains a list of HTTP header names.
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  name:
                    type: string
                  queryStringsConfig:
                    description: |-
                      An object that determines whether any URL query strings in viewer requests
                      (and if so, which query strings) are included in requests that CloudFront
                      sends to the origin.
                    properties:
                      queryStringBehavior:
                        type: string
                      queryStrings:
                        description: Contains a list of query string names.
                        properties:
                          items:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                type: object
            required:
            - originRequestPolicyConfig
            type: object
          status:
            description: OriginRequestPolicyStatus defines the observed state of OriginRequestPolicy
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              eTag:
                type: string
              id:
                description: The unique identifier for the origin request policy.
                type: string
              lastModifiedTime:
                description: The date and time when the origin request policy was
                  last modified.
                format: date-time
                type: string
              location:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
