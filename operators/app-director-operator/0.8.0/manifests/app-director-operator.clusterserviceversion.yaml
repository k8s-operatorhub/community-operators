apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "apiVersion": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ]
    capabilities: Basic Install
    categories: Application Runtime,Developer Tools,Modernization & Migration
    containerImage: docker.io/randoli/app-director-operator:0.8.0
    createdAt: "2022-08-05"
    description: "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters"
    operators.operatorframework.io/builder: operator-sdk-v1.3.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: app-director-operator.v0.8.0
  namespace: app-director
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: App Director Agent that manages applications across the cluster.
      displayName: Cluster Wide Guvnor
      kind: ClusterWideGuvnor
      name: clusterwideguvnors.appdirector.randoli.ca
      specDescriptors:
      - description: GuvnorCertsSecretName specifies the name of the secret that contains the required certificates for Guvnor to run.
        displayName: Guvnor Certificates Secret
        path: guvnorCertsSecretName
      - description: GuvnorSecretName specifies the name of the secret that contains required configuration for Guvnor to run.
        displayName: Guvnor Config Secret
        path: guvnorSecretName
      - description: Namespace specifies the namespace where Guvnor will instantiate.
        displayName: Namespace
        path: namespace
      statusDescriptors:
      - description: Conditions give updates on the current status of the running Guvnor instance.
        displayName: Conditions
        path: conditions
      resources:
      - kind: Deployment
        name: guvnor
        version: apps/v1
      - kind: ConfigMap
        name: guvnor-configmap
        version: v1
      - kind: Service
        name: guvnor
        version: v1
      - kind: ServiceAccount
        name: guvnor-service-account
        version: v1
      - kind: ClusterRole
        name: guvnor-guvnor-role
        version: rbac/v1
      - kind: ClusterRoleBinding
        name: guvnor-guvnor-role-binding
        version: rbac/v1
      version: v1beta1
    - description: App Director Agent that manages applications for a particular namespace only.
      displayName: Guvnor
      kind: Guvnor
      name: guvnors.appdirector.randoli.ca
      specDescriptors:
      - description: GuvnorCertsSecretName specifies the name of the secret that contains the required certificates for Guvnor to run.
        displayName: Guvnor Certificates Secret
        path: guvnorCertsSecretName
      - description: GuvnorSecretName specifies the name of the secret that contains required configuration for Guvnor to run.
        displayName: Guvnor Config Secret
        path: guvnorSecretName
      statusDescriptors:
      - description: Conditions give updates on the current status of the running Guvnor instance.
        displayName: Conditions
        path: conditions
      resources:
      - kind: Deployment
        name: guvnor
        version: apps/v1
      - kind: ConfigMap
        name: guvnor-configmap
        version: v1
      - kind: Service
        name: guvnor
        version: v1
      - kind: ServiceAccount
        name: guvnor-service-account
        version: v1
      - kind: Role
        name: guvnor-guvnor-role
        version: rbac/v1
      - kind: RoleBinding
        name: guvnor-guvnor-role-binding
        version: rbac/v1
      - kind: ClusterRole
        name: guvnor-guvnor-events-role
        version: rbac/v1
      - kind: ClusterRoleBinding
        name: guvnor-guvnor-events-role-binding
        version: rbac/v1
      version: v1beta1
  description: App Director® Operator manages the Guvnor agent that connects with the App Director® Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.
  displayName: App-Director
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - events
          - namespaces
          - secrets
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - limitranges
          - persistentvolumeclaims
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/log
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          - customresourcedefinitions/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - clusterwideguvnors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - clusterwideguvnors/finalizers
          verbs:
          - update
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - clusterwideguvnors/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - guvnors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - guvnors/finalizers
          verbs:
          - update
        - apiGroups:
          - appdirector.randoli.ca
          resources:
          - guvnors/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/finalizers
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          - podsecuritypolicies
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - use
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tekton.dev
          resources:
          - clustertasks
          - clustertasks/status
          - conditions
          - runs
          - runs/finalizers
          - runs/status
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tekton.dev
          resources:
          - pipelineresources
          - pipelineresources/status
          - pipelineruns
          - pipelineruns/finalizers
          - pipelineruns/status
          - pipelines
          - pipelines/status
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tekton.dev
          resources:
          - taskruns
          - taskruns/finalizers
          - taskruns/status
          - tasks
          - tasks/status
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: app-director-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: docker.io/randoli/app-director-operator:0.8.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 150Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - app
  - deploy
  - application runtime
  - developer tools
  - modernization
  - migration
  links:
  - name: App Director Operator
    url: https://www.randoli.ca/app-director-overview
  maintainers:
  - email: info@randoli.ca
    name: Randoli Inc.
  maturity: beta
  provider:
    name: Randoli
    url: https://www.randoli.ca/app-director-overview
  version: 0.8.0
  replaces: app-director-operator.v0.7.3
