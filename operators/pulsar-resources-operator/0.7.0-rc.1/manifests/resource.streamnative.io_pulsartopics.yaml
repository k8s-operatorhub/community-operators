apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: pulsartopics.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - pulsar
    - pulsarres
    kind: PulsarTopic
    listKind: PulsarTopicList
    plural: pulsartopics
    shortNames:
    - ptopic
    singular: pulsartopic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: RESOURCE_NAME
      type: string
    - jsonPath: .metadata.generation
      name: GENERATION
      type: string
    - jsonPath: .status.observedGeneration
      name: OBSERVED_GENERATION
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=="PolicyReady")].status
      name: POLICY_READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PulsarTopic is the Schema for the pulsartopics API
          It represents a Pulsar topic in the Kubernetes cluster and includes both
          the desired state (Spec) and the observed state (Status) of the topic.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PulsarTopicSpec defines the desired state of PulsarTopic.
              It corresponds to the configuration options available in Pulsar's topic admin API.
            properties:
              backlogQuotaLimitSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  BacklogQuotaLimitSize specifies the size limit for message backlog.
                  When the limit is reached, older messages will be removed or handled according to the retention policy.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              backlogQuotaLimitTime:
                description: |-
                  BacklogQuotaLimitTime specifies the time limit for message backlog.
                  Messages older than this limit will be removed or handled according to the retention policy.
                type: string
              backlogQuotaRetentionPolicy:
                description: |-
                  BacklogQuotaRetentionPolicy specifies the retention policy for messages when backlog quota is exceeded.
                  Valid values are "producer_request_hold", "producer_exception", or "consumer_backlog_eviction".
                type: string
              connectionRef:
                description: |-
                  ConnectionRef is the reference to the PulsarConnection resource
                  used to connect to the Pulsar cluster for this topic.
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              deduplication:
                description: Deduplication controls whether to enable message deduplication
                  for the topic.
                type: boolean
              geoReplicationRefs:
                description: |-
                  GeoReplicationRefs is a list of references to PulsarGeoReplication resources,
                  used to configure geo-replication for this topic across multiple Pulsar instances.
                  This is **ONLY** used when you are using PulsarGeoReplication for setting up geo-replication
                  between two Pulsar instances.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              lifecyclePolicy:
                description: |-
                  LifecyclePolicy determines whether to keep or delete the Pulsar topic
                  when the Kubernetes resource is deleted.
                enum:
                - CleanUpAfterDeletion
                - KeepAfterDeletion
                type: string
              maxConsumers:
                description: MaxConsumers sets the maximum number of consumers allowed
                  on the topic.
                format: int32
                type: integer
              maxProducers:
                description: MaxProducers sets the maximum number of producers allowed
                  on the topic.
                format: int32
                type: integer
              maxUnAckedMessagesPerConsumer:
                description: |-
                  MaxUnAckedMessagesPerConsumer sets the maximum number of unacknowledged
                  messages allowed for a consumer before it's blocked from receiving more messages.
                format: int32
                type: integer
              maxUnAckedMessagesPerSubscription:
                description: |-
                  MaxUnAckedMessagesPerSubscription sets the maximum number of unacknowledged
                  messages allowed for a subscription before it's blocked from receiving more messages.
                format: int32
                type: integer
              messageTTL:
                description: |-
                  MessageTTL specifies the Time to Live (TTL) for messages on the topic.
                  Messages older than this TTL will be automatically marked as deleted.
                type: string
              name:
                description: Name is the topic name
                type: string
              partitions:
                default: 0
                description: |-
                  Partitions specifies the number of partitions for a partitioned topic.
                  Set to 0 for a non-partitioned topic.
                format: int32
                type: integer
              persistent:
                default: true
                description: |-
                  Persistent determines if the topic is persistent (true) or non-persistent (false).
                  Defaults to true if not specified.
                type: boolean
              replicationClusters:
                description: |-
                  ReplicationClusters is the list of clusters to which the topic is replicated
                  This is **ONLY** used if you are replicating clusters within the same Pulsar instance.
                  Please use `GeoReplicationRefs` instead if you are setting up geo-replication
                  between two Pulsar instances.
                items:
                  type: string
                type: array
              retentionSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  RetentionSize specifies the maximum size of backlog retained on the topic.
                  Should be set in conjunction with RetentionTime for effective retention policy.
                  Retention Quota must exceed configured backlog quota for topic
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              retentionTime:
                description: |-
                  RetentionTime specifies the minimum time to retain messages on the topic.
                  Should be set in conjunction with RetentionSize for effective retention policy.
                  Retention Quota must exceed configured backlog quota for topic
                type: string
              schemaInfo:
                description: SchemaInfo defines the schema for the topic, if any.
                properties:
                  properties:
                    additionalProperties:
                      type: string
                    description: |-
                      Properties is a map of user-defined properties associated with the schema.
                      These can be used to store additional metadata about the schema.
                    type: object
                  schema:
                    description: |-
                      Schema contains the actual schema definition.
                      For AVRO and JSON schemas, this should be a JSON string of the schema definition.
                      For PROTOBUF schemas, this should be the protobuf definition string.
                      For BYTES or NONE schemas, this field can be empty.
                    type: string
                  type:
                    description: |-
                      Type determines how to interpret the schema data.
                      Valid values include: "AVRO", "JSON", "PROTOBUF", "PROTOBUF_NATIVE", "KEY_VALUE", "BYTES", or "NONE".
                      For KEY_VALUE schemas, use the format "KEY_VALUE(KeyType,ValueType)" where KeyType and ValueType
                      are one of the other schema types.
                    type: string
                type: object
            required:
            - connectionRef
            - name
            type: object
          status:
            description: PulsarTopicStatus defines the observed state of PulsarTopic
            properties:
              conditions:
                description: |-
                  Conditions represent the latest available observations of the PulsarTopic's current state.
                  It follows the Kubernetes conventions for condition types and status.
                  The "Ready" condition type indicates the overall status of the topic.
                  The "PolicyReady" condition type indicates whether the topic policies have been successfully applied.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              geoReplicationEnabled:
                description: |-
                  GeoReplicationEnabled indicates whether geo-replication is enabled for this topic.
                  This is set to true when GeoReplicationRefs are configured in the spec and successfully applied.
                type: boolean
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this resource.
                  It corresponds to the metadata generation, which is updated on mutation by the API Server.
                  This field is used to track whether the controller has processed the latest changes.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
