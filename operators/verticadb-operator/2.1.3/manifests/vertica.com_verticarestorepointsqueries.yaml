apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: verticarestorepointsqueries.vertica.com
spec:
  conversion:
    strategy: None
  group: vertica.com
  names:
    categories:
    - vertica
    kind: VerticaRestorePointsQuery
    listKind: VerticaRestorePointsQueryList
    plural: verticarestorepointsqueries
    shortNames:
    - vrpq
    singular: verticarestorepointsquery
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.verticaDBName
      name: VerticaDB
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VerticaRestorePointsQuery is the Schema for the verticarestorepointsqueries
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VerticaRestorePointsQuerySpec defines the desired state of
              VerticaRestorePointsQuery
            properties:
              filterOptions:
                description: Optional parameter that will limit the query to only
                  restore points satisfying provided filter options
                properties:
                  archiveName:
                    description: Optional parameter that will limit the query to only
                      restore points from this archive
                    type: string
                  endTimestamp:
                    description: Optional parameter that will limit the query to only
                      restore points created at this timestamp or before timestamp;
                      the timestamp can be of date time format or date only format,
                      e.g. "2006-01-02", "2006-01-02 15:04:05", "2006-01-02 15:04:05.000000000";
                      the timestamp is interpreted as in UTC timezone
                    type: string
                  startTimestamp:
                    description: Optional parameter that will limit the query to only
                      restore points created at this timestamp or after this timestamp;
                      the timestamp can be of date time format or date only format,
                      e.g. "2006-01-02", "2006-01-02 15:04:05", "2006-01-02 15:04:05.000000000";
                      the timestamp is interpreted as in UTC timezone
                    type: string
                type: object
              verticaDBName:
                description: The name of the VerticaDB CR that this VerticaRestorePointsQuery
                  is defined for.  The VerticaDB object must exist in the same namespace
                  as this object.
                type: string
            required:
            - verticaDBName
            type: object
          status:
            description: VerticaRestorePointsQueryStatus defines the observed state
              of VerticaRestorePointsQuery
            properties:
              conditions:
                description: Conditions for VerticaRestorePointsQuery
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              restorePoints:
                description: This contains the result of the restore points query.
                  Check the QueryComplete status condition to know when this has been
                  populated by the operator.
                items:
                  description: RestorePoint contains information about a single restore
                    point.
                  properties:
                    archive:
                      description: Name of the archive that this restore point was
                        created in.
                      type: string
                    id:
                      description: The ID of the restore point. This is a form of
                        a UID that is static for the restore point.
                      type: string
                    index:
                      description: The current index of this restore point. Lower
                        value means it was taken more recently. This changes when
                        new restore points are created.
                      type: integer
                    timestamp:
                      description: The timestamp when the restore point was created.
                      type: string
                    vertica_version:
                      description: The version of Vertica running when the restore
                        point was created.
                      type: string
                  type: object
                type: array
              state:
                description: Status message for running query
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
