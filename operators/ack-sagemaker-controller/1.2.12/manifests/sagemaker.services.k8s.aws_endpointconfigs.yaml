apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: endpointconfigs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: EndpointConfig
    listKind: EndpointConfigList
    plural: endpointconfigs
    singular: endpointconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EndpointConfig is the Schema for the EndpointConfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EndpointConfigSpec defines the desired state of EndpointConfig.
            properties:
              asyncInferenceConfig:
                description: |-
                  Specifies configuration for how an endpoint performs asynchronous inference.
                  This is a required field in order for your Endpoint to be invoked using InvokeEndpointAsync
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpointAsync.html).
                properties:
                  clientConfig:
                    description: |-
                      Configures the behavior of the client used by SageMaker to interact with
                      the model container during asynchronous inference.
                    properties:
                      maxConcurrentInvocationsPerInstance:
                        format: int64
                        type: integer
                    type: object
                  outputConfig:
                    description: Specifies the configuration for asynchronous inference
                      invocation outputs.
                    properties:
                      kmsKeyID:
                        type: string
                      notificationConfig:
                        description: |-
                          Specifies the configuration for notifications of inference results for asynchronous
                          inference.
                        properties:
                          errorTopic:
                            type: string
                          includeInferenceResponseIn:
                            items:
                              type: string
                            type: array
                          successTopic:
                            type: string
                        type: object
                      s3FailurePath:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                type: object
              dataCaptureConfig:
                description: Configuration to control how SageMaker captures inference
                  data.
                properties:
                  captureContentTypeHeader:
                    description: |-
                      Configuration specifying how to treat different headers. If no headers are
                      specified Amazon SageMaker will by default base64 encode when capturing the
                      data.
                    properties:
                      csvContentTypes:
                        items:
                          type: string
                        type: array
                      jsonContentTypes:
                        items:
                          type: string
                        type: array
                    type: object
                  captureOptions:
                    items:
                      description: Specifies data Model Monitor will capture.
                      properties:
                        captureMode:
                          type: string
                      type: object
                    type: array
                  destinationS3URI:
                    type: string
                  enableCapture:
                    type: boolean
                  initialSamplingPercentage:
                    format: int64
                    type: integer
                  kmsKeyID:
                    type: string
                type: object
              enableNetworkIsolation:
                description: |-
                  Sets whether all model containers deployed to the endpoint are isolated.
                  If they are, no inbound or outbound network calls can be made to or from
                  the model containers.
                type: boolean
              endpointConfigName:
                description: |-
                  The name of the endpoint configuration. You specify this name in a CreateEndpoint
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html)
                  request.
                type: string
              executionRoleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform actions on your behalf. For more information, see SageMaker Roles
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).


                  To be able to pass this role to Amazon SageMaker, the caller of this action
                  must have the iam:PassRole permission.
                type: string
              kmsKeyID:
                description: |-
                  The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service
                  key that SageMaker uses to encrypt data on the storage volume attached to
                  the ML compute instance that hosts the endpoint.


                  The KmsKeyId can be any of the following formats:


                     * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab


                     * Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab


                     * Alias name: alias/ExampleAlias


                     * Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias


                  The KMS key policy must grant permission to the IAM role that you specify
                  in your CreateEndpoint, UpdateEndpoint requests. For more information, refer
                  to the Amazon Web Services Key Management Service section Using Key Policies
                  in Amazon Web Services KMS (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html)


                  Certain Nitro-based instances include local storage, dependent on the instance
                  type. Local storage volumes are encrypted using a hardware module on the
                  instance. You can't request a KmsKeyId when using an instance type with local
                  storage. If any of the models that you specify in the ProductionVariants
                  parameter use nitro-based instances with local storage, do not specify a
                  value for the KmsKeyId parameter. If you specify a value for KmsKeyId when
                  using any nitro-based instances with local storage, the call to CreateEndpointConfig
                  fails.


                  For a list of instance types that support local instance storage, see Instance
                  Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes).


                  For more information about local instance storage encryption, see SSD Instance
                  Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html).
                type: string
              productionVariants:
                description: |-
                  An array of ProductionVariant objects, one for each model that you want to
                  host at this endpoint.
                items:
                  description: |-
                    Identifies a model that you want to host and the resources chosen to deploy
                    for hosting it. If you are deploying multiple models, tell SageMaker how
                    to distribute traffic among the models by specifying variant weights. For
                    more information on production variants, check Production variants (https://docs.aws.amazon.com/sagemaker/latest/dg/model-ab-testing.html).
                  properties:
                    acceleratorType:
                      type: string
                    containerStartupHealthCheckTimeoutInSeconds:
                      format: int64
                      type: integer
                    coreDumpConfig:
                      description: |-
                        Specifies configuration for a core dump from the model container when the
                        process crashes.
                      properties:
                        destinationS3URI:
                          type: string
                        kmsKeyID:
                          type: string
                      type: object
                    enableSSMAccess:
                      type: boolean
                    initialInstanceCount:
                      format: int64
                      type: integer
                    initialVariantWeight:
                      type: number
                    instanceType:
                      type: string
                    managedInstanceScaling:
                      description: |-
                        Settings that control the range in the number of instances that the endpoint
                        provisions as it scales up or down to accommodate traffic.
                      properties:
                        maxInstanceCount:
                          format: int64
                          type: integer
                        minInstanceCount:
                          format: int64
                          type: integer
                        status:
                          type: string
                      type: object
                    modelDataDownloadTimeoutInSeconds:
                      format: int64
                      type: integer
                    modelName:
                      type: string
                    routingConfig:
                      description: |-
                        Settings that control how the endpoint routes incoming traffic to the instances
                        that the endpoint hosts.
                      properties:
                        routingStrategy:
                          type: string
                      type: object
                    serverlessConfig:
                      description: Specifies the serverless configuration for an endpoint
                        variant.
                      properties:
                        maxConcurrency:
                          format: int64
                          type: integer
                        memorySizeInMB:
                          format: int64
                          type: integer
                        provisionedConcurrency:
                          format: int64
                          type: integer
                      type: object
                    variantName:
                      type: string
                    volumeSizeInGB:
                      format: int64
                      type: integer
                  type: object
                type: array
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.


                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).


                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              vpcConfig:
                description: |-
                  Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                  hosted models, and compute resources have access to. You can control access
                  to and from your resources by configuring a VPC. For more information, see
                  Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                properties:
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  subnets:
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpointConfigName
            - productionVariants
            type: object
          status:
            description: EndpointConfigStatus defines the observed state of EndpointConfig
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
