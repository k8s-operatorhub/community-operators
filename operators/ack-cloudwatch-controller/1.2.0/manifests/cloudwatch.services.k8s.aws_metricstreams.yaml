apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: metricstreams.cloudwatch.services.k8s.aws
spec:
  group: cloudwatch.services.k8s.aws
  names:
    kind: MetricStream
    listKind: MetricStreamList
    plural: metricstreams
    singular: metricstream
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricStream is the Schema for the MetricStreams API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MetricStreamSpec defines the desired state of MetricStream.
            properties:
              excludeFilters:
                description: |-
                  If you specify this parameter, the stream sends metrics from all metric namespaces
                  except for the namespaces that you specify here.

                  You cannot include ExcludeFilters and IncludeFilters in the same operation.
                items:
                  description: |-
                    This structure contains a metric namespace and optionally, a list of metric
                    names, to either include in a metric stream or exclude from a metric stream.

                    A metric stream's filters can include up to 1000 total names. This limit
                    applies to the sum of namespace names and metric names in the filters. For
                    example, this could include 10 metric namespace filters with 99 metrics each,
                    or 20 namespace filters with 49 metrics specified in each filter.
                  properties:
                    metricNames:
                      items:
                        type: string
                      type: array
                    namespace:
                      type: string
                  type: object
                type: array
              firehoseARN:
                description: |-
                  The ARN of the Amazon Kinesis Data Firehose delivery stream to use for this
                  metric stream. This Amazon Kinesis Data Firehose delivery stream must already
                  exist and must be in the same account as the metric stream.
                type: string
              includeFilters:
                description: |-
                  If you specify this parameter, the stream sends only the metrics from the
                  metric namespaces that you specify here.

                  You cannot include IncludeFilters and ExcludeFilters in the same operation.
                items:
                  description: |-
                    This structure contains a metric namespace and optionally, a list of metric
                    names, to either include in a metric stream or exclude from a metric stream.

                    A metric stream's filters can include up to 1000 total names. This limit
                    applies to the sum of namespace names and metric names in the filters. For
                    example, this could include 10 metric namespace filters with 99 metrics each,
                    or 20 namespace filters with 49 metrics specified in each filter.
                  properties:
                    metricNames:
                      items:
                        type: string
                      type: array
                    namespace:
                      type: string
                  type: object
                type: array
              includeLinkedAccountsMetrics:
                description: |-
                  If you are creating a metric stream in a monitoring account, specify true
                  to include metrics from source accounts in the metric stream.
                type: boolean
              name:
                description: |-
                  If you are creating a new metric stream, this is the name for the new stream.
                  The name must be different than the names of other metric streams in this
                  account and Region.

                  If you are updating a metric stream, specify the name of that stream here.

                  Valid characters are A-Z, a-z, 0-9, "-" and "_".
                type: string
              outputFormat:
                description: |-
                  The output format for the stream. Valid values are json, opentelemetry1.0,
                  and opentelemetry0.7. For more information about metric stream output formats,
                  see Metric streams output formats (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
                type: string
              roleARN:
                description: |-
                  The ARN of an IAM role that this metric stream will use to access Amazon
                  Kinesis Data Firehose resources. This IAM role must already exist and must
                  be in the same account as the metric stream. This IAM role must include the
                  following permissions:

                     * firehose:PutRecord

                     * firehose:PutRecordBatch
                type: string
              statisticsConfigurations:
                description: |-
                  By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT
                  statistics for each metric that is streamed. You can use this parameter to
                  have the metric stream also send additional statistics in the stream. This
                  array can have up to 100 members.

                  For each entry in this array, you specify one or more metrics and the list
                  of additional statistics to stream for those metrics. The additional statistics
                  that you can stream depend on the stream's OutputFormat. If the OutputFormat
                  is json, you can stream any additional statistic that is supported by CloudWatch,
                  listed in CloudWatch statistics definitions (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html).
                  If the OutputFormat is opentelemetry1.0 or opentelemetry0.7, you can stream
                  percentile statistics such as p95, p99.9, and so on.
                items:
                  description: |-
                    By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT
                    statistics for each metric that is streamed. This structure contains information
                    for one metric that includes additional statistics in the stream. For more
                    information about statistics, see CloudWatch, listed in CloudWatch statistics
                    definitions (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html).
                  properties:
                    additionalStatistics:
                      items:
                        type: string
                      type: array
                    includeMetrics:
                      items:
                        description: |-
                          This object contains the information for one metric that is to be streamed
                          with additional statistics.
                        properties:
                          metricName:
                            type: string
                          namespace:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              tags:
                description: |-
                  A list of key-value pairs to associate with the metric stream. You can associate
                  as many as 50 tags with a metric stream.

                  Tags can help you organize and categorize your resources. You can also use
                  them to scope user permissions by granting a user permission to access or
                  change only resources with certain tag values.

                  You can use this parameter only when you are creating a new metric stream.
                  If you are using this operation to update an existing metric stream, any
                  tags you specify in this parameter are ignored. To change the tags of an
                  existing metric stream, use TagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html)
                  or UntagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html).
                items:
                  description: A key-value pair associated with a CloudWatch resource.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - firehoseARN
            - name
            - outputFormat
            - roleARN
            type: object
          status:
            description: MetricStreamStatus defines the observed state of MetricStream
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
