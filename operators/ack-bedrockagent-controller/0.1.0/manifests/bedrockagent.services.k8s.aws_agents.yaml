apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: agents.bedrockagent.services.k8s.aws
spec:
  group: bedrockagent.services.k8s.aws
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the Agents API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AgentSpec defines the desired state of Agent.

              Contains details about an agent.
            properties:
              agentCollaboration:
                description: The agent's collaboration role.
                type: string
              agentName:
                description: |-
                  A name for the agent that you create.

                  Regex Pattern: `^([0-9a-zA-Z][_-]?){1,100}$`
                type: string
              agentResourceRoleARN:
                description: |-
                  The Amazon Resource Name (ARN) of the IAM role with permissions to invoke
                  API operations on the agent.

                  Regex Pattern: `^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/.+$`
                type: string
              agentResourceRoleRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              customOrchestration:
                description: Contains details of the custom orchestration configured
                  for the agent.
                properties:
                  executor:
                    description: |-
                      Contains details about the Lambda function containing the orchestration logic
                      carried out upon invoking the custom orchestration.
                    properties:
                      lambda:
                        type: string
                    type: object
                type: object
              customerEncryptionKeyARN:
                description: |-
                  The Amazon Resource Name (ARN) of the KMS key with which to encrypt the agent.

                  Regex Pattern: `^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$`
                type: string
              description:
                description: A description of the agent.
                type: string
              foundationModel:
                description: |-
                  The identifier for the model that you want to be used for orchestration by
                  the agent you create.

                  The modelId to provide depends on the type of model or throughput that you
                  use:

                     * If you use a base model, specify the model ID or its ARN. For a list
                     of model IDs for base models, see Amazon Bedrock base model IDs (on-demand
                     throughput) (https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)
                     in the Amazon Bedrock User Guide.

                     * If you use an inference profile, specify the inference profile ID or
                     its ARN. For a list of inference profile IDs, see Supported Regions and
                     models for cross-region inference (https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)
                     in the Amazon Bedrock User Guide.

                     * If you use a provisioned model, specify the ARN of the Provisioned Throughput.
                     For more information, see Run inference using a Provisioned Throughput
                     (https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)
                     in the Amazon Bedrock User Guide.

                     * If you use a custom model, first purchase Provisioned Throughput for
                     it. Then specify the ARN of the resulting provisioned model. For more
                     information, see Use a custom model in Amazon Bedrock (https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)
                     in the Amazon Bedrock User Guide.

                     * If you use an imported model (https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html),
                     specify the ARN of the imported model. You can get the model ARN from
                     a successful call to CreateModelImportJob (https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html)
                     or from the Imported models page in the Amazon Bedrock console.

                  Regex Pattern: `^(arn:aws(-[^:]{1,12})?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-zA-Z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$`
                type: string
              guardrailConfiguration:
                description: The unique Guardrail configuration assigned to the agent
                  when it is created.
                properties:
                  guardrailIdentifier:
                    type: string
                  guardrailVersion:
                    type: string
                type: object
              idleSessionTTLInSeconds:
                description: |-
                  The number of seconds for which Amazon Bedrock keeps information about a
                  user's conversation with the agent.

                  A user interaction remains active for the amount of time specified. If no
                  conversation occurs during this time, the session expires and Amazon Bedrock
                  deletes any data provided before the timeout.
                format: int64
                type: integer
              instruction:
                description: |-
                  Instructions that tell the agent what it should do and how it should interact
                  with users.
                type: string
              memoryConfiguration:
                description: Contains the details of the memory configured for the
                  agent.
                properties:
                  enabledMemoryTypes:
                    items:
                      type: string
                    type: array
                  sessionSummaryConfiguration:
                    description: Configuration for SESSION_SUMMARY memory type enabled
                      for the agent.
                    properties:
                      maxRecentSessions:
                        format: int64
                        type: integer
                    type: object
                  storageDays:
                    format: int64
                    type: integer
                type: object
              orchestrationType:
                description: |-
                  Specifies the type of orchestration strategy for the agent. This is set to
                  DEFAULT orchestration type, by default.
                type: string
              promptOverrideConfiguration:
                description: |-
                  Contains configurations to override prompts in different parts of an agent
                  sequence. For more information, see Advanced prompts (https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
                properties:
                  overrideLambda:
                    type: string
                  promptConfigurations:
                    items:
                      description: |-
                        Contains configurations to override a prompt template in one part of an agent
                        sequence. For more information, see Advanced prompts (https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
                      properties:
                        basePromptTemplate:
                          type: string
                        foundationModel:
                          type: string
                        inferenceConfiguration:
                          description: |-
                            Contains inference parameters to use when the agent invokes a foundation
                            model in the part of the agent sequence defined by the promptType. For more
                            information, see Inference parameters for foundation models (https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
                          properties:
                            maximumLength:
                              format: int64
                              type: integer
                            stopSequences:
                              items:
                                type: string
                              type: array
                            temperature:
                              type: number
                            topK:
                              format: int64
                              type: integer
                            topP:
                              type: number
                          type: object
                        parserMode:
                          type: string
                        promptCreationMode:
                          type: string
                        promptState:
                          type: string
                        promptType:
                          type: string
                      type: object
                    type: array
                type: object
              tags:
                additionalProperties:
                  type: string
                description: |-
                  An object containing key-value pairs that define the tags to attach to the
                  resource.
                type: object
            required:
            - agentName
            type: object
          status:
            description: AgentStatus defines the observed state of Agent
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              agentID:
                description: |-
                  The unique identifier of the agent.

                  Regex Pattern: `^[0-9a-zA-Z]{10}$`
                type: string
              agentStatus:
                description: |-
                  The status of the agent and whether it is ready for use. The following statuses
                  are possible:

                     * CREATING – The agent is being created.

                     * PREPARING – The agent is being prepared.

                     * PREPARED – The agent is prepared and ready to be invoked.

                     * NOT_PREPARED – The agent has been created but not yet prepared.

                     * FAILED – The agent API operation failed.

                     * UPDATING – The agent is being updated.

                     * DELETING – The agent is being deleted.
                type: string
              agentVersion:
                description: |-
                  The version of the agent.

                  Regex Pattern: `^DRAFT$`
                type: string
              clientToken:
                description: |-
                  A unique, case-sensitive identifier to ensure that the API request completes
                  no more than one time. If this token matches a previous request, Amazon Bedrock
                  ignores the request, but does not return an error. For more information,
                  see Ensuring idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).

                  Regex Pattern: `^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,256}$`
                type: string
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: The time at which the agent was created.
                format: date-time
                type: string
              failureReasons:
                description: Contains reasons that the agent-related API that you
                  invoked failed.
                items:
                  type: string
                type: array
              preparedAt:
                description: The time at which the agent was last prepared.
                format: date-time
                type: string
              recommendedActions:
                description: |-
                  Contains recommended actions to take for the agent-related API that you invoked
                  to succeed.
                items:
                  type: string
                type: array
              updatedAt:
                description: The time at which the agent was last updated.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
