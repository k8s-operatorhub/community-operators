# Generated by https://github.com/upbound/olm-bundle
apiVersion: v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[{"apiVersion":"k8gb.absa.oss/v1beta1","kind":"Gslb","metadata":{"name":"test-gslb-failover","namespace":"test-gslb"},"spec":{"ingress":{"rules":[{"host":"failover.test.k8gb.io","http":{"paths":[{"backend":{"service":{"name":"frontend-podinfo","port":{"name":"http"}}},"path":"/"}]}}]},"strategy":{"primaryGeoTag":"eu-west-1","type":"failover"}}}]'
    capabilities: Seamless Upgrades
    categories: Networking
    certified: "false"
    containerImage: docker.io/absaoss/k8gb:v0.11.5
    createdAt: "2021-09-24 12:00:00"
    description: A cloud native Kubernetes Global Balancer
    operatorframework.io/suggested-namespace: k8gb
    operators.operatorframework.io.bundle.channels.v1: alpha
    operators.operatorframework.io.bundle.manifests.v1: manifests/
    operators.operatorframework.io.bundle.mediatype.v1: registry+v1
    operators.operatorframework.io.bundle.metadata.v1: metadata/
    operators.operatorframework.io.bundle.package.v1: k8gb
    operators.operatorframework.io/builder: operator-sdk-v1.12.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/k8gb-io/k8gb
    support: cncf-k8gb-maintainers@lists.cncf.io
  creationTimestamp: null
  name: k8gb.v0.11.5
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  cleanup:
    enabled: false
  customresourcedefinitions:
    owned:
    - description: Gslb resource for global load balancing strategy configuration
      displayName: Gslb
      kind: Gslb
      name: gslbs.k8gb.absa.oss
      version: v1beta1
    - description: Using ExternalDNS it synchronizes exposed Kubernetes Services and
        Ingresses with DNS providers
      displayName: DNSEndpoint
      kind: DNSEndpoint
      name: dnsendpoints.externaldns.k8s.io
      version: v1alpha1
  description: |
    **A cloud native Kubernetes Global Balancer**

    A Global Service Load Balancing solution with a focus on having cloud native qualities and work natively in a Kubernetes context.

    Key Differentiators:
     - Load balancing is based on timeproof DNS protocol which is perfect for global scope and extremely reliable
     - No dedicated management cluster and no single point of failure
     - Kubernetes native application health checks utilizing status of Liveness and Readiness probes for load balancing decisions
     - Configuration with a single Kubernetes CRD of `Gslb` kind

    Operator needs to be configured by setting couple of environment variables. This can be done by modifying
    the subscription yaml in the web ui or via kubectl. Here is an example of changing the `EDGE_DNS_ZONE`:

    ```yaml
    kind: Subscription
      ...
    spec:
      ...
      config:
        env:
        - name: CLUSTER_GEO_TAG
          value: us
        - name: EDGE_DNS_ZONE
          value: mycloud.example.com
          ...
     ```
     For more deployment variables see [helm code](https://github.com/k8gb-io/k8gb/blob/v0.8.3/chart/k8gb/templates/operator.yaml#L53:L68).

     For more information see [k8gb.io](https://k8gb.io).
  displayName: k8gb
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          - services
          - pods
          - namespaces
          verbs:
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - list
          - watch
        - apiGroups:
          - externaldns.k8s.io
          resources:
          - dnsendpoints
          verbs:
          - list
          - watch
        serviceAccountName: coredns
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - k8gb.absa.oss
          resources:
          - '*'
          - gslbs
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - externaldns.k8s.io
          resources:
          - dnsendpoints
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - list
        serviceAccountName: k8gb
      deployments:
      - name: k8gb-coredns
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: k8gb
              app.kubernetes.io/name: coredns
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
                checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
              creationTimestamp: null
              labels:
                app.kubernetes.io/instance: k8gb
                app.kubernetes.io/name: coredns
            spec:
              containers:
              - args:
                - -conf
                - /etc/coredns/Corefile
                image: absaoss/k8s_crd:v0.0.11
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /health
                    port: 8080
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
                name: coredns
                ports:
                - containerPort: 5353
                  name: udp-5353
                  protocol: UDP
                - containerPort: 5353
                  name: tcp-5353
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /ready
                    port: 8181
                    scheme: HTTP
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
                resources:
                  limits:
                    cpu: 100m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 128Mi
                volumeMounts:
                - mountPath: /etc/coredns
                  name: config-volume
              serviceAccountName: coredns
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  items:
                  - key: Corefile
                    path: Corefile
                  name: k8gb-coredns
                name: config-volume
      - name: k8gb
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: k8gb
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: k8gb
              creationTimestamp: null
              labels:
                name: k8gb
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: OPERATOR_NAME
                  value: k8gb
                - name: CLUSTER_GEO_TAG
                  value: eu
                - name: EXT_GSLB_CLUSTERS_GEO_TAGS
                  value: us
                - name: EDGE_DNS_ZONE
                  value: example.com
                - name: EDGE_DNS_SERVERS
                  value: 1.1.1.1
                - name: DNS_ZONE
                  value: cloud.example.com
                - name: RECONCILE_REQUEUE_SECONDS
                  value: "30"
                - name: LOG_FORMAT
                  value: simple
                - name: LOG_LEVEL
                  value: info
                - name: NO_COLOR
                  value: "true"
                - name: SPLIT_BRAIN_CHECK
                  value: "false"
                - name: METRICS_ADDRESS
                  value: 0.0.0.0:8080
                image: docker.io/absaoss/k8gb:v0.11.5
                imagePullPolicy: IfNotPresent
                name: k8gb
                ports:
                - containerPort: 8080
                  name: metrics
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 32Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
              serviceAccountName: k8gb
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - gslb
  - dns-lb
  - kuberneters-global-balancer
  - kubernetes-operator
  - balancer
  - multi-cluster
  links:
  - name: Home
    url: https://www.k8gb.io/
  - name: Source
    url: https://github.com/k8gb-io/k8gb
  maintainers:
  - email: dinar.valeev@absa.africa
    name: Dinar Valeev
  - email: jiri.kremser@gmail.com
    name: Jiri Kremser
  - email: kuritka@gmail.com
    name: Michal Kuritka
  - email: timofey.ilinykh@absa.africa
    name: Timofey Ilinykh
  - email: yury.tsarev@absa.africa
    name: Yury Tsarev
  maturity: alpha
  minKubeVersion: 1.19.0
  provider:
    name: k8gb.io
    url: https://github.com/k8gb-io/k8gb
  replaces: k8gb.v0.11.4
  version: 0.11.5
status:
  cleanup: {}
