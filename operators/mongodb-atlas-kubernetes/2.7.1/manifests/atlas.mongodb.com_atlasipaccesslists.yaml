apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasipaccesslists.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    categories:
    - atlas
    kind: AtlasIPAccessList
    listKind: AtlasIPAccessListList
    plural: atlasipaccesslists
    shortNames:
    - aip
    singular: atlasipaccesslist
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasIPAccessList is the Schema for the atlasipaccesslists API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AtlasIPAccessListSpec defines the desired state of AtlasIPAccessList.
            properties:
              connectionSecret:
                description: Name of the secret containing Atlas API private and public
                  keys
                properties:
                  name:
                    description: |-
                      Name of the resource being referred to
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                required:
                - name
                type: object
              entries:
                description: Entries is the list of IP Access to be managed
                items:
                  properties:
                    awsSecurityGroup:
                      description: Unique identifier of AWS security group in this
                        access list entry.
                      type: string
                    cidrBlock:
                      description: Range of IP addresses in CIDR notation in this
                        access list entry.
                      type: string
                    comment:
                      description: Comment associated with this access list entry.
                      type: string
                    deleteAfterDate:
                      description: Date and time after which Atlas deletes the temporary
                        access list entry.
                      format: date-time
                      type: string
                    ipAddress:
                      description: Entry using an IP address in this access list entry.
                      type: string
                  type: object
                  x-kubernetes-validations:
                  - message: Only one of ipAddress, cidrBlock, or awsSecurityGroup
                      may be set.
                    rule: '!(has(self.ipAddress) && (has(self.cidrBlock) || has(self.awsSecurityGroup)))
                      && !(has(self.cidrBlock) && has(self.awsSecurityGroup))'
                minItems: 1
                type: array
              externalProjectRef:
                description: |-
                  "externalProjectRef" holds the parent Atlas project ID.
                  Mutually exclusive with the "projectRef" field
                properties:
                  id:
                    description: ID is the Atlas project ID
                    type: string
                required:
                - id
                type: object
              projectRef:
                description: |-
                  "projectRef" is a reference to the parent AtlasProject resource.
                  Mutually exclusive with the "externalProjectRef" field
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
            required:
            - entries
            type: object
            x-kubernetes-validations:
            - message: must define only one project reference through externalProjectRef
                or projectRef
              rule: (has(self.externalProjectRef) && !has(self.projectRef)) || (!has(self.externalProjectRef)
                && has(self.projectRef))
            - message: must define a local connection secret when referencing an external
                project
              rule: (has(self.externalProjectRef) && has(self.connectionSecret)) ||
                !has(self.externalProjectRef)
          status:
            description: AtlasIPAccessListStatus is the most recent observed status
              of the AtlasIPAccessList cluster. Read-only.
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              entries:
                description: Status is the state of the ip access list
                items:
                  properties:
                    entry:
                      description: Entry is the ip access Atlas is managing
                      type: string
                    status:
                      description: Status is the correspondent state of the entry
                      type: string
                  required:
                  - entry
                  - status
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.
                  The Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.
                format: int64
                type: integer
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
