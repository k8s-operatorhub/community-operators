apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  labels:
    alloydb-omni: "true"
  name: deletestandbyjobs.alloydbomni.internal.dbadmin.goog
spec:
  group: alloydbomni.internal.dbadmin.goog
  names:
    kind: DeleteStandbyJob
    listKind: DeleteStandbyJobList
    plural: deletestandbyjobs
    singular: deletestandbyjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.currentStep
      name: CurrentStep
      type: string
    - jsonPath: .spec.attempt
      name: Attempt
      type: integer
    - jsonPath: .spec.endTime
      name: EndTime
      type: string
    - jsonPath: .spec.cleanup
      name: Cleanup
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: DeleteStandbyJob is an internal workflow tracking object. Users
          should not directly interact with this.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attempt:
                default: 0
                description: Attempt allows the workflow to smartly retry and choose
                  to fail if too many retries have occurred
                type: integer
              cleanup:
                default: false
                description: Cleanup is used to mark this object as safe for deletion.
                type: boolean
              currentStep:
                description: CurrentStep is the current step of the workflow
                type: string
              currentStepTime:
                description: CurrentStepTime allows us to see when the current step
                  was initiated which allows us to time out at the step level.
                format: date-time
                type: string
              endTime:
                description: EndTime is when the workflow has reached a terminal state
                format: date-time
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: Metadata is intended to allow different workflows to
                  attach data needed to execute this workflow, e.g. which DBC/instance/
                  other resource this is attached to
                type: object
              requeueTime:
                description: RequeueTime if set, then tells the reconciler to requeue
                  this job to run at the specified time
                format: date-time
                type: string
              startTime:
                description: StartTime is when the workflow began
                format: date-time
                type: string
            required:
            - attempt
            - cleanup
            type: object
          status:
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the Entity's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              criticalIncidents:
                description: CriticalIncidents is a flat list of all active Critical
                  Incidents.
                items:
                  description: CriticalIncident contains all information about an
                    ongoing critical incident.
                  properties:
                    code:
                      description: Code is the error code of this particular error.
                        Error codes are DBSE+numeric strings, like "DBSE1012".
                      type: string
                    createTime:
                      description: CreateTime is the timestamp when this Incident
                        was created at the origin.
                      format: date-time
                      type: string
                    message:
                      description: Message describes the incident/error that occurred.
                      type: string
                    messageTemplateParams:
                      additionalProperties:
                        type: string
                      description: MessageTemplateParams contains key-value pairs
                        necessary for generating a user-friendly data-driven version
                        of Message in the UI.
                      type: object
                    resource:
                      description: Resource contains information about the Database
                        Service component that reported the incident as well as about
                        the K8s resource.
                      properties:
                        component:
                          description: Component is an internal identifier of the
                            Database Service subsystem that reported the incident.
                          type: string
                        location:
                          description: Location
                          properties:
                            cluster:
                              description: Cluster is the name of the cluster of the
                                affected K8S resource.
                              type: string
                            group:
                              description: Group is the Group name of the k8s resource.
                              type: string
                            kind:
                              description: Kind is the Kind of the k8s resource.
                              type: string
                            name:
                              description: Name is the name of the affected K8S resource.
                              type: string
                            namespace:
                              description: Namespace is the namespace of the affected
                                K8S resource.
                              type: string
                            version:
                              description: Group is the Version of the k8s resource.
                              type: string
                          type: object
                      required:
                      - component
                      type: object
                    stackTrace:
                      description: StackTrace contains an unstructured list of messages
                        from the stack trace.
                      items:
                        description: CriticalIncidentStackTraceMessage contains stack
                          trace information available for the incident.
                        properties:
                          component:
                            description: Component is the name of a Database Service
                              component that logged the message.
                            type: string
                          message:
                            description: Logged message.
                            type: string
                        type: object
                      type: array
                    transientUntil:
                      description: TransientUntil if present indicates that the issue
                        should be considered transient until the specified time.
                      format: date-time
                      type: string
                  required:
                  - code
                  - createTime
                  - resource
                  type: object
                type: array
              observedGeneration:
                description: 'Internal: The generation observed by the controller.'
                format: int64
                type: integer
              reconciled:
                description: 'Internal: Whether the resource was reconciled by the
                  controller.'
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
