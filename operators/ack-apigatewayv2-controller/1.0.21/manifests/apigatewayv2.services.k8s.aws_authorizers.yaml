apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: authorizers.apigatewayv2.services.k8s.aws
spec:
  group: apigatewayv2.services.k8s.aws
  names:
    kind: Authorizer
    listKind: AuthorizerList
    plural: authorizers
    singular: authorizer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Authorizer is the Schema for the Authorizers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AuthorizerSpec defines the desired state of Authorizer.

              Represents an authorizer.
            properties:
              apiID:
                description: The API identifier.
                type: string
              apiRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              authorizerCredentialsARN:
                description: |-
                  Specifies the required credentials as an IAM role for API Gateway to invoke
                  the authorizer. To specify an IAM role for API Gateway to assume, use the
                  role's Amazon Resource Name (ARN). To use resource-based permissions on the
                  Lambda function, don't specify this parameter. Supported only for REQUEST
                  authorizers.
                type: string
              authorizerPayloadFormatVersion:
                description: |-
                  Specifies the format of the payload sent to an HTTP API Lambda authorizer.
                  Required for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0.
                  To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html).
                type: string
              authorizerResultTTLInSeconds:
                description: |-
                  The time to live (TTL) for cached authorizer results, in seconds. If it equals
                  0, authorization caching is disabled. If it is greater than 0, API Gateway
                  caches authorizer responses. The maximum value is 3600, or 1 hour. Supported
                  only for HTTP API Lambda authorizers.
                format: int64
                type: integer
              authorizerType:
                description: |-
                  The authorizer type. Specify REQUEST for a Lambda function using incoming
                  request parameters. Specify JWT to use JSON Web Tokens (supported only for
                  HTTP APIs).
                type: string
              authorizerURI:
                description: |-
                  The authorizer's Uniform Resource Identifier (URI). For REQUEST authorizers,
                  this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
                  In general, the URI has this form: arn:aws:apigateway:{region}:lambda:path/{service_api}
                  , where {region} is the same as the region hosting the Lambda function, path
                  indicates that the remaining substring in the URI should be treated as the
                  path to the resource, including the initial /. For Lambda functions, this
                  is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported
                  only for REQUEST authorizers.
                type: string
              enableSimpleResponses:
                description: |-
                  Specifies whether a Lambda authorizer returns a response in a simple format.
                  By default, a Lambda authorizer must return an IAM policy. If enabled, the
                  Lambda authorizer can return a boolean value instead of an IAM policy. Supported
                  only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers
                  for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html)
                type: boolean
              identitySource:
                description: |-
                  The identity source for which authorization is requested.

                  For a REQUEST authorizer, this is optional. The value is a set of one or
                  more mapping expressions of the specified request parameters. The identity
                  source can be headers, query string parameters, stage variables, and context
                  parameters. For example, if an Auth header and a Name query string parameter
                  are defined as identity sources, this value is route.request.header.Auth,
                  route.request.querystring.Name for WebSocket APIs. For HTTP APIs, use selection
                  expressions prefixed with $, for example, $request.header.Auth, $request.querystring.Name.
                  These parameters are used to perform runtime validation for Lambda-based
                  authorizers by verifying all of the identity-related request parameters are
                  present in the request, not null, and non-empty. Only when this is true does
                  the authorizer invoke the authorizer Lambda function. Otherwise, it returns
                  a 401 Unauthorized response without calling the Lambda function. For HTTP
                  APIs, identity sources are also used as the cache key when caching is enabled.
                  To learn more, see Working with AWS Lambda authorizers for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html).

                  For JWT, a single entry that specifies where to extract the JSON Web Token
                  (JWT) from inbound requests. Currently only header-based and query parameter-based
                  selections are supported, for example $request.header.Authorization.
                items:
                  type: string
                type: array
              identityValidationExpression:
                description: This parameter is not used.
                type: string
              jwtConfiguration:
                description: |-
                  Represents the configuration of a JWT authorizer. Required for the JWT authorizer
                  type. Supported only for HTTP APIs.
                properties:
                  audience:
                    items:
                      type: string
                    type: array
                  issuer:
                    description: A string representation of a URI with a length between
                      [1-2048].
                    type: string
                type: object
              name:
                description: The name of the authorizer.
                type: string
            required:
            - authorizerType
            - identitySource
            - name
            type: object
          status:
            description: AuthorizerStatus defines the observed state of Authorizer
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              authorizerID:
                description: The authorizer identifier.
                type: string
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
