apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGBackup",
          "metadata": {
            "name": "demo-backup",
            "namespace": "demo-db"
          },
          "spec": {
            "managedLifecycle": false,
            "sgCluster": "demo-db"
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGCluster",
          "metadata": {
            "name": "demo-db",
            "namespace": "demo-db"
          },
          "spec": {
            "instances": 3,
            "pods": {
              "persistentVolume": {
                "size": "20Gi"
              }
            },
            "postgres": {
              "version": "latest"
            }
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGConfig",
          "metadata": {
            "name": "stackgres-operator"
          },
          "spec": {
            "adminui": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "name": "stackgres-adminui",
              "resources": {},
              "service": {
                "exposeHTTP": false,
                "type": "ClusterIP"
              }
            },
            "authentication": {
              "oidc": {},
              "resetPassword": false,
              "secretRef": {
                "name": ""
              },
              "type": "jwt",
              "user": "admin"
            },
            "cert": {
              "autoapprove": true,
              "certManager": {
                "autoConfigure": false,
                "duration": "2160h",
                "encoding": "PKCS1",
                "renewBefore": "360h",
                "size": 2048
              },
              "createForOperator": true,
              "createForWebApi": true,
              "crt": null,
              "jwtRsaKey": null,
              "jwtRsaPub": null,
              "key": null,
              "resetCerts": false,
              "webCrt": null,
              "webKey": null
            },
            "containerRegistry": "quay.io",
            "deploy": {
              "operator": true,
              "restapi": true
            },
            "developer": {},
            "extensions": {
              "cache": {
                "enabled": false,
                "persistentVolume": {
                  "size": "1Gi"
                },
                "preloadedExtensions": [
                  "x86_64/linux/timescaledb-1\\.7\\.4-pg12"
                ]
              },
              "repositoryUrls": [
                "https://extensions.stackgres.io/postgres/repository"
              ]
            },
            "grafana": {
              "autoEmbed": false,
              "datasourceName": "Prometheus",
              "password": "prom-operator",
              "schema": "http",
              "user": "admin"
            },
            "imagePullPolicy": "IfNotPresent",
            "initClusterRole": "cluster-admin",
            "jobs": {
              "affinity": {},
              "annotations": {},
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "name": "stackgres-jobs",
              "nodeSelector": {},
              "resources": {},
              "tolerations": []
            },
            "operator": {
              "affinity": {},
              "annotations": {},
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "nodeSelector": {},
              "resources": {},
              "service": {
                "annotations": {}
              },
              "serviceAccount": {
                "annotations": {}
              },
              "tolerations": []
            },
            "prometheus": {
              "allowAutobind": true
            },
            "rbac": {
              "create": true
            },
            "restapi": {
              "affinity": {},
              "annotations": {},
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "name": "stackgres-restapi",
              "nodeSelector": {},
              "resources": {},
              "service": {
                "annotations": {}
              },
              "serviceAccount": {
                "annotations": {}
              },
              "tolerations": []
            },
            "serviceAccount": {
              "create": true
            }
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGDbOps",
          "metadata": {
            "name": "demo-restart-op",
            "namespace": "demo-db"
          },
          "spec": {
            "op": "restart",
            "sgCluster": "demo-db"
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGDistributedLogs",
          "metadata": {
            "name": "distributedlogs",
            "namespace": "demo-db"
          },
          "spec": {
            "persistentVolume": {
              "size": "20Gi"
            }
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGInstanceProfile",
          "metadata": {
            "name": "size-m",
            "namespace": "demo-db"
          },
          "spec": {
            "cpu": "4",
            "memory": "8Gi"
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGPoolingConfig",
          "metadata": {
            "name": "poolconfig",
            "namespace": "demo-db"
          },
          "spec": {
            "pgBouncer": {
              "pgbouncer.ini": {
                "databases": {
                  "demo": {
                    "dbname": "demo",
                    "pool_size": 400,
                    "reserve_pool": 5
                  },
                  "postgres": {
                    "dbname": "postgres",
                    "pool_size": 10,
                    "reserve_pool": 5
                  }
                },
                "pgbouncer": {
                  "default_pool_size": "100",
                  "max_client_conn": "2000",
                  "pool_mode": "session"
                }
              }
            }
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGPostgresConfig",
          "metadata": {
            "name": "pgconfig",
            "namespace": "demo-db"
          },
          "spec": {
            "postgresVersion": "15",
            "postgresql.conf": {
              "effective_cache_size": "5GB",
              "hot_standby_feedback": "on",
              "log_min_duration_statement": "1000",
              "maintenance_work_mem": "2GB",
              "max_connections": "600",
              "shared_buffers": "3GB",
              "work_mem": "16MB"
            }
          }
        },
        {
          "apiVersion": "stackgres.io/v1",
          "kind": "SGScript",
          "metadata": {
            "name": "create-db-script",
            "namespace": "demo-db"
          },
          "spec": {
            "continueOnError": false,
            "managedVersions": true,
            "scripts": [
              {
                "name": "create-demo-database",
                "script": "CREATE DATABASE demo WITH OWNER postgres;\n"
              }
            ]
          }
        },
        {
          "apiVersion": "stackgres.io/v1alpha1",
          "kind": "SGShardedCluster",
          "metadata": {
            "name": "demo-shardeddb",
            "namespace": "demo-db"
          },
          "spec": {
            "coordinator": {
              "instances": 2,
              "pods": {
                "persistentVolume": {
                  "size": "10Gi"
                }
              }
            },
            "database": "sharded",
            "postgres": {
              "version": "15.3"
            },
            "shards": {
              "clusters": 3,
              "instancesPerCluster": 2,
              "pods": {
                "persistentVolume": {
                  "size": "10Gi"
                }
              }
            },
            "type": "citus"
          }
        },
        {
          "apiVersion": "stackgres.io/v1beta1",
          "kind": "SGObjectStorage",
          "metadata": {
            "name": "backupconfig",
            "namespace": "demo-db"
          },
          "spec": {
            "gcs": {
              "bucket": "stackgres-backups",
              "gcpCredentials": {
                "secretKeySelectors": {
                  "serviceAccountJSON": {
                    "key": "gcloudkey",
                    "name": "backups-gcp"
                  }
                }
              }
            },
            "type": "gcs"
          }
        }
      ]
    capabilities: Deep Insights
    categories: Database
    containerImage: quay.io/stackgres/helm-operator:1.5.0
    createdAt: "2023-07-03T14:34:58Z"
    description: |
      The most advanced Postgres Enterprise Platform.
      Fully Open Source.
    operatorhub.io/ui-metadata-max-k8s-version: 1.27.999
    operators.operatorframework.io/builder: operator-sdk-v1.29.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://gitlab.com/ongresinc/stackgres
  name: stackgres.v1.5.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Handle to a performed (or to be performed, if run manually) backup
      displayName: StackGres Backup
      kind: SGBackup
      name: sgbackups.stackgres.io
      specDescriptors:
      - description: |
          The name of the `SGCluster` from which this backup is/will be taken.

          If this is a copy of an existing completed backup in a different namespace
           the value must be prefixed with the namespace of the source backup and a
           dot `.` (e.g. `<cluster namespace>.<cluster name>`) or have the same value
           if the source backup is also a copy.
        displayName: Target SGCluster
        path: sgCluster
      - description: |
          Indicate if this backup is permanent and should not be removed by the automated
           retention policy. Default is `false`.
        displayName: Managed Lifecycle
        path: managedLifecycle
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      statusDescriptors:
      - description: |
          The name of the backup.
        displayName: Internal Name
        path: internalName
      - description: |
          The path were the backup is stored.
        displayName: Backup Path
        path: backupPath
      - description: |
          Status of the backup.
        displayName: Process Status
        path: process.status
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: |
          If the status is `failed` this field will contain a message indicating the failure reason.
        displayName: Process Failure
        path: process.failure
      - description: |
          Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
        displayName: Process Job Pod
        path: process.jobPod
      - description: |
          Status (may be transient) until converging to `spec.managedLifecycle`.
        displayName: Process Managed Lifecycle
        path: process.managedLifecycle
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Start time of backup.
        displayName: Process Timing Start
        path: process.timing.start
      - description: |
          End time of backup.
        displayName: Process Timing End
        path: process.timing.end
      - description: |
          Time at which the backup is safely stored in the object storage.
        displayName: Process Timing Stored
        path: process.timing.stored
      - description: |
          Hostname of the instance where the backup is taken from.
        displayName: Backup Information Hostname
        path: backupInformation.hostname
      - description: |
          Pod where the backup is taken from.
        displayName: Backup Information Source Pod
        path: backupInformation.sourcePod
      - description: |
          Postgres *system identifier* of the cluster this backup is taken from.
        displayName: Backup Information System Identifier
        path: backupInformation.systemIdentifier
      - description: |
          Postgres version of the server where the backup is taken from.
        displayName: Backup Information Postgres Version
        path: backupInformation.postgresVersion
      - description: |
          Data directory where the backup is taken from.
        displayName: Backup Information Pg Data
        path: backupInformation.pgData
      - description: |
          Size (in bytes) of the uncompressed backup.
        displayName: Backup Information Size Uncompressed
        path: backupInformation.size.uncompressed
      - description: |
          Size (in bytes) of the compressed backup.
        displayName: Backup Information Size Compressed
        path: backupInformation.size.compressed
      - description: |
          LSN of when the backup started.
        displayName: Backup Information Lsn Start
        path: backupInformation.lsn.start
      - description: |
          LSN of when the backup finished.
        displayName: Backup Information Lsn End
        path: backupInformation.lsn.end
      - description: |
          WAL segment file name when the backup was started.
        displayName: Backup Information Start Wal File
        path: backupInformation.startWalFile
      - description: |
          Backup timeline.
        displayName: Backup Information Timeline
        path: backupInformation.timeline
      - displayName: Backup Information Control Data Pg_control Version Number
        path: backupInformation.controlData.pg_control version number
      - displayName: Backup Information Control Data Catalog Version Number
        path: backupInformation.controlData.Catalog version number
      - displayName: Backup Information Control Data Database System Identifier
        path: backupInformation.controlData.Database system identifier
      - displayName: Backup Information Control Data Database Cluster State
        path: backupInformation.controlData.Database cluster state
      - displayName: Backup Information Control Data Pg_control Last Modified
        path: backupInformation.controlData.pg_control last modified
      - displayName: Backup Information Control Data Latest Checkpoint Location
        path: backupInformation.controlData.Latest checkpoint location
      - displayName: Backup Information Control Data Latest Checkpoint's REDO Location
        path: backupInformation.controlData.Latest checkpoint's REDO location
      - displayName: Backup Information Control Data Latest Checkpoint's REDOWAL File
        path: backupInformation.controlData.Latest checkpoint's REDO WAL file
      - displayName: Backup Information Control Data Latest Checkpoint's Time Line
          ID
        path: backupInformation.controlData.Latest checkpoint's TimeLineID
      - displayName: Backup Information Control Data Latest Checkpoint's Prev Time
          Line ID
        path: backupInformation.controlData.Latest checkpoint's PrevTimeLineID
      - displayName: Backup Information Control Data Latest Checkpoint's Full_page_writes
        path: backupInformation.controlData.Latest checkpoint's full_page_writes
      - displayName: Backup Information Control Data Latest Checkpoint's Next XID
        path: backupInformation.controlData.Latest checkpoint's NextXID
      - displayName: Backup Information Control Data Latest Checkpoint's Next OID
        path: backupInformation.controlData.Latest checkpoint's NextOID
      - displayName: Backup Information Control Data Latest Checkpoint's Next Multi
          Xact Id
        path: backupInformation.controlData.Latest checkpoint's NextMultiXactId
      - displayName: Backup Information Control Data Latest Checkpoint's Next Multi
          Offset
        path: backupInformation.controlData.Latest checkpoint's NextMultiOffset
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest XID
        path: backupInformation.controlData.Latest checkpoint's oldestXID
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest XI
          D's DB
        path: backupInformation.controlData.Latest checkpoint's oldestXID's DB
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest Active
          XID
        path: backupInformation.controlData.Latest checkpoint's oldestActiveXID
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest Multi
          Xid
        path: backupInformation.controlData.Latest checkpoint's oldestMultiXid
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest Multi's
          DB
        path: backupInformation.controlData.Latest checkpoint's oldestMulti's DB
      - displayName: Backup Information Control Data Latest Checkpoint's Oldest Commit
          Ts Xid
        path: backupInformation.controlData.Latest checkpoint's oldestCommitTsXid
      - displayName: Backup Information Control Data Latest Checkpoint's Newest Commit
          Ts Xid
        path: backupInformation.controlData.Latest checkpoint's newestCommitTsXid
      - displayName: Backup Information Control Data Time Of Latest Checkpoint
        path: backupInformation.controlData.Time of latest checkpoint
      - displayName: Backup Information Control Data Fake LSN Counter For Unlogged
          Rels
        path: backupInformation.controlData.Fake LSN counter for unlogged rels
      - displayName: Backup Information Control Data Minimum Recovery Ending Location
        path: backupInformation.controlData.Minimum recovery ending location
      - displayName: Backup Information Control Data Min Recovery Ending Loc's Timeline
        path: backupInformation.controlData.Min recovery ending loc's timeline
      - displayName: Backup Information Control Data Backup Start Location
        path: backupInformation.controlData.Backup start location
      - displayName: Backup Information Control Data Backup End Location
        path: backupInformation.controlData.Backup end location
      - displayName: Backup Information Control Data End-of-backup Record Required
        path: backupInformation.controlData.End-of-backup record required
      - displayName: Backup Information Control Data Wal_level Setting
        path: backupInformation.controlData.wal_level setting
      - displayName: Backup Information Control Data Wal_log_hints Setting
        path: backupInformation.controlData.wal_log_hints setting
      - displayName: Backup Information Control Data Max_connections Setting
        path: backupInformation.controlData.max_connections setting
      - displayName: Backup Information Control Data Max_worker_processes Setting
        path: backupInformation.controlData.max_worker_processes setting
      - displayName: Backup Information Control Data Max_wal_senders Setting
        path: backupInformation.controlData.max_wal_senders setting
      - displayName: Backup Information Control Data Max_prepared_xacts Setting
        path: backupInformation.controlData.max_prepared_xacts setting
      - displayName: Backup Information Control Data Max_locks_per_xact Setting
        path: backupInformation.controlData.max_locks_per_xact setting
      - displayName: Backup Information Control Data Track_commit_timestamp Setting
        path: backupInformation.controlData.track_commit_timestamp setting
      - displayName: Backup Information Control Data Maximum Data Alignment
        path: backupInformation.controlData.Maximum data alignment
      - displayName: Backup Information Control Data Database Block Size
        path: backupInformation.controlData.Database block size
      - displayName: Backup Information Control Data Blocks Per Segment Of Large Relation
        path: backupInformation.controlData.Blocks per segment of large relation
      - displayName: Backup Information Control Data WAL Block Size
        path: backupInformation.controlData.WAL block size
      - displayName: Backup Information Control Data Bytes Per WAL Segment
        path: backupInformation.controlData.Bytes per WAL segment
      - displayName: Backup Information Control Data Maximum Length Of Identifiers
        path: backupInformation.controlData.Maximum length of identifiers
      - displayName: Backup Information Control Data Maximum Columns In An Index
        path: backupInformation.controlData.Maximum columns in an index
      - displayName: Backup Information Control Data Maximum Size Of ATOAST Chunk
        path: backupInformation.controlData.Maximum size of a TOAST chunk
      - displayName: Backup Information Control Data Size Of A Large-object Chunk
        path: backupInformation.controlData.Size of a large-object chunk
      - displayName: Backup Information Control Data Date/time Type Storage
        path: backupInformation.controlData.Date/time type storage
      - displayName: Backup Information Control Data Float4 Argument Passing
        path: backupInformation.controlData.Float4 argument passing
      - displayName: Backup Information Control Data Float8 Argument Passing
        path: backupInformation.controlData.Float8 argument passing
      - displayName: Backup Information Control Data Data Page Checksum Version
        path: backupInformation.controlData.Data page checksum version
      - displayName: Backup Information Control Data Mock Authentication Nonce
        path: backupInformation.controlData.Mock authentication nonce
      - description: |
          Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

          Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
          *  `m`: minute, 0 to 59
          *  `h`: hour, 0 to 23
          *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
          *  `mon`: month, 1 to 12
          *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

          Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

          If not provided, full backups will be performed each day at 05:00 UTC
        displayName: SGBackup Config Base Backups Cron Schedule
        path: sgBackupConfig.baseBackups.cronSchedule
      - description: |
          Based on this parameter, an automatic retention policy is defined to delete old base backups.
          This parameter specifies the number of base backups to keep, in a sliding window.
          Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

          Default is 5.
        displayName: SGBackup Config Base Backups Retention
        path: sgBackupConfig.baseBackups.retention
      - description: |
          Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
        displayName: SGBackup Config Base Backups Compression
        path: sgBackupConfig.baseBackups.compression
      - description: |
          **Deprecated**: use instead maxNetworkBandwidth.

          Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
        displayName: SGBackup Config Base Backups Performance Max Network Bandwitdh
        path: sgBackupConfig.baseBackups.performance.maxNetworkBandwitdh
      - description: |
          **Deprecated**: use instead maxDiskBandwidth.

          Maximum disk read I/O when performing a backup. In bytes (per second).
        displayName: SGBackup Config Base Backups Performance Max Disk Bandwitdh
        path: sgBackupConfig.baseBackups.performance.maxDiskBandwitdh
      - description: |
          Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
        displayName: SGBackup Config Base Backups Performance Max Network Bandwidth
        path: sgBackupConfig.baseBackups.performance.maxNetworkBandwidth
      - description: |
          Maximum disk read I/O when performing a backup. In bytes (per second).
        displayName: SGBackup Config Base Backups Performance Max Disk Bandwidth
        path: sgBackupConfig.baseBackups.performance.maxDiskBandwidth
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1 (use one stream).
        displayName: SGBackup Config Base Backups Performance Upload Disk Concurrency
        path: sgBackupConfig.baseBackups.performance.uploadDiskConcurrency
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
        displayName: SGBackup Config Base Backups Performance Upload Concurrency
        path: sgBackupConfig.baseBackups.performance.uploadConcurrency
      - description: |
          Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
        displayName: SGBackup Config Compression
        path: sgBackupConfig.compression
      - description: |
          Specifies the type of object storage used for storing the base backups and WAL segments.
          Possible values:
          *  `s3`: Amazon Web Services S3 (Simple Storage Service).
          *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
          *  `gcs`: Google Cloud Storage.
          *  `azureBlob`: Microsoft Azure Blob Storage.
        displayName: SGBackup Config Storage Type
        path: sgBackupConfig.storage.type
      - description: |
          AWS S3 bucket name.
        displayName: SGBackup Config Storage S3 Bucket
        path: sgBackupConfig.storage.s3.bucket
      - description: |
          Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
          StackGres cluster, using the `SGCluster.metadata.name`.
        displayName: SGBackup Config Storage S3 Path
        path: sgBackupConfig.storage.s3.path
      - description: |
          AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
        displayName: SGBackup Config Storage S3 Region
        path: sgBackupConfig.storage.s3.region
      - description: |
          [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
        displayName: SGBackup Config Storage S3 Storage Class
        path: sgBackupConfig.storage.s3.storageClass
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage S3 Aws Credentials Secret Key Selectors
          Access Key Id Key
        path: sgBackupConfig.storage.s3.awsCredentials.secretKeySelectors.accessKeyId.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage S3 Aws Credentials Secret Key Selectors
          Access Key Id Name
        path: sgBackupConfig.storage.s3.awsCredentials.secretKeySelectors.accessKeyId.name
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage S3 Aws Credentials Secret Key Selectors
          Secret Access Key Key
        path: sgBackupConfig.storage.s3.awsCredentials.secretKeySelectors.secretAccessKey.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage S3 Aws Credentials Secret Key Selectors
          Secret Access Key Name
        path: sgBackupConfig.storage.s3.awsCredentials.secretKeySelectors.secretAccessKey.name
      - description: |
          Bucket name.
        displayName: SGBackup Config Storage S3 Compatible Bucket
        path: sgBackupConfig.storage.s3Compatible.bucket
      - description: |
          Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
        displayName: SGBackup Config Storage S3 Compatible Path
        path: sgBackupConfig.storage.s3Compatible.path
      - description: |
          Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
        displayName: SGBackup Config Storage S3 Compatible Enable Path Style Addressing
        path: sgBackupConfig.storage.s3Compatible.enablePathStyleAddressing
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Overrides the default url to connect to an S3-compatible service.
          For example: `http://s3-like-service:9000`.
        displayName: SGBackup Config Storage S3 Compatible Endpoint
        path: sgBackupConfig.storage.s3Compatible.endpoint
      - description: |
          AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
        displayName: SGBackup Config Storage S3 Compatible Region
        path: sgBackupConfig.storage.s3Compatible.region
      - description: |
          [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
        displayName: SGBackup Config Storage S3 Compatible Storage Class
        path: sgBackupConfig.storage.s3Compatible.storageClass
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage S3 Compatible Aws Credentials Secret
          Key Selectors Access Key Id Key
        path: sgBackupConfig.storage.s3Compatible.awsCredentials.secretKeySelectors.accessKeyId.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage S3 Compatible Aws Credentials Secret
          Key Selectors Access Key Id Name
        path: sgBackupConfig.storage.s3Compatible.awsCredentials.secretKeySelectors.accessKeyId.name
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage S3 Compatible Aws Credentials Secret
          Key Selectors Secret Access Key Key
        path: sgBackupConfig.storage.s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage S3 Compatible Aws Credentials Secret
          Key Selectors Secret Access Key Name
        path: sgBackupConfig.storage.s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey.name
      - description: |
          GCS bucket name.
        displayName: SGBackup Config Storage Gcs Bucket
        path: sgBackupConfig.storage.gcs.bucket
      - description: |
          Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
        displayName: SGBackup Config Storage Gcs Path
        path: sgBackupConfig.storage.gcs.path
      - description: |
          If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

          This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
        displayName: SGBackup Config Storage Gcs Gcp Credentials Fetch Credentials
          From Metadata Service
        path: sgBackupConfig.storage.gcs.gcpCredentials.fetchCredentialsFromMetadataService
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage Gcs Gcp Credentials Secret Key Selectors
          Service Account JSON Key
        path: sgBackupConfig.storage.gcs.gcpCredentials.secretKeySelectors.serviceAccountJSON.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage Gcs Gcp Credentials Secret Key Selectors
          Service Account JSON Name
        path: sgBackupConfig.storage.gcs.gcpCredentials.secretKeySelectors.serviceAccountJSON.name
      - description: |
          Azure Blob Storage bucket name.
        displayName: SGBackup Config Storage Azure Blob Bucket
        path: sgBackupConfig.storage.azureBlob.bucket
      - description: |
          Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
        displayName: SGBackup Config Storage Azure Blob Path
        path: sgBackupConfig.storage.azureBlob.path
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage Azure Blob Azure Credentials Secret Key
          Selectors Storage Account Key
        path: sgBackupConfig.storage.azureBlob.azureCredentials.secretKeySelectors.storageAccount.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage Azure Blob Azure Credentials Secret Key
          Selectors Storage Account Name
        path: sgBackupConfig.storage.azureBlob.azureCredentials.secretKeySelectors.storageAccount.name
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: SGBackup Config Storage Azure Blob Azure Credentials Secret Key
          Selectors Access Key Key
        path: sgBackupConfig.storage.azureBlob.azureCredentials.secretKeySelectors.accessKey.key
      - description: |
          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: SGBackup Config Storage Azure Blob Azure Credentials Secret Key
          Selectors Access Key Name
        path: sgBackupConfig.storage.azureBlob.azureCredentials.secretKeySelectors.accessKey.name
      version: v1
    - description: Main CRD, manages Postgres clusters (one or more Postgres pods)
      displayName: StackGres Cluster
      kind: SGCluster
      name: sgclusters.stackgres.io
      specDescriptors:
      - description: |
          Postgres version used on the cluster. It is either of:
          *  The string 'latest', which automatically sets the latest major.minor Postgres version.
          *  A major version, like '14' or '13', which sets that major version and the latest minor version.
          *  A specific major.minor version, like '14.4'.
        displayName: Postgres Version
        path: postgres.version
      - description: |
          Postgres flavor used on the cluster. It is either of:
          *  `babelfish` will use the [Babelfish for Postgres](https://babelfish-for-postgresql.github.io/babelfish-for-postgresql/).

          If not specified then the vanilla Postgres will be used for the cluster.
        displayName: Postgres Flavor
        path: postgres.flavor
      - description: The name of the extension to deploy.
        displayName: Postgres Extensions Name
        path: postgres.extensions.name
      - description: The id of the publisher of the extension to deploy. If not specified
          `com.ongres` will be used by default.
        displayName: Postgres Extensions Publisher
        path: postgres.extensions.publisher
      - description: The version of the extension to deploy. If not specified version
          of `stable` channel will be used by default.
        displayName: Postgres Extensions Version
        path: postgres.extensions.version
      - description: The repository base URL from where to obtain the extension to
          deploy. If not specified https://stackgres.io/downloads/postgres/extensions
          will be used by default (or the value specified during operator deployment).
        displayName: Postgres Extensions Repository
        path: postgres.extensions.repository
      - description: |
          Allow to enable SSL for connections to Postgres. By default is `false`.

          If `true` certificate and private key will be auto-generated unless fields `certificateSecretKeySelector` and `privateKeySecretKeySelector` are specified.
        displayName: Postgres Ssl Enabled
        path: postgres.ssl.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Secret key selector for the certificate or certificate chain used for SSL connections.
        displayName: Postgres Ssl Certificate Secret Key Selector
        path: postgres.ssl.certificateSecretKeySelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The name of Secret that contains the certificate or certificate chain for SSL connections
        displayName: Postgres Ssl Certificate Secret Key Selector Name
        path: postgres.ssl.certificateSecretKeySelector.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The key of Secret that contains the certificate or certificate chain for SSL connections
        displayName: Postgres Ssl Certificate Secret Key Selector Key
        path: postgres.ssl.certificateSecretKeySelector.key
      - description: |
          Secret key selector for the private key used for SSL connections.
        displayName: Postgres Ssl Private Key Secret Key Selector
        path: postgres.ssl.privateKeySecretKeySelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The name of Secret that contains the private key for SSL connections
        displayName: Postgres Ssl Private Key Secret Key Selector Name
        path: postgres.ssl.privateKeySecretKeySelector.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The key of Secret that contains the private key for SSL connections
        displayName: Postgres Ssl Private Key Secret Key Selector Key
        path: postgres.ssl.privateKeySecretKeySelector.key
      - description: |
          Number of StackGres instances for the cluster. Each instance contains one Postgres server.
           Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
        displayName: Instances
        path: instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: |
          The replication mode applied to the whole cluster.
          Possible values are:
          * `async` (default)
          * `sync`
          * `strict-sync`
          * `sync-all`
          * `strict-sync-all`

          ### `async` Mode

          When in asynchronous mode the cluster is allowed to lose some committed transactions.
           When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
           will automatically be promoted to primary. Any transactions that have not been replicated to that standby
           remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
           but recovering it requires a manual recovery effort by data recovery specialists).

          ### `sync` Mode

          When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
           transactions that may have returned a successful commit status to client (clients can change the behavior
           per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
           values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
           means that the system may be unavailable for writes even though some servers are available. System
           administrators can still use manual failover commands to promote a standby even if it results in transaction
           loss.

          Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
           standby is available, primary server will still accept writes, but does not guarantee their replication. When
           the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
           back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
           makes synchronous mode usable with 2 node clusters.

          When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
           mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
           signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.

          ### `strict-sync` Mode

          When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
           synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
           standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
           transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
           synchronous replica comes up.

          **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
           transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
           replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
           visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.

          ### `sync-all` Mode

          The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.

          ### `strict-sync-all` Mode

          The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.
        displayName: Replication Mode
        path: replication.mode
      - description: |
          This role is applied to the instances of the implicit replication group that is composed by `.spec.instances` number of instances.
          Possible values are:
          * `ha-read` (default)
          * `ha`
          The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
          Only if the role is set to `ha-read` instances of main replication group will be exposed via the replicas service.
        displayName: Replication Role
        path: replication.role
      - description: |
          Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
           Only setteable if mode is `sync` or `strict-sync`.
        displayName: Replication Sync Instances
        path: replication.syncInstances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The name of the replication group. If not set will default to
          the `group-<index>`.
        displayName: Replication Groups Name
        path: replication.groups.name
      - description: |
          This role is applied to the instances of this replication group.
          Possible values are:
          * `ha-read`
          * `ha`
          * `readonly`
          * `none`
          The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
          Only if the role is set to `readonly` or `ha-read` instances of such replication group will be exposed via the replicas service.
        displayName: Replication Groups Role
        path: replication.groups.role
      - description: |
          Number of StackGres instances for this replication group.

          The total number of instance of a cluster is always `.spec.instances`. The sum of the instances in the replication group must be
           less than the total number of instances.
        displayName: Replication Groups Instances
        path: replication.groups.instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: |
          Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
        displayName: SGInstanceProfile
        path: sgInstanceProfile
      - displayName: Metadata Annotations All Resources
        path: metadata.annotations.allResources
      - displayName: Metadata Annotations Cluster Pods
        path: metadata.annotations.clusterPods
      - displayName: Metadata Annotations Services
        path: metadata.annotations.services
      - displayName: Metadata Annotations Primary Service
        path: metadata.annotations.primaryService
      - displayName: Metadata Annotations Replicas Service
        path: metadata.annotations.replicasService
      - displayName: Metadata Labels Cluster Pods
        path: metadata.labels.clusterPods
      - displayName: Metadata Labels Services
        path: metadata.labels.services
      - description: Specify if the service should be created or not.
        displayName: Postgres Services Primary Enabled
        path: postgresServices.primary.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
          a cluster-internal IP address for load-balancing to endpoints.
          "NodePort" builds on ClusterIP and allocates a port on every node.
          "LoadBalancer" builds on NodePort and creates
          an external load-balancer (if supported in the current cloud).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        displayName: Postgres Services Primary Type
        path: postgresServices.primary.type
      - description: allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may
          be set to "false" if the cluster load-balancer does not rely on NodePorts.  If
          the caller requests specific NodePorts (by specifying a value), those requests
          will be respected, regardless of this field. This field may only be set
          for services with type LoadBalancer and will be cleared if the type is changed
          to any other type.
        displayName: Postgres Services Primary Allocate Load Balancer Node Ports
        path: postgresServices.primary.allocateLoadBalancerNodePorts
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Postgres Services Primary External I Ps
        path: postgresServices.primary.externalIPs
      - description: |+
          externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.

        displayName: Postgres Services Primary External Traffic Policy
        path: postgresServices.primary.externalTrafficPolicy
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type). This field cannot be updated once set.
        displayName: Postgres Services Primary Health Check Node Port
        path: postgresServices.primary.healthCheckNodePort
      - description: InternalTrafficPolicy describes how nodes distribute service
          traffic they receive on the ClusterIP. If set to "Local", the proxy will
          assume that pods only want to talk to endpoints of the service on the same
          node as the pod, dropping the traffic if there are no local endpoints. The
          default value, "Cluster", uses the standard behavior of routing to all endpoints
          evenly (possibly modified by topology and other features).
        displayName: Postgres Services Primary Internal Traffic Policy
        path: postgresServices.primary.internalTrafficPolicy
      - displayName: Postgres Services Primary Ip Families
        path: postgresServices.primary.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service. If there is no value provided, then this field will be
          set to SingleStack. Services can be "SingleStack" (a single IP family),
          "PreferDualStack" (two IP families on dual-stack configured clusters or
          a single IP family on single-stack clusters), or "RequireDualStack" (two
          IP families on dual-stack configured clusters, otherwise fail). The ipFamilies
          and clusterIPs fields depend on the value of this field. This field will
          be wiped when updating a service to type ExternalName.
        displayName: Postgres Services Primary Ip Family Policy
        path: postgresServices.primary.ipFamilyPolicy
      - description: loadBalancerClass is the class of the load balancer implementation
          this Service belongs to. If specified, the value of this field must be a
          label-style identifier, with an optional prefix, e.g. "internal-vip" or
          "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not
          set, the default load balancer implementation is used, today this is typically
          done through the cloud provider integration, but should apply for any default
          implementation. If set, it is assumed that a load balancer implementation
          is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this
          field. This field can only be set when creating or updating a Service to
          type 'LoadBalancer'. Once set, it can not be changed. This field will be
          wiped when a service is updated to a non 'LoadBalancer' type.
        displayName: Postgres Services Primary Load Balancer Class
        path: postgresServices.primary.loadBalancerClass
      - description: 'Only applies to Service Type: LoadBalancer. This feature depends
          on whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature. Deprecated: This field was under-specified
          and its meaning varies across implementations, and it cannot support dual-stack.
          As of Kubernetes v1.24, users are encouraged to use implementation-specific
          annotations when available. This field may be removed in a future API version.'
        displayName: Postgres Services Primary Load Balancer IP
        path: postgresServices.primary.loadBalancerIP
      - displayName: Postgres Services Primary Load Balancer Source Ranges
        path: postgresServices.primary.loadBalancerSourceRanges
      - description: |+
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

        displayName: Postgres Services Primary Session Affinity
        path: postgresServices.primary.sessionAffinity
      - description: timeoutSeconds specifies the seconds of ClientIP type session
          sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
          == "ClientIP". Default value is 10800(for 3 hours).
        displayName: Postgres Services Primary Session Affinity Config Client IP Timeout
          Seconds
        path: postgresServices.primary.sessionAffinityConfig.clientIP.timeoutSeconds
      - description: Specify if the service should be created or not.
        displayName: Postgres Services Replicas Enabled
        path: postgresServices.replicas.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
          a cluster-internal IP address for load-balancing to endpoints.
          "NodePort" builds on ClusterIP and allocates a port on every node.
          "LoadBalancer" builds on NodePort and creates
          an external load-balancer (if supported in the current cloud).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        displayName: Postgres Services Replicas Type
        path: postgresServices.replicas.type
      - description: allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may
          be set to "false" if the cluster load-balancer does not rely on NodePorts.  If
          the caller requests specific NodePorts (by specifying a value), those requests
          will be respected, regardless of this field. This field may only be set
          for services with type LoadBalancer and will be cleared if the type is changed
          to any other type.
        displayName: Postgres Services Replicas Allocate Load Balancer Node Ports
        path: postgresServices.replicas.allocateLoadBalancerNodePorts
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Postgres Services Replicas External I Ps
        path: postgresServices.replicas.externalIPs
      - description: |+
          externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.

        displayName: Postgres Services Replicas External Traffic Policy
        path: postgresServices.replicas.externalTrafficPolicy
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type). This field cannot be updated once set.
        displayName: Postgres Services Replicas Health Check Node Port
        path: postgresServices.replicas.healthCheckNodePort
      - description: InternalTrafficPolicy describes how nodes distribute service
          traffic they receive on the ClusterIP. If set to "Local", the proxy will
          assume that pods only want to talk to endpoints of the service on the same
          node as the pod, dropping the traffic if there are no local endpoints. The
          default value, "Cluster", uses the standard behavior of routing to all endpoints
          evenly (possibly modified by topology and other features).
        displayName: Postgres Services Replicas Internal Traffic Policy
        path: postgresServices.replicas.internalTrafficPolicy
      - displayName: Postgres Services Replicas Ip Families
        path: postgresServices.replicas.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service. If there is no value provided, then this field will be
          set to SingleStack. Services can be "SingleStack" (a single IP family),
          "PreferDualStack" (two IP families on dual-stack configured clusters or
          a single IP family on single-stack clusters), or "RequireDualStack" (two
          IP families on dual-stack configured clusters, otherwise fail). The ipFamilies
          and clusterIPs fields depend on the value of this field. This field will
          be wiped when updating a service to type ExternalName.
        displayName: Postgres Services Replicas Ip Family Policy
        path: postgresServices.replicas.ipFamilyPolicy
      - description: loadBalancerClass is the class of the load balancer implementation
          this Service belongs to. If specified, the value of this field must be a
          label-style identifier, with an optional prefix, e.g. "internal-vip" or
          "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not
          set, the default load balancer implementation is used, today this is typically
          done through the cloud provider integration, but should apply for any default
          implementation. If set, it is assumed that a load balancer implementation
          is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this
          field. This field can only be set when creating or updating a Service to
          type 'LoadBalancer'. Once set, it can not be changed. This field will be
          wiped when a service is updated to a non 'LoadBalancer' type.
        displayName: Postgres Services Replicas Load Balancer Class
        path: postgresServices.replicas.loadBalancerClass
      - description: 'Only applies to Service Type: LoadBalancer. This feature depends
          on whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature. Deprecated: This field was under-specified
          and its meaning varies across implementations, and it cannot support dual-stack.
          As of Kubernetes v1.24, users are encouraged to use implementation-specific
          annotations when available. This field may be removed in a future API version.'
        displayName: Postgres Services Replicas Load Balancer IP
        path: postgresServices.replicas.loadBalancerIP
      - displayName: Postgres Services Replicas Load Balancer Source Ranges
        path: postgresServices.replicas.loadBalancerSourceRanges
      - description: |+
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

        displayName: Postgres Services Replicas Session Affinity
        path: postgresServices.replicas.sessionAffinity
      - description: timeoutSeconds specifies the seconds of ClientIP type session
          sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
          == "ClientIP". Default value is 10800(for 3 hours).
        displayName: Postgres Services Replicas Session Affinity Config Client IP
          Timeout Seconds
        path: postgresServices.replicas.sessionAffinityConfig.clientIP.timeoutSeconds
      - description: |
          Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Pods Persistent Volume Size
        path: pods.persistentVolume.size
      - description: |
          Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
        displayName: Pods Persistent Volume Storage Class
        path: pods.persistentVolume.storageClass
      - description: If set to `true`, avoids creating a connection pooling (using
          [PgBouncer](https://www.pgbouncer.org/)) sidecar.
        displayName: Pods Disable Connection Pooling
        path: pods.disableConnectionPooling
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the Prometheus exporter sidecar.
          Recommended when there's no intention to use Prometheus for monitoring.
        displayName: Pods Disable Metrics Exporter
        path: pods.disableMetricsExporter
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the `postgres-util` sidecar.
          This sidecar contains usual Postgres administration utilities *that are
          not present in the main (`patroni`) container*, like `psql`. Only disable
          if you know what you are doing.
        displayName: Pods Disable Postgres Util
        path: pods.disablePostgresUtil
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: When enabled resource limits for containers other than the patroni
          container wil be set just like for patroni contianer as specified in the
          SGInstanceProfile.
        displayName: Pods Resources Enable Cluster Limits Requirements
        path: pods.resources.enableClusterLimitsRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Pods Scheduling Node Selector
        path: pods.scheduling.nodeSelector
      - description: |
          The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core
        displayName: Pods Scheduling Tolerations
        path: pods.scheduling.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Pods Scheduling Node Affinity
        path: pods.scheduling.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Pods Scheduling Priority Class Name
        path: pods.scheduling.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Pods Scheduling Pod Affinity
        path: pods.scheduling.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Pods Scheduling Pod Anti Affinity
        path: pods.scheduling.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          TopologySpreadConstraint specifies how to spread matching pods among the given topology.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#topologyspreadconstraint-v1-core
        displayName: Pods Scheduling Topology Spread Constraints
        path: pods.scheduling.topologySpreadConstraints
      - displayName: Pods Scheduling Backup Node Selector
        path: pods.scheduling.backup.nodeSelector
      - description: |
          The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core
        displayName: Pods Scheduling Backup Tolerations
        path: pods.scheduling.backup.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Pods Scheduling Backup Node Affinity
        path: pods.scheduling.backup.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Pods Scheduling Backup Priority Class Name
        path: pods.scheduling.backup.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Pods Scheduling Backup Pod Affinity
        path: pods.scheduling.backup.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Pods Scheduling Backup Pod Anti Affinity
        path: pods.scheduling.backup.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          managementPolicy controls how pods are created during initial scale up, when replacing pods
           on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
           in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
           ready before continuing. When scaling down, the pods are removed in the opposite order.
           The alternative policy is `Parallel` which will create pods in parallel to match the desired
           scale without waiting, and on scale down will delete all pods at once.
        displayName: Pods Management Policy
        path: pods.managementPolicy
      - description: |
          Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
        displayName: Configurations SGPostgresConfig
        path: configurations.sgPostgresConfig
      - description: |
          Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

          If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
        displayName: Configurations SGPoolingConfig
        path: configurations.sgPoolingConfig
      - description: |
          **Deprecated**: use instead .spec.configurations.backups with sgObjectStorage.

          Name of the [SGBackupConfig](https://stackgres.io/doc/latest/reference/crd/sgbackupconfig) to use for the cluster. It defines the backups policy, storage and retention, among others, applied to the cluster. When not set, backup configuration will not be used.
        displayName: Configurations SGBackup Config
        path: configurations.sgBackupConfig
      - description: |
          **Deprecated**: use instead .spec.configurations.backups[].path

          The path were the backup is stored. If not set this field is filled up by the operator.

          When provided will indicate were the backups and WAL files will be stored.
        displayName: Configurations Backup Path
        path: configurations.backupPath
      - description: |
          Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
        displayName: Configurations Backups Compression
        path: configurations.backups.compression
      - description: |
          Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

          Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
          *  `m`: minute, 0 to 59.
          *  `h`: hour, 0 to 23.
          *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
          *  `mon`: month, 1 to 12.
          *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).

          Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

          If not set, full backups are performed each day at 05:00 UTC.
        displayName: Configurations Backups Cron Schedule
        path: configurations.backups.cronSchedule
      - description: |
          Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
        displayName: Configurations Backups Performance Max Network Bandwidth
        path: configurations.backups.performance.maxNetworkBandwidth
      - description: |
          Maximum disk read I/O when performing a backup. In bytes (per second).
        displayName: Configurations Backups Performance Max Disk Bandwidth
        path: configurations.backups.performance.maxDiskBandwidth
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1.
        displayName: Configurations Backups Performance Upload Disk Concurrency
        path: configurations.backups.performance.uploadDiskConcurrency
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 16.
        displayName: Configurations Backups Performance Upload Concurrency
        path: configurations.backups.performance.uploadConcurrency
      - description: |
          Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
        displayName: Configurations Backups Performance Download Concurrency
        path: configurations.backups.performance.downloadConcurrency
      - description: |
          When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.

          Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

          Default is 5.
        displayName: Configurations Backups Retention
        path: configurations.backups.retention
      - description: |
          Name of the [SGObjectStorage](https://stackgres.io/doc/latest/reference/crd/sgobjectstorage) to use for the cluster. It defines the location in which the the backups will be stored.
        displayName: Configurations Backups SGObjectStorage
        path: configurations.backups.sgObjectStorage
      - description: |
          The path were the backup is stored. If not set this field is filled up by the operator.

          When provided will indicate were the backups and WAL files will be stored.
        displayName: Configurations Backups Path
        path: configurations.backups.path
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Patroni Rest Api Password Name
        path: configurations.credentials.patroni.restApiPassword.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Patroni Rest Api Password Key
        path: configurations.credentials.patroni.restApiPassword.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Superuser Username Name
        path: configurations.credentials.users.superuser.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Superuser Username Key
        path: configurations.credentials.users.superuser.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Superuser Password Name
        path: configurations.credentials.users.superuser.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Superuser Password Key
        path: configurations.credentials.users.superuser.password.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Replication Username Name
        path: configurations.credentials.users.replication.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Replication Username Key
        path: configurations.credentials.users.replication.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Replication Password Name
        path: configurations.credentials.users.replication.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Replication Password Key
        path: configurations.credentials.users.replication.password.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Authenticator Username Name
        path: configurations.credentials.users.authenticator.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Authenticator Username Key
        path: configurations.credentials.users.authenticator.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Authenticator Password Name
        path: configurations.credentials.users.authenticator.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Authenticator Password Key
        path: configurations.credentials.users.authenticator.password.key
      - description: If true, when any entry of any `SGScript` fail will not prevent
          subsequent `SGScript` from being executed. By default is `false`.
        displayName: Managed Sql Continue On SG Script Error
        path: managedSql.continueOnSGScriptError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The id is immutable and must be unique across all the `SGScript`
          entries. It is replaced by the operator and is used to identify the `SGScript`
          entry.
        displayName: Managed Sql Scripts Id
        path: managedSql.scripts.id
      - description: A reference to an `SGScript`
        displayName: Managed Sql Scripts SGScript
        path: managedSql.scripts.sgScript
      - description: |
          When set to the UID of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the
           backup data to it. If not set, the cluster is initialized empty. This field is deprecated.
        displayName: Initial Data Restore From Backup Uid
        path: initialData.restore.fromBackup.uid
      - description: |
          When set to the name of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the
           backup data to it. If not set, the cluster is initialized empty. The selected backup must be in the same namespace.
        displayName: Initial Data Restore From Backup Name
        path: initialData.restore.fromBackup.name
      - description: |
          Specify the [recovery_target](https://postgresqlco.nf/doc/en/param/recovery_target/) that specifies that recovery should end as soon as a consistent
           state is reached, i.e., as early as possible. When restoring from an online backup, this means the point where taking the backup ended.

          Technically, this is a string parameter, but 'immediate' is currently the only allowed value.
        displayName: Initial Data Restore From Backup Target
        path: initialData.restore.fromBackup.target
      - description: |
          Specify the [recovery_target_timeline](https://postgresqlco.nf/doc/en/param/recovery_target_timeline/) to recover into a particular timeline.
           The default is to recover along the same timeline that was current when the base backup was taken. Setting this to latest recovers to the latest
           timeline found in the archive, which is useful in a standby server. Other than that you only need to set this parameter in complex re-recovery
           situations, where you need to return to a state that itself was reached after a point-in-time recovery.
        displayName: Initial Data Restore From Backup Target Timeline
        path: initialData.restore.fromBackup.targetTimeline
      - description: |
          Specify the [recovery_target_inclusive](https://postgresqlco.nf/doc/en/param/recovery_target_timeline/) to stop recovery just after the specified
           recovery target (true), or just before the recovery target (false). Applies when targetLsn, pointInTimeRecovery, or targetXid is specified. This
           setting controls whether transactions having exactly the target WAL location (LSN), commit time, or transaction ID, respectively, will be included
           in the recovery. Default is true.
        displayName: Initial Data Restore From Backup Target Inclusive
        path: initialData.restore.fromBackup.targetInclusive
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          [recovery_target_name](https://postgresqlco.nf/doc/en/param/recovery_target_name/) specifies the named restore point
           (created with pg_create_restore_point()) to which recovery will proceed.
        displayName: Initial Data Restore From Backup Target Name
        path: initialData.restore.fromBackup.targetName
      - description: |
          [recovery_target_xid](https://postgresqlco.nf/doc/en/param/recovery_target_xid/) specifies the transaction ID up to which recovery will proceed.
           Keep in mind that while transaction IDs are assigned sequentially at transaction start, transactions can complete in a different numeric order.
           The transactions that will be recovered are those that committed before (and optionally including) the specified one. The precise stopping point
           is also influenced by targetInclusive.
        displayName: Initial Data Restore From Backup Target Xid
        path: initialData.restore.fromBackup.targetXid
      - description: |
          [recovery_target_lsn](https://postgresqlco.nf/doc/en/param/recovery_target_lsn/) specifies the LSN of the write-ahead log location up to which
           recovery will proceed. The precise stopping point is also influenced by targetInclusive. This parameter is parsed using the system data type
           pg_lsn.
        displayName: Initial Data Restore From Backup Target Lsn
        path: initialData.restore.fromBackup.targetLsn
      - description: |
          An ISO 8601 date, that holds UTC date indicating at which point-in-time the database have to be restored.
        displayName: Initial Data Restore From Backup Point In Time Recovery Restore
          To Timestamp
        path: initialData.restore.fromBackup.pointInTimeRecovery.restoreToTimestamp
      - description: |
          The backup fetch process may fetch several streams in parallel. Parallel fetching is enabled when set to a value larger than one.

          If not specified it will be interpreted as latest.
        displayName: Initial Data Restore Download Disk Concurrency
        path: initialData.restore.downloadDiskConcurrency
      - description: |
          Name of the script. Must be unique across this SGCluster.
        displayName: Initial Data Scripts Name
        path: initialData.scripts.name
      - description: |
          Database where the script is executed. Defaults to the `postgres` database, if not specified.
        displayName: Initial Data Scripts Database
        path: initialData.scripts.database
      - description: |
          Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
        displayName: Initial Data Scripts Script
        path: initialData.scripts.script
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Initial Data Scripts Script From Secret Key Ref Name
        path: initialData.scripts.scriptFrom.secretKeyRef.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Initial Data Scripts Script From Secret Key Ref Key
        path: initialData.scripts.scriptFrom.secretKeyRef.key
      - description: |
          The name of the ConfigMap that contains the SQL script to execute.
        displayName: Initial Data Scripts Script From Config Map Key Ref Name
        path: initialData.scripts.scriptFrom.configMapKeyRef.name
      - description: |
          The key name within the ConfigMap that contains the SQL script to execute.
        displayName: Initial Data Scripts Script From Config Map Key Ref Key
        path: initialData.scripts.scriptFrom.configMapKeyRef.key
      - description: |
          Configure replication from an SGCluster.
        displayName: Replicate From Instance SGCluster Reference
        path: replicateFrom.instance.sgCluster
      - description: The host of the PostgreSQL to replicate from.
        displayName: Replicate From Instance External Host
        path: replicateFrom.instance.external.host
      - description: The port of the PostgreSQL to replicate from.
        displayName: Replicate From Instance External Port
        path: replicateFrom.instance.external.port
      - description: |
          Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
        displayName: Replicate From Storage Performance Max Network Bandwidth
        path: replicateFrom.storage.performance.maxNetworkBandwidth
      - description: |
          Maximum disk read I/O when performing a backup. In bytes (per second).
        displayName: Replicate From Storage Performance Max Disk Bandwidth
        path: replicateFrom.storage.performance.maxDiskBandwidth
      - description: |
          Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
        displayName: Replicate From Storage Performance Download Concurrency
        path: replicateFrom.storage.performance.downloadConcurrency
      - description: The SGObjectStorage name to replicate from.
        displayName: Replicate From Storage SGObjectStorage
        path: replicateFrom.storage.sgObjectStorage
      - description: The path in the SGObjectStorage to replicate from.
        displayName: Replicate From Storage Path
        path: replicateFrom.storage.path
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
        displayName: Replicate From Users Superuser Username
        path: replicateFrom.users.superuser.username
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Superuser Username Name
        path: replicateFrom.users.superuser.username.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Superuser Username Key
        path: replicateFrom.users.superuser.username.key
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
        displayName: Replicate From Users Superuser Password
        path: replicateFrom.users.superuser.password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Superuser Password Name
        path: replicateFrom.users.superuser.password.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Superuser Password Key
        path: replicateFrom.users.superuser.password.key
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
        displayName: Replicate From Users Replication Username
        path: replicateFrom.users.replication.username
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Replication Username Name
        path: replicateFrom.users.replication.username.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Replication Username Key
        path: replicateFrom.users.replication.username.key
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
        displayName: Replicate From Users Replication Password
        path: replicateFrom.users.replication.password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Replication Password Name
        path: replicateFrom.users.replication.password.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Replication Password Key
        path: replicateFrom.users.replication.password.key
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
        displayName: Replicate From Users Authenticator Username
        path: replicateFrom.users.authenticator.username
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Authenticator Username Name
        path: replicateFrom.users.authenticator.username.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Authenticator Username Key
        path: replicateFrom.users.authenticator.username.key
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
        displayName: Replicate From Users Authenticator Password
        path: replicateFrom.users.authenticator.password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Replicate From Users Authenticator Password Name
        path: replicateFrom.users.authenticator.password.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Replicate From Users Authenticator Password Key
        path: replicateFrom.users.authenticator.password.key
      - description: |
          If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
        displayName: Prometheus Autobind
        path: prometheusAutobind
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

          The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
        displayName: Non Production Options Disable Cluster Pod Anti Affinity
        path: nonProductionOptions.disableClusterPodAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
        displayName: Non Production Options Disable Patroni Resource Requirements
        path: nonProductionOptions.disablePatroniResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
        displayName: Non Production Options Disable Cluster Resource Requirements
        path: nonProductionOptions.disableClusterResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
           when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Cpu Requests
        path: nonProductionOptions.enableSetPatroniCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Cpu Requests
        path: nonProductionOptions.enableSetClusterCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
           when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Memory Requests
        path: nonProductionOptions.enableSetPatroniMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Memory Requests
        path: nonProductionOptions.enableSetClusterMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the fature gate to enable.
        displayName: Non Production Options Enabled Feature Gates
        path: nonProductionOptions.enabledFeatureGates
      - description: |
          Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/04-postgres-cluster-management/06-distributed-logs/) to use for this cluster. It must exist.
        displayName: SGDistributedLogs Reference
        path: distributedLogs.sgDistributedLogs
      - description: |
          Define a retention window with the syntax `<integer> (minutes|hours|days|months)` in which log entries are kept.
           Log entries will be removed when they get older more than the double of the specified retention window.

          When this field is changed the retention will be applied only to log entries that are newer than the end of
           the retention window previously specified. If no retention window was previously specified it is considered
           to be of 7 days. This means that if previous retention window is of `7 days` new retention configuration will
           apply after UTC timestamp calculated with: `SELECT date_trunc('days', now() at time zone 'UTC') - INTERVAL '7 days'`.
        displayName: Distributed Logs Retention
        path: distributedLogs.retention
      - description: The name of the extension to install.
        displayName: To Install Postgres Extensions Name
        path: toInstallPostgresExtensions.name
      - description: The id of the publisher of the extension to install.
        displayName: To Install Postgres Extensions Publisher
        path: toInstallPostgresExtensions.publisher
      - description: The version of the extension to install.
        displayName: To Install Postgres Extensions Version
        path: toInstallPostgresExtensions.version
      - description: The repository base URL from where the extension will be installed
          from.
        displayName: To Install Postgres Extensions Repository
        path: toInstallPostgresExtensions.repository
      - description: The postgres major version of the extension to install.
        displayName: To Install Postgres Extensions Postgres Version
        path: toInstallPostgresExtensions.postgresVersion
      - description: The build version of the extension to install.
        displayName: To Install Postgres Extensions Build
        path: toInstallPostgresExtensions.build
      - description: The extra mount of the installed extension.
        displayName: To Install Postgres Extensions Extra Mounts
        path: toInstallPostgresExtensions.extraMounts
      statusDescriptors:
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: Last time the condition transitioned from one status to another.
        displayName: Conditions Last Transition Time
        path: conditions.lastTransitionTime
      - description: A human readable message indicating details about the transition.
        displayName: Conditions Message
        path: conditions.message
      - description: The reason for the condition's last transition.
        displayName: Conditions Reason
        path: conditions.reason
      - description: Status of the condition, one of True, False, Unknown.
        displayName: Conditions Status
        path: conditions.status
      - description: Type of deployment condition.
        displayName: Conditions Type
        path: conditions.type
      - description: The name of the pod.
        displayName: Pod Statuses Name
        path: podStatuses.name
      - description: Indicates the replication group this Pod belongs to.
        displayName: Pod Statuses Replication Group
        path: podStatuses.replicationGroup
      - description: Indicates if the pod is the elected primary
        displayName: Pod Statuses Primary
        path: podStatuses.primary
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Indicates if the pod requires restart
        displayName: Pod Statuses Pending Restart
        path: podStatuses.pendingRestart
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Name
        path: podStatuses.installedPostgresExtensions.name
      - description: The id of the publisher of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Publisher
        path: podStatuses.installedPostgresExtensions.publisher
      - description: The version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Version
        path: podStatuses.installedPostgresExtensions.version
      - description: The repository base URL from where the extension was installed
          from.
        displayName: Pod Statuses Installed Postgres Extensions Repository
        path: podStatuses.installedPostgresExtensions.repository
      - description: The postgres major version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Postgres Version
        path: podStatuses.installedPostgresExtensions.postgresVersion
      - description: The build version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Build
        path: podStatuses.installedPostgresExtensions.build
      - description: The extra mount of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Extra Mounts
        path: podStatuses.installedPostgresExtensions.extraMounts
      - displayName: Db Ops Major Version Upgrade Initial Instances
        path: dbOps.majorVersionUpgrade.initialInstances
      - description: |
          The primary instance that this operation is targetting
        displayName: Db Ops Major Version Upgrade Primary Instance
        path: dbOps.majorVersionUpgrade.primaryInstance
      - description: |
          The source PostgreSQL version
        displayName: Db Ops Major Version Upgrade Source Postgres Version
        path: dbOps.majorVersionUpgrade.sourcePostgresVersion
      - description: |
          The source SGPostgresConfig reference
        displayName: Db Ops Major Version Upgrade Source SGPostgresConfig
        path: dbOps.majorVersionUpgrade.sourceSgPostgresConfig
      - description: |
          The source backup path
        displayName: Db Ops Major Version Upgrade Source Backup Path
        path: dbOps.majorVersionUpgrade.sourceBackupPath
      - description: |
          The target PostgreSQL version
        displayName: Db Ops Major Version Upgrade Target Postgres Version
        path: dbOps.majorVersionUpgrade.targetPostgresVersion
      - description: |
          The PostgreSQL locale
        displayName: Db Ops Major Version Upgrade Locale
        path: dbOps.majorVersionUpgrade.locale
      - description: |
          The PostgreSQL encoding
        displayName: Db Ops Major Version Upgrade Encoding
        path: dbOps.majorVersionUpgrade.encoding
      - description: |
          Indicates if PostgreSQL data checksum is enabled
        displayName: Db Ops Major Version Upgrade Data Checksum
        path: dbOps.majorVersionUpgrade.dataChecksum
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Use `--link` option when running `pg_upgrade`
        displayName: Db Ops Major Version Upgrade Link
        path: dbOps.majorVersionUpgrade.link
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Use `--clone` option when running `pg_upgrade`
        displayName: Db Ops Major Version Upgrade Clone
        path: dbOps.majorVersionUpgrade.clone
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Run `pg_upgrade` with check option instead of performing the real upgrade
        displayName: Db Ops Major Version Upgrade Check
        path: dbOps.majorVersionUpgrade.check
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Indicates to rollback from a previous major version upgrade
        displayName: Db Ops Major Version Upgrade Rollback
        path: dbOps.majorVersionUpgrade.rollback
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Db Ops Restart Initial Instances
        path: dbOps.restart.initialInstances
      - description: |
          The primary instance that this operation is targetting
        displayName: Db Ops Restart Primary Instance
        path: dbOps.restart.primaryInstance
      - displayName: Db Ops Minor Version Upgrade Initial Instances
        path: dbOps.minorVersionUpgrade.initialInstances
      - description: |
          The primary instance that this operation is targetting
        displayName: Db Ops Minor Version Upgrade Primary Instance
        path: dbOps.minorVersionUpgrade.primaryInstance
      - description: |
          Postgres version that is currently running on the cluster
        displayName: Db Ops Minor Version Upgrade Source Postgres Version
        path: dbOps.minorVersionUpgrade.sourcePostgresVersion
      - description: |
          The desired Postgres version for the cluster
        displayName: Db Ops Minor Version Upgrade Target Postgres Version
        path: dbOps.minorVersionUpgrade.targetPostgresVersion
      - displayName: Db Ops Security Upgrade Initial Instances
        path: dbOps.securityUpgrade.initialInstances
      - description: |
          The primary instance that this operation is targetting
        displayName: Db Ops Security Upgrade Primary Instance
        path: dbOps.securityUpgrade.primaryInstance
      - description: The architecture on which the cluster has been initialized.
        displayName: Arch
        path: arch
      - description: The operative system on which the cluster has been initialized.
        displayName: Os
        path: os
      - description: The custom prefix that is prepended to all labels.
        displayName: Label Prefix
        path: labelPrefix
      - description: Identify the associated `SGScript` entry with the same value
          in the `id` field.
        displayName: Managed Sql Scripts Id
        path: managedSql.scripts.id
      - description: ISO-8601 datetime of when the script execution has been started.
        displayName: Managed Sql Scripts Started At
        path: managedSql.scripts.startedAt
      - description: ISO-8601 datetime of when the last script execution occurred.
          Will be reset each time the referenced `SGScripts` entry will be applied.
        displayName: Managed Sql Scripts Updated At
        path: managedSql.scripts.updatedAt
      - description: ISO-8601 datetime of when the script execution had failed (mutually
          exclusive with `completedAt`).
        displayName: Managed Sql Scripts Failed At
        path: managedSql.scripts.failedAt
      - description: ISO-8601 datetime of when the script execution had completed
          (mutually exclusive with `failedAt`).
        displayName: Managed Sql Scripts Completed At
        path: managedSql.scripts.completedAt
      - description: Identify the associated script entry with the same value in the
          `id` field.
        displayName: Managed Sql Scripts Scripts Id
        path: managedSql.scripts.scripts.id
      - description: The latest version applied
        displayName: Managed Sql Scripts Scripts Version
        path: managedSql.scripts.scripts.version
      - description: Indicates the number of intents or failures occurred
        displayName: Managed Sql Scripts Scripts Intents
        path: managedSql.scripts.scripts.intents
      - description: If failed, the error code of the failure. See also https://www.postgresql.org/docs/current/errcodes-appendix.html
        displayName: Managed Sql Scripts Scripts Failure Code
        path: managedSql.scripts.scripts.failureCode
      - description: If failed, a message of the failure
        displayName: Managed Sql Scripts Scripts Failure
        path: managedSql.scripts.scripts.failure
      version: v1
    - description: Operator configuration for OLM-based installations (equivalent
        to values.yaml with Helm)
      displayName: StackGres Operator Configuration
      kind: SGConfig
      name: sgconfigs.stackgres.io
      version: v1
    - description: Day 2 Operations, including upgrades, restarts, vacuum, repack,
        etc
      displayName: StackGres Database Operation
      kind: SGDbOps
      name: sgdbops.stackgres.io
      specDescriptors:
      - description: |
          The name of SGCluster on which the operation will be performed.
        displayName: Target SGCluster
        path: sgCluster
      - displayName: Scheduling Node Selector
        path: scheduling.nodeSelector
      - description: |+
          Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.

        displayName: Scheduling Tolerations Effect
        path: scheduling.tolerations.effect
      - description: Key is the taint key that the toleration applies to. Empty means
          match all taint keys. If the key is empty, operator must be Exists; this
          combination means to match all values and all keys.
        displayName: Scheduling Tolerations Key
        path: scheduling.tolerations.key
      - description: |+
          Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.

        displayName: Scheduling Tolerations Operator
        path: scheduling.tolerations.operator
      - description: TolerationSeconds represents the period of time the toleration
          (which must be of effect NoExecute, otherwise this field is ignored) tolerates
          the taint. By default, it is not set, which means tolerate the taint forever
          (do not evict). Zero and negative values will be treated as 0 (evict immediately)
          by the system.
        displayName: Scheduling Tolerations Toleration Seconds
        path: scheduling.tolerations.tolerationSeconds
      - description: Value is the taint value the toleration matches to. If the operator
          is Exists, the value should be empty, otherwise just a regular string.
        displayName: Scheduling Tolerations Value
        path: scheduling.tolerations.value
      - description: The label key that the selector applies to.
        displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Expressions Key
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Expressions Operator
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Expressions Values
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Fields Key
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Fields Operator
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Preference Match Fields Values
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Scheduling Node Affinity Preferred During Scheduling Ignored
          During Execution Weight
        path: scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Expressions Key
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Expressions Operator
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Expressions Values
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Fields Key
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Fields Operator
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Scheduling Node Affinity Required During Scheduling Ignored During
          Execution Node Selector Terms Match Fields Values
        path: scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Scheduling Priority Class Name
        path: scheduling.priorityClassName
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Label Selector Match Expressions Key
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Label Selector Match Expressions Operator
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Label Selector Match Expressions Values
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Label Selector Match Labels
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Namespace Selector Match Expressions Key
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Namespace Selector Match Expressions Operator
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Namespace Selector Match Expressions Values
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Namespace Selector Match Labels
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Namespaces
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Pod Affinity Term Topology Key
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Scheduling Pod Affinity Preferred During Scheduling Ignored During
          Execution Weight
        path: scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Label Selector Match Expressions Key
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Label Selector Match Expressions Operator
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Label Selector Match Expressions Values
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Label Selector Match Labels
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Namespace Selector Match Expressions Key
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Namespace Selector Match Expressions Operator
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Namespace Selector Match Expressions Values
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Namespace Selector Match Labels
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Namespaces
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Scheduling Pod Affinity Required During Scheduling Ignored During
          Execution Topology Key
        path: scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Label Selector Match Expressions Key
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Label Selector Match Expressions Operator
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Label Selector Match Expressions Values
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Label Selector Match Labels
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Namespace Selector Match Expressions
          Key
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Namespace Selector Match Expressions
          Operator
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Namespace Selector Match Expressions
          Values
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Namespace Selector Match Labels
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Namespaces
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Pod Affinity Term Topology Key
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Scheduling Pod Anti Affinity Preferred During Scheduling Ignored
          During Execution Weight
        path: scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Label Selector Match Expressions Key
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Label Selector Match Expressions Operator
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Label Selector Match Expressions Values
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Label Selector Match Labels
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Namespace Selector Match Expressions Key
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Namespace Selector Match Expressions Operator
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Namespace Selector Match Expressions Values
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Namespace Selector Match Labels
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Namespaces
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Scheduling Pod Anti Affinity Required During Scheduling Ignored
          During Execution Topology Key
        path: scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: |
          The kind of operation that will be performed on the SGCluster. Available operations are:

          * `benchmark`: run a benchmark on the specified SGCluster and report the results in the status.
          * `vacuum`: perform a [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation on the specified SGCluster.
          * `repack`: run [`pg_repack`](https://github.com/reorg/pg_repack) command on the specified SGCluster.
          * `majorVersionUpgrade`: perform a major version upgrade of PostgreSQL using [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command.
          * `restart`: perform a restart of the cluster.
          * `minorVersionUpgrade`: perform a minor version upgrade of PostgreSQL.
          * `securityUpgrade`: perform a security upgrade of the cluster.
          * `upgrade`: perform a operator API upgrade of the cluster
        displayName: Op
        path: op
      - description: |
          An ISO 8601 date, that holds UTC scheduled date of the operation execution.

          If not specified or if the date it's in the past, it will be interpreted ASAP.
        displayName: Run At
        path: runAt
      - description: |
          An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies a timeout after which the operation execution will be canceled.

          If the operation can not be performed due to timeout expiration, the condition `Failed` will have a status of `True` and the reason will be `OperationTimedOut`.

          If not specified the operation will never fail for timeout expiration.
        displayName: Timeout
        path: timeout
      - description: |
          The maximum number of retries the operation is allowed to do after a failure.

          A value of `0` (zero) means no retries are made. Can not be greater than `10`. Defaults to: `0`.
        displayName: Max Retries
        path: maxRetries
      - description: |
          The type of benchmark that will be performed on the SGCluster. Available benchmarks are:

          * `pgbench`: run [pgbench](https://www.postgresql.org/docs/current/pgbench.html) on the specified SGCluster and report the results in the status.
        displayName: Benchmark Type
        path: benchmark.type
      - description: |
          Size of the database to generate. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Benchmark Pgbench Database Size
        path: benchmark.pgbench.databaseSize
      - description: |
          An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long the benchmark will run.
        displayName: Benchmark Pgbench Duration
        path: benchmark.pgbench.duration
      - description: |
          Use extended query protocol with prepared statements. Defaults to: `false`.
        displayName: Benchmark Pgbench Use Prepared Statements
        path: benchmark.pgbench.usePreparedStatements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Number of clients simulated, that is, number of concurrent database sessions. Defaults to: `1`.
        displayName: Benchmark Pgbench Concurrent Clients
        path: benchmark.pgbench.concurrentClients
      - description: |
          Number of worker threads within pgbench. Using more than one thread can be helpful on multi-CPU machines. Clients are distributed as evenly as possible among available threads. Default is `1`.
        displayName: Benchmark Pgbench Threads
        path: benchmark.pgbench.threads
      - description: |
          Specify the service where the benchmark will connect to:

          * `primary-service`: Connect to the primary service
          * `replicas-service`: Connect to the replicas service
        displayName: Benchmark Connection Type
        path: benchmark.connectionType
      - description: |
          If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
          This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
           until the operation is complete. Usually this should only be used when a significant amount of space needs to be
           reclaimed from within the table. Defaults to: `false`.
        displayName: Vacuum Full
        path: vacuum.full
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
           vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
           when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
        displayName: Vacuum Freeze
        path: vacuum.freeze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
        displayName: Vacuum Analyze
        path: vacuum.analyze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
           skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
           aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
           waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
           used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
           software issue causing database corruption. Defaults to: `false`.
        displayName: Vacuum Disable Page Skipping
        path: vacuum.disablePageSkipping
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: the name of the database
        displayName: Vacuum Databases Name
        path: vacuum.databases.name
      - description: |
          If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
          This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
           until the operation is complete. Usually this should only be used when a significant amount of space needs to be
           reclaimed from within the table. Defaults to: `false`.
        displayName: Vacuum Databases Full
        path: vacuum.databases.full
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
           vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
           when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
        displayName: Vacuum Databases Freeze
        path: vacuum.databases.freeze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
        displayName: Vacuum Databases Analyze
        path: vacuum.databases.analyze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
           skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
           aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
           waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
           used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
           software issue causing database corruption. Defaults to: `false`.
        displayName: Vacuum Databases Disable Page Skipping
        path: vacuum.databases.disablePageSkipping
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true do vacuum full instead of cluster. Defaults to: `false`.
        displayName: Repack No Order
        path: repack.noOrder
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
        displayName: Repack Wait Timeout
        path: repack.waitTimeout
      - description: |
          If true don't kill other backends when timed out. Defaults to: `false`.
        displayName: Repack No Kill Backend
        path: repack.noKillBackend
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true don't analyze at end. Defaults to: `false`.
        displayName: Repack No Analyze
        path: repack.noAnalyze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true don't repack tables which belong to specific extension. Defaults to: `false`.
        displayName: Repack Exclude Extension
        path: repack.excludeExtension
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: the name of the database
        displayName: Repack Databases Name
        path: repack.databases.name
      - description: |
          If true do vacuum full instead of cluster. Defaults to: `false`.
        displayName: Repack Databases No Order
        path: repack.databases.noOrder
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
        displayName: Repack Databases Wait Timeout
        path: repack.databases.waitTimeout
      - description: |
          If true don't kill other backends when timed out. Defaults to: `false`.
        displayName: Repack Databases No Kill Backend
        path: repack.databases.noKillBackend
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true don't analyze at end. Defaults to: `false`.
        displayName: Repack Databases No Analyze
        path: repack.databases.noAnalyze
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true don't repack tables which belong to specific extension. Defaults to: `false`.
        displayName: Repack Databases Exclude Extension
        path: repack.databases.excludeExtension
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          The target postgres version that must have the same major version of the target SGCluster.
        displayName: Major Version Upgrade Postgres Version
        path: majorVersionUpgrade.postgresVersion
      - description: |
          The postgres config that must have the same major version of the target postgres version.
        displayName: Major Version Upgrade SGPostgresConfig
        path: majorVersionUpgrade.sgPostgresConfig
      - description: |
          The path were the backup is stored. If not set this field is filled up by the operator.

          When provided will indicate were the backups and WAL files will be stored.

          The path should be different from the current `.spec.configurations.backupPath` value for the target `SGCluster`
           in order to avoid mixing WAL files of two distinct major versions of postgres.
        displayName: Major Version Upgrade Backup Path
        path: majorVersionUpgrade.backupPath
      - description: |
          If true use hard links instead of copying files to the new cluster. This option is mutually exclusive with `clone`. Defaults to: `false`.
        displayName: Major Version Upgrade Link
        path: majorVersionUpgrade.link
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true use efficient file cloning (also known as "reflinks" on some systems) instead of copying files to the new cluster.
          This can result in near-instantaneous copying of the data files, giving the speed advantages of `link` while leaving the old
           cluster untouched. This option is mutually exclusive with `link`. Defaults to: `false`.

          File cloning is only supported on some operating systems and file systems. If it is selected but not supported, the pg_upgrade
           run will error. At present, it is supported on Linux (kernel 4.5 or later) with Btrfs and XFS (on file systems created with
           reflink support), and on macOS with APFS.
        displayName: Major Version Upgrade Clone
        path: majorVersionUpgrade.clone
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If true does some checks to see if the cluster can perform a major version upgrade without changing any data. Defaults to: `false`.
        displayName: Major Version Upgrade Check
        path: majorVersionUpgrade.check
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          The method used to perform the restart operation. Available methods are:

          * `InPlace`: the in-place method does not require more resources than those that are available.
            In case only an instance of the StackGres cluster is present this mean the service disruption will
            last longer so we encourage use the reduced impact restart and especially for a production environment.
          * `ReducedImpact`: this procedure is the same as the in-place method but require additional
            resources in order to spawn a new updated replica that will be removed when the procedure completes.
        displayName: Restart Method
        path: restart.method
      - description: |
          By default all Pods are restarted. Setting this option to `true` allow to restart only those Pods which
           are in pending restart state as detected by the operation. Defaults to: `false`.
        displayName: Restart Only Pending Restart
        path: restart.onlyPendingRestart
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          The target postgres version that must have the same major version of the target SGCluster.
        displayName: Minor Version Upgrade Postgres Version
        path: minorVersionUpgrade.postgresVersion
      - description: |
          The method used to perform the minor version upgrade operation. Available methods are:

          * `InPlace`: the in-place method does not require more resources than those that are available.
            In case only an instance of the StackGres cluster is present this mean the service disruption will
            last longer so we encourage use the reduced impact restart and especially for a production environment.
          * `ReducedImpact`: this procedure is the same as the in-place method but require additional
            resources in order to spawn a new updated replica that will be removed when the procedure completes.
        displayName: Minor Version Upgrade Method
        path: minorVersionUpgrade.method
      - description: |
          The method used to perform the security upgrade operation. Available methods are:

          * `InPlace`: the in-place method does not require more resources than those that are available.
            In case only an instance of the StackGres cluster is present this mean the service disruption will
            last longer so we encourage use the reduced impact restart and especially for a production environment.
          * `ReducedImpact`: this procedure is the same as the in-place method but require additional
            resources in order to spawn a new updated replica that will be removed when the procedure completes.
        displayName: Security Upgrade Method
        path: securityUpgrade.method
      statusDescriptors:
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: Last time the condition transitioned from one status to another.
        displayName: Conditions Last Transition Time
        path: conditions.lastTransitionTime
      - description: A human-readable message indicating details about the transition.
        displayName: Conditions Message
        path: conditions.message
      - description: The reason for the condition last transition.
        displayName: Conditions Reason
        path: conditions.reason
      - description: Status of the condition, one of `True`, `False` or `Unknown`.
        displayName: Conditions Status
        path: conditions.status
      - description: Type of deployment condition.
        displayName: Conditions Type
        path: conditions.type
      - description: |
          The number of retries performed by the operation
        displayName: Op Retries
        path: opRetries
      - description: |
          The ISO 8601 timestamp of when the operation started running
        displayName: Op Started
        path: opStarted
      - description: |
          The number of transactions processed.
        displayName: Benchmark Pgbench Transactions Processed
        path: benchmark.pgbench.transactionsProcessed
      - description: |
          The latency measure unit represented in milliseconds
        displayName: Benchmark Pgbench Latency Average Unit
        path: benchmark.pgbench.latency.average.unit
      - description: |
          The latency measure unit represented in milliseconds
        displayName: Benchmark Pgbench Latency Standard Deviation Unit
        path: benchmark.pgbench.latency.standardDeviation.unit
      - description: |
          Transaction Per Second (tps) measure
        displayName: Benchmark Pgbench Transactions Per Second Including Connections
          Establishing Unit
        path: benchmark.pgbench.transactionsPerSecond.includingConnectionsEstablishing.unit
      - description: |
          Transaction Per Second (tps) measure
        displayName: Benchmark Pgbench Transactions Per Second Excluding Connections
          Establishing Unit
        path: benchmark.pgbench.transactionsPerSecond.excludingConnectionsEstablishing.unit
      - description: |
          The postgres version currently used by the primary instance
        displayName: Major Version Upgrade Source Postgres Version
        path: majorVersionUpgrade.sourcePostgresVersion
      - description: |
          The postgres version that the cluster will be upgraded to
        displayName: Major Version Upgrade Target Postgres Version
        path: majorVersionUpgrade.targetPostgresVersion
      - description: |
          The primary instance when the operation started
        displayName: Major Version Upgrade Primary Instance
        path: majorVersionUpgrade.primaryInstance
      - displayName: Major Version Upgrade Initial Instances
        path: majorVersionUpgrade.initialInstances
      - displayName: Major Version Upgrade Pending To Restart Instances
        path: majorVersionUpgrade.pendingToRestartInstances
      - displayName: Major Version Upgrade Restarted Instances
        path: majorVersionUpgrade.restartedInstances
      - description: |
          A failure message (when available)
        displayName: Major Version Upgrade Failure
        path: majorVersionUpgrade.failure
      - description: |
          The primary instance when the operation started
        displayName: Restart Primary Instance
        path: restart.primaryInstance
      - displayName: Restart Initial Instances
        path: restart.initialInstances
      - displayName: Restart Pending To Restart Instances
        path: restart.pendingToRestartInstances
      - displayName: Restart Restarted Instances
        path: restart.restartedInstances
      - description: |
          An ISO 8601 date indicating if and when the switchover initiated
        displayName: Restart Switchover Initiated
        path: restart.switchoverInitiated
      - description: |
          An ISO 8601 date indicating if and when the switchover finalized
        displayName: Restart Switchover Finalized
        path: restart.switchoverFinalized
      - description: |
          A failure message (when available)
        displayName: Restart Failure
        path: restart.failure
      - description: |
          The postgres version currently used by the primary instance
        displayName: Minor Version Upgrade Source Postgres Version
        path: minorVersionUpgrade.sourcePostgresVersion
      - description: |
          The postgres version that the cluster will be upgraded (or downgraded) to
        displayName: Minor Version Upgrade Target Postgres Version
        path: minorVersionUpgrade.targetPostgresVersion
      - description: |
          The primary instance when the operation started
        displayName: Minor Version Upgrade Primary Instance
        path: minorVersionUpgrade.primaryInstance
      - displayName: Minor Version Upgrade Initial Instances
        path: minorVersionUpgrade.initialInstances
      - displayName: Minor Version Upgrade Pending To Restart Instances
        path: minorVersionUpgrade.pendingToRestartInstances
      - displayName: Minor Version Upgrade Restarted Instances
        path: minorVersionUpgrade.restartedInstances
      - description: |
          An ISO 8601 date indicating if and when the switchover initiated
        displayName: Minor Version Upgrade Switchover Initiated
        path: minorVersionUpgrade.switchoverInitiated
      - description: |
          An ISO 8601 date indicating if and when the switchover finalized
        displayName: Minor Version Upgrade Switchover Finalized
        path: minorVersionUpgrade.switchoverFinalized
      - description: |
          A failure message (when available)
        displayName: Minor Version Upgrade Failure
        path: minorVersionUpgrade.failure
      - description: |
          The primary instance when the operation started
        displayName: Security Upgrade Primary Instance
        path: securityUpgrade.primaryInstance
      - displayName: Security Upgrade Initial Instances
        path: securityUpgrade.initialInstances
      - displayName: Security Upgrade Pending To Restart Instances
        path: securityUpgrade.pendingToRestartInstances
      - displayName: Security Upgrade Restarted Instances
        path: securityUpgrade.restartedInstances
      - description: |
          An ISO 8601 date indicating if and when the switchover initiated
        displayName: Security Upgrade Switchover Initiated
        path: securityUpgrade.switchoverInitiated
      - description: |
          An ISO 8601 date indicating if and when the switchover finalized
        displayName: Security Upgrade Switchover Finalized
        path: securityUpgrade.switchoverFinalized
      - description: |
          A failure message (when available)
        displayName: Security Upgrade Failure
        path: securityUpgrade.failure
      version: v1
    - description: Multi-tenant logs server, to aggregate Postgres logs. Fully managed
      displayName: StackGres Distributed Logs
      kind: SGDistributedLogs
      name: sgdistributedlogs.stackgres.io
      specDescriptors:
      - description: |
          Size of the PersistentVolume set for the pod of the cluster for distributed logs. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Persistent Volume Size
        path: persistentVolume.size
      - description: |
          Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
        displayName: Persistent Volume Storage Class
        path: persistentVolume.storageClass
      - description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`,
          `NodePort`)
        displayName: Postgres Services Primary Type
        path: postgresServices.primary.type
      - displayName: Postgres Services Primary Annotations
        path: postgresServices.primary.annotations
      - description: Specify loadBalancer IP of Postgres primary service for Distributed
          Log
        displayName: Postgres Services Primary Load Balancer IP
        path: postgresServices.primary.loadBalancerIP
      - description: Specify if the `-replicas` service should be created or not.
        displayName: Postgres Services Replicas Enabled
        path: postgresServices.replicas.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`,
          `NodePort`).
        displayName: Postgres Services Replicas Type
        path: postgresServices.replicas.type
      - displayName: Postgres Services Replicas Annotations
        path: postgresServices.replicas.annotations
      - description: Specify loadBalancer IP of Postgres replica service for Distributed
          Log
        displayName: Postgres Services Replicas Load Balancer IP
        path: postgresServices.replicas.loadBalancerIP
      - description: When enabled resource limits for containers other than the patroni
          container wil be set just like for patroni contianer as specified in the
          SGInstanceProfile.
        displayName: Resources Enable Cluster Limits Requirements
        path: resources.enableClusterLimitsRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Scheduling Node Selector
        path: scheduling.nodeSelector
      - description: |+
          Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.

        displayName: Scheduling Tolerations Effect
        path: scheduling.tolerations.effect
      - description: Key is the taint key that the toleration applies to. Empty means
          match all taint keys. If the key is empty, operator must be Exists; this
          combination means to match all values and all keys.
        displayName: Scheduling Tolerations Key
        path: scheduling.tolerations.key
      - description: |+
          Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.

        displayName: Scheduling Tolerations Operator
        path: scheduling.tolerations.operator
      - description: TolerationSeconds represents the period of time the toleration
          (which must be of effect NoExecute, otherwise this field is ignored) tolerates
          the taint. By default, it is not set, which means tolerate the taint forever
          (do not evict). Zero and negative values will be treated as 0 (evict immediately)
          by the system.
        displayName: Scheduling Tolerations Toleration Seconds
        path: scheduling.tolerations.tolerationSeconds
      - description: Value is the taint value the toleration matches to. If the operator
          is Exists, the value should be empty, otherwise just a regular string.
        displayName: Scheduling Tolerations Value
        path: scheduling.tolerations.value
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Scheduling Node Affinity
        path: scheduling.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Scheduling Priority Class Name
        path: scheduling.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Scheduling Pod Affinity
        path: scheduling.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Scheduling Pod Anti Affinity
        path: scheduling.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a distributed logs. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
        displayName: SGInstanceProfile
        path: sgInstanceProfile
      - description: |
          Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the distributed logs. It must exist. When not set, a default Postgres config, for the major version selected, is used.
        displayName: Configurations SGPostgresConfig
        path: configurations.sgPostgresConfig
      - displayName: Metadata Annotations All Resources
        path: metadata.annotations.allResources
      - displayName: Metadata Annotations Pods
        path: metadata.annotations.pods
      - displayName: Metadata Annotations Services
        path: metadata.annotations.services
      - description: The name of the extension to install.
        displayName: To Install Postgres Extensions Name
        path: toInstallPostgresExtensions.name
      - description: The id of the publisher of the extension to install.
        displayName: To Install Postgres Extensions Publisher
        path: toInstallPostgresExtensions.publisher
      - description: The version of the extension to install.
        displayName: To Install Postgres Extensions Version
        path: toInstallPostgresExtensions.version
      - description: The repository base URL from where the extension will be installed
          from.
        displayName: To Install Postgres Extensions Repository
        path: toInstallPostgresExtensions.repository
      - description: The postgres major version of the extension to install.
        displayName: To Install Postgres Extensions Postgres Version
        path: toInstallPostgresExtensions.postgresVersion
      - description: The build version of the extension to install.
        displayName: To Install Postgres Extensions Build
        path: toInstallPostgresExtensions.build
      - description: The extra mount of the installed extension.
        displayName: To Install Postgres Extensions Extra Mounts
        path: toInstallPostgresExtensions.extraMounts
      - description: |
          It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

          The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres or Distributed Logs pod on a given Kubernetes node. If set to `true` it will allow more than one StackGres pod per node.
        displayName: Non Production Options Disable Cluster Pod Anti Affinity
        path: nonProductionOptions.disableClusterPodAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
        displayName: Non Production Options Disable Patroni Resource Requirements
        path: nonProductionOptions.disablePatroniResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
        displayName: Non Production Options Disable Cluster Resource Requirements
        path: nonProductionOptions.disableClusterResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
           when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Cpu Requests
        path: nonProductionOptions.enableSetPatroniCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Cpu Requests
        path: nonProductionOptions.enableSetClusterCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
           when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Memory Requests
        path: nonProductionOptions.enableSetPatroniMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Memory Requests
        path: nonProductionOptions.enableSetClusterMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      statusDescriptors:
      - description: Last time the condition transitioned from one status to another.
        displayName: Conditions Last Transition Time
        path: conditions.lastTransitionTime
      - description: A human readable message indicating details about the transition.
        displayName: Conditions Message
        path: conditions.message
      - description: The reason for the condition's last transition.
        displayName: Conditions Reason
        path: conditions.reason
      - description: Status of the condition, one of True, False, Unknown.
        displayName: Conditions Status
        path: conditions.status
      - description: Type of deployment condition.
        displayName: Conditions Type
        path: conditions.type
      - description: The name of the pod.
        displayName: Pod Statuses Name
        path: podStatuses.name
      - description: Indicates if the pod is the elected primary
        displayName: Pod Statuses Primary
        path: podStatuses.primary
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Indicates if the pod requires restart
        displayName: Pod Statuses Pending Restart
        path: podStatuses.pendingRestart
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Name
        path: podStatuses.installedPostgresExtensions.name
      - description: The id of the publisher of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Publisher
        path: podStatuses.installedPostgresExtensions.publisher
      - description: The version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Version
        path: podStatuses.installedPostgresExtensions.version
      - description: The repository base URL from where the extension was installed.
        displayName: Pod Statuses Installed Postgres Extensions Repository
        path: podStatuses.installedPostgresExtensions.repository
      - description: The postgres major version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Postgres Version
        path: podStatuses.installedPostgresExtensions.postgresVersion
      - description: The build version of the installed extension.
        displayName: Pod Statuses Installed Postgres Extensions Build
        path: podStatuses.installedPostgresExtensions.build
      - description: The database name that has been created
        displayName: Databases Name
        path: databases.name
      - description: The retention window that has been applied to tables
        displayName: Databases Retention
        path: databases.retention
      - description: The `sgcluster` namespace
        displayName: Connected Clusters Namespace
        path: connectedClusters.namespace
      - description: The `sgcluster` name
        displayName: Connected Clusters Name
        path: connectedClusters.name
      - description: The `sgdistributedlogs` to which this `sgcluster` is connected
          to
        displayName: Connected Clusters Config SGDistributedLogs
        path: connectedClusters.config.sgDistributedLogs
      - description: The retention window that has been applied to tables
        displayName: Connected Clusters Config Retention
        path: connectedClusters.config.retention
      - description: The hash of the configuration file that is used by fluentd
        displayName: Fluentd Config Hash
        path: fluentdConfigHash
      - description: The architecture on which the cluster has been initialized.
        displayName: Arch
        path: arch
      - description: The operative system on which the cluster has been initialized.
        displayName: Os
        path: os
      - description: The custom prefix that is prepended to all labels.
        displayName: Label Prefix
        path: labelPrefix
      version: v1
    - description: Instance Profiles are like "t-shirt" sizes, used for pods sizing
      displayName: StackGres Instance Profile
      kind: SGInstanceProfile
      name: sginstanceprofiles.stackgres.io
      specDescriptors:
      - description: |
          CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
           specifies millicpus (where 1000m is equals to 1).

          The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

          A minimum of 2 cores is recommended.
        displayName: Cpu
        path: cpu
      - description: |
          RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

          A minimum of 2-4Gi is recommended.
        displayName: Memory
        path: memory
      - description: |
          RAM allocated for huge pages with a size of 2Mi. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.

          By default the amount of RAM set is assigned to patroni container
           (that runs both Patroni and PostgreSQL).
        displayName: Huge Pages Hugepages-2 Mi
        path: hugePages.hugepages-2Mi
      - description: |
          RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.

          By default the amount of RAM set is assigned to patroni container
           (that runs both Patroni and PostgreSQL).
        displayName: Huge Pages Hugepages-1 Gi
        path: hugePages.hugepages-1Gi
      - description: |
          CPU(s) (cores) used for the specified Pod container. The suffix `m`
           specifies millicpus (where 1000m is equals to 1).
        displayName: Containers Cpu
        path: containers.cpu
      - description: |
          RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.
        displayName: Containers Memory
        path: containers.memory
      - description: |
          RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
           or `Gi` specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM is assigned to the specified container.
        displayName: Containers Huge Pages Hugepages-2 Mi
        path: containers.hugePages.hugepages-2Mi
      - description: |
          RAM allocated for huge pages with a size of 1Gi. The suffix `Mi`
           or `Gi` specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM is assigned to the specified container.
        displayName: Containers Huge Pages Hugepages-1 Gi
        path: containers.hugePages.hugepages-1Gi
      - description: |
          CPU(s) (cores) used for the specified Pod init container. The suffix
           `m` specifies millicpus (where 1000m is equals to 1).
        displayName: Init Containers Cpu
        path: initContainers.cpu
      - description: |
          RAM allocated to the specified Pod init container. The suffix `Mi`
           or `Gi` specifies Mebibytes or Gibibytes, respectively.
        displayName: Init Containers Memory
        path: initContainers.memory
      - description: |
          RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
           or `Gi` specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM is assigned to the specified init container.
        displayName: Init Containers Huge Pages Hugepages-2 Mi
        path: initContainers.hugePages.hugepages-2Mi
      - description: |
          RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM is assigned to the specified init container.
        displayName: Init Containers Huge Pages Hugepages-1 Gi
        path: initContainers.hugePages.hugepages-1Gi
      - description: |
          CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
           specifies millicpus (where 1000m is equals to 1).

          The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
        displayName: Requests Cpu
        path: requests.cpu
      - description: |
          RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.

          The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
        displayName: Requests Memory
        path: requests.memory
      - description: |
          CPU(s) (cores) used for the specified Pod container. The suffix `m`
           specifies millicpus (where 1000m is equals to 1).
        displayName: Requests Containers Cpu
        path: requests.containers.cpu
      - description: |
          RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
           specifies Mebibytes or Gibibytes, respectively.
        displayName: Requests Containers Memory
        path: requests.containers.memory
      - description: |
          CPU(s) (cores) used for the specified Pod init container. The suffix
           `m` specifies millicpus (where 1000m is equals to 1).
        displayName: Requests Init Containers Cpu
        path: requests.initContainers.cpu
      - description: |
          RAM allocated to the specified Pod init container. The suffix `Mi`
           or `Gi` specifies Mebibytes or Gibibytes, respectively.
        displayName: Requests Init Containers Memory
        path: requests.initContainers.memory
      version: v1
    - description: Handle to an existing Object Storage (e.g. S3), used to store backups
      displayName: StackGres Object Storage
      kind: SGObjectStorage
      name: sgobjectstorages.stackgres.io
      specDescriptors:
      - description: |
          Determine the type of object storage used for storing the base backups and WAL segments.
                Possible values:
                *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                *  `gcs`: Google Cloud Storage.
                *  `azureBlob`: Microsoft Azure Blob Storage.
        displayName: Type
        path: type
      - description: |
          AWS S3 bucket name.
        displayName: S3 Bucket
        path: s3.bucket
      - description: |
          The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
        displayName: S3 Region
        path: s3.region
      - description: |
          The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
        displayName: S3 Storage Class
        path: s3.storageClass
      - description: |
          AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
        displayName: S3 Aws Credentials Secret Key Selectors Access Key Id
        path: s3.awsCredentials.secretKeySelectors.accessKeyId
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: S3 Aws Credentials Secret Key Selectors Access Key Id Key
        path: s3.awsCredentials.secretKeySelectors.accessKeyId.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: S3 Aws Credentials Secret Key Selectors Access Key Id Name
        path: s3.awsCredentials.secretKeySelectors.accessKeyId.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
        displayName: S3 Aws Credentials Secret Key Selectors Secret Access Key
        path: s3.awsCredentials.secretKeySelectors.secretAccessKey
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: S3 Aws Credentials Secret Key Selectors Secret Access Key Key
        path: s3.awsCredentials.secretKeySelectors.secretAccessKey.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: S3 Aws Credentials Secret Key Selectors Secret Access Key Name
        path: s3.awsCredentials.secretKeySelectors.secretAccessKey.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          Bucket name.
        displayName: S3 Compatible Bucket
        path: s3Compatible.bucket
      - description: |
          Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).

          Defaults to false.
        displayName: S3 Compatible Enable Path Style Addressing
        path: s3Compatible.enablePathStyleAddressing
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Overrides the default url to connect to an S3-compatible service.
          For example: `http://s3-like-service:9000`.
        displayName: S3 Compatible Endpoint
        path: s3Compatible.endpoint
      - description: |
          The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
        displayName: S3 Compatible Region
        path: s3Compatible.region
      - description: |
          The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
        displayName: S3 Compatible Storage Class
        path: s3Compatible.storageClass
      - description: |
          AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Access Key
          Id
        path: s3Compatible.awsCredentials.secretKeySelectors.accessKeyId
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Access Key
          Id Key
        path: s3Compatible.awsCredentials.secretKeySelectors.accessKeyId.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Access Key
          Id Name
        path: s3Compatible.awsCredentials.secretKeySelectors.accessKeyId.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Secret Access
          Key
        path: s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Secret Access
          Key Key
        path: s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Secret Access
          Key Name
        path: s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Ca Certificate
          Key
        path: s3Compatible.awsCredentials.secretKeySelectors.caCertificate.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: S3 Compatible Aws Credentials Secret Key Selectors Ca Certificate
          Name
        path: s3Compatible.awsCredentials.secretKeySelectors.caCertificate.name
      - description: |
          GCS bucket name.
        displayName: Gcs Bucket
        path: gcs.bucket
      - description: |
          If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.

          This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
        displayName: Gcs Gcp Credentials Fetch Credentials From Metadata Service
        path: gcs.gcpCredentials.fetchCredentialsFromMetadataService
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          A service account key from GCP. In JSON format, as downloaded from the GCP Console.
        displayName: Gcs Gcp Credentials Secret Key Selectors Service Account JSON
        path: gcs.gcpCredentials.secretKeySelectors.serviceAccountJSON
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: Gcs Gcp Credentials Secret Key Selectors Service Account JSON
          Key
        path: gcs.gcpCredentials.secretKeySelectors.serviceAccountJSON.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Gcs Gcp Credentials Secret Key Selectors Service Account JSON
          Name
        path: gcs.gcpCredentials.secretKeySelectors.serviceAccountJSON.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          Azure Blob Storage bucket name.
        displayName: Azure Blob Bucket
        path: azureBlob.bucket
      - description: |
          The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
        displayName: Azure Blob Azure Credentials Secret Key Selectors Storage Account
        path: azureBlob.azureCredentials.secretKeySelectors.storageAccount
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: Azure Blob Azure Credentials Secret Key Selectors Storage Account
          Key
        path: azureBlob.azureCredentials.secretKeySelectors.storageAccount.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Azure Blob Azure Credentials Secret Key Selectors Storage Account
          Name
        path: azureBlob.azureCredentials.secretKeySelectors.storageAccount.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
        displayName: Azure Blob Azure Credentials Secret Key Selectors Access Key
        path: azureBlob.azureCredentials.secretKeySelectors.accessKey
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The key of the secret to select from. Must be a valid secret key.
        displayName: Azure Blob Azure Credentials Secret Key Selectors Access Key
          Key
        path: azureBlob.azureCredentials.secretKeySelectors.accessKey.key
      - description: |
          Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Azure Blob Azure Credentials Secret Key Selectors Access Key
          Name
        path: azureBlob.azureCredentials.secretKeySelectors.accessKey.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1beta1
    - description: Strongly validated customized Postgres configuration (postgresql.conf)
      displayName: StackGres Postgres Configuration
      kind: SGPostgresConfig
      name: sgpgconfigs.stackgres.io
      specDescriptors:
      - description: |
          The **major** Postgres version the configuration is for. Postgres major versions contain one number starting with version 10 (`10`, `11`, `12`, etc), and two numbers separated by a dot for previous versions (`9.6`, `9.5`, etc).

          Note that Postgres maintains full compatibility across minor versions, and hence a configuration for a given major version will work for any minor version of that same major version.

          Check [StackGres component versions](https://stackgres.io/doc/latest/intro/versions) to see the Postgres versions supported by this version of StackGres.
        displayName: Postgres Version
        path: postgresVersion
      - displayName: Postgresql Conf
        path: postgresql\.conf
      statusDescriptors:
      - displayName: Default Parameters
        path: defaultParameters
      version: v1
    - description: Customized PgBouncer (connection pooler) configuration
      displayName: StackGres Connection Pooling Configuration
      kind: SGPoolingConfig
      name: sgpoolconfigs.stackgres.io
      statusDescriptors:
      - displayName: Pg Bouncer Default Parameters
        path: pgBouncer.defaultParameters
      version: v1
    - description: Managed SQL Scripts, used for initial SQL commands or migrations
      displayName: StackGres Script
      kind: SGScript
      name: sgscripts.stackgres.io
      specDescriptors:
      - description: |
          If `true` the versions will be managed by the operator automatically. The user will still be able to update them if needed. `true` by default.
        displayName: Managed Versions
        path: managedVersions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If `true`, when any script entry fail will not prevent subsequent script entries from being executed. `false` by default.
        displayName: Continue On Error
        path: continueOnError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Name of the script. Must be unique across this SGScript.
        displayName: Scripts Name
        path: scripts.name
      - description: |
          The id is immutable and must be unique across all the script entries. It is replaced by the operator and is used to identify the script for the whole life of the `SGScript` object.
        displayName: Scripts Id
        path: scripts.id
      - description: |
          Version of the script. It will allow to identify if this script entry has been changed.
        displayName: Scripts Version
        path: scripts.version
      - description: |
          Database where the script is executed. Defaults to the `postgres` database, if not specified.
        displayName: Scripts Database
        path: scripts.database
      - description: |
          User that will execute the script. Defaults to the `postgres` user.
        displayName: Scripts User
        path: scripts.user
      - description: |
          Wrap the script in a transaction using the specified transaction mode:

          * `read-committed`: The script will be wrapped in a transaction using [READ COMMITTED](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-READ-COMMITTED) isolation level.
          * `repeatable-read`: The script will be wrapped in a transaction using [REPEATABLE READ](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-REPEATABLE-READ) isolation level.
          * `serializable`: The script will be wrapped in a transaction using [SERIALIZABLE](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-SERIALIZABLE) isolation level.

          If not set the script entry will not be wrapped in a transaction
        displayName: Scripts Wrap In Transaction
        path: scripts.wrapInTransaction
      - description: |
          When set to `true` the script entry execution will include storing the status of the execution of this
           script entry in the table `managed_sql.status` that will be created in the specified `database`. This
           will avoid an operation that fails partially to be unrecoverable requiring the intervention from the user
           if user in conjunction with `retryOnError`.

          If set to `true` then `wrapInTransaction` field must be set.

          This is `false` by default.
        displayName: Scripts Store Status In Database
        path: scripts.storeStatusInDatabase
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          If not set or set to `false` the script entry will not be retried if it fails.

          When set to `true` the script execution will be retried with an exponential backoff of 5 minutes,
           starting from 10 seconds and a standard deviation of 10 seconds.

          This is `false` by default.
        displayName: Scripts Retry On Error
        path: scripts.retryOnError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
        displayName: Scripts Script
        path: scripts.script
      - description: |
          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
        displayName: Scripts Script From Secret Key Ref
        path: scripts.scriptFrom.secretKeyRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Scripts Script From Secret Key Ref Name
        path: scripts.scriptFrom.secretKeyRef.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Scripts Script From Secret Key Ref Key
        path: scripts.scriptFrom.secretKeyRef.key
      - description: |
          A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
        displayName: Scripts Script From Config Map Key Ref
        path: scripts.scriptFrom.configMapKeyRef
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
      - description: |
          The name of the ConfigMap that contains the SQL script to execute.
        displayName: Scripts Script From Config Map Key Ref Name
        path: scripts.scriptFrom.configMapKeyRef.name
      - description: |
          The key name within the ConfigMap that contains the SQL script to execute.
        displayName: Scripts Script From Config Map Key Ref Key
        path: scripts.scriptFrom.configMapKeyRef.key
      statusDescriptors:
      - description: |
          The id that identifies a script entry.
        displayName: Scripts Id
        path: scripts.id
      - description: |
          The hash of a ConfigMap or Secret referenced with the associated script entry.
        displayName: Scripts Hash
        path: scripts.hash
      version: v1
    - description: Manages Postgres sharded clusters (two or more SGClusters)
      displayName: StackGres Sharded Cluster
      kind: SGShardedCluster
      name: sgshardedclusters.stackgres.io
      specDescriptors:
      - description: |
          The sharding technology that will be used for the sharded cluster.

          Currently the only possible value for this field is `citus`.
        displayName: Type
        path: type
      - description: |
          The database name that will be created and used across all node and where "partitioned" (distributed) tables will live in.
        displayName: Database
        path: database
      - description: |
          Postgres version used on the cluster. It is either of:
          *  The string 'latest', which automatically sets the latest major.minor Postgres version.
          *  A major version, like '14' or '13', which sets that major version and the latest minor version.
          *  A specific major.minor version, like '14.4'.
        displayName: Postgres Version
        path: postgres.version
      - description: |
          Postgres flavor used on the cluster. It is either of:
          *  `babelfish` will use the [Babelfish for Postgres](https://babelfish-for-postgresql.github.io/babelfish-for-postgresql/).

          If not specified then the vanilla Postgres will be used for the cluster.
        displayName: Postgres Flavor
        path: postgres.flavor
      - description: The name of the extension to deploy.
        displayName: Postgres Extensions Name
        path: postgres.extensions.name
      - description: The id of the publisher of the extension to deploy. If not specified
          `com.ongres` will be used by default.
        displayName: Postgres Extensions Publisher
        path: postgres.extensions.publisher
      - description: The version of the extension to deploy. If not specified version
          of `stable` channel will be used by default.
        displayName: Postgres Extensions Version
        path: postgres.extensions.version
      - description: The repository base URL from where to obtain the extension to
          deploy. If not specified https://stackgres.io/downloads/postgres/extensions
          will be used by default (or the value specified during operator deployment).
        displayName: Postgres Extensions Repository
        path: postgres.extensions.repository
      - description: |
          Allow to enable SSL for connections to Postgres. By default is `true`.

          If `true` certificate and private key will be auto-generated unless fields `certificateSecretKeySelector` and `privateKeySecretKeySelector` are specified.
        displayName: Postgres Ssl Enabled
        path: postgres.ssl.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Secret key selector for the certificate or certificate chain used for SSL connections.
        displayName: Postgres Ssl Certificate Secret Key Selector
        path: postgres.ssl.certificateSecretKeySelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The name of Secret that contains the certificate or certificate chain for SSL connections
        displayName: Postgres Ssl Certificate Secret Key Selector Name
        path: postgres.ssl.certificateSecretKeySelector.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The key of Secret that contains the certificate or certificate chain for SSL connections
        displayName: Postgres Ssl Certificate Secret Key Selector Key
        path: postgres.ssl.certificateSecretKeySelector.key
      - description: |
          Secret key selector for the private key used for SSL connections.
        displayName: Postgres Ssl Private Key Secret Key Selector
        path: postgres.ssl.privateKeySecretKeySelector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - description: |
          The name of Secret that contains the private key for SSL connections
        displayName: Postgres Ssl Private Key Secret Key Selector Name
        path: postgres.ssl.privateKeySecretKeySelector.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: |
          The key of Secret that contains the private key for SSL connections
        displayName: Postgres Ssl Private Key Secret Key Selector Key
        path: postgres.ssl.privateKeySecretKeySelector.key
      - description: |
          The replication mode applied to the whole cluster.
          Possible values are:
          * `async` (default)
          * `sync`
          * `strict-sync`
          * `sync-all`
          * `strict-sync-all`

          ### `async` Mode

          When in asynchronous mode the cluster is allowed to lose some committed transactions.
           When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
           will automatically be promoted to primary. Any transactions that have not been replicated to that standby
           remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
           but recovering it requires a manual recovery effort by data recovery specialists).

          ### `sync` Mode

          When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
           transactions that may have returned a successful commit status to client (clients can change the behavior
           per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
           values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
           means that the system may be unavailable for writes even though some servers are available. System
           administrators can still use manual failover commands to promote a standby even if it results in transaction
           loss.

          Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
           standby is available, primary server will still accept writes, but does not guarantee their replication. When
           the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
           back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
           makes synchronous mode usable with 2 node clusters.

          When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
           mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
           signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.

          ### `strict-sync` Mode

          When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
           synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
           standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
           transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
           synchronous replica comes up.

          **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
           transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
           replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
           visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.

          ### `sync-all` Mode

          The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.

          ### `strict-sync-all` Mode

          The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.
        displayName: Replication Mode
        path: replication.mode
      - description: |
          Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
           Only setteable if mode is `sync` or `strict-sync`.
        displayName: Replication Sync Instances
        path: replication.syncInstances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Specify if the service should be created or not.
        displayName: Postgres Services Coordinator Any Enabled
        path: postgresServices.coordinator.any.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
          a cluster-internal IP address for load-balancing to endpoints.
          "NodePort" builds on ClusterIP and allocates a port on every node.
          "LoadBalancer" builds on NodePort and creates
          an external load-balancer (if supported in the current cloud).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        displayName: Postgres Services Coordinator Any Type
        path: postgresServices.coordinator.any.type
      - description: allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may
          be set to "false" if the cluster load-balancer does not rely on NodePorts.  If
          the caller requests specific NodePorts (by specifying a value), those requests
          will be respected, regardless of this field. This field may only be set
          for services with type LoadBalancer and will be cleared if the type is changed
          to any other type.
        displayName: Postgres Services Coordinator Any Allocate Load Balancer Node
          Ports
        path: postgresServices.coordinator.any.allocateLoadBalancerNodePorts
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Postgres Services Coordinator Any External I Ps
        path: postgresServices.coordinator.any.externalIPs
      - description: |+
          externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.

        displayName: Postgres Services Coordinator Any External Traffic Policy
        path: postgresServices.coordinator.any.externalTrafficPolicy
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type). This field cannot be updated once set.
        displayName: Postgres Services Coordinator Any Health Check Node Port
        path: postgresServices.coordinator.any.healthCheckNodePort
      - description: InternalTrafficPolicy describes how nodes distribute service
          traffic they receive on the ClusterIP. If set to "Local", the proxy will
          assume that pods only want to talk to endpoints of the service on the same
          node as the pod, dropping the traffic if there are no local endpoints. The
          default value, "Cluster", uses the standard behavior of routing to all endpoints
          evenly (possibly modified by topology and other features).
        displayName: Postgres Services Coordinator Any Internal Traffic Policy
        path: postgresServices.coordinator.any.internalTrafficPolicy
      - displayName: Postgres Services Coordinator Any Ip Families
        path: postgresServices.coordinator.any.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service. If there is no value provided, then this field will be
          set to SingleStack. Services can be "SingleStack" (a single IP family),
          "PreferDualStack" (two IP families on dual-stack configured clusters or
          a single IP family on single-stack clusters), or "RequireDualStack" (two
          IP families on dual-stack configured clusters, otherwise fail). The ipFamilies
          and clusterIPs fields depend on the value of this field. This field will
          be wiped when updating a service to type ExternalName.
        displayName: Postgres Services Coordinator Any Ip Family Policy
        path: postgresServices.coordinator.any.ipFamilyPolicy
      - description: loadBalancerClass is the class of the load balancer implementation
          this Service belongs to. If specified, the value of this field must be a
          label-style identifier, with an optional prefix, e.g. "internal-vip" or
          "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not
          set, the default load balancer implementation is used, today this is typically
          done through the cloud provider integration, but should apply for any default
          implementation. If set, it is assumed that a load balancer implementation
          is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this
          field. This field can only be set when creating or updating a Service to
          type 'LoadBalancer'. Once set, it can not be changed. This field will be
          wiped when a service is updated to a non 'LoadBalancer' type.
        displayName: Postgres Services Coordinator Any Load Balancer Class
        path: postgresServices.coordinator.any.loadBalancerClass
      - description: 'Only applies to Service Type: LoadBalancer. This feature depends
          on whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature. Deprecated: This field was under-specified
          and its meaning varies across implementations, and it cannot support dual-stack.
          As of Kubernetes v1.24, users are encouraged to use implementation-specific
          annotations when available. This field may be removed in a future API version.'
        displayName: Postgres Services Coordinator Any Load Balancer IP
        path: postgresServices.coordinator.any.loadBalancerIP
      - displayName: Postgres Services Coordinator Any Load Balancer Source Ranges
        path: postgresServices.coordinator.any.loadBalancerSourceRanges
      - description: |+
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

        displayName: Postgres Services Coordinator Any Session Affinity
        path: postgresServices.coordinator.any.sessionAffinity
      - description: timeoutSeconds specifies the seconds of ClientIP type session
          sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
          == "ClientIP". Default value is 10800(for 3 hours).
        displayName: Postgres Services Coordinator Any Session Affinity Config Client
          IP Timeout Seconds
        path: postgresServices.coordinator.any.sessionAffinityConfig.clientIP.timeoutSeconds
      - description: Specify if the service should be created or not.
        displayName: Postgres Services Coordinator Primary Enabled
        path: postgresServices.coordinator.primary.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
          a cluster-internal IP address for load-balancing to endpoints.
          "NodePort" builds on ClusterIP and allocates a port on every node.
          "LoadBalancer" builds on NodePort and creates
          an external load-balancer (if supported in the current cloud).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        displayName: Postgres Services Coordinator Primary Type
        path: postgresServices.coordinator.primary.type
      - description: allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may
          be set to "false" if the cluster load-balancer does not rely on NodePorts.  If
          the caller requests specific NodePorts (by specifying a value), those requests
          will be respected, regardless of this field. This field may only be set
          for services with type LoadBalancer and will be cleared if the type is changed
          to any other type.
        displayName: Postgres Services Coordinator Primary Allocate Load Balancer
          Node Ports
        path: postgresServices.coordinator.primary.allocateLoadBalancerNodePorts
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Postgres Services Coordinator Primary External I Ps
        path: postgresServices.coordinator.primary.externalIPs
      - description: |+
          externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.

        displayName: Postgres Services Coordinator Primary External Traffic Policy
        path: postgresServices.coordinator.primary.externalTrafficPolicy
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type). This field cannot be updated once set.
        displayName: Postgres Services Coordinator Primary Health Check Node Port
        path: postgresServices.coordinator.primary.healthCheckNodePort
      - description: InternalTrafficPolicy describes how nodes distribute service
          traffic they receive on the ClusterIP. If set to "Local", the proxy will
          assume that pods only want to talk to endpoints of the service on the same
          node as the pod, dropping the traffic if there are no local endpoints. The
          default value, "Cluster", uses the standard behavior of routing to all endpoints
          evenly (possibly modified by topology and other features).
        displayName: Postgres Services Coordinator Primary Internal Traffic Policy
        path: postgresServices.coordinator.primary.internalTrafficPolicy
      - displayName: Postgres Services Coordinator Primary Ip Families
        path: postgresServices.coordinator.primary.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service. If there is no value provided, then this field will be
          set to SingleStack. Services can be "SingleStack" (a single IP family),
          "PreferDualStack" (two IP families on dual-stack configured clusters or
          a single IP family on single-stack clusters), or "RequireDualStack" (two
          IP families on dual-stack configured clusters, otherwise fail). The ipFamilies
          and clusterIPs fields depend on the value of this field. This field will
          be wiped when updating a service to type ExternalName.
        displayName: Postgres Services Coordinator Primary Ip Family Policy
        path: postgresServices.coordinator.primary.ipFamilyPolicy
      - description: loadBalancerClass is the class of the load balancer implementation
          this Service belongs to. If specified, the value of this field must be a
          label-style identifier, with an optional prefix, e.g. "internal-vip" or
          "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not
          set, the default load balancer implementation is used, today this is typically
          done through the cloud provider integration, but should apply for any default
          implementation. If set, it is assumed that a load balancer implementation
          is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this
          field. This field can only be set when creating or updating a Service to
          type 'LoadBalancer'. Once set, it can not be changed. This field will be
          wiped when a service is updated to a non 'LoadBalancer' type.
        displayName: Postgres Services Coordinator Primary Load Balancer Class
        path: postgresServices.coordinator.primary.loadBalancerClass
      - description: 'Only applies to Service Type: LoadBalancer. This feature depends
          on whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature. Deprecated: This field was under-specified
          and its meaning varies across implementations, and it cannot support dual-stack.
          As of Kubernetes v1.24, users are encouraged to use implementation-specific
          annotations when available. This field may be removed in a future API version.'
        displayName: Postgres Services Coordinator Primary Load Balancer IP
        path: postgresServices.coordinator.primary.loadBalancerIP
      - displayName: Postgres Services Coordinator Primary Load Balancer Source Ranges
        path: postgresServices.coordinator.primary.loadBalancerSourceRanges
      - description: |+
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

        displayName: Postgres Services Coordinator Primary Session Affinity
        path: postgresServices.coordinator.primary.sessionAffinity
      - description: timeoutSeconds specifies the seconds of ClientIP type session
          sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
          == "ClientIP". Default value is 10800(for 3 hours).
        displayName: Postgres Services Coordinator Primary Session Affinity Config
          Client IP Timeout Seconds
        path: postgresServices.coordinator.primary.sessionAffinityConfig.clientIP.timeoutSeconds
      - description: The application protocol for this port. This field follows standard
          Kubernetes label syntax. Un-prefixed names are reserved for IANA standard
          service names (as per RFC-6335 and http://www.iana.org/assignments/service-names).
          Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
        displayName: Postgres Services Coordinator Custom Ports App Protocol
        path: postgresServices.coordinator.customPorts.appProtocol
      - description: The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. When considering
          the endpoints for a Service, this must match the 'name' field in the EndpointPort.
          Optional if only one ServicePort is defined on this service.
        displayName: Postgres Services Coordinator Custom Ports Name
        path: postgresServices.coordinator.customPorts.name
      - description: 'The port on each node on which this service is exposed when
          type is NodePort or LoadBalancer.  Usually assigned by the system. If a
          value is specified, in-range, and not in use it will be used, otherwise
          the operation will fail.  If not specified, a port will be allocated if
          this Service requires one.  If this field is specified when creating a Service
          which does not need it, creation will fail. This field will be wiped when
          updating a Service to no longer need it (e.g. changing type from NodePort
          to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
        displayName: Postgres Services Coordinator Custom Ports Node Port
        path: postgresServices.coordinator.customPorts.nodePort
      - description: The port that will be exposed by this service.
        displayName: Postgres Services Coordinator Custom Ports Port
        path: postgresServices.coordinator.customPorts.port
      - description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
        displayName: Postgres Services Coordinator Custom Ports Protocol
        path: postgresServices.coordinator.customPorts.protocol
      - description: |
          IntOrString is a type that can hold an int32 or a string.  When
           used in JSON or YAML marshalling and unmarshalling, it produces
           or consumes the inner type.  This allows you to have, for example,
           a JSON field that can accept a name or number.

          The name will be prefixed with the string `custom-` so that the target port that can be
           referenced will be only those defined under .spec.pods.customContainers[].ports sections
           were names are also prepended with the same prefix.
        displayName: Postgres Services Coordinator Custom Ports Target Port
        path: postgresServices.coordinator.customPorts.targetPort
      - description: Specify if the service should be created or not.
        displayName: Postgres Services Shards Primaries Enabled
        path: postgresServices.shards.primaries.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
          a cluster-internal IP address for load-balancing to endpoints.
          "NodePort" builds on ClusterIP and allocates a port on every node.
          "LoadBalancer" builds on NodePort and creates
          an external load-balancer (if supported in the current cloud).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        displayName: Postgres Services Shards Primaries Type
        path: postgresServices.shards.primaries.type
      - description: allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may
          be set to "false" if the cluster load-balancer does not rely on NodePorts.  If
          the caller requests specific NodePorts (by specifying a value), those requests
          will be respected, regardless of this field. This field may only be set
          for services with type LoadBalancer and will be cleared if the type is changed
          to any other type.
        displayName: Postgres Services Shards Primaries Allocate Load Balancer Node
          Ports
        path: postgresServices.shards.primaries.allocateLoadBalancerNodePorts
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Postgres Services Shards Primaries External I Ps
        path: postgresServices.shards.primaries.externalIPs
      - description: |+
          externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, "Cluster", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get "Cluster" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.

        displayName: Postgres Services Shards Primaries External Traffic Policy
        path: postgresServices.shards.primaries.externalTrafficPolicy
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type). This field cannot be updated once set.
        displayName: Postgres Services Shards Primaries Health Check Node Port
        path: postgresServices.shards.primaries.healthCheckNodePort
      - description: InternalTrafficPolicy describes how nodes distribute service
          traffic they receive on the ClusterIP. If set to "Local", the proxy will
          assume that pods only want to talk to endpoints of the service on the same
          node as the pod, dropping the traffic if there are no local endpoints. The
          default value, "Cluster", uses the standard behavior of routing to all endpoints
          evenly (possibly modified by topology and other features).
        displayName: Postgres Services Shards Primaries Internal Traffic Policy
        path: postgresServices.shards.primaries.internalTrafficPolicy
      - displayName: Postgres Services Shards Primaries Ip Families
        path: postgresServices.shards.primaries.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service. If there is no value provided, then this field will be
          set to SingleStack. Services can be "SingleStack" (a single IP family),
          "PreferDualStack" (two IP families on dual-stack configured clusters or
          a single IP family on single-stack clusters), or "RequireDualStack" (two
          IP families on dual-stack configured clusters, otherwise fail). The ipFamilies
          and clusterIPs fields depend on the value of this field. This field will
          be wiped when updating a service to type ExternalName.
        displayName: Postgres Services Shards Primaries Ip Family Policy
        path: postgresServices.shards.primaries.ipFamilyPolicy
      - description: loadBalancerClass is the class of the load balancer implementation
          this Service belongs to. If specified, the value of this field must be a
          label-style identifier, with an optional prefix, e.g. "internal-vip" or
          "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not
          set, the default load balancer implementation is used, today this is typically
          done through the cloud provider integration, but should apply for any default
          implementation. If set, it is assumed that a load balancer implementation
          is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this
          field. This field can only be set when creating or updating a Service to
          type 'LoadBalancer'. Once set, it can not be changed. This field will be
          wiped when a service is updated to a non 'LoadBalancer' type.
        displayName: Postgres Services Shards Primaries Load Balancer Class
        path: postgresServices.shards.primaries.loadBalancerClass
      - description: 'Only applies to Service Type: LoadBalancer. This feature depends
          on whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature. Deprecated: This field was under-specified
          and its meaning varies across implementations, and it cannot support dual-stack.
          As of Kubernetes v1.24, users are encouraged to use implementation-specific
          annotations when available. This field may be removed in a future API version.'
        displayName: Postgres Services Shards Primaries Load Balancer IP
        path: postgresServices.shards.primaries.loadBalancerIP
      - displayName: Postgres Services Shards Primaries Load Balancer Source Ranges
        path: postgresServices.shards.primaries.loadBalancerSourceRanges
      - description: |+
          Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

        displayName: Postgres Services Shards Primaries Session Affinity
        path: postgresServices.shards.primaries.sessionAffinity
      - description: timeoutSeconds specifies the seconds of ClientIP type session
          sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
          == "ClientIP". Default value is 10800(for 3 hours).
        displayName: Postgres Services Shards Primaries Session Affinity Config Client
          IP Timeout Seconds
        path: postgresServices.shards.primaries.sessionAffinityConfig.clientIP.timeoutSeconds
      - description: The application protocol for this port. This field follows standard
          Kubernetes label syntax. Un-prefixed names are reserved for IANA standard
          service names (as per RFC-6335 and http://www.iana.org/assignments/service-names).
          Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
        displayName: Postgres Services Shards Custom Ports App Protocol
        path: postgresServices.shards.customPorts.appProtocol
      - description: The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. When considering
          the endpoints for a Service, this must match the 'name' field in the EndpointPort.
          Optional if only one ServicePort is defined on this service.
        displayName: Postgres Services Shards Custom Ports Name
        path: postgresServices.shards.customPorts.name
      - description: 'The port on each node on which this service is exposed when
          type is NodePort or LoadBalancer.  Usually assigned by the system. If a
          value is specified, in-range, and not in use it will be used, otherwise
          the operation will fail.  If not specified, a port will be allocated if
          this Service requires one.  If this field is specified when creating a Service
          which does not need it, creation will fail. This field will be wiped when
          updating a Service to no longer need it (e.g. changing type from NodePort
          to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
        displayName: Postgres Services Shards Custom Ports Node Port
        path: postgresServices.shards.customPorts.nodePort
      - description: The port that will be exposed by this service.
        displayName: Postgres Services Shards Custom Ports Port
        path: postgresServices.shards.customPorts.port
      - description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
        displayName: Postgres Services Shards Custom Ports Protocol
        path: postgresServices.shards.customPorts.protocol
      - description: |
          IntOrString is a type that can hold an int32 or a string.  When
           used in JSON or YAML marshalling and unmarshalling, it produces
           or consumes the inner type.  This allows you to have, for example,
           a JSON field that can accept a name or number.

          The name will be prefixed with the string `custom-` so that the target port that can be
           referenced will be only those defined under .spec.pods.customContainers[].ports sections
           were names are also prepended with the same prefix.
        displayName: Postgres Services Shards Custom Ports Target Port
        path: postgresServices.shards.customPorts.targetPort
      - description: |
          Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
        displayName: Configurations Backups Compression
        path: configurations.backups.compression
      - description: |
          Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

          Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
          *  `m`: minute, 0 to 59.
          *  `h`: hour, 0 to 23.
          *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
          *  `mon`: month, 1 to 12.
          *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).

          Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

          If not set, full backups are performed each day at 05:00 UTC.
        displayName: Configurations Backups Cron Schedule
        path: configurations.backups.cronSchedule
      - description: |
          Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
        displayName: Configurations Backups Performance Max Network Bandwidth
        path: configurations.backups.performance.maxNetworkBandwidth
      - description: |
          Maximum disk read I/O when performing a backup. In bytes (per second).
        displayName: Configurations Backups Performance Max Disk Bandwidth
        path: configurations.backups.performance.maxDiskBandwidth
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1.
        displayName: Configurations Backups Performance Upload Disk Concurrency
        path: configurations.backups.performance.uploadDiskConcurrency
      - description: |
          Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 16.
        displayName: Configurations Backups Performance Upload Concurrency
        path: configurations.backups.performance.uploadConcurrency
      - description: |
          Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
        displayName: Configurations Backups Performance Download Concurrency
        path: configurations.backups.performance.downloadConcurrency
      - description: |
          When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.

          Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

          Default is 5.
        displayName: Configurations Backups Retention
        path: configurations.backups.retention
      - description: |
          Name of the [SGObjectStorage](https://stackgres.io/doc/latest/reference/crd/sgobjectstorage) to use for the cluster. It defines the location in which the the backups will be stored.
        displayName: Configurations Backups SGObjectStorage
        path: configurations.backups.sgObjectStorage
      - displayName: Configurations Backups Paths
        path: configurations.backups.paths
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Patroni Rest Api Password Name
        path: configurations.credentials.patroni.restApiPassword.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Patroni Rest Api Password Key
        path: configurations.credentials.patroni.restApiPassword.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Superuser Username Name
        path: configurations.credentials.users.superuser.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Superuser Username Key
        path: configurations.credentials.users.superuser.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Superuser Password Name
        path: configurations.credentials.users.superuser.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Superuser Password Key
        path: configurations.credentials.users.superuser.password.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Replication Username Name
        path: configurations.credentials.users.replication.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Replication Username Key
        path: configurations.credentials.users.replication.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Replication Password Name
        path: configurations.credentials.users.replication.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Replication Password Key
        path: configurations.credentials.users.replication.password.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Authenticator Username Name
        path: configurations.credentials.users.authenticator.username.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Authenticator Username Key
        path: configurations.credentials.users.authenticator.username.key
      - description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
        displayName: Configurations Credentials Users Authenticator Password Name
        path: configurations.credentials.users.authenticator.password.name
      - description: The key of the secret to select from. Must be a valid secret
          key.
        displayName: Configurations Credentials Users Authenticator Password Key
        path: configurations.credentials.users.authenticator.password.key
      - displayName: Metadata Annotations All Resources
        path: metadata.annotations.allResources
      - displayName: Metadata Annotations Cluster Pods
        path: metadata.annotations.clusterPods
      - displayName: Metadata Annotations Services
        path: metadata.annotations.services
      - displayName: Metadata Annotations Primary Service
        path: metadata.annotations.primaryService
      - displayName: Metadata Annotations Replicas Service
        path: metadata.annotations.replicasService
      - displayName: Metadata Labels Cluster Pods
        path: metadata.labels.clusterPods
      - displayName: Metadata Labels Services
        path: metadata.labels.services
      - description: |
          Number of StackGres instances for the cluster. Each instance contains one Postgres server.
           Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
        displayName: Coordinator Instances
        path: coordinator.instances
      - description: |
          Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
        displayName: Coordinator SGInstanceProfile
        path: coordinator.sgInstanceProfile
      - description: If true, when any entry of any `SGScript` fail will not prevent
          subsequent `SGScript` from being executed. By default is `false`.
        displayName: Coordinator Managed Sql Continue On SG Script Error
        path: coordinator.managedSql.continueOnSGScriptError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The id is immutable and must be unique across all the `SGScript`
          entries. It is replaced by the operator and is used to identify the `SGScript`
          entry.
        displayName: Coordinator Managed Sql Scripts Id
        path: coordinator.managedSql.scripts.id
      - description: A reference to an `SGScript`
        displayName: Coordinator Managed Sql Scripts SGScript
        path: coordinator.managedSql.scripts.sgScript
      - description: |
          Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Coordinator Pods Persistent Volume Size
        path: coordinator.pods.persistentVolume.size
      - description: |
          Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
        displayName: Coordinator Pods Persistent Volume Storage Class
        path: coordinator.pods.persistentVolume.storageClass
      - description: If set to `true`, avoids creating a connection pooling (using
          [PgBouncer](https://www.pgbouncer.org/)) sidecar.
        displayName: Coordinator Pods Disable Connection Pooling
        path: coordinator.pods.disableConnectionPooling
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the Prometheus exporter sidecar.
          Recommended when there's no intention to use Prometheus for monitoring.
        displayName: Coordinator Pods Disable Metrics Exporter
        path: coordinator.pods.disableMetricsExporter
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the `postgres-util` sidecar.
          This sidecar contains usual Postgres administration utilities *that are
          not present in the main (`patroni`) container*, like `psql`. Only disable
          if you know what you are doing.
        displayName: Coordinator Pods Disable Postgres Util
        path: coordinator.pods.disablePostgresUtil
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: When enabled resource limits for containers other than the patroni
          container wil be set just like for patroni contianer as specified in the
          SGInstanceProfile.
        displayName: Coordinator Pods Resources Enable Cluster Limits Requirements
        path: coordinator.pods.resources.enableClusterLimitsRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Coordinator Pods Scheduling Node Selector
        path: coordinator.pods.scheduling.nodeSelector
      - description: |
          The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core
        displayName: Coordinator Pods Scheduling Tolerations
        path: coordinator.pods.scheduling.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Coordinator Pods Scheduling Node Affinity
        path: coordinator.pods.scheduling.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Coordinator Pods Scheduling Priority Class Name
        path: coordinator.pods.scheduling.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Coordinator Pods Scheduling Pod Affinity
        path: coordinator.pods.scheduling.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Coordinator Pods Scheduling Pod Anti Affinity
        path: coordinator.pods.scheduling.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          TopologySpreadConstraint specifies how to spread matching pods among the given topology.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#topologyspreadconstraint-v1-core
        displayName: Coordinator Pods Scheduling Topology Spread Constraints
        path: coordinator.pods.scheduling.topologySpreadConstraints
      - description: The label key that the selector applies to.
        displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Key
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Operator
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Values
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Key
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Operator
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Values
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Coordinator Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Weight
        path: coordinator.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Key
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Operator
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Values
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Key
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Operator
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Coordinator Pods Scheduling Backup Node Selector Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Values
        path: coordinator.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Coordinator Pods Scheduling Backup Tolerations
        path: coordinator.pods.scheduling.backup.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Coordinator Pods Scheduling Backup Node Affinity
        path: coordinator.pods.scheduling.backup.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Coordinator Pods Scheduling Backup Priority Class Name
        path: coordinator.pods.scheduling.backup.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Coordinator Pods Scheduling Backup Pod Affinity
        path: coordinator.pods.scheduling.backup.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Coordinator Pods Scheduling Backup Pod Anti Affinity
        path: coordinator.pods.scheduling.backup.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          managementPolicy controls how pods are created during initial scale up, when replacing pods
           on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
           in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
           ready before continuing. When scaling down, the pods are removed in the opposite order.
           The alternative policy is `Parallel` which will create pods in parallel to match the desired
           scale without waiting, and on scale down will delete all pods at once.
        displayName: Coordinator Pods Management Policy
        path: coordinator.pods.managementPolicy
      - description: |
          Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
        displayName: Coordinator Configurations SGPostgresConfig
        path: coordinator.configurations.sgPostgresConfig
      - description: |
          Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

          If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
        displayName: Coordinator Configurations SGPoolingConfig
        path: coordinator.configurations.sgPoolingConfig
      - description: |
          The replication mode applied to the whole cluster.
          Possible values are:
          * `async`
          * `sync`
          * `strict-sync`
          * `sync-all` (default)
          * `strict-sync-all`

          ### `async` Mode

          When in asynchronous mode the cluster is allowed to lose some committed transactions.
           When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
           will automatically be promoted to primary. Any transactions that have not been replicated to that standby
           remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
           but recovering it requires a manual recovery effort by data recovery specialists).

          ### `sync` Mode

          When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
           transactions that may have returned a successful commit status to client (clients can change the behavior
           per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
           values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
           means that the system may be unavailable for writes even though some servers are available. System
           administrators can still use manual failover commands to promote a standby even if it results in transaction
           loss.

          Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
           standby is available, primary server will still accept writes, but does not guarantee their replication. When
           the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
           back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
           makes synchronous mode usable with 2 node clusters.

          When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
           mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
           signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.

          ### `strict-sync` Mode

          When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
           synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
           standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
           transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
           synchronous replica comes up.

          **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
           transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
           replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
           visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.

          ### `sync-all` Mode

          The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.

          ### `strict-sync-all` Mode

          The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.
        displayName: Coordinator Replication Mode
        path: coordinator.replication.mode
      - description: |
          Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
           Only setteable if mode is `sync` or `strict-sync`.
        displayName: Coordinator Replication Sync Instances
        path: coordinator.replication.syncInstances
      - displayName: Coordinator Metadata Annotations All Resources
        path: coordinator.metadata.annotations.allResources
      - displayName: Coordinator Metadata Annotations Cluster Pods
        path: coordinator.metadata.annotations.clusterPods
      - displayName: Coordinator Metadata Annotations Services
        path: coordinator.metadata.annotations.services
      - displayName: Coordinator Metadata Annotations Primary Service
        path: coordinator.metadata.annotations.primaryService
      - displayName: Coordinator Metadata Annotations Replicas Service
        path: coordinator.metadata.annotations.replicasService
      - displayName: Coordinator Metadata Labels Cluster Pods
        path: coordinator.metadata.labels.clusterPods
      - displayName: Coordinator Metadata Labels Services
        path: coordinator.metadata.labels.services
      - description: |
          Number of shard's StackGres clusters
        displayName: Shards Clusters
        path: shards.clusters
      - description: |
          Number of StackGres instances per shard's StackGres cluster. Each instance contains one Postgres server.
           Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
        displayName: Shards Instances Per Cluster
        path: shards.instancesPerCluster
      - description: |
          Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
        displayName: Shards SGInstanceProfile
        path: shards.sgInstanceProfile
      - description: If true, when any entry of any `SGScript` fail will not prevent
          subsequent `SGScript` from being executed. By default is `false`.
        displayName: Shards Managed Sql Continue On SG Script Error
        path: shards.managedSql.continueOnSGScriptError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The id is immutable and must be unique across all the `SGScript`
          entries. It is replaced by the operator and is used to identify the `SGScript`
          entry.
        displayName: Shards Managed Sql Scripts Id
        path: shards.managedSql.scripts.id
      - description: A reference to an `SGScript`
        displayName: Shards Managed Sql Scripts SGScript
        path: shards.managedSql.scripts.sgScript
      - description: |
          Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Shards Pods Persistent Volume Size
        path: shards.pods.persistentVolume.size
      - description: |
          Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
        displayName: Shards Pods Persistent Volume Storage Class
        path: shards.pods.persistentVolume.storageClass
      - description: If set to `true`, avoids creating a connection pooling (using
          [PgBouncer](https://www.pgbouncer.org/)) sidecar.
        displayName: Shards Pods Disable Connection Pooling
        path: shards.pods.disableConnectionPooling
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the Prometheus exporter sidecar.
          Recommended when there's no intention to use Prometheus for monitoring.
        displayName: Shards Pods Disable Metrics Exporter
        path: shards.pods.disableMetricsExporter
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the `postgres-util` sidecar.
          This sidecar contains usual Postgres administration utilities *that are
          not present in the main (`patroni`) container*, like `psql`. Only disable
          if you know what you are doing.
        displayName: Shards Pods Disable Postgres Util
        path: shards.pods.disablePostgresUtil
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: When enabled resource limits for containers other than the patroni
          container wil be set just like for patroni contianer as specified in the
          SGInstanceProfile.
        displayName: Shards Pods Resources Enable Cluster Limits Requirements
        path: shards.pods.resources.enableClusterLimitsRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Shards Pods Scheduling Node Selector
        path: shards.pods.scheduling.nodeSelector
      - description: |
          The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core
        displayName: Shards Pods Scheduling Tolerations
        path: shards.pods.scheduling.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Shards Pods Scheduling Node Affinity
        path: shards.pods.scheduling.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Shards Pods Scheduling Priority Class Name
        path: shards.pods.scheduling.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Shards Pods Scheduling Pod Affinity
        path: shards.pods.scheduling.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Shards Pods Scheduling Pod Anti Affinity
        path: shards.pods.scheduling.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          TopologySpreadConstraint specifies how to spread matching pods among the given topology.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#topologyspreadconstraint-v1-core
        displayName: Shards Pods Scheduling Topology Spread Constraints
        path: shards.pods.scheduling.topologySpreadConstraints
      - description: The label key that the selector applies to.
        displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Key
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Operator
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Values
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Key
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Operator
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Preference Match Fields Values
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Shards Pods Scheduling Backup Node Selector Preferred During
          Scheduling Ignored During Execution Weight
        path: shards.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Expressions Key
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Expressions Operator
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Expressions Values
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Fields Key
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Fields Operator
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Shards Pods Scheduling Backup Node Selector Required During Scheduling
          Ignored During Execution Node Selector Terms Match Fields Values
        path: shards.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Shards Pods Scheduling Backup Tolerations
        path: shards.pods.scheduling.backup.tolerations
      - description: |
          Node affinity is a group of node affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core
        displayName: Shards Pods Scheduling Backup Node Affinity
        path: shards.pods.scheduling.backup.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Shards Pods Scheduling Backup Priority Class Name
        path: shards.pods.scheduling.backup.priorityClassName
      - description: |
          Pod affinity is a group of inter pod affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core
        displayName: Shards Pods Scheduling Backup Pod Affinity
        path: shards.pods.scheduling.backup.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: |
          Pod anti affinity is a group of inter pod anti affinity scheduling rules.

          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core
        displayName: Shards Pods Scheduling Backup Pod Anti Affinity
        path: shards.pods.scheduling.backup.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: |
          managementPolicy controls how pods are created during initial scale up, when replacing pods
           on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
           in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
           ready before continuing. When scaling down, the pods are removed in the opposite order.
           The alternative policy is `Parallel` which will create pods in parallel to match the desired
           scale without waiting, and on scale down will delete all pods at once.
        displayName: Shards Pods Management Policy
        path: shards.pods.managementPolicy
      - description: |
          Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
        displayName: Shards Configurations SGPostgresConfig
        path: shards.configurations.sgPostgresConfig
      - description: |
          Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

          If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
        displayName: Shards Configurations SGPoolingConfig
        path: shards.configurations.sgPoolingConfig
      - description: |
          The replication mode applied to the whole cluster.
          Possible values are:
          * `async` (default)
          * `sync`
          * `strict-sync`
          * `sync-all`
          * `strict-sync-all`

          ### `async` Mode

          When in asynchronous mode the cluster is allowed to lose some committed transactions.
           When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
           will automatically be promoted to primary. Any transactions that have not been replicated to that standby
           remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
           but recovering it requires a manual recovery effort by data recovery specialists).

          ### `sync` Mode

          When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
           transactions that may have returned a successful commit status to client (clients can change the behavior
           per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
           values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
           means that the system may be unavailable for writes even though some servers are available. System
           administrators can still use manual failover commands to promote a standby even if it results in transaction
           loss.

          Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
           standby is available, primary server will still accept writes, but does not guarantee their replication. When
           the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
           back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
           makes synchronous mode usable with 2 node clusters.

          When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
           mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
           signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.

          ### `strict-sync` Mode

          When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
           synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
           standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
           transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
           synchronous replica comes up.

          **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
           transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
           replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
           visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.

          ### `sync-all` Mode

          The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.

          ### `strict-sync-all` Mode

          The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.
        displayName: Shards Replication Mode
        path: shards.replication.mode
      - description: |
          Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
           Only setteable if mode is `sync` or `strict-sync`.
        displayName: Shards Replication Sync Instances
        path: shards.replication.syncInstances
      - displayName: Shards Metadata Annotations All Resources
        path: shards.metadata.annotations.allResources
      - displayName: Shards Metadata Annotations Cluster Pods
        path: shards.metadata.annotations.clusterPods
      - displayName: Shards Metadata Annotations Services
        path: shards.metadata.annotations.services
      - displayName: Shards Metadata Annotations Primary Service
        path: shards.metadata.annotations.primaryService
      - displayName: Shards Metadata Annotations Replicas Service
        path: shards.metadata.annotations.replicasService
      - displayName: Shards Metadata Labels Cluster Pods
        path: shards.metadata.labels.clusterPods
      - displayName: Shards Metadata Labels Services
        path: shards.metadata.labels.services
      - description: |
          Identifier of the shard StackGres cluster to override (starting from 0)
        displayName: Shards Overrides Index
        path: shards.overrides.index
      - description: |
          Number of StackGres instances per shard's StackGres cluster. Each instance contains one Postgres server.
           Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
        displayName: Shards Overrides Instances Per Cluster
        path: shards.overrides.instancesPerCluster
      - description: |
          Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
        displayName: Shards Overrides SGInstanceProfile
        path: shards.overrides.sgInstanceProfile
      - description: If true, when any entry of any `SGScript` fail will not prevent
          subsequent `SGScript` from being executed. By default is `false`.
        displayName: Shards Overrides Managed Sql Continue On SG Script Error
        path: shards.overrides.managedSql.continueOnSGScriptError
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The id is immutable and must be unique across all the `SGScript`
          entries. It is replaced by the operator and is used to identify the `SGScript`
          entry.
        displayName: Shards Overrides Managed Sql Scripts Id
        path: shards.overrides.managedSql.scripts.id
      - description: A reference to an `SGScript`
        displayName: Shards Overrides Managed Sql Scripts SGScript
        path: shards.overrides.managedSql.scripts.sgScript
      - description: |
          Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
        displayName: Shards Overrides Pods Persistent Volume Size
        path: shards.overrides.pods.persistentVolume.size
      - description: |
          Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
        displayName: Shards Overrides Pods Persistent Volume Storage Class
        path: shards.overrides.pods.persistentVolume.storageClass
      - description: If set to `true`, avoids creating a connection pooling (using
          [PgBouncer](https://www.pgbouncer.org/)) sidecar.
        displayName: Shards Overrides Pods Disable Connection Pooling
        path: shards.overrides.pods.disableConnectionPooling
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the Prometheus exporter sidecar.
          Recommended when there's no intention to use Prometheus for monitoring.
        displayName: Shards Overrides Pods Disable Metrics Exporter
        path: shards.overrides.pods.disableMetricsExporter
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If set to `true`, avoids creating the `postgres-util` sidecar.
          This sidecar contains usual Postgres administration utilities *that are
          not present in the main (`patroni`) container*, like `psql`. Only disable
          if you know what you are doing.
        displayName: Shards Overrides Pods Disable Postgres Util
        path: shards.overrides.pods.disablePostgresUtil
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: When enabled resource limits for containers other than the patroni
          container wil be set just like for patroni contianer as specified in the
          SGInstanceProfile.
        displayName: Shards Overrides Pods Resources Enable Cluster Limits Requirements
        path: shards.overrides.pods.resources.enableClusterLimitsRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Shards Overrides Pods Scheduling Node Selector
        path: shards.overrides.pods.scheduling.nodeSelector
      - description: |+
          Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.

        displayName: Shards Overrides Pods Scheduling Tolerations Effect
        path: shards.overrides.pods.scheduling.tolerations.effect
      - description: Key is the taint key that the toleration applies to. Empty means
          match all taint keys. If the key is empty, operator must be Exists; this
          combination means to match all values and all keys.
        displayName: Shards Overrides Pods Scheduling Tolerations Key
        path: shards.overrides.pods.scheduling.tolerations.key
      - description: |+
          Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.

        displayName: Shards Overrides Pods Scheduling Tolerations Operator
        path: shards.overrides.pods.scheduling.tolerations.operator
      - description: TolerationSeconds represents the period of time the toleration
          (which must be of effect NoExecute, otherwise this field is ignored) tolerates
          the taint. By default, it is not set, which means tolerate the taint forever
          (do not evict). Zero and negative values will be treated as 0 (evict immediately)
          by the system.
        displayName: Shards Overrides Pods Scheduling Tolerations Toleration Seconds
        path: shards.overrides.pods.scheduling.tolerations.tolerationSeconds
      - description: Value is the taint value the toleration matches to. If the operator
          is Exists, the value should be empty, otherwise just a regular string.
        displayName: Shards Overrides Pods Scheduling Tolerations Value
        path: shards.overrides.pods.scheduling.tolerations.value
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Key
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Operator
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Expressions Values
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Fields Key
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Fields Operator
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Preference Match Fields Values
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Node Affinity Preferred During
          Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Key
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Values
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Key
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Operator
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Node Affinity Required During
          Scheduling Ignored During Execution Node Selector Terms Match Fields Values
        path: shards.overrides.pods.scheduling.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Shards Overrides Pods Scheduling Priority Class Name
        path: shards.overrides.pods.scheduling.priorityClassName
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Label Selector Match
          Expressions Key
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Label Selector Match
          Expressions Operator
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Label Selector Match
          Expressions Values
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Label Selector Match
          Labels
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Labels
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Namespaces
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Pod Affinity Term Topology Key
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Preferred During
          Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Key
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Operator
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Values
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Labels
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Labels
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Namespaces
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Pod Affinity Required During
          Scheduling Ignored During Execution Topology Key
        path: shards.overrides.pods.scheduling.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Labels
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Labels
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespaces
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Topology Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Operator
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Expressions Values
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Label Selector Match Labels
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Namespace Selector Match Labels
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Namespaces
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Pod Anti Affinity Required During
          Scheduling Ignored During Execution Topology Key
        path: shards.overrides.pods.scheduling.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Label Selector Match Expressions Key
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Label Selector Match Expressions Operator
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Label Selector Match Expressions Values
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Label Selector Match Labels
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.labelSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Match Label Keys
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.matchLabelKeys
      - description: 'MaxSkew describes the degree to which pods may be unevenly distributed.
          When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
          between the number of matching pods in the target topology and the global
          minimum. The global minimum is the minimum number of matching pods in an
          eligible domain or zero if the number of eligible domains is less than MinDomains.
          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the
          same labelSelector spread as 2/2/1: In this case, the global minimum is
          1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1,
          incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling
          it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate
          MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
          When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
          to topologies that satisfy it. It''s a required field. Default value is
          1 and 0 is not allowed.'
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Max Skew
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.maxSkew
      - description: |-
          MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

          For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

          This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Min Domains
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.minDomains
      - description: |-
          NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

          If this value is nil, the behavior is equivalent to the Honor policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Node Affinity Policy
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.nodeAffinityPolicy
      - description: |-
          NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

          If this value is nil, the behavior is equivalent to the Ignore policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Node Taints Policy
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.nodeTaintsPolicy
      - description: TopologyKey is the key of node labels. Nodes that have a label
          with this key and identical values are considered to be in the same topology.
          We consider each <key, value> as a "bucket", and try to put balanced number
          of pods into each bucket. We define a domain as a particular instance of
          a topology. Also, we define an eligible domain as a domain whose nodes meet
          the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey
          is "kubernetes.io/hostname", each Node is a domain of that topology. And,
          if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of
          that topology. It's a required field.
        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          Topology Key
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.topologyKey
      - description: |+
          WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
            but giving higher precedence to topologies that would help reduce the
            skew.
          A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.

        displayName: Shards Overrides Pods Scheduling Topology Spread Constraints
          When Unsatisfiable
        path: shards.overrides.pods.scheduling.topologySpreadConstraints.whenUnsatisfiable
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Fields Key
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Fields Operator
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Preference Match Fields Values
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Backup Node Selector Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.backup.nodeSelector.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Key
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Selector Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Values
        path: shards.overrides.pods.scheduling.backup.nodeSelector.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Fields Key
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Fields Operator
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Preference Match Fields Values
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Backup Tolerations Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.backup.tolerations.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Key
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Operator
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Tolerations Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Values
        path: shards.overrides.pods.scheduling.backup.tolerations.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Fields Key
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Fields Operator
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Preference Match Fields Values
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values
      - description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values
      - description: The label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Key
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key
      - description: |+
          Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

        displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Operator
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator
      - displayName: Shards Overrides Pods Scheduling Backup Node Affinity Required
          During Scheduling Ignored During Execution Node Selector Terms Match Fields
          Values
        path: shards.overrides.pods.scheduling.backup.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values
      - description: |
          Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
        displayName: Shards Overrides Pods Scheduling Backup Priority Class Name
        path: shards.overrides.pods.scheduling.backup.priorityClassName
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Labels
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Labels
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespaces
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Topology Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.backup.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Labels
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Labels
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Namespaces
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Backup Pod Affinity Required
          During Scheduling Ignored During Execution Topology Key
        path: shards.overrides.pods.scheduling.backup.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Label Selector
          Match Labels
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Operator
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Expressions Values
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespace Selector
          Match Labels
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Namespaces
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Pod Affinity Term Topology Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey
      - description: weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Preferred
          During Scheduling Ignored During Execution Weight
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Label Selector Match Labels
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels
      - description: key is the label key that the selector applies to.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.key
      - description: operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Operator
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.operator
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Expressions
          Values
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.values
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Namespace Selector Match Labels
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchLabels
      - displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Namespaces
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces
      - description: This pod should be co-located (affinity) or not co-located (anti-affinity)
          with the pods matching the labelSelector in the specified namespaces, where
          co-located is defined as running on a node whose value of the label with
          key topologyKey matches that of any node on which any of the selected pods
          is running. Empty topologyKey is not allowed.
        displayName: Shards Overrides Pods Scheduling Backup Pod Anti Affinity Required
          During Scheduling Ignored During Execution Topology Key
        path: shards.overrides.pods.scheduling.backup.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey
      - description: |
          managementPolicy controls how pods are created during initial scale up, when replacing pods
           on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
           in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
           ready before continuing. When scaling down, the pods are removed in the opposite order.
           The alternative policy is `Parallel` which will create pods in parallel to match the desired
           scale without waiting, and on scale down will delete all pods at once.
        displayName: Shards Overrides Pods Management Policy
        path: shards.overrides.pods.managementPolicy
      - description: |
          Volumes name. Must be a DNS_LABEL and unique within the pod.
           More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names

          The name will be prefixed with the string `custom-` so that when referencing them in the
           customInitContainers or customContainers sections the name used have to be prepended with
           the same prefix.
        displayName: Shards Overrides Pods Custom Volumes Name
        path: shards.overrides.pods.customVolumes.name
      - description: 'Optional: mode bits used to set permissions on created files
          by default. Must be an octal value between 0000 and 0777 or a decimal value
          between 0 and 511. YAML accepts both octal and decimal values, JSON requires
          decimal values for mode bits. Defaults to 0644. Directories within the path
          are not affected by this setting. This might be in conflict with other options
          that affect the file mode, like fsGroup, and the result can be other mode
          bits set.'
        displayName: Shards Overrides Pods Custom Volumes Config Map Default Mode
        path: shards.overrides.pods.customVolumes.configMap.defaultMode
      - description: The key to project.
        displayName: Shards Overrides Pods Custom Volumes Config Map Key
        path: shards.overrides.pods.customVolumes.configMap.key
      - description: 'Optional: mode bits used to set permissions on this file. Must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Config Map Mode
        path: shards.overrides.pods.customVolumes.configMap.mode
      - description: The relative path of the file to map the key to. May not be an
          absolute path. May not contain the path element '..'. May not start with
          the string '..'.
        displayName: Shards Overrides Pods Custom Volumes Config Map Path
        path: shards.overrides.pods.customVolumes.configMap.path
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Volumes Config Map Name
        path: shards.overrides.pods.customVolumes.configMap.name
      - description: Specify whether the ConfigMap or its keys must be defined
        displayName: Shards Overrides Pods Custom Volumes Config Map Optional
        path: shards.overrides.pods.customVolumes.configMap.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Optional: mode bits to use on created files by default. Must
          be a Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between
          0 and 511. YAML accepts both octal and decimal values, JSON requires decimal
          values for mode bits. Defaults to 0644. Directories within the path are
          not affected by this setting. This might be in conflict with other options
          that affect the file mode, like fsGroup, and the result can be other mode
          bits set.'
        displayName: Shards Overrides Pods Custom Volumes Downward API Default Mode
        path: shards.overrides.pods.customVolumes.downwardAPI.defaultMode
      - description: Version of the schema the FieldPath is written in terms of, defaults
          to "v1".
        displayName: Shards Overrides Pods Custom Volumes Downward API Field Ref Api
          Version
        path: shards.overrides.pods.customVolumes.downwardAPI.fieldRef.apiVersion
      - description: Path of the field to select in the specified API version.
        displayName: Shards Overrides Pods Custom Volumes Downward API Field Ref Field
          Path
        path: shards.overrides.pods.customVolumes.downwardAPI.fieldRef.fieldPath
      - description: 'Optional: mode bits used to set permissions on this file, must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Downward API Mode
        path: shards.overrides.pods.customVolumes.downwardAPI.mode
      - description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        displayName: Shards Overrides Pods Custom Volumes Downward API Path
        path: shards.overrides.pods.customVolumes.downwardAPI.path
      - description: 'Container name: required for volumes, optional for env vars'
        displayName: Shards Overrides Pods Custom Volumes Downward API Resource Field
          Ref Container Name
        path: shards.overrides.pods.customVolumes.downwardAPI.resourceFieldRef.containerName
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Volumes Downward API Resource Field
          Ref Divisor
        path: shards.overrides.pods.customVolumes.downwardAPI.resourceFieldRef.divisor
      - description: 'Required: resource to select'
        displayName: Shards Overrides Pods Custom Volumes Downward API Resource Field
          Ref Resource
        path: shards.overrides.pods.customVolumes.downwardAPI.resourceFieldRef.resource
      - description: 'What type of storage medium should back this directory. The
          default is "" which means to use the node''s default medium. Must be an
          empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
        displayName: Shards Overrides Pods Custom Volumes Empty Dir Medium
        path: shards.overrides.pods.customVolumes.emptyDir.medium
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Volumes Empty Dir Size Limit
        path: shards.overrides.pods.customVolumes.emptyDir.sizeLimit
      - description: Target directory name. Must not contain or start with '..'.  If
          '.' is supplied, the volume directory will be the git repository.  Otherwise,
          if specified, the volume will contain the git repository in the subdirectory
          with the given name.
        displayName: Shards Overrides Pods Custom Volumes Git Repo Directory
        path: shards.overrides.pods.customVolumes.gitRepo.directory
      - description: Repository URL
        displayName: Shards Overrides Pods Custom Volumes Git Repo Repository
        path: shards.overrides.pods.customVolumes.gitRepo.repository
      - description: Commit hash for the specified revision.
        displayName: Shards Overrides Pods Custom Volumes Git Repo Revision
        path: shards.overrides.pods.customVolumes.gitRepo.revision
      - description: 'EndpointsName is the endpoint name that details Glusterfs topology.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
        displayName: Shards Overrides Pods Custom Volumes Glusterfs Endpoints
        path: shards.overrides.pods.customVolumes.glusterfs.endpoints
      - description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
        displayName: Shards Overrides Pods Custom Volumes Glusterfs Path
        path: shards.overrides.pods.customVolumes.glusterfs.path
      - description: 'ReadOnly here will force the Glusterfs volume to be mounted
          with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
        displayName: Shards Overrides Pods Custom Volumes Glusterfs Read Only
        path: shards.overrides.pods.customVolumes.glusterfs.readOnly
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Path of the directory on the host. If the path is a symlink,
          it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
        displayName: Shards Overrides Pods Custom Volumes Host Path Path
        path: shards.overrides.pods.customVolumes.hostPath.path
      - description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
        displayName: Shards Overrides Pods Custom Volumes Host Path Type
        path: shards.overrides.pods.customVolumes.hostPath.type
      - description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
        displayName: Shards Overrides Pods Custom Volumes Nfs Path
        path: shards.overrides.pods.customVolumes.nfs.path
      - description: 'ReadOnly here will force the NFS export to be mounted with read-only
          permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
        displayName: Shards Overrides Pods Custom Volumes Nfs Read Only
        path: shards.overrides.pods.customVolumes.nfs.readOnly
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Server is the hostname or IP address of the NFS server. More
          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
        displayName: Shards Overrides Pods Custom Volumes Nfs Server
        path: shards.overrides.pods.customVolumes.nfs.server
      - description: Mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between
          0 and 511. YAML accepts both octal and decimal values, JSON requires decimal
          values for mode bits. Directories within the path are not affected by this
          setting. This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
        displayName: Shards Overrides Pods Custom Volumes Projected Default Mode
        path: shards.overrides.pods.customVolumes.projected.defaultMode
      - description: The key to project.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Config
          Map Key
        path: shards.overrides.pods.customVolumes.projected.sources.configMap.key
      - description: 'Optional: mode bits used to set permissions on this file. Must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Config
          Map Mode
        path: shards.overrides.pods.customVolumes.projected.sources.configMap.mode
      - description: The relative path of the file to map the key to. May not be an
          absolute path. May not contain the path element '..'. May not start with
          the string '..'.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Config
          Map Path
        path: shards.overrides.pods.customVolumes.projected.sources.configMap.path
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Config
          Map Name
        path: shards.overrides.pods.customVolumes.projected.sources.configMap.name
      - description: Specify whether the ConfigMap or its keys must be defined
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Config
          Map Optional
        path: shards.overrides.pods.customVolumes.projected.sources.configMap.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Version of the schema the FieldPath is written in terms of, defaults
          to "v1".
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Field Ref Api Version
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.fieldRef.apiVersion
      - description: Path of the field to select in the specified API version.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Field Ref Field Path
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.fieldRef.fieldPath
      - description: 'Optional: mode bits used to set permissions on this file, must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Mode
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.mode
      - description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Path
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.path
      - description: 'Container name: required for volumes, optional for env vars'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Resource Field Ref Container Name
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.resourceFieldRef.containerName
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Resource Field Ref Divisor
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.resourceFieldRef.divisor
      - description: 'Required: resource to select'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Downward
          API Resource Field Ref Resource
        path: shards.overrides.pods.customVolumes.projected.sources.downwardAPI.resourceFieldRef.resource
      - description: The key to project.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Secret
          Key
        path: shards.overrides.pods.customVolumes.projected.sources.secret.key
      - description: 'Optional: mode bits used to set permissions on this file. Must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Secret
          Mode
        path: shards.overrides.pods.customVolumes.projected.sources.secret.mode
      - description: The relative path of the file to map the key to. May not be an
          absolute path. May not contain the path element '..'. May not start with
          the string '..'.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Secret
          Path
        path: shards.overrides.pods.customVolumes.projected.sources.secret.path
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Secret
          Name
        path: shards.overrides.pods.customVolumes.projected.sources.secret.name
      - description: Specify whether the Secret or its key must be defined
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Secret
          Optional
        path: shards.overrides.pods.customVolumes.projected.sources.secret.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Audience is the intended audience of the token. A recipient of
          a token must identify itself with an identifier specified in the audience
          of the token, and otherwise should reject the token. The audience defaults
          to the identifier of the apiserver.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Service
          Account Token Audience
        path: shards.overrides.pods.customVolumes.projected.sources.serviceAccountToken.audience
      - description: ExpirationSeconds is the requested duration of validity of the
          service account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Service
          Account Token Expiration Seconds
        path: shards.overrides.pods.customVolumes.projected.sources.serviceAccountToken.expirationSeconds
      - description: Path is the path relative to the mount point of the file to project
          the token into.
        displayName: Shards Overrides Pods Custom Volumes Projected Sources Service
          Account Token Path
        path: shards.overrides.pods.customVolumes.projected.sources.serviceAccountToken.path
      - description: 'Optional: mode bits used to set permissions on created files
          by default. Must be an octal value between 0000 and 0777 or a decimal value
          between 0 and 511. YAML accepts both octal and decimal values, JSON requires
          decimal values for mode bits. Defaults to 0644. Directories within the path
          are not affected by this setting. This might be in conflict with other options
          that affect the file mode, like fsGroup, and the result can be other mode
          bits set.'
        displayName: Shards Overrides Pods Custom Volumes Secret Default Mode
        path: shards.overrides.pods.customVolumes.secret.defaultMode
      - description: The key to project.
        displayName: Shards Overrides Pods Custom Volumes Secret Key
        path: shards.overrides.pods.customVolumes.secret.key
      - description: 'Optional: mode bits used to set permissions on this file. Must
          be an octal value between 0000 and 0777 or a decimal value between 0 and
          511. YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
        displayName: Shards Overrides Pods Custom Volumes Secret Mode
        path: shards.overrides.pods.customVolumes.secret.mode
      - description: The relative path of the file to map the key to. May not be an
          absolute path. May not contain the path element '..'. May not start with
          the string '..'.
        displayName: Shards Overrides Pods Custom Volumes Secret Path
        path: shards.overrides.pods.customVolumes.secret.path
      - description: Specify whether the Secret or its keys must be defined
        displayName: Shards Overrides Pods Custom Volumes Secret Optional
        path: shards.overrides.pods.customVolumes.secret.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Name of the secret in the pod''s namespace to use. More info:
          https://kubernetes.io/docs/concepts/storage/volumes#secret'
        displayName: Shards Overrides Pods Custom Volumes Secret Secret Name
        path: shards.overrides.pods.customVolumes.secret.secretName
      - displayName: Shards Overrides Pods Custom Init Containers Args
        path: shards.overrides.pods.customInitContainers.args
      - displayName: Shards Overrides Pods Custom Init Containers Command
        path: shards.overrides.pods.customInitContainers.command
      - description: Name of the environment variable. Must be a C_IDENTIFIER.
        displayName: Shards Overrides Pods Custom Init Containers Env Name
        path: shards.overrides.pods.customInitContainers.env.name
      - description: 'Variable references $(VAR_NAME) are expanded using the previously
          defined environment variables in the container and any service environment
          variables. If a variable cannot be resolved, the reference in the input
          string will be unchanged. Double $$ are reduced to a single $, which allows
          for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
          string literal "$(VAR_NAME)". Escaped references will never be expanded,
          regardless of whether the variable exists or not. Defaults to "".'
        displayName: Shards Overrides Pods Custom Init Containers Env Value
        path: shards.overrides.pods.customInitContainers.env.value
      - description: The key to select.
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Config
          Map Key Ref Key
        path: shards.overrides.pods.customInitContainers.env.valueFrom.configMapKeyRef.key
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Config
          Map Key Ref Name
        path: shards.overrides.pods.customInitContainers.env.valueFrom.configMapKeyRef.name
      - description: Specify whether the ConfigMap or its key must be defined
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Config
          Map Key Ref Optional
        path: shards.overrides.pods.customInitContainers.env.valueFrom.configMapKeyRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Version of the schema the FieldPath is written in terms of, defaults
          to "v1".
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Field
          Ref Api Version
        path: shards.overrides.pods.customInitContainers.env.valueFrom.fieldRef.apiVersion
      - description: Path of the field to select in the specified API version.
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Field
          Ref Field Path
        path: shards.overrides.pods.customInitContainers.env.valueFrom.fieldRef.fieldPath
      - description: 'Container name: required for volumes, optional for env vars'
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Resource
          Field Ref Container Name
        path: shards.overrides.pods.customInitContainers.env.valueFrom.resourceFieldRef.containerName
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Resource
          Field Ref Divisor
        path: shards.overrides.pods.customInitContainers.env.valueFrom.resourceFieldRef.divisor
      - description: 'Required: resource to select'
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Resource
          Field Ref Resource
        path: shards.overrides.pods.customInitContainers.env.valueFrom.resourceFieldRef.resource
      - description: The key of the secret to select from.  Must be a valid secret
          key.
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Secret
          Key Ref Key
        path: shards.overrides.pods.customInitContainers.env.valueFrom.secretKeyRef.key
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Secret
          Key Ref Name
        path: shards.overrides.pods.customInitContainers.env.valueFrom.secretKeyRef.name
      - description: Specify whether the Secret or its key must be defined
        displayName: Shards Overrides Pods Custom Init Containers Env Value From Secret
          Key Ref Optional
        path: shards.overrides.pods.customInitContainers.env.valueFrom.secretKeyRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Init Containers Env From Config
          Map Ref Name
        path: shards.overrides.pods.customInitContainers.envFrom.configMapRef.name
      - description: Specify whether the ConfigMap must be defined
        displayName: Shards Overrides Pods Custom Init Containers Env From Config
          Map Ref Optional
        path: shards.overrides.pods.customInitContainers.envFrom.configMapRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: An optional identifier to prepend to each key in the ConfigMap.
          Must be a C_IDENTIFIER.
        displayName: Shards Overrides Pods Custom Init Containers Env From Prefix
        path: shards.overrides.pods.customInitContainers.envFrom.prefix
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Init Containers Env From Secret
          Ref Name
        path: shards.overrides.pods.customInitContainers.envFrom.secretRef.name
      - description: Specify whether the Secret must be defined
        displayName: Shards Overrides Pods Custom Init Containers Env From Secret
          Ref Optional
        path: shards.overrides.pods.customInitContainers.envFrom.secretRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default
          or override container images in workload controllers like Deployments and
          StatefulSets.'
        displayName: Shards Overrides Pods Custom Init Containers Image
        path: shards.overrides.pods.customInitContainers.image
      - description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults
          to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot
          be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
        displayName: Shards Overrides Pods Custom Init Containers Image Pull Policy
        path: shards.overrides.pods.customInitContainers.imagePullPolicy
      - displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Exec Command
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.exec.command
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Host
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Http Headers Name
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Http Headers Value
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Path
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Port
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Http Get Scheme
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.httpGet.scheme
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Tcp Socket Host
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Post Start
          Tcp Socket Port
        path: shards.overrides.pods.customInitContainers.lifecycle.postStart.tcpSocket.port
      - displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Exec Command
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.exec.command
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Host
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Http Headers Name
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Http Headers Value
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Path
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Port
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Http Get Scheme
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.httpGet.scheme
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Tcp Socket Host
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Lifecycle Pre Stop
          Tcp Socket Port
        path: shards.overrides.pods.customInitContainers.lifecycle.preStop.tcpSocket.port
      - displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Exec
          Command
        path: shards.overrides.pods.customInitContainers.livenessProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Failure
          Threshold
        path: shards.overrides.pods.customInitContainers.livenessProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Host
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Http Headers Name
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Http Headers Value
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Path
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Port
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Http
          Get Scheme
        path: shards.overrides.pods.customInitContainers.livenessProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Initial
          Delay Seconds
        path: shards.overrides.pods.customInitContainers.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Period
          Seconds
        path: shards.overrides.pods.customInitContainers.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Success
          Threshold
        path: shards.overrides.pods.customInitContainers.livenessProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Tcp
          Socket Host
        path: shards.overrides.pods.customInitContainers.livenessProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Tcp
          Socket Port
        path: shards.overrides.pods.customInitContainers.livenessProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Termination
          Grace Period Seconds
        path: shards.overrides.pods.customInitContainers.livenessProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Liveness Probe Timeout
          Seconds
        path: shards.overrides.pods.customInitContainers.livenessProbe.timeoutSeconds
      - description: |
          Name of the container specified as a DNS_LABEL. Each
           container in a pod must have a unique name (DNS_LABEL). Cannot
           be updated.

          The name will be prefixed with the string `custom-` so that when referencing it
           in the .spec.containers section of SGInstanceProfile the name used have to be
           prepended with the same prefix.
        displayName: Shards Overrides Pods Custom Init Containers Name
        path: shards.overrides.pods.customInitContainers.name
      - description: Number of port to expose on the pod's IP address. This must be
          a valid port number, 0 < x < 65536.
        displayName: Shards Overrides Pods Custom Init Containers Ports Container
          Port
        path: shards.overrides.pods.customInitContainers.ports.containerPort
      - description: What host IP to bind the external port to.
        displayName: Shards Overrides Pods Custom Init Containers Ports Host IP
        path: shards.overrides.pods.customInitContainers.ports.hostIP
      - description: Number of port to expose on the host. If specified, this must
          be a valid port number, 0 < x < 65536. If HostNetwork is specified, this
          must match ContainerPort. Most containers do not need this.
        displayName: Shards Overrides Pods Custom Init Containers Ports Host Port
        path: shards.overrides.pods.customInitContainers.ports.hostPort
      - description: If specified, this must be an IANA_SVC_NAME and unique within
          the pod. Each named port in a pod must have a unique name. Name for the
          port that can be referred to by services.
        displayName: Shards Overrides Pods Custom Init Containers Ports Name
        path: shards.overrides.pods.customInitContainers.ports.name
      - description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
        displayName: Shards Overrides Pods Custom Init Containers Ports Protocol
        path: shards.overrides.pods.customInitContainers.ports.protocol
      - displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Exec Command
        path: shards.overrides.pods.customInitContainers.readinessProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Failure Threshold
        path: shards.overrides.pods.customInitContainers.readinessProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Host
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Http Headers Name
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Http Headers Value
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Path
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Port
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Http Get Scheme
        path: shards.overrides.pods.customInitContainers.readinessProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Initial Delay Seconds
        path: shards.overrides.pods.customInitContainers.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Period Seconds
        path: shards.overrides.pods.customInitContainers.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Success Threshold
        path: shards.overrides.pods.customInitContainers.readinessProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Tcp Socket Host
        path: shards.overrides.pods.customInitContainers.readinessProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Tcp Socket Port
        path: shards.overrides.pods.customInitContainers.readinessProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Termination Grace Period Seconds
        path: shards.overrides.pods.customInitContainers.readinessProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Readiness Probe
          Timeout Seconds
        path: shards.overrides.pods.customInitContainers.readinessProbe.timeoutSeconds
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Init Containers Resources Limits
        path: shards.overrides.pods.customInitContainers.resources.limits
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Init Containers Resources Requests
        path: shards.overrides.pods.customInitContainers.resources.requests
      - description: 'AllowPrivilegeEscalation controls whether a process can gain
          more privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation
          is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Allow Privilege Escalation
        path: shards.overrides.pods.customInitContainers.securityContext.allowPrivilegeEscalation
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Shards Overrides Pods Custom Init Containers Security Context
          Capabilities Add
        path: shards.overrides.pods.customInitContainers.securityContext.capabilities.add
      - displayName: Shards Overrides Pods Custom Init Containers Security Context
          Capabilities Drop
        path: shards.overrides.pods.customInitContainers.securityContext.capabilities.drop
      - description: Run container in privileged mode. Processes in privileged containers
          are essentially equivalent to root on the host. Defaults to false.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Privileged
        path: shards.overrides.pods.customInitContainers.securityContext.privileged
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults
          for readonly paths and masked paths. This requires the ProcMountType feature
          flag to be enabled.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Proc Mount
        path: shards.overrides.pods.customInitContainers.securityContext.procMount
      - description: Whether this container has a read-only root filesystem. Default
          is false.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Read Only Root Filesystem
        path: shards.overrides.pods.customInitContainers.securityContext.readOnlyRootFilesystem
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The GID to run the entrypoint of the container process. Uses
          runtime default if unset. May also be set in PodSecurityContext.  If set
          in both SecurityContext and PodSecurityContext, the value specified in SecurityContext
          takes precedence.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Run As Group
        path: shards.overrides.pods.customInitContainers.securityContext.runAsGroup
      - description: Indicates that the container must run as a non-root user. If
          true, the Kubelet will validate the image at runtime to ensure that it does
          not run as UID 0 (root) and fail to start the container if it does. If unset
          or false, no such validation will be performed. May also be set in PodSecurityContext.  If
          set in both SecurityContext and PodSecurityContext, the value specified
          in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Run As Non Root
        path: shards.overrides.pods.customInitContainers.securityContext.runAsNonRoot
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The UID to run the entrypoint of the container process. Defaults
          to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If
          set in both SecurityContext and PodSecurityContext, the value specified
          in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Run As User
        path: shards.overrides.pods.customInitContainers.securityContext.runAsUser
      - description: Level is SELinux level label that applies to the container.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Se Linux Options Level
        path: shards.overrides.pods.customInitContainers.securityContext.seLinuxOptions.level
      - description: Role is a SELinux role label that applies to the container.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Se Linux Options Role
        path: shards.overrides.pods.customInitContainers.securityContext.seLinuxOptions.role
      - description: Type is a SELinux type label that applies to the container.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Se Linux Options Type
        path: shards.overrides.pods.customInitContainers.securityContext.seLinuxOptions.type
      - description: User is a SELinux user label that applies to the container.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Se Linux Options User
        path: shards.overrides.pods.customInitContainers.securityContext.seLinuxOptions.user
      - description: localhostProfile indicates a profile defined in a file on the
          node should be used. The profile must be preconfigured on the node to work.
          Must be a descending path, relative to the kubelet's configured seccomp
          profile location. Must only be set if type is "Localhost".
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Seccomp Profile Localhost Profile
        path: shards.overrides.pods.customInitContainers.securityContext.seccompProfile.localhostProfile
      - description: |-
          type indicates which kind of seccomp profile will be applied. Valid options are:

          Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Seccomp Profile Type
        path: shards.overrides.pods.customInitContainers.securityContext.seccompProfile.type
      - description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
          inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName
          field.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Windows Options Gmsa Credential Spec
        path: shards.overrides.pods.customInitContainers.securityContext.windowsOptions.gmsaCredentialSpec
      - description: GMSACredentialSpecName is the name of the GMSA credential spec
          to use.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Windows Options Gmsa Credential Spec Name
        path: shards.overrides.pods.customInitContainers.securityContext.windowsOptions.gmsaCredentialSpecName
      - description: HostProcess determines if a container should be run as a 'Host
          Process' container. This field is alpha-level and will only be honored by
          components that enable the WindowsHostProcessContainers feature flag. Setting
          this field without the feature flag will result in errors when validating
          the Pod. All of a Pod's containers must have the same effective HostProcess
          value (it is not allowed to have a mix of HostProcess containers and non-HostProcess
          containers).  In addition, if HostProcess is true then HostNetwork must
          also be set to true.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Windows Options Host Process
        path: shards.overrides.pods.customInitContainers.securityContext.windowsOptions.hostProcess
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The UserName in Windows to run the entrypoint of the container
          process. Defaults to the user specified in image metadata if unspecified.
          May also be set in PodSecurityContext. If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Init Containers Security Context
          Windows Options Run As User Name
        path: shards.overrides.pods.customInitContainers.securityContext.windowsOptions.runAsUserName
      - displayName: Shards Overrides Pods Custom Init Containers Startup Probe Exec
          Command
        path: shards.overrides.pods.customInitContainers.startupProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Failure
          Threshold
        path: shards.overrides.pods.customInitContainers.startupProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Host
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Http Headers Name
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Http Headers Value
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Path
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Port
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Http
          Get Scheme
        path: shards.overrides.pods.customInitContainers.startupProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Initial
          Delay Seconds
        path: shards.overrides.pods.customInitContainers.startupProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Period
          Seconds
        path: shards.overrides.pods.customInitContainers.startupProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Success
          Threshold
        path: shards.overrides.pods.customInitContainers.startupProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Tcp
          Socket Host
        path: shards.overrides.pods.customInitContainers.startupProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Tcp
          Socket Port
        path: shards.overrides.pods.customInitContainers.startupProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Termination
          Grace Period Seconds
        path: shards.overrides.pods.customInitContainers.startupProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Init Containers Startup Probe Timeout
          Seconds
        path: shards.overrides.pods.customInitContainers.startupProbe.timeoutSeconds
      - description: Whether this container should allocate a buffer for stdin in
          the container runtime. If this is not set, reads from stdin in the container
          will always result in EOF. Default is false.
        displayName: Shards Overrides Pods Custom Init Containers Stdin
        path: shards.overrides.pods.customInitContainers.stdin
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Whether the container runtime should close the stdin channel
          after it has been opened by a single attach. When stdin is true the stdin
          stream will remain open across multiple attach sessions. If stdinOnce is
          set to true, stdin is opened on container start, is empty until the first
          client attaches to stdin, and then remains open and accepts data until the
          client disconnects, at which time stdin is closed and remains closed until
          the container is restarted. If this flag is false, a container processes
          that reads from stdin will never receive an EOF. Default is false
        displayName: Shards Overrides Pods Custom Init Containers Stdin Once
        path: shards.overrides.pods.customInitContainers.stdinOnce
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Optional: Path at which the file to which the container''s termination
          message will be written is mounted into the container''s filesystem. Message
          written is intended to be brief final status, such as an assertion failure
          message. Will be truncated by the node if greater than 4096 bytes. The total
          message length across all containers will be limited to 12kb. Defaults to
          /dev/termination-log. Cannot be updated.'
        displayName: Shards Overrides Pods Custom Init Containers Termination Message
          Path
        path: shards.overrides.pods.customInitContainers.terminationMessagePath
      - description: Indicate how the termination message should be populated. File
          will use the contents of terminationMessagePath to populate the container
          status message on both success and failure. FallbackToLogsOnError will use
          the last chunk of container log output if the termination message file is
          empty and the container exited with an error. The log output is limited
          to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot
          be updated.
        displayName: Shards Overrides Pods Custom Init Containers Termination Message
          Policy
        path: shards.overrides.pods.customInitContainers.terminationMessagePolicy
      - description: Whether this container should allocate a TTY for itself, also
          requires 'stdin' to be true. Default is false.
        displayName: Shards Overrides Pods Custom Init Containers Tty
        path: shards.overrides.pods.customInitContainers.tty
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: devicePath is the path inside of the container that the device
          will be mapped to.
        displayName: Shards Overrides Pods Custom Init Containers Volume Devices Device
          Path
        path: shards.overrides.pods.customInitContainers.volumeDevices.devicePath
      - description: name must match the name of a persistentVolumeClaim in the pod
        displayName: Shards Overrides Pods Custom Init Containers Volume Devices Name
        path: shards.overrides.pods.customInitContainers.volumeDevices.name
      - description: Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Mount
          Path
        path: shards.overrides.pods.customInitContainers.volumeMounts.mountPath
      - description: mountPropagation determines how mounts are propagated from the
          host to container and the other way around. When not set, MountPropagationNone
          is used. This field is beta in 1.10.
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Mount
          Propagation
        path: shards.overrides.pods.customInitContainers.volumeMounts.mountPropagation
      - description: This must match the Name of a Volume.
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Name
        path: shards.overrides.pods.customInitContainers.volumeMounts.name
      - description: Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Read
          Only
        path: shards.overrides.pods.customInitContainers.volumeMounts.readOnly
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Path within the volume from which the container's volume should
          be mounted. Defaults to "" (volume's root).
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Sub
          Path
        path: shards.overrides.pods.customInitContainers.volumeMounts.subPath
      - description: Expanded path within the volume from which the container's volume
          should be mounted. Behaves similarly to SubPath but environment variable
          references $(VAR_NAME) are expanded using the container's environment. Defaults
          to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
        displayName: Shards Overrides Pods Custom Init Containers Volume Mounts Sub
          Path Expr
        path: shards.overrides.pods.customInitContainers.volumeMounts.subPathExpr
      - description: Container's working directory. If not specified, the container
          runtime's default will be used, which might be configured in the container
          image. Cannot be updated.
        displayName: Shards Overrides Pods Custom Init Containers Working Dir
        path: shards.overrides.pods.customInitContainers.workingDir
      - displayName: Shards Overrides Pods Custom Containers Args
        path: shards.overrides.pods.customContainers.args
      - displayName: Shards Overrides Pods Custom Containers Command
        path: shards.overrides.pods.customContainers.command
      - description: Name of the environment variable. Must be a C_IDENTIFIER.
        displayName: Shards Overrides Pods Custom Containers Env Name
        path: shards.overrides.pods.customContainers.env.name
      - description: 'Variable references $(VAR_NAME) are expanded using the previously
          defined environment variables in the container and any service environment
          variables. If a variable cannot be resolved, the reference in the input
          string will be unchanged. Double $$ are reduced to a single $, which allows
          for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
          string literal "$(VAR_NAME)". Escaped references will never be expanded,
          regardless of whether the variable exists or not. Defaults to "".'
        displayName: Shards Overrides Pods Custom Containers Env Value
        path: shards.overrides.pods.customContainers.env.value
      - description: The key to select.
        displayName: Shards Overrides Pods Custom Containers Env Value From Config
          Map Key Ref Key
        path: shards.overrides.pods.customContainers.env.valueFrom.configMapKeyRef.key
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Containers Env Value From Config
          Map Key Ref Name
        path: shards.overrides.pods.customContainers.env.valueFrom.configMapKeyRef.name
      - description: Specify whether the ConfigMap or its key must be defined
        displayName: Shards Overrides Pods Custom Containers Env Value From Config
          Map Key Ref Optional
        path: shards.overrides.pods.customContainers.env.valueFrom.configMapKeyRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Version of the schema the FieldPath is written in terms of, defaults
          to "v1".
        displayName: Shards Overrides Pods Custom Containers Env Value From Field
          Ref Api Version
        path: shards.overrides.pods.customContainers.env.valueFrom.fieldRef.apiVersion
      - description: Path of the field to select in the specified API version.
        displayName: Shards Overrides Pods Custom Containers Env Value From Field
          Ref Field Path
        path: shards.overrides.pods.customContainers.env.valueFrom.fieldRef.fieldPath
      - description: 'Container name: required for volumes, optional for env vars'
        displayName: Shards Overrides Pods Custom Containers Env Value From Resource
          Field Ref Container Name
        path: shards.overrides.pods.customContainers.env.valueFrom.resourceFieldRef.containerName
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Containers Env Value From Resource
          Field Ref Divisor
        path: shards.overrides.pods.customContainers.env.valueFrom.resourceFieldRef.divisor
      - description: 'Required: resource to select'
        displayName: Shards Overrides Pods Custom Containers Env Value From Resource
          Field Ref Resource
        path: shards.overrides.pods.customContainers.env.valueFrom.resourceFieldRef.resource
      - description: The key of the secret to select from.  Must be a valid secret
          key.
        displayName: Shards Overrides Pods Custom Containers Env Value From Secret
          Key Ref Key
        path: shards.overrides.pods.customContainers.env.valueFrom.secretKeyRef.key
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Containers Env Value From Secret
          Key Ref Name
        path: shards.overrides.pods.customContainers.env.valueFrom.secretKeyRef.name
      - description: Specify whether the Secret or its key must be defined
        displayName: Shards Overrides Pods Custom Containers Env Value From Secret
          Key Ref Optional
        path: shards.overrides.pods.customContainers.env.valueFrom.secretKeyRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Containers Env From Config Map Ref
          Name
        path: shards.overrides.pods.customContainers.envFrom.configMapRef.name
      - description: Specify whether the ConfigMap must be defined
        displayName: Shards Overrides Pods Custom Containers Env From Config Map Ref
          Optional
        path: shards.overrides.pods.customContainers.envFrom.configMapRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: An optional identifier to prepend to each key in the ConfigMap.
          Must be a C_IDENTIFIER.
        displayName: Shards Overrides Pods Custom Containers Env From Prefix
        path: shards.overrides.pods.customContainers.envFrom.prefix
      - description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        displayName: Shards Overrides Pods Custom Containers Env From Secret Ref Name
        path: shards.overrides.pods.customContainers.envFrom.secretRef.name
      - description: Specify whether the Secret must be defined
        displayName: Shards Overrides Pods Custom Containers Env From Secret Ref Optional
        path: shards.overrides.pods.customContainers.envFrom.secretRef.optional
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default
          or override container images in workload controllers like Deployments and
          StatefulSets.'
        displayName: Shards Overrides Pods Custom Containers Image
        path: shards.overrides.pods.customContainers.image
      - description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults
          to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot
          be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
        displayName: Shards Overrides Pods Custom Containers Image Pull Policy
        path: shards.overrides.pods.customContainers.imagePullPolicy
      - displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Exec Command
        path: shards.overrides.pods.customContainers.lifecycle.postStart.exec.command
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Host
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Http Headers Name
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Http Headers Value
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Path
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Port
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Http Get Scheme
        path: shards.overrides.pods.customContainers.lifecycle.postStart.httpGet.scheme
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Tcp Socket Host
        path: shards.overrides.pods.customContainers.lifecycle.postStart.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Post Start
          Tcp Socket Port
        path: shards.overrides.pods.customContainers.lifecycle.postStart.tcpSocket.port
      - displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Exec
          Command
        path: shards.overrides.pods.customContainers.lifecycle.preStop.exec.command
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Host
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Http Headers Name
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Http Headers Value
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Path
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Port
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Http
          Get Scheme
        path: shards.overrides.pods.customContainers.lifecycle.preStop.httpGet.scheme
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Tcp
          Socket Host
        path: shards.overrides.pods.customContainers.lifecycle.preStop.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Lifecycle Pre Stop Tcp
          Socket Port
        path: shards.overrides.pods.customContainers.lifecycle.preStop.tcpSocket.port
      - displayName: Shards Overrides Pods Custom Containers Liveness Probe Exec Command
        path: shards.overrides.pods.customContainers.livenessProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Failure
          Threshold
        path: shards.overrides.pods.customContainers.livenessProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Host
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Http Headers Name
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Http Headers Value
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Path
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Port
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Http Get
          Scheme
        path: shards.overrides.pods.customContainers.livenessProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Initial
          Delay Seconds
        path: shards.overrides.pods.customContainers.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Period
          Seconds
        path: shards.overrides.pods.customContainers.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Success
          Threshold
        path: shards.overrides.pods.customContainers.livenessProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Tcp Socket
          Host
        path: shards.overrides.pods.customContainers.livenessProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Tcp Socket
          Port
        path: shards.overrides.pods.customContainers.livenessProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Termination
          Grace Period Seconds
        path: shards.overrides.pods.customContainers.livenessProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Liveness Probe Timeout
          Seconds
        path: shards.overrides.pods.customContainers.livenessProbe.timeoutSeconds
      - description: |
          Name of the container specified as a DNS_LABEL. Each
           container in a pod must have a unique name (DNS_LABEL). Cannot
           be updated.

          The name will be prefixed with the string `custom-` so that when referencing it
           in the .spec.containers section of SGInstanceProfile the name used have to be
           prepended with the same prefix.
        displayName: Shards Overrides Pods Custom Containers Name
        path: shards.overrides.pods.customContainers.name
      - description: Number of port to expose on the pod's IP address. This must be
          a valid port number, 0 < x < 65536.
        displayName: Shards Overrides Pods Custom Containers Ports Container Port
        path: shards.overrides.pods.customContainers.ports.containerPort
      - description: What host IP to bind the external port to.
        displayName: Shards Overrides Pods Custom Containers Ports Host IP
        path: shards.overrides.pods.customContainers.ports.hostIP
      - description: Number of port to expose on the host. If specified, this must
          be a valid port number, 0 < x < 65536. If HostNetwork is specified, this
          must match ContainerPort. Most containers do not need this.
        displayName: Shards Overrides Pods Custom Containers Ports Host Port
        path: shards.overrides.pods.customContainers.ports.hostPort
      - description: If specified, this must be an IANA_SVC_NAME and unique within
          the pod. Each named port in a pod must have a unique name. Name for the
          port that can be referred to by services.
        displayName: Shards Overrides Pods Custom Containers Ports Name
        path: shards.overrides.pods.customContainers.ports.name
      - description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
        displayName: Shards Overrides Pods Custom Containers Ports Protocol
        path: shards.overrides.pods.customContainers.ports.protocol
      - displayName: Shards Overrides Pods Custom Containers Readiness Probe Exec
          Command
        path: shards.overrides.pods.customContainers.readinessProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Failure
          Threshold
        path: shards.overrides.pods.customContainers.readinessProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Host
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Http Headers Name
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Http Headers Value
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Path
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Port
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Http
          Get Scheme
        path: shards.overrides.pods.customContainers.readinessProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Initial
          Delay Seconds
        path: shards.overrides.pods.customContainers.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Period
          Seconds
        path: shards.overrides.pods.customContainers.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Success
          Threshold
        path: shards.overrides.pods.customContainers.readinessProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Tcp Socket
          Host
        path: shards.overrides.pods.customContainers.readinessProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Tcp Socket
          Port
        path: shards.overrides.pods.customContainers.readinessProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Termination
          Grace Period Seconds
        path: shards.overrides.pods.customContainers.readinessProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Readiness Probe Timeout
          Seconds
        path: shards.overrides.pods.customContainers.readinessProbe.timeoutSeconds
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Containers Resources Limits
        path: shards.overrides.pods.customContainers.resources.limits
      - description: |-
          Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

          The serialization format is:

          <quantity>        ::= <signedNumber><suffix>
            (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
          <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
          <decimalSI>       ::= m | "" | k | M | G | T | P | E
            (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

          No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

          When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

          Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
            a. No precision is lost
            b. No fractional digits will be emitted
            c. The exponent (or suffix) is as large as possible.
          The sign will be omitted unless the number is negative.

          Examples:
            1.5 will be serialized as "1500m"
            1.5Gi will be serialized as "1536Mi"

          Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

          Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

          This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
        displayName: Shards Overrides Pods Custom Containers Resources Requests
        path: shards.overrides.pods.customContainers.resources.requests
      - description: 'AllowPrivilegeEscalation controls whether a process can gain
          more privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation
          is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
        displayName: Shards Overrides Pods Custom Containers Security Context Allow
          Privilege Escalation
        path: shards.overrides.pods.customContainers.securityContext.allowPrivilegeEscalation
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Shards Overrides Pods Custom Containers Security Context Capabilities
          Add
        path: shards.overrides.pods.customContainers.securityContext.capabilities.add
      - displayName: Shards Overrides Pods Custom Containers Security Context Capabilities
          Drop
        path: shards.overrides.pods.customContainers.securityContext.capabilities.drop
      - description: Run container in privileged mode. Processes in privileged containers
          are essentially equivalent to root on the host. Defaults to false.
        displayName: Shards Overrides Pods Custom Containers Security Context Privileged
        path: shards.overrides.pods.customContainers.securityContext.privileged
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults
          for readonly paths and masked paths. This requires the ProcMountType feature
          flag to be enabled.
        displayName: Shards Overrides Pods Custom Containers Security Context Proc
          Mount
        path: shards.overrides.pods.customContainers.securityContext.procMount
      - description: Whether this container has a read-only root filesystem. Default
          is false.
        displayName: Shards Overrides Pods Custom Containers Security Context Read
          Only Root Filesystem
        path: shards.overrides.pods.customContainers.securityContext.readOnlyRootFilesystem
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The GID to run the entrypoint of the container process. Uses
          runtime default if unset. May also be set in PodSecurityContext.  If set
          in both SecurityContext and PodSecurityContext, the value specified in SecurityContext
          takes precedence.
        displayName: Shards Overrides Pods Custom Containers Security Context Run
          As Group
        path: shards.overrides.pods.customContainers.securityContext.runAsGroup
      - description: Indicates that the container must run as a non-root user. If
          true, the Kubelet will validate the image at runtime to ensure that it does
          not run as UID 0 (root) and fail to start the container if it does. If unset
          or false, no such validation will be performed. May also be set in PodSecurityContext.  If
          set in both SecurityContext and PodSecurityContext, the value specified
          in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Containers Security Context Run
          As Non Root
        path: shards.overrides.pods.customContainers.securityContext.runAsNonRoot
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The UID to run the entrypoint of the container process. Defaults
          to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If
          set in both SecurityContext and PodSecurityContext, the value specified
          in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Containers Security Context Run
          As User
        path: shards.overrides.pods.customContainers.securityContext.runAsUser
      - description: Level is SELinux level label that applies to the container.
        displayName: Shards Overrides Pods Custom Containers Security Context Se Linux
          Options Level
        path: shards.overrides.pods.customContainers.securityContext.seLinuxOptions.level
      - description: Role is a SELinux role label that applies to the container.
        displayName: Shards Overrides Pods Custom Containers Security Context Se Linux
          Options Role
        path: shards.overrides.pods.customContainers.securityContext.seLinuxOptions.role
      - description: Type is a SELinux type label that applies to the container.
        displayName: Shards Overrides Pods Custom Containers Security Context Se Linux
          Options Type
        path: shards.overrides.pods.customContainers.securityContext.seLinuxOptions.type
      - description: User is a SELinux user label that applies to the container.
        displayName: Shards Overrides Pods Custom Containers Security Context Se Linux
          Options User
        path: shards.overrides.pods.customContainers.securityContext.seLinuxOptions.user
      - description: localhostProfile indicates a profile defined in a file on the
          node should be used. The profile must be preconfigured on the node to work.
          Must be a descending path, relative to the kubelet's configured seccomp
          profile location. Must only be set if type is "Localhost".
        displayName: Shards Overrides Pods Custom Containers Security Context Seccomp
          Profile Localhost Profile
        path: shards.overrides.pods.customContainers.securityContext.seccompProfile.localhostProfile
      - description: |-
          type indicates which kind of seccomp profile will be applied. Valid options are:

          Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
        displayName: Shards Overrides Pods Custom Containers Security Context Seccomp
          Profile Type
        path: shards.overrides.pods.customContainers.securityContext.seccompProfile.type
      - description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
          inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName
          field.
        displayName: Shards Overrides Pods Custom Containers Security Context Windows
          Options Gmsa Credential Spec
        path: shards.overrides.pods.customContainers.securityContext.windowsOptions.gmsaCredentialSpec
      - description: GMSACredentialSpecName is the name of the GMSA credential spec
          to use.
        displayName: Shards Overrides Pods Custom Containers Security Context Windows
          Options Gmsa Credential Spec Name
        path: shards.overrides.pods.customContainers.securityContext.windowsOptions.gmsaCredentialSpecName
      - description: HostProcess determines if a container should be run as a 'Host
          Process' container. This field is alpha-level and will only be honored by
          components that enable the WindowsHostProcessContainers feature flag. Setting
          this field without the feature flag will result in errors when validating
          the Pod. All of a Pod's containers must have the same effective HostProcess
          value (it is not allowed to have a mix of HostProcess containers and non-HostProcess
          containers).  In addition, if HostProcess is true then HostNetwork must
          also be set to true.
        displayName: Shards Overrides Pods Custom Containers Security Context Windows
          Options Host Process
        path: shards.overrides.pods.customContainers.securityContext.windowsOptions.hostProcess
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The UserName in Windows to run the entrypoint of the container
          process. Defaults to the user specified in image metadata if unspecified.
          May also be set in PodSecurityContext. If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
        displayName: Shards Overrides Pods Custom Containers Security Context Windows
          Options Run As User Name
        path: shards.overrides.pods.customContainers.securityContext.windowsOptions.runAsUserName
      - displayName: Shards Overrides Pods Custom Containers Startup Probe Exec Command
        path: shards.overrides.pods.customContainers.startupProbe.exec.command
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded. Defaults to 3. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Failure
          Threshold
        path: shards.overrides.pods.customContainers.startupProbe.failureThreshold
      - description: Host name to connect to, defaults to the pod IP. You probably
          want to set "Host" in httpHeaders instead.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Host
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.host
      - description: The header field name
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Http Headers Name
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.httpHeaders.name
      - description: The header field value
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Http Headers Value
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.httpHeaders.value
      - description: Path to access on the HTTP server.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Path
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.path
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Port
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.port
      - description: Scheme to use for connecting to the host. Defaults to HTTP.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Http Get
          Scheme
        path: shards.overrides.pods.customContainers.startupProbe.httpGet.scheme
      - description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Startup Probe Initial
          Delay Seconds
        path: shards.overrides.pods.customContainers.startupProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe. Default to 10 seconds.
          Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Period
          Seconds
        path: shards.overrides.pods.customContainers.startupProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed. Defaults to 1. Must be 1 for liveness and
          startup. Minimum value is 1.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Success
          Threshold
        path: shards.overrides.pods.customContainers.startupProbe.successThreshold
      - description: 'Optional: Host name to connect to, defaults to the pod IP.'
        displayName: Shards Overrides Pods Custom Containers Startup Probe Tcp Socket
          Host
        path: shards.overrides.pods.customContainers.startupProbe.tcpSocket.host
      - description: IntOrString is a type that can hold an int32 or a string.  When
          used in JSON or YAML marshalling and unmarshalling, it produces or consumes
          the inner type.  This allows you to have, for example, a JSON field that
          can accept a name or number.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Tcp Socket
          Port
        path: shards.overrides.pods.customContainers.startupProbe.tcpSocket.port
      - description: Optional duration in seconds the pod needs to terminate gracefully
          upon probe failure. The grace period is the duration in seconds after the
          processes running in the pod are sent a termination signal and the time
          when the processes are forcibly halted with a kill signal. Set this value
          longer than the expected cleanup time for your process. If this value is
          nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec. Value must be non-negative
          integer. The value zero indicates stop immediately via the kill signal (no
          opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod
          feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is
          used if unset.
        displayName: Shards Overrides Pods Custom Containers Startup Probe Termination
          Grace Period Seconds
        path: shards.overrides.pods.customContainers.startupProbe.terminationGracePeriodSeconds
      - description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        displayName: Shards Overrides Pods Custom Containers Startup Probe Timeout
          Seconds
        path: shards.overrides.pods.customContainers.startupProbe.timeoutSeconds
      - description: Whether this container should allocate a buffer for stdin in
          the container runtime. If this is not set, reads from stdin in the container
          will always result in EOF. Default is false.
        displayName: Shards Overrides Pods Custom Containers Stdin
        path: shards.overrides.pods.customContainers.stdin
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Whether the container runtime should close the stdin channel
          after it has been opened by a single attach. When stdin is true the stdin
          stream will remain open across multiple attach sessions. If stdinOnce is
          set to true, stdin is opened on container start, is empty until the first
          client attaches to stdin, and then remains open and accepts data until the
          client disconnects, at which time stdin is closed and remains closed until
          the container is restarted. If this flag is false, a container processes
          that reads from stdin will never receive an EOF. Default is false
        displayName: Shards Overrides Pods Custom Containers Stdin Once
        path: shards.overrides.pods.customContainers.stdinOnce
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Optional: Path at which the file to which the container''s termination
          message will be written is mounted into the container''s filesystem. Message
          written is intended to be brief final status, such as an assertion failure
          message. Will be truncated by the node if greater than 4096 bytes. The total
          message length across all containers will be limited to 12kb. Defaults to
          /dev/termination-log. Cannot be updated.'
        displayName: Shards Overrides Pods Custom Containers Termination Message Path
        path: shards.overrides.pods.customContainers.terminationMessagePath
      - description: Indicate how the termination message should be populated. File
          will use the contents of terminationMessagePath to populate the container
          status message on both success and failure. FallbackToLogsOnError will use
          the last chunk of container log output if the termination message file is
          empty and the container exited with an error. The log output is limited
          to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot
          be updated.
        displayName: Shards Overrides Pods Custom Containers Termination Message Policy
        path: shards.overrides.pods.customContainers.terminationMessagePolicy
      - description: Whether this container should allocate a TTY for itself, also
          requires 'stdin' to be true. Default is false.
        displayName: Shards Overrides Pods Custom Containers Tty
        path: shards.overrides.pods.customContainers.tty
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: devicePath is the path inside of the container that the device
          will be mapped to.
        displayName: Shards Overrides Pods Custom Containers Volume Devices Device
          Path
        path: shards.overrides.pods.customContainers.volumeDevices.devicePath
      - description: name must match the name of a persistentVolumeClaim in the pod
        displayName: Shards Overrides Pods Custom Containers Volume Devices Name
        path: shards.overrides.pods.customContainers.volumeDevices.name
      - description: Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Mount Path
        path: shards.overrides.pods.customContainers.volumeMounts.mountPath
      - description: mountPropagation determines how mounts are propagated from the
          host to container and the other way around. When not set, MountPropagationNone
          is used. This field is beta in 1.10.
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Mount Propagation
        path: shards.overrides.pods.customContainers.volumeMounts.mountPropagation
      - description: This must match the Name of a Volume.
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Name
        path: shards.overrides.pods.customContainers.volumeMounts.name
      - description: Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Read Only
        path: shards.overrides.pods.customContainers.volumeMounts.readOnly
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Path within the volume from which the container's volume should
          be mounted. Defaults to "" (volume's root).
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Sub Path
        path: shards.overrides.pods.customContainers.volumeMounts.subPath
      - description: Expanded path within the volume from which the container's volume
          should be mounted. Behaves similarly to SubPath but environment variable
          references $(VAR_NAME) are expanded using the container's environment. Defaults
          to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
        displayName: Shards Overrides Pods Custom Containers Volume Mounts Sub Path
          Expr
        path: shards.overrides.pods.customContainers.volumeMounts.subPathExpr
      - description: Container's working directory. If not specified, the container
          runtime's default will be used, which might be configured in the container
          image. Cannot be updated.
        displayName: Shards Overrides Pods Custom Containers Working Dir
        path: shards.overrides.pods.customContainers.workingDir
      - description: |
          Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
        displayName: Shards Overrides Configurations SGPostgresConfig
        path: shards.overrides.configurations.sgPostgresConfig
      - description: |
          Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

          If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
        displayName: Shards Overrides Configurations SGPoolingConfig
        path: shards.overrides.configurations.sgPoolingConfig
      - description: |
          The replication mode applied to the whole cluster.
          Possible values are:
          * `async` (default)
          * `sync`
          * `strict-sync`
          * `sync-all`
          * `strict-sync-all`

          ### `async` Mode

          When in asynchronous mode the cluster is allowed to lose some committed transactions.
           When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
           will automatically be promoted to primary. Any transactions that have not been replicated to that standby
           remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
           but recovering it requires a manual recovery effort by data recovery specialists).

          ### `sync` Mode

          When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
           transactions that may have returned a successful commit status to client (clients can change the behavior
           per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
           values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
           means that the system may be unavailable for writes even though some servers are available. System
           administrators can still use manual failover commands to promote a standby even if it results in transaction
           loss.

          Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
           standby is available, primary server will still accept writes, but does not guarantee their replication. When
           the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
           back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
           makes synchronous mode usable with 2 node clusters.

          When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
           mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
           signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.

          ### `strict-sync` Mode

          When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
           synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
           standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
           transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
           synchronous replica comes up.

          **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
           transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
           replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
           visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.

          ### `sync-all` Mode

          The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.

          ### `strict-sync-all` Mode

          The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
           of instances less one.
        displayName: Shards Overrides Replication Mode
        path: shards.overrides.replication.mode
      - description: |
          Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
           Only setteable if mode is `sync` or `strict-sync`.
        displayName: Shards Overrides Replication Sync Instances
        path: shards.overrides.replication.syncInstances
      - displayName: Shards Overrides Metadata Annotations All Resources
        path: shards.overrides.metadata.annotations.allResources
      - displayName: Shards Overrides Metadata Annotations Cluster Pods
        path: shards.overrides.metadata.annotations.clusterPods
      - displayName: Shards Overrides Metadata Annotations Services
        path: shards.overrides.metadata.annotations.services
      - displayName: Shards Overrides Metadata Annotations Primary Service
        path: shards.overrides.metadata.annotations.primaryService
      - displayName: Shards Overrides Metadata Annotations Replicas Service
        path: shards.overrides.metadata.annotations.replicasService
      - displayName: Shards Overrides Metadata Labels Cluster Pods
        path: shards.overrides.metadata.labels.clusterPods
      - displayName: Shards Overrides Metadata Labels Services
        path: shards.overrides.metadata.labels.services
      - description: |
          If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
        displayName: Prometheus Autobind
        path: prometheusAutobind
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/04-postgres-cluster-management/06-distributed-logs/) to use for this cluster. It must exist.
        displayName: SGDistributedLogs Reference
        path: distributedLogs.sgDistributedLogs
      - description: |
          Define a retention window with the syntax `<integer> (minutes|hours|days|months)` in which log entries are kept.
           Log entries will be removed when they get older more than the double of the specified retention window.

          When this field is changed the retention will be applied only to log entries that are newer than the end of
           the retention window previously specified. If no retention window was previously specified it is considered
           to be of 7 days. This means that if previous retention window is of `7 days` new retention configuration will
           apply after UTC timestamp calculated with: `SELECT date_trunc('days', now() at time zone 'UTC') - INTERVAL '7 days'`.
        displayName: Distributed Logs Retention
        path: distributedLogs.retention
      - description: |
          It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

          The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
        displayName: Non Production Options Disable Cluster Pod Anti Affinity
        path: nonProductionOptions.disableClusterPodAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
        displayName: Non Production Options Disable Patroni Resource Requirements
        path: nonProductionOptions.disablePatroniResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

          By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
        displayName: Non Production Options Disable Cluster Resource Requirements
        path: nonProductionOptions.disableClusterResourceRequirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
           when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Cpu Requests
        path: nonProductionOptions.enableSetPatroniCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

          By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Cpu Requests
        path: nonProductionOptions.enableSetClusterCpuRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
           when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Patroni Memory Requests
        path: nonProductionOptions.enableSetPatroniMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: |
          On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
           the workload with less memory than it requires.

          By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
           when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
        displayName: Non Production Options Enable Set Cluster Memory Requests
        path: nonProductionOptions.enableSetClusterMemoryRequests
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the fature gate to enable.
        displayName: Non Production Options Enabled Feature Gates
        path: nonProductionOptions.enabledFeatureGates
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - displayName: Replicate From Instance SGCluster Reference
        path: ""
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret
      - path: ""
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - displayName: Configurations Backups SGObjectStorage
        path: ""
      - displayName: Configurations Backups SGObjectStorage
        path: ""
      statusDescriptors:
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: Last time the condition transitioned from one status to another.
        displayName: Conditions Last Transition Time
        path: conditions.lastTransitionTime
      - description: A human readable message indicating details about the transition.
        displayName: Conditions Message
        path: conditions.message
      - description: The reason for the condition's last transition.
        displayName: Conditions Reason
        path: conditions.reason
      - description: Status of the condition, one of True, False, Unknown.
        displayName: Conditions Status
        path: conditions.status
      - description: Type of deployment condition.
        displayName: Conditions Type
        path: conditions.type
      - description: The name of the cluster.
        displayName: Cluster Statuses Name
        path: clusterStatuses.name
      - description: Indicates if the cluster requires restart
        displayName: Cluster Statuses Pending Restart
        path: clusterStatuses.pendingRestart
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the extension to install.
        displayName: To Install Postgres Extensions Name
        path: toInstallPostgresExtensions.name
      - description: The id of the publisher of the extension to install.
        displayName: To Install Postgres Extensions Publisher
        path: toInstallPostgresExtensions.publisher
      - description: The version of the extension to install.
        displayName: To Install Postgres Extensions Version
        path: toInstallPostgresExtensions.version
      - description: The repository base URL from where the extension will be installed
          from.
        displayName: To Install Postgres Extensions Repository
        path: toInstallPostgresExtensions.repository
      - description: The postgres major version of the extension to install.
        displayName: To Install Postgres Extensions Postgres Version
        path: toInstallPostgresExtensions.postgresVersion
      - description: The build version of the extension to install.
        displayName: To Install Postgres Extensions Build
        path: toInstallPostgresExtensions.build
      - description: The extra mount of the installed extension.
        displayName: To Install Postgres Extensions Extra Mounts
        path: toInstallPostgresExtensions.extraMounts
      version: v1alpha1
  description: |2

    [StackGres](https://stackgres.io) is the **Stack** required for enterprise production Post**Gres**. A fully-featured platform to run Postgres on Kubernetes. Fully Open Source, StackGres supports both a declarative approach suitable for GitOps workflows and a complete Web Console for the best user experience.

    Built by [OnGres](https://ongres.com) ("**On** Post**Gres**"), StackGres requires little to no prior Postgres experience. StackGres can perform fully automated deployments; fully automated database operations ("Day 2 operations") and comes with advanced database tuning by default. Yet remaining highly customizable for Postgres expert DBAs.

    [StackGres features](https://stackgres.io/features/) include, among others:

    * **High Availability with automated failover**. StackGres relies on [Patroni](https://github.com/zalando/patroni), and its built-in and fully automatic.
    * **Integrated connection pooling**. Built-in, by default, like it should be for production workloads.
    * **Automatic backups with lifecycle policies**. Backup your clusters automatically to any object store. Apply retention policies. Restoration supports PITR.
    * **Advanced replication modes**, including async, sync and group replication. It also supports cascading replication and standby clusters on separate Kubernetes clusters for disaster recovery.
    * **More than 150 Postgres extensions**. The Postgres platform with [the largest number of extensions in the world](https://stackgres.io/extensions/). With new extensions added continuously.
    * **Observability**. Fully integrated with the Prometheus stack. Includes pre-defined, Postgres-specific dashboards and alerts.
    * **Fully-featured Web Console**. Perform any operation from the Web Console. Supports SSO, fine-grained RBAC and a REST API.
    * **Distributed Logs**. StackGres developed a mechanism to ship logs from all pods to a central log server, managed by StackGres, that store logs in Postgres. Query your logs with SQL or from the Web Console!
    * **Automated Day 2 Operations**. Minor and major version upgrades, container upgrades, controlled restart, vacuum, repack, even benchmarks!
    * **Expertly tuned by default**. From the creators of [CONF](https://postgresqlco.nf), StackGres pre-tunes your Postgres servers with more than 40 parameters tuned by default.
    * **100% Open Source**. No "premium version with advanced features", no production usage restrictions. Just Open Source.
    * **[24/7 Support](https://stackgres.io/pricing/) Available from OnGres**


    ## Installation and documentation

    Installation:
    * For a quick test, you can follow our [quickstart](https://stackgres.io/doc/latest/demo/quickstart/).
    * [Production installations](https://stackgres.io/doc/latest/install/).

    All the documentation is available at [stackgres.io/doc](https://stackgres.io/doc/latest/install/).

    Join the [Slack](https://slack.stackgres.io) and/or [Discord](https://discord.stackgres.io) Public Communities for Community support.
  displayName: StackGres
  icon:
  - base64data: |
      PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MDAg
      NTAwIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MDAgNTAwIiB4bWw6c3BhY2U9
      InByZXNlcnZlIj4KICAgIDxzd2l0Y2g+CiAgICAgICAgPGc+CiAgICAgICAgICAgIDxwYXRoIHN0
      eWxlPSJmaWxsOiM0MmE4YzgiIGQ9Im01LjIgMjczLjcgMTEwLjcgMTI2LjhoMjY4LjJsMTEwLjct
      MTI2LjgtMTEwLjctMTI2LjhIMTE1Ljl6Ii8+CiAgICAgICAgICAgIDxwYXRoIHN0eWxlPSJmaWxs
      OiM0MjZkODgiIGQ9Ik0xMTUuOSA0MDAuNWgyNjguNHY1Ni40SDExNS45eiIvPgogICAgICAgICAg
      ICA8cGF0aCBzdHlsZT0iZmlsbDojNDI4YmI0IiBkPSJNMTE1LjkgNDU2LjggNS4yIDMzMHYtNTYu
      M2wxMTAuNyAxMjYuOHoiLz4KICAgICAgICAgICAgPHBhdGggc3R5bGU9ImZpbGw6IzE2NjU3YyIg
      ZD0iTTM4NC4xIDQ1Ni44IDQ5NC44IDMzMHYtNTYuM0wzODQuMSA0MDAuNXoiLz4KICAgICAgICAg
      ICAgPHBhdGggZD0iTTQ2NS43IDI1My40YzAtNDctOTYuNi04NS4yLTIxNS43LTg1LjJTMzQuNCAy
      MDYuMyAzNC40IDI1My40czk2LjUgODUuMiAyMTUuNiA4NS4yIDIxNS43LTM4LjIgMjE1LjctODUu
      MnoiIHN0eWxlPSJmaWxsOiMzOWI1NGEiLz4KICAgICAgICAgICAgPHBhdGggZD0iTTQ2NS43IDI1
      My40YzAgNDctOTYuNiA4NS4yLTIxNS43IDg1LjJTMzQuNCAzMDAuNCAzNC40IDI1My40djQ2Ljlj
      MTQuOSA0MS4zIDEwNi41IDg1LjIgMjE1LjYgODUuMnMyMDAuOC00My45IDIxNS43LTg1LjJ2LTQ2
      Ljl6IiBzdHlsZT0iZmlsbDojMDA5MjQ1Ii8+CiAgICAgICAgICAgIDxwYXRoIHN0eWxlPSJmaWxs
      OiNmMmM2M2YiIGQ9Ik0xNi4zIDE3OC42IDI1MCAzMTQuMWwyMzMuOC0xMzUuNUwyNTAgNDMuMnoi
      Lz4KICAgICAgICAgICAgPHBhdGggc3R5bGU9ImZpbGw6I2YyYjEzNiIgZD0iTTE2LjMgMTc4LjZ2
      NTIuOEwyNTAgMzY2Ljl2LTUyLjh6Ii8+CiAgICAgICAgICAgIDxwYXRoIHN0eWxlPSJmaWxsOiNm
      MmExMzAiIGQ9Ik00ODMuOCAxNzguNiAyNTAgMzE0LjF2NTIuOGwyMzMuOC0xMzUuNXoiLz4KICAg
      ICAgICAgICAgPHBhdGggc3R5bGU9ImZpbGw6I2ZmNzEyNCIgZD0ibTY4IDIxMi40IDM2NC4xLTUz
      LTkyLjQtMTA2eiIvPgogICAgICAgICAgICA8cGF0aCBzdHlsZT0iZmlsbDojZDkzZDFiIiBkPSJt
      NjggMjEyLjQgMzY0LjEtNTN2NDcuOEw2OCAyNjAuMXoiLz4KICAgICAgICA8L2c+CiAgICA8L3N3
      aXRjaD4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - create
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - operators.coreos.com
          resources:
          - operators
          verbs:
          - get
          - list
        - apiGroups:
          - stackgres.io
          resources:
          - sgconfigs
          - sgconfigs/status
          - sgconfigs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - certificates.k8s.io
          resources:
          - certificatesigningrequests
          verbs:
          - list
        - apiGroups:
          - certificates.k8s.io
          resourceNames:
          - stackgres-operator
          resources:
          - certificatesigningrequests
          verbs:
          - create
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - certificates.k8s.io
          resources:
          - certificatesigningrequests/approval
          verbs:
          - update
        - apiGroups:
          - certificates.k8s.io
          resourceNames:
          - stackgres-operator.stackgres/*
          resources:
          - signers
          verbs:
          - approve
        - apiGroups:
          - admissionregistration.k8s.io
          resourceNames:
          - stackgres-operator
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
        - apiGroups:
          - apiextensions.k8s.io
          resourceNames:
          - sgbackupconfigs.stackgres.io
          - sgbackups.stackgres.io
          - sgclusters.stackgres.io
          - sgdbops.stackgres.io
          - sgdistributedlogs.stackgres.io
          - sginstanceprofiles.stackgres.io
          - sgobjectstorages.stackgres.io
          - sgpgconfigs.stackgres.io
          - sgpoolconfigs.stackgres.io
          - sgscripts.stackgres.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - get
          - watch
          - create
          - patch
          - update
        - apiGroups:
          - stackgres.io
          resources:
          - sgbackupconfigs
          - sgbackups
          - sgclusters
          - sgdbops
          - sgdistributedlogs
          - sginstanceprofiles
          - sgobjectstorages
          - sgpgconfigs
          - sgpoolconfigs
          - sgscripts
          verbs:
          - '*'
        - apiGroups:
          - admissionregistration.k8s.io
          resourceNames:
          - stackgres
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - delete
        - apiGroups:
          - certificates.k8s.io
          resourceNames:
          - stackgres
          resources:
          - certificatesigningrequests
          verbs:
          - delete
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: stackgres-helm-controller-manager
      deployments:
      - label:
          app: stackgres-helm-controller-manager
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: stackgres
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: stackgres
        name: stackgres-helm-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: stackgres-helm-controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app: stackgres-helm-controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: "1"
                    memory: 256Mi
                  requests:
                    cpu: 5m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=stackgres
                - --max-concurrent-reconciles=1
                - --reconcile-period=1000000h
                image: quay.io/stackgres/helm-operator:1.5.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: "1"
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - command:
                - sh
                - -exc
                - |
                  # TODO: Remove this as soon as version 1.4 get out of support!
                  PREVIOUS_SGCONFIG="$(kubectl get sgconfig stackgres -o yaml || true)"
                  if [ "x" = "x$SGCONFIG" ]             && [ "x" != "x$PREVIOUS_SGCONFIG" ]
                  then
                    SGCONFIG="$PREVIOUS_SGCONFIG"
                  fi

                  SGCONFIG_SPEC=""
                  if [ "x" != "x$SGCONFIG" ]
                  then
                    if ! SGCONFIG="$(printf %s "$SGCONFIG" | kubectl create -f - --dry-run=client -o yaml)"
                    then
                      printf "Please set a correct value for SGCONFIG env var in Subscription since the following is invalid:\n\n%s\n" "$SGCONFIG"
                      exit 1
                    fi
                    if printf %s "$SGCONFIG" | grep -q '^spec:$'
                    then
                      echo "Found SGConfig spec"
                      SGCONFIG_SPEC_LINE="$(printf %s "$SGCONFIG"                 | grep -n '^spec:$' | cut -d : -f 1)"
                      SGCONFIG_AFTER_SPEC_LINE="$(printf %s "$SGCONFIG"                 | tail -n +"$((SGCONFIG_SPEC_LINE + 1))"                 | grep -n '^[^ #].*$' | cut -d : -f 1)"
                      if [ x != "x$SGCONFIG_AFTER_SPEC_LINE" ]
                      then
                        SGCONFIG_SPEC="$(printf %s "$SGCONFIG"                   | head -n "$((SGCONFIG_SPEC_LINE + SGCONFIG_AFTER_SPEC_LINE - 1))"                   | tail -n +"$((SGCONFIG_AFTER_SPEC_LINE - 1))")"
                      else
                        SGCONFIG_SPEC="$(printf %s "$SGCONFIG"                   | tail -n +"$((SGCONFIG_SPEC_LINE + 1))")"
                      fi
                    else
                      echo "Found SGConfig without spec, ignoring!"
                    fi
                  fi

                  # TODO: Remove this as soon as version 1.4 get out of support!
                  kubectl delete --ignore-not-found sgconfig stackgres
                  kubectl delete --ignore-not-found clusterrole stackgres
                  kubectl delete --ignore-not-found clusterrole stackgres-restapi
                  kubectl delete --ignore-not-found clusterrolebinding stackgres
                  kubectl delete --ignore-not-found clusterrolebinding stackgres-restapi
                  kubectl delete --ignore-not-found clusterrolebinding stackgres-restapi-admin
                  kubectl delete --ignore-not-found validatingwebhookconfiguration stackgres
                  kubectl delete --ignore-not-found mutatingwebhookconfiguration stackgres
                  kubectl delete --ignore-not-found secret stackgres-certs
                  kubectl delete --ignore-not-found secret stackgres-web-certs
                  kubectl delete --ignore-not-found deployment -l olm.owner=stackgres.v1.4.3

                  OPERATOR_NAME="$(kubectl get operators.operators.coreos.com -o name             | grep '^operator.operators.coreos.com/stackgres'             | head -n 1 | cut -d / -f 2)"
                  test -n "$OPERATOR_NAME"
                  OPERATOR_UID="$(kubectl get operators.operators.coreos.com "$OPERATOR_NAME" --template '{{ .metadata.uid }}')"
                  test -n "$OPERATOR_UID"

                  cat << EOF | kubectl apply -f -
                  apiVersion: stackgres.io/v1
                  kind: SGConfig
                  metadata:
                    name: stackgres-operator
                  spec:
                  $SGCONFIG_SPEC
                    clusterOwnerReferences:
                    - apiVersion: operators.coreos.com/v1
                      kind: Operator
                      name: $OPERATOR_NAME
                      uid: $OPERATOR_UID
                  EOF

                  while true; do sleep 3600; done
                image: quay.io/ongres/kubectl:v1.25.5-build-6.19
                imagePullPolicy: IfNotPresent
                name: default
                resources:
                  limits:
                    cpu: "1"
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 8Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 1000
                  runAsNonRoot: true
                  runAsUser: 1000
              securityContext:
                runAsNonRoot: true
              serviceAccountName: stackgres-helm-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: stackgres-helm-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - postgresql
  - postgres
  - database
  - sql
  - rdbms
  - open source
  - ongres
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  links:
  - name: StackGres Web
    url: https://stackgres.io
  - name: StackGres Docs
    url: https://stackgres.io/doc
  maintainers:
  - email: stackgres@ongres.com
    name: OnGres
  maturity: stable
  minKubeVersion: 1.18.0
  provider:
    name: OnGres
    url: https://ongres.com
  version: 1.5.0
