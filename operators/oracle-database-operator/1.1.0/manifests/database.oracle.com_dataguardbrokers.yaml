apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: dataguardbrokers.database.oracle.com
spec:
  group: database.oracle.com
  names:
    kind: DataguardBroker
    listKind: DataguardBrokerList
    plural: dataguardbrokers
    singular: dataguardbroker
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.primaryDatabase
      name: Primary
      type: string
    - jsonPath: .status.standbyDatabases
      name: Standbys
      type: string
    - jsonPath: .spec.protectionMode
      name: Protection Mode
      type: string
    - jsonPath: .status.clusterConnectString
      name: Cluster Connect Str
      priority: 1
      type: string
    - jsonPath: .status.externalConnectString
      name: Connect Str
      type: string
    - jsonPath: .spec.primaryDatabaseRef
      name: Primary Database
      priority: 1
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataguardBroker is the Schema for the dataguardbrokers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataguardBrokerSpec defines the desired state of DataguardBroker
            properties:
              fastStartFailOver:
                properties:
                  enable:
                    type: boolean
                  strategy:
                    items:
                      description: FSFO strategy
                      properties:
                        sourceDatabaseRef:
                          type: string
                        targetDatabaseRefs:
                          type: string
                      type: object
                    type: array
                type: object
              loadBalancer:
                type: boolean
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              primaryDatabaseRef:
                type: string
              protectionMode:
                enum:
                - MaxPerformance
                - MaxAvailability
                type: string
              serviceAnnotations:
                additionalProperties:
                  type: string
                type: object
              setAsPrimaryDatabase:
                type: string
              standbyDatabaseRefs:
                items:
                  type: string
                type: array
            required:
            - primaryDatabaseRef
            - protectionMode
            - standbyDatabaseRefs
            type: object
          status:
            description: DataguardBrokerStatus defines the observed state of DataguardBroker
            properties:
              clusterConnectString:
                type: string
              externalConnectString:
                type: string
              primaryDatabase:
                type: string
              primaryDatabaseRef:
                type: string
              protectionMode:
                type: string
              standbyDatabases:
                type: string
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
