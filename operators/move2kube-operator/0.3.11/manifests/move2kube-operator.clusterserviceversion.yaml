apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "move2kube.konveyor.io/v1alpha1",
          "kind": "Move2Kube",
          "metadata": {
            "name": "move2kube-sample"
          },
          "spec": {}
        }
      ]
    capabilities: Seamless Upgrades
    categories: Modernization & Migration
    containerImage: quay.io/konveyor/move2kube-operator:v0.3.11
    createdAt: "2023-11-08T05:02:25Z"
    description: Konveyor Move2Kube is an open source tool that helps migrate your
      app to run on Kubernetes/Openshift.
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/konveyor/move2kube-operator
    support: https://github.com/konveyor/move2kube-operator/issues
  name: move2kube-operator.v0.3.11
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Move2Kube
      name: move2kubes.move2kube.konveyor.io
      version: v1alpha1
  description: |
    Konveyor Move2Kube is a tool that uses source files such as Docker Compose files or Cloud Foundry manifest files, and even source code, to generate Kubernetes deployment files including object yaml, Helm charts, and operators.

    This operator can be used to start an instance of the Move2Kube UI.

    ### Install

    Once you have successfully installed the Operator, proceed to deploy components by creating the required Move2Kube CR.

    By default the operator installs a StatefulSet that brings up a Pod that serves the UI.
    See https://move2kube.konveyor.io/tutorials/ui for a tutorial on how to use the UI.

    Data persistence can be enabled by setting the `persistentVolumeClaim.enable` field to `true` in the CR `spec`. https://github.com/konveyor/move2kube-operator/blob/0e79476bcd873d3272164a47af31b00590dacfb1/helm-charts/move2kube/values.yaml#L26

    ### Documentation

    See https://move2kube.konveyor.io/ for more details.

    ### Getting help

    If you encounter any issues while using this operator, you can create an issue on our [Github repo](https://github.com/konveyor/move2kube-operator/issues), for bugs, enhancements or other requests.
    Or reach out to us in [#konveyor](https://kubernetes.slack.com/archives/CR85S82A2) on kubernetes.slack.com

    ### Contributing

    You can contribute by making PRs to our Github repo https://github.com/konveyor/move2kube-operator
  displayName: Konveyor Move2Kube
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - move2kube.konveyor.io
          resources:
          - move2kubes
          - move2kubes/status
          - move2kubes/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          - serviceaccounts
          - services
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: move2kube-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: move2kube-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: move2kube-operator
          control-plane: controller-manager
        name: move2kube-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=move2kube-operator
                image: quay.io/konveyor/move2kube-operator:v0.3.11
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: "1"
                    memory: 1Gi
                  requests:
                    cpu: 100m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: move2kube-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: move2kube-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - kubernetes
  - modernization
  - replatform
  - move2kube
  - konveyor
  - migration
  links:
  - name: Documentation
    url: https://move2kube.konveyor.io/
  - name: Move2Kube Operator
    url: https://github.com/konveyor/move2kube-operator
  maintainers:
  - email: harikrishmenon@gmail.com
    name: Harikrishnan Balagopal
  - email: seshapad@in.ibm.com
    name: Padmanabha V Seshadri
  maturity: alpha
  minKubeVersion: 1.22.0
  provider:
    name: Konveyor
    url: https://konveyor.io
  version: 0.3.11
