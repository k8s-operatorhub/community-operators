apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: podidentityassociations.eks.services.k8s.aws
spec:
  group: eks.services.k8s.aws
  names:
    kind: PodIdentityAssociation
    listKind: PodIdentityAssociationList
    plural: podidentityassociations
    singular: podidentityassociation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.clusterName
      name: CLUSTER
      type: string
    - jsonPath: .spec.namespace
      name: NAMESPACE
      type: string
    - jsonPath: .spec.serviceAccount
      name: SERVICEACCOUNT
      type: string
    - jsonPath: .spec.roleARN
      name: ROLEARN
      priority: 1
      type: string
    - jsonPath: .status.associationID
      name: ASSOCIATIONID
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodIdentityAssociation is the Schema for the PodIdentityAssociations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PodIdentityAssociationSpec defines the desired state of PodIdentityAssociation.


              Amazon EKS Pod Identity associations provide the ability to manage credentials
              for your applications, similar to the way that Amazon EC2 instance profiles
              provide credentials to Amazon EC2 instances.
            properties:
              clientRequestToken:
                description: |-
                  A unique, case-sensitive identifier that you provide to ensure the idempotency
                  of the request.
                type: string
              clusterName:
                description: The name of the cluster to create the association in.
                type: string
              clusterRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              namespace:
                description: |-
                  The name of the Kubernetes namespace inside the cluster to create the association
                  in. The service account and the pods that use the service account must be
                  in this namespace.
                type: string
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of the IAM role to associate with the service
                  account. The EKS Pod Identity agent manages credentials to assume this role
                  for applications in the containers in the pods that use this service account.
                type: string
              roleRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              serviceAccount:
                description: |-
                  The name of the Kubernetes service account inside the cluster to associate
                  the IAM credentials with.
                type: string
              tags:
                additionalProperties:
                  type: string
                description: |-
                  Metadata that assists with categorization and organization. Each tag consists
                  of a key and an optional value. You define both. Tags don't propagate to
                  any other cluster or Amazon Web Services resources.


                  The following basic restrictions apply to tags:


                     * Maximum number of tags per resource – 50


                     * For each resource, each tag key must be unique, and each tag key can
                     have only one value.


                     * Maximum key length – 128 Unicode characters in UTF-8


                     * Maximum value length – 256 Unicode characters in UTF-8


                     * If your tagging schema is used across multiple services and resources,
                     remember that other services may have restrictions on allowed characters.
                     Generally allowed characters are: letters, numbers, and spaces representable
                     in UTF-8, and the following characters: + - = . _ : / @.


                     * Tag keys and values are case-sensitive.


                     * Do not use aws:, AWS:, or any upper or lowercase combination of such
                     as a prefix for either keys or values as it is reserved for Amazon Web
                     Services use. You cannot edit or delete tag keys or values with this prefix.
                     Tags with this prefix do not count against your tags per resource limit.
                type: object
            required:
            - namespace
            - serviceAccount
            type: object
          status:
            description: PodIdentityAssociationStatus defines the observed state of
              PodIdentityAssociation
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              associationARN:
                description: The Amazon Resource Name (ARN) of the association.
                type: string
              associationID:
                description: The ID of the association.
                type: string
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: The timestamp that the association was created at.
                format: date-time
                type: string
              modifiedAt:
                description: The most recent timestamp that the association was modified
                  at
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
