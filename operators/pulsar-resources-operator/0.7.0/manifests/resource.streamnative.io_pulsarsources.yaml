apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: pulsarsources.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - pulsar
    - pulsarres
    kind: PulsarSource
    listKind: PulsarSourceList
    plural: pulsarsources
    shortNames:
    - psource
    singular: pulsarsource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: RESOURCE_NAME
      type: string
    - jsonPath: .metadata.generation
      name: GENERATION
      type: string
    - jsonPath: .status.observedGeneration
      name: OBSERVED_GENERATION
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PulsarSource is the Schema for the pulsar functions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PulsarSourceSpec defines the desired state of PulsarSource
            properties:
              archive:
                description: Archive is the archive of the PulsarSource
                properties:
                  url:
                    type: string
                type: object
              batchBuilder:
                description: BatchBuilder is the batch builder of the PulsarSource
                type: string
              batchSourceConfig:
                description: BatchSourceConfig is the batch source config of the PulsarSource
                properties:
                  discoveryTriggererClassName:
                    type: string
                  discoveryTriggererConfig:
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              className:
                description: ClassName is the class name of the
                type: string
              configs:
                description: Configs is the map of configs of the PulsarSource
                x-kubernetes-preserve-unknown-fields: true
              connectionRef:
                description: ConnectionRef is the reference to the PulsarConnection
                  resource
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              customRuntimeOptions:
                description: CustomRuntimeOptions is the custom runtime options of
                  the PulsarSource
                x-kubernetes-preserve-unknown-fields: true
              lifecyclePolicy:
                description: |-
                  PulsarResourceLifeCyclePolicy defines the behavior for managing Pulsar resources
                  when the corresponding custom resource (CR) is deleted from the Kubernetes cluster.
                  This policy allows users to control whether Pulsar resources should be retained or
                  removed from the Pulsar cluster after the CR is deleted.
                enum:
                - CleanUpAfterDeletion
                - KeepAfterDeletion
                type: string
              name:
                description: Name is the name of the PulsarSource
                type: string
              namespace:
                description: Namespace is the namespace of the PulsarSource
                type: string
              parallelism:
                description: Parallelism is the parallelism of the PulsarSource
                type: integer
              processingGuarantees:
                description: ProcessingGuarantees is the processing guarantees of
                  the PulsarSource
                type: string
              producerConfig:
                description: ProducerConfig is the producer config of the PulsarSource
                properties:
                  batchBuilder:
                    type: string
                  compressionType:
                    type: string
                  cryptoConfig:
                    description: CryptoConfig represents the configuration for the
                      crypto of the pulsar functions and connectors
                    properties:
                      consumerCryptoFailureAction:
                        type: string
                      cryptoKeyReaderClassName:
                        type: string
                      cryptoKeyReaderConfig:
                        additionalProperties:
                          type: string
                        type: object
                      encryptionKeys:
                        items:
                          type: string
                        type: array
                      producerCryptoFailureAction:
                        type: string
                    type: object
                  maxPendingMessages:
                    type: integer
                  maxPendingMessagesAcrossPartitions:
                    type: integer
                  useThreadLocalProducers:
                    type: boolean
                type: object
              resources:
                description: Resources is the resources of the PulsarSource
                properties:
                  cpu:
                    type: string
                  disk:
                    format: int64
                    type: integer
                  ram:
                    format: int64
                    type: integer
                type: object
              runtimeFlags:
                description: RuntimeFlags is the runtime flags of the PulsarSource
                type: string
              schemaType:
                description: SchemaType is the schema type of the PulsarSource
                type: string
              secrets:
                additionalProperties:
                  description: FunctionSecretKeyRef indicates a secret name and key
                  properties:
                    key:
                      type: string
                    path:
                      type: string
                  required:
                  - key
                  - path
                  type: object
                description: Secrets is the map of secrets of the PulsarSource
                type: object
              serdeClassName:
                description: SerdeClassName is the serde class name of the PulsarSource
                type: string
              tenant:
                description: Tenant is the tenant of the PulsarSource
                type: string
              topicName:
                description: TopicName is the topic name of the PulsarSource
                type: string
            required:
            - connectionRef
            type: object
          status:
            description: PulsarSourceStatus defines the observed state of PulsarSource
            properties:
              conditions:
                description: Represents the observations of a connection's current
                  state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this resource.
                  It corresponds to the metadata generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
