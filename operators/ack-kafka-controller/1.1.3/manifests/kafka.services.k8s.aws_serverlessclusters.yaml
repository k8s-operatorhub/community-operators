apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: serverlessclusters.kafka.services.k8s.aws
spec:
  group: kafka.services.k8s.aws
  names:
    kind: ServerlessCluster
    listKind: ServerlessClusterList
    plural: serverlessclusters
    singular: serverlesscluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServerlessCluster is the Schema for the ServerlessClusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerlessClusterSpec defines the desired state of ServerlessCluster.
            properties:
              associatedSCRAMSecretRefs:
                items:
                  description: "AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference\ntype to provide more user friendly syntax
                    for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                    \ name: my-api"
                  properties:
                    from:
                      description: |-
                        AWSResourceReference provides all the values necessary to reference another
                        k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                  type: object
                type: array
              associatedSCRAMSecrets:
                items:
                  type: string
                type: array
              name:
                description: The name of the cluster.
                type: string
              provisioned:
                description: Information about the provisioned cluster.
                properties:
                  brokerNodeGroupInfo:
                    description: Describes the setup to be used for Apache Kafka broker
                      nodes in the cluster.
                    properties:
                      brokerAZDistribution:
                        description: |-
                          The distribution of broker nodes across Availability Zones. This is an optional
                          parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT.
                          You can also explicitly set this parameter to the value DEFAULT. No other
                          values are currently allowed.

                          Amazon MSK distributes the broker nodes evenly across the Availability Zones
                          that correspond to the subnets you provide when you create the cluster.
                        type: string
                      clientSubnets:
                        items:
                          type: string
                        type: array
                      connectivityInfo:
                        description: Information about the broker access configuration.
                        properties:
                          publicAccess:
                            description: Public access control for brokers.
                            properties:
                              type:
                                type: string
                            type: object
                        type: object
                      instanceType:
                        type: string
                      securityGroups:
                        items:
                          type: string
                        type: array
                      storageInfo:
                        description: Contains information about storage volumes attached
                          to MSK broker nodes.
                        properties:
                          ebsStorageInfo:
                            description: |-
                              Contains information about the EBS storage volumes attached to Apache Kafka
                              broker nodes.
                            properties:
                              provisionedThroughput:
                                description: |-
                                  Contains information about provisioned throughput for EBS storage volumes
                                  attached to kafka broker nodes.
                                properties:
                                  enabled:
                                    type: boolean
                                  volumeThroughput:
                                    format: int64
                                    type: integer
                                type: object
                              volumeSize:
                                format: int64
                                type: integer
                            type: object
                        type: object
                    type: object
                  clientAuthentication:
                    description: Includes all client authentication information.
                    properties:
                      sasl:
                        description: Details for client authentication using SASL.
                        properties:
                          iam:
                            description: Details for IAM access control.
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          scram:
                            description: Details for SASL/SCRAM client authentication.
                            properties:
                              enabled:
                                type: boolean
                            type: object
                        type: object
                      tls:
                        description: Details for client authentication using TLS.
                        properties:
                          certificateAuthorityARNList:
                            items:
                              type: string
                            type: array
                          enabled:
                            type: boolean
                        type: object
                      unauthenticated:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                    type: object
                  configurationInfo:
                    description: Specifies the configuration to use for the brokers.
                    properties:
                      arn:
                        type: string
                      revision:
                        format: int64
                        type: integer
                    type: object
                  encryptionInfo:
                    description: |-
                      Includes encryption-related information, such as the AWS KMS key used for
                      encrypting data at rest and whether you want MSK to encrypt your data in
                      transit.
                    properties:
                      encryptionAtRest:
                        description: The data-volume encryption details.
                        properties:
                          dataVolumeKMSKeyID:
                            type: string
                        type: object
                      encryptionInTransit:
                        description: The settings for encrypting data in transit.
                        properties:
                          clientBroker:
                            description: Client-broker encryption in transit setting.
                            type: string
                          inCluster:
                            type: boolean
                        type: object
                    type: object
                  enhancedMonitoring:
                    description: |-
                      Specifies which metrics are gathered for the MSK cluster. This property has
                      the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,
                      and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each
                      of these levels of monitoring, see Monitoring (https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html).
                    type: string
                  kafkaVersion:
                    type: string
                  loggingInfo:
                    properties:
                      brokerLogs:
                        properties:
                          cloudWatchLogs:
                            properties:
                              enabled:
                                type: boolean
                              logGroup:
                                type: string
                            type: object
                          firehose:
                            properties:
                              deliveryStream:
                                type: string
                              enabled:
                                type: boolean
                            type: object
                          s3:
                            properties:
                              bucket:
                                type: string
                              enabled:
                                type: boolean
                              prefix:
                                type: string
                            type: object
                        type: object
                    type: object
                  numberOfBrokerNodes:
                    format: int64
                    type: integer
                  openMonitoring:
                    description: JMX and Node monitoring for the MSK cluster.
                    properties:
                      prometheus:
                        description: Prometheus settings.
                        properties:
                          jmxExporter:
                            description: Indicates whether you want to turn on or
                              turn off the JMX Exporter.
                            properties:
                              enabledInBroker:
                                type: boolean
                            type: object
                          nodeExporter:
                            description: Indicates whether you want to turn on or
                              turn off the Node Exporter.
                            properties:
                              enabledInBroker:
                                type: boolean
                            type: object
                        type: object
                    type: object
                  storageMode:
                    description: Controls storage mode for various supported storage
                      tiers.
                    type: string
                type: object
              serverless:
                description: Information about the serverless cluster.
                properties:
                  clientAuthentication:
                    description: Includes all client authentication information.
                    properties:
                      sasl:
                        description: Details for client authentication using SASL.
                        properties:
                          iam:
                            description: Details for IAM access control.
                            properties:
                              enabled:
                                type: boolean
                            type: object
                        type: object
                    type: object
                  vpcConfigs:
                    items:
                      description: The configuration of the Amazon VPCs for the cluster.
                      properties:
                        securityGroupIDs:
                          items:
                            type: string
                          type: array
                        subnetIDs:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              tags:
                additionalProperties:
                  type: string
                description: A map of tags that you want the cluster to have.
                type: object
            required:
            - name
            type: object
          status:
            description: ServerlessClusterStatus defines the observed state of ServerlessCluster
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              currentVersion:
                description: The current version of the MSK cluster.
                type: string
              state:
                description: |-
                  The state of the cluster. The possible states are ACTIVE, CREATING, DELETING,
                  FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
                type: string
              type:
                description: The type of the cluster. The possible states are PROVISIONED
                  or SERVERLESS.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
