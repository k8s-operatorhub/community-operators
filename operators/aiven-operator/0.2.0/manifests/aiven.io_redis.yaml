apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: aiven-operator-system/aiven-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: redis.aiven.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: aiven.io
  names:
    kind: Redis
    listKind: RedisList
    plural: redis
    singular: redis
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Redis is the Schema for the redis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisSpec defines the desired state of Redis
            properties:
              authSecretRef:
                description: Authentication reference to Aiven token in a secret
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - key
                - name
                type: object
              cloudName:
                description: Cloud the service runs in.
                maxLength: 256
                type: string
              connInfoSecretTarget:
                description: Information regarding secret creation
                properties:
                  name:
                    description: Name of the Secret resource to be created
                    type: string
                required:
                - name
                type: object
              maintenanceWindowDow:
                description: Day of week when maintenance operations should be performed.
                  One monday, tuesday, wednesday, etc.
                enum:
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
                - sunday
                - never
                type: string
              maintenanceWindowTime:
                description: Time of day when maintenance operations should be performed.
                  UTC time in HH:mm:ss format.
                maxLength: 8
                type: string
              plan:
                description: Subscription plan.
                maxLength: 128
                type: string
              project:
                description: Target project.
                format: ^[a-zA-Z0-9_-]*$
                maxLength: 63
                type: string
              projectVpcId:
                description: Identifier of the VPC the service should be in, if any.
                maxLength: 36
                type: string
              terminationProtection:
                description: Prevent service from being deleted. It is recommended
                  to have this enabled for all services.
                type: boolean
              userConfig:
                description: Redis specific user configuration options
                properties:
                  ip_filter:
                    description: IP filter Allow incoming connections from CIDR address
                      block, e.g. '10.20.0.0/16'
                    items:
                      type: string
                    type: array
                  migration:
                    description: Migrate data from existing server
                    properties:
                      dbname:
                        description: Database name for bootstrapping the initial connection
                        maxLength: 63
                        type: string
                      host:
                        description: Hostname or IP address of the server where to
                          migrate data from
                        maxLength: 255
                        type: string
                      ignore_dbs:
                        description: Comma-separated list of databases, which should
                          be ignored during migration (supported by MySQL only at
                          the moment)
                        maxLength: 2048
                        type: string
                      password:
                        description: Password for authentication with the server where
                          to migrate data from
                        maxLength: 256
                        type: string
                      port:
                        description: Port number of the server where to migrate data
                          from
                        format: int64
                        maximum: 65535
                        minimum: 1
                        type: integer
                      ssl:
                        description: The server where to migrate data from is secured
                          with SSL
                        type: boolean
                      username:
                        description: User name for authentication with the server
                          where to migrate data from
                        maxLength: 256
                        type: string
                    type: object
                  private_access:
                    description: Allow access to selected service ports from private
                      networks
                    properties:
                      prometheus:
                        description: Allow clients to connect to prometheus with a
                          DNS name that always resolves to the service's private IP
                          addresses. Only available in certain network locations
                        type: boolean
                      redis:
                        description: Allow clients to connect to redis with a DNS
                          name that always resolves to the service's private IP addresses.
                          Only available in certain network locations
                        type: boolean
                    type: object
                  privatelink_access:
                    description: Allow access to selected service components through
                      Privatelink
                    properties:
                      redis:
                        description: Enable redis
                        type: boolean
                    type: object
                  project_to_fork_from:
                    description: Name of another project to fork a service from. This
                      has effect only when a new service is being created.
                    maxLength: 63
                    type: string
                  public_access:
                    description: Allow access to selected service ports from the public
                      internet
                    properties:
                      prometheus:
                        description: Allow clients to connect to prometheus from the
                          public internet for service nodes that are in a project
                          VPC or another type of private network
                        type: boolean
                      redis:
                        description: Allow clients to connect to redis from the public
                          internet for service nodes that are in a project VPC or
                          another type of private network
                        type: boolean
                    type: object
                  recovery_basebackup_name:
                    description: Name of the basebackup to restore in forked service
                    format: ^[a-zA-Z0-9-_:.]+$
                    maxLength: 128
                    type: string
                  redis_acl_channels_default:
                    description: Default ACL for pub/sub channels used when Redis
                      user is created Determines default pub/sub channels' ACL for
                      new users if ACL is not supplied. When this option is not defined,
                      all_channels is assumed to keep backward compatibility. This
                      option doesn't affect Redis configuration acl-pubsub-default.
                    enum:
                    - allchannels
                    - resetchannels
                    type: string
                  redis_io_threads:
                    description: Redis IO thread count
                    format: int64
                    maximum: 32
                    minimum: 1
                    type: integer
                  redis_lfu_decay_time:
                    description: LFU maxmemory-policy counter decay time in minutes
                    format: int64
                    maximum: 120
                    minimum: 1
                    type: integer
                  redis_lfu_log_factor:
                    description: Counter logarithm factor for volatile-lfu and allkeys-lfu
                      maxmemory-policies
                    format: int64
                    maximum: 100
                    minimum: 0
                    type: integer
                  redis_maxmemory_policy:
                    description: Redis maxmemory-policy
                    enum:
                    - noeviction
                    - allkeys-lru
                    - volatile-lru
                    - allkeys-random
                    - volatile-random
                    - volatile-ttl
                    - volatile-lfu
                    - allkeys-lfu
                    type: string
                  redis_notify_keyspace_events:
                    description: Set notify-keyspace-events option
                    maxLength: 32
                    type: string
                  redis_number_of_databases:
                    description: Number of redis databases Set number of redis databases.
                      Changing this will cause a restart of redis service.
                    format: int64
                    maximum: 128
                    minimum: 1
                    type: integer
                  redis_persistence:
                    description: Redis persistence When persistence is 'rdb', Redis
                      does RDB dumps each 10 minutes if any key is changed. Also RDB
                      dumps are done according to backup schedule for backup purposes.
                      When persistence is 'off', no RDB dumps and backups are done,
                      so data can be lost at any moment if service is restarted for
                      any reason, or if service is powered off. Also service can't
                      be forked.
                    enum:
                    - "off"
                    - rdb
                    type: string
                  redis_pubsub_client_output_buffer_limit:
                    description: Pub/sub client output buffer hard limit in MB Set
                      output buffer limit for pub / sub clients in MB. The value is
                      the hard limit, the soft limit is 1/4 of the hard limit. When
                      setting the limit, be mindful of the available memory in the
                      selected service plan.
                    format: int64
                    maximum: 512
                    minimum: 32
                    type: integer
                  redis_ssl:
                    description: Require SSL to access Redis
                    type: boolean
                  redis_timeout:
                    description: Redis idle connection timeout
                    format: int64
                    maximum: 31536000
                    minimum: 0
                    type: integer
                  service_to_fork_from:
                    description: Name of another service to fork from. This has effect
                      only when a new service is being created.
                    maxLength: 63
                    type: string
                  static_ips:
                    description: Static IP addresses Use static public IP addresses
                    type: boolean
                type: object
            required:
            - authSecretRef
            - project
            type: object
          status:
            description: ServiceStatus defines the observed state of service
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of a service state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: Service state
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
