apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: resolverrules.route53resolver.services.k8s.aws
spec:
  group: route53resolver.services.k8s.aws
  names:
    kind: ResolverRule
    listKind: ResolverRuleList
    plural: resolverrules
    singular: resolverrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResolverRule is the Schema for the ResolverRules API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ResolverRuleSpec defines the desired state of ResolverRule.


              For queries that originate in your VPC, detailed information about a Resolver
              rule, which specifies how to route DNS queries out of the VPC. The ResolverRule
              parameter appears in the response to a CreateResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html),
              DeleteResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html),
              GetResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html),
              ListResolverRules (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html),
              or UpdateResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html)
              request.
            properties:
              associations:
                items:
                  description: |-
                    In the response to an AssociateResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html),
                    DisassociateResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html),
                    or ListResolverRuleAssociations (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html)
                    request, provides information about an association between a Resolver rule
                    and a VPC. The association determines which DNS queries that originate in
                    the VPC are forwarded to your network.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    resolverRuleID:
                      type: string
                    status:
                      type: string
                    statusMessage:
                      type: string
                    vpcID:
                      type: string
                  type: object
                type: array
              domainName:
                description: |-
                  DNS queries for this domain name are forwarded to the IP addresses that you
                  specify in TargetIps. If a query matches multiple Resolver rules (example.com
                  and www.example.com), outbound DNS queries are routed using the Resolver
                  rule that contains the most specific domain name (www.example.com).
                type: string
              name:
                description: |-
                  A friendly name that lets you easily find a rule in the Resolver dashboard
                  in the Route 53 console.
                type: string
              resolverEndpointID:
                description: |-
                  The ID of the outbound Resolver endpoint that you want to use to route DNS
                  queries to the IP addresses that you specify in TargetIps.
                type: string
              ruleType:
                description: |-
                  When you want to forward DNS queries for specified domain name to resolvers
                  on your network, specify FORWARD.


                  When you have a forwarding rule to forward DNS queries for a domain to your
                  network and you want Resolver to process queries for a subdomain of that
                  domain, specify SYSTEM.


                  For example, to forward DNS queries for example.com to resolvers on your
                  network, you create a rule and specify FORWARD for RuleType. To then have
                  Resolver process queries for apex.example.com, you create a rule and specify
                  SYSTEM for RuleType.


                  Currently, only Resolver can create rules that have a value of RECURSIVE
                  for RuleType.
                type: string
              tags:
                description: A list of the tag keys and values that you want to associate
                  with the endpoint.
                items:
                  description: |-
                    One tag that you want to add to the specified resource. A tag consists of
                    a Key (a name for the tag) and a Value.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              targetIPs:
                description: |-
                  The IPs that you want Resolver to forward DNS queries to. You can specify
                  only IPv4 addresses. Separate IP addresses with a space.


                  TargetIps is available only when the value of Rule type is FORWARD.
                items:
                  description: |-
                    In a CreateResolverRule (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html)
                    request, an array of the IPs that you want to forward DNS queries to.
                  properties:
                    ip:
                      type: string
                    ipv6:
                      type: string
                    port:
                      format: int64
                      type: integer
                  type: object
                type: array
            required:
            - domainName
            - ruleType
            type: object
          status:
            description: ResolverRuleStatus defines the observed state of ResolverRule
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: |-
                  The date and time that the Resolver rule was created, in Unix time format
                  and Coordinated Universal Time (UTC).
                type: string
              creatorRequestID:
                description: |-
                  A unique string that you specified when you created the Resolver rule. CreatorRequestId
                  identifies the request and allows failed requests to be retried without the
                  risk of running the operation twice.
                type: string
              id:
                description: The ID that Resolver assigned to the Resolver rule when
                  you created it.
                type: string
              modificationTime:
                description: |-
                  The date and time that the Resolver rule was last updated, in Unix time format
                  and Coordinated Universal Time (UTC).
                type: string
              ownerID:
                description: |-
                  When a rule is shared with another Amazon Web Services account, the account
                  ID of the account that the rule is shared with.
                type: string
              shareStatus:
                description: |-
                  Whether the rule is shared and, if so, whether the current account is sharing
                  the rule with another account, or another account is sharing the rule with
                  the current account.
                type: string
              status:
                description: A code that specifies the current status of the Resolver
                  rule.
                type: string
              statusMessage:
                description: A detailed description of the status of a Resolver rule.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
