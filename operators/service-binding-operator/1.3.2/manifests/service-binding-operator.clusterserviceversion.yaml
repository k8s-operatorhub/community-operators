apiVersion: binding.operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "binding.operators.coreos.com/v1alpha1",
          "kind": "BindableKinds",
          "metadata": {
            "name": "bindable-kinds"
          },
          "spec": {}
        },
        {
          "apiVersion": "binding.operators.coreos.com/v1alpha1",
          "kind": "ServiceBinding",
          "metadata": {
            "name": "example-servicebinding"
          },
          "spec": {
            "application": {
              "group": "apps",
              "name": "nodejs-rest-http-crud",
              "resource": "deployments",
              "version": "v1"
            },
            "services": [
              {
                "group": "postgresql.example.dev",
                "kind": "Database",
                "name": "pg-instance",
                "version": "v1alpha1"
              }
            ]
          }
        },
        {
          "apiVersion": "servicebinding.io/v1alpha3",
          "kind": "ClusterWorkloadResourceMapping",
          "metadata": {
            "name": "cronjobs.batch"
          },
          "spec": {
            "versions": [
              {
                "containers": [
                  {
                    "path": ".spec.jobTemplate.spec.template.spec.containers[*]"
                  },
                  {
                    "path": ".spec.jobTemplate.spec.template.spec.initContainers[*]"
                  }
                ],
                "version": "*",
                "volumes": ".spec.jobTemplate.spec.template.spec.volumes"
              }
            ]
          }
        },
        {
          "apiVersion": "servicebinding.io/v1alpha3",
          "kind": "ServiceBinding",
          "metadata": {
            "name": "servicebinding-sample"
          },
          "spec": {
            "application": {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "name": "nodejs-rest-http-crud"
            },
            "service": {
              "apiVersion": "postgresql.example.dev/v1alpha1",
              "kind": "Database",
              "name": "pg-instance"
            }
          }
        },
        {
          "apiVersion": "servicebinding.io/v1beta1",
          "kind": "ClusterWorkloadResourceMapping",
          "metadata": {
            "name": "cronjobs.batch"
          },
          "spec": {
            "versions": [
              {
                "containers": [
                  {
                    "path": ".spec.jobTemplate.spec.template.spec.containers[*]"
                  },
                  {
                    "path": ".spec.jobTemplate.spec.template.spec.initContainers[*]"
                  }
                ],
                "version": "*",
                "volumes": ".spec.jobTemplate.spec.template.spec.volumes"
              }
            ]
          }
        },
        {
          "apiVersion": "servicebinding.io/v1beta1",
          "kind": "ServiceBinding",
          "metadata": {
            "name": "servicebinding-sample"
          },
          "spec": {
            "service": {
              "apiVersion": "postgresql.example.dev/v1alpha1",
              "kind": "Database",
              "name": "pg-instance"
            },
            "type": "postgres",
            "workload": {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "name": "nodejs-rest-http-crud"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools, OpenShift Optional, Integration & Delivery
    containerImage: "quay.io/redhat-developer/servicebinding-operator@sha256:30bf7f0f21024bb2e1e4db901b1f5e89ab56e0f3197a919d2bbb670f3fe5223a"
    description: An operator to support binding capabilities between imported apps and operator backed services
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.24.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/redhat-developer/service-binding-operator
    support: Service Binding Operator Community
  name: service-binding-operator.v1.3.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: BindableKinds contains a list of bindable type (group, version, kind) found in the cluster. It is cluster-scoped and there is only single instance named 'bindable-kinds'.
        displayName: Bindable Kinds
        kind: BindableKinds
        name: bindablekinds.binding.operators.coreos.com
        version: v1alpha1
      - kind: ClusterWorkloadResourceMapping
        name: clusterworkloadresourcemappings.servicebinding.io
        version: v1alpha3
      - description: Cluster Workload Resource Mapping defines the mapping for a specific version of an workload resource to a logical PodTemplateSpec-like structure. It provides a way to define exactly where binding data needs to be projected. Use this method when you are not able to configure custom path locations correctly by any other methods.
        displayName: Cluster Workload Resource Mapping
        kind: ClusterWorkloadResourceMapping
        name: clusterworkloadresourcemappings.servicebinding.io
        version: v1beta1
      - description: Service Binding expresses intent to bind a backing service with an application workload.
        displayName: Service Binding
        kind: ServiceBinding
        name: servicebindings.binding.operators.coreos.com
        version: v1alpha1
      - kind: ServiceBinding
        name: servicebindings.servicebinding.io
        version: v1alpha3
      - description: Service Binding implementing community specification (https://github.com/k8s-service-bindings/spec) describing the connection between a backing service and an application workload.
        displayName: Service Binding (Spec API)
        kind: ServiceBinding
        name: servicebindings.servicebinding.io
        version: v1beta1
  description: |
    The Service Binding Operator manages the data plane for applications and backing services. It enables developers to connect their
    applications to backing services (REST API, databases, event buses and others) with a consistent and predictable
    experience. The operator reads data made available by the control plane of backing services and projects the bindings
    data to applications either as accessible files mounted into the application’s container or environment variables.

    In Kubernetes, each service suggests a different way to access their secrets and developers will consume them in their
    application in a custom way. While this provides a good deal of flexibility, it also creates discrepancies and
    complexity dealing with each specific services, which leads large development teams to lose overall velocity.

    Service Binding Operator removes the error-prone manual configuration of binding information, provides service operators
    a low-touch administrative experience to provision and manage access to services and enriches development lifecycle.

    For additional details refer to the project [documentation](https://redhat-developer.github.io/service-binding-operator).

    Get Started with Service Binding Operator
    * Find out about SBO’s [prerequisites](https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/installing-service-binding.html).
    * Refer to the [Quick Start Guide](https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/quick-start.html) to see SBO in action in a simple scenario.

    Need Help
    * Raise a ticket for bugs, features and enhancement [here](https://github.com/redhat-developer/service-binding-operator/)

    Licence
    * Service Binding Operator is licensed under [Apache License 2.0](https://github.com/redhat-developer/service-binding-operator/blob/master/LICENSE)

    Service Binding Operator is providing and supporting two different APIs.
    * `binding.operators.coreos.com/v1alpha1`: This API is compliant with the Service Binding specification. It is fully supported and considered as the mature API. It’s the API we recommend in production environments.
    * `servicebinding.io/v1beta1`: This API is the one defined in the Service Binding specification. It is available in Service Binding Operator 1.x.

    We’ll consider supporting only the API from the specification, once the Service Binding specification will be officially GA. Of course, that will be a breaking change and handle in a safe way for you.
  displayName: Service Binding Operator
  icon:
    - base64data: PHN2ZyB3aWR0aD0iMzIuODgybW0iIGhlaWdodD0iMjIuNjI3bW0iIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDMyLjg4MiAyMi42MjciIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PGcgdHJhbnNmb3JtPSJtYXRyaXgoLS4xNzE4OSAwIDAgLS4xNzE4OSAzNC40OSAyNS43NzMpIj48ZyBmaWxsPSIjODhkNjVkIj48cGF0aCB0cmFuc2Zvcm09Im1hdHJpeCgtMS41MzkyIDAgMCAtMS41MzkyIDM3Ny4zOSAzMTEuMykiIGQ9Im0yMDEuNzcgMTA0LjczYy0xMC4wNjQgMC0xOC4xNjYgOC4xMDIyLTE4LjE2NiAxOC4xNjZ2NDguOTUzYzAgMTAuMDY0IDguMTAyMiAxOC4xNjYgMTguMTY2IDE4LjE2NmgxOS4xN2MxMC4wNjQgMCAxOC4xNjYtOC4xMDIyIDE4LjE2Ni0xOC4xNjZ2LTQ4Ljk1M2MwLTEwLjA2NC04LjEwMjItMTguMTY2LTE4LjE2Ni0xOC4xNjZ6bS01LjQzMTYgMTIuOTNjMy44MjAyIDAuMTY0NjcgNi43ODY0IDMuMzkwMyA2LjYzMDkgNy4yMTA5LTAuMTU1MzUgMy44MjA4LTMuMzc0MSA2Ljc5NS03LjE5NTMgNi42NDg0LTMuODIxNS0wLjE0NzAzLTYuODAyOC0zLjM1OTgtNi42NjQxLTcuMTgxNmwyZS0zIC0wLjA2MDVjMC4xNzE4OS0zLjgyMTIgMy40MDUxLTYuNzgxNyA3LjIyNjYtNi42MTcyem0wIDI0LjU1N2MzLjgyMDIgMC4xNjQ2NyA2Ljc4NjQgMy4zOTAzIDYuNjMwOSA3LjIxMDktMC4xNTUzNSAzLjgyMDgtMy4zNzQxIDYuNzk1LTcuMTk1MyA2LjY0ODQtMy44MjE1LTAuMTQ3MDMtNi44MDI4LTMuMzU5OC02LjY2NDEtNy4xODE2bDJlLTMgLTAuMDYwNWMwLjE3MTg5LTMuODIxMiAzLjQwNTEtNi43ODE3IDcuMjI2Ni02LjYxNzJ6bTAgMjQuNTU3YzMuODIwMiAwLjE2NDY3IDYuNzg2NCAzLjM5MDMgNi42MzA5IDcuMjEwOS0wLjE1NTM0IDMuODIwOC0zLjM3NDEgNi43OTUtNy4xOTUzIDYuNjQ4NC0zLjgyMTUtMC4xNDcwMy02LjgwMjgtMy4zNTk4LTYuNjY0MS03LjE4MTZsMmUtMyAtMC4wNjA1YzAuMTcxODktMy44MjEyIDMuNDA1MS02Ljc4MTcgNy4yMjY2LTYuNjE3MnoiLz48cGF0aCB0cmFuc2Zvcm09Im1hdHJpeCgtMS41MzkyIDAgMCAtMS41MzkyIDM3Ny4zOSAzMTEuMykiIGQ9Im0xMTQuODMgMTA1LjIxdjg1LjAzOWg1NS4yNTR2LTg1LjAzOXptNDMuMTE1IDEyLjQ1MWMzLjgyMSAwLjE2MzYzIDYuNzg4MyAzLjM4OTYgNi42MzI4IDcuMjEwOS0wLjE1NTM0IDMuODIxNi0zLjM3NTMgNi43OTYxLTcuMTk3MyA2LjY0ODQtMy44MjE1LTAuMTQ3MDMtNi44MDI4LTMuMzU5OC02LjY2NDEtNy4xODE2bDRlLTMgLTAuMDYwNWMwLjE3MTktMy44MjA0IDMuNDAzOS02Ljc4MDYgNy4yMjQ2LTYuNjE3MnptMCAyNC41NTdjMy44MjEgMC4xNjM2MyA2Ljc4ODMgMy4zODk2IDYuNjMyOCA3LjIxMDktMC4xNTUzNCAzLjgyMTYtMy4zNzUzIDYuNzk2MS03LjE5NzMgNi42NDg0LTMuODIxNS0wLjE0NzAzLTYuODAyOC0zLjM1OTgtNi42NjQxLTcuMTgxNmw0ZS0zIC0wLjA2MDVjMC4xNzE5LTMuODIwNCAzLjQwMzktNi43ODA2IDcuMjI0Ni02LjYxNzJ6bTAgMjQuNTU3YzMuODIxIDAuMTYzNjMgNi43ODgzIDMuMzg5NiA2LjYzMjggNy4yMTA5LTAuMTU1MzMgMy44MjE2LTMuMzc1MyA2Ljc5NjEtNy4xOTczIDYuNjQ4NC0zLjgyMTUtMC4xNDcwMy02LjgwMjgtMy4zNTk4LTYuNjY0MS03LjE4MTZsNGUtMyAtMC4wNjA1YzAuMTcxOS0zLjgyMDQgMy40MDM5LTYuNzgwNiA3LjIyNDYtNi42MTcyeiIvPjwvZz48ZyBmaWxsPSIjNjJiYjJmIj48cmVjdCB4PSI3NS4wMzIiIHk9IjExNS4yMyIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48cmVjdCB4PSI3NS4wMzIiIHk9Ijc3LjQzNiIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48cmVjdCB4PSI3NS4wMzIiIHk9IjM5LjYzOCIgd2lkdGg9IjU5LjkzNSIgaGVpZ2h0PSI4LjU3NDQiLz48L2c+PC9nPjwvc3ZnPgo=
      mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
                - endpoints
                - pods
                - secrets
                - services
              verbs:
                - get
                - list
            - apiGroups:
                - ""
              resources:
                - pods
                - secrets
              verbs:
                - patch
                - update
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - daemonsets
                - deployments
                - replicasets
                - statefulsets
              verbs:
                - get
                - list
                - patch
                - update
            - apiGroups:
                - apps.openshift.io
              resources:
                - deploymentconfigs
              verbs:
                - get
                - list
                - patch
                - update
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - selfsubjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - bindablekinds
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - bindablekinds/finalizers
              verbs:
                - update
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - bindablekinds/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - servicebindings
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - servicebindings/finalizers
              verbs:
                - update
            - apiGroups:
                - binding.operators.coreos.com
              resources:
                - servicebindings/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - operators.coreos.com
              resources:
                - clusterserviceversions
              verbs:
                - get
                - list
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - get
                - list
            - apiGroups:
                - servicebinding.io
              resources:
                - clusterworkloadresourcemappings
              verbs:
                - get
            - apiGroups:
                - servicebinding.io
              resources:
                - servicebindings
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - servicebinding.io
              resources:
                - servicebindings/finalizers
              verbs:
                - update
            - apiGroups:
                - servicebinding.io
              resources:
                - servicebindings/status
              verbs:
                - get
                - patch
                - update
          serviceAccountName: service-binding-operator
      deployments:
        - label:
            control-plane: service-binding-controller-manager
          name: service-binding-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: service-binding-controller-manager
            strategy: {}
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  control-plane: service-binding-controller-manager
              spec:
                containers:
                  - args:
                      - --leader-elect
                      - --zap-encoder=json
                      - --zap-log-level=info
                    command:
                      - /manager
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                    image: quay.io/redhat-developer/servicebinding-operator@sha256:30bf7f0f21024bb2e1e4db901b1f5e89ab56e0f3197a919d2bbb670f3fe5223a
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    ports:
                      - containerPort: 9443
                        name: webhook-server
                        protocol: TCP
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources: {}
                    volumeMounts:
                      - mountPath: /tmp/k8s-webhook-server/serving-certs
                        name: cert
                        readOnly: true
                serviceAccountName: service-binding-operator
                terminationGracePeriodSeconds: 10
                volumes:
                  - name: cert
                    secret:
                      defaultMode: 420
                      secretName: service-binding-operator-service-cert
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: service-binding-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - ""
  links:
    - name: Documentation
      url: https://redhat-developer.github.io/service-binding-operator
  maintainers:
    - email: service-binding-support@redhat.com
      name: Openshift Application Services
  maturity: candidate
  minKubeVersion: 1.16.0
  provider:
    name: Red Hat
    url: redhat.com
  replaces: service-binding-operator.v1.3.1
  version: 1.3.2
  webhookdefinitions:
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: service-binding-operator
      failurePolicy: Fail
      generateName: mservicebinding.kb.io
      rules:
        - apiGroups:
            - binding.operators.coreos.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - servicebindings
      sideEffects: None
      targetPort: 9443
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-servicebinding
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: service-binding-operator
      failurePolicy: Fail
      generateName: mspec-servicebinding.kb.io
      rules:
        - apiGroups:
            - servicebinding.io
          apiVersions:
            - v1alpha3
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - servicebindings
      sideEffects: None
      targetPort: 9443
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-servicebinding
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: service-binding-operator
      failurePolicy: Fail
      generateName: vclusterworkloadresourcemapping.kb.io
      rules:
        - apiGroups:
            - servicebinding.io
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - clusterworkloadresourcemappings
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-servicebinding-io-v1beta1-clusterworkloadresourcemapping
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: service-binding-operator
      failurePolicy: Fail
      generateName: vservicebinding.kb.io
      rules:
        - apiGroups:
            - binding.operators.coreos.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - servicebindings
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-binding-operators-coreos-com-v1alpha1-servicebinding
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: service-binding-operator
      failurePolicy: Fail
      generateName: vspecservicebinding.kb.io
      rules:
        - apiGroups:
            - servicebinding.io
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - servicebindings
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-servicebinding-io-v1beta1-servicebinding
