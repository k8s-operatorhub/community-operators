apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "sts-silicom"
          },
          "spec": {
            "imageRegistry": "quay.io/silicom",
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Slave",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "namespace": "sts-silicom",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "stsVersion": "2.0.1.0"
          }
        },
        {
          "apiVersion": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "sts-silicom"
          },
          "spec": {
            "imageRegistry": "quay.io/silicom",
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "sts-silicom",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            },
            "stsVersion": "2.0.1.0"
          }
        },
        {
          "apiVersion": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "stsnode-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ]
    capabilities: Basic Install
    categories: Drivers and plugins
    certified: "false"
    containerImage: quay.io/silicom/sts-operator:v0.0.1
    createdAt: 2021-11-17T10:21:24 CET
    description: This Operator is a Kubernetes custom controller whose goal is to
      serve the installation and lifecycle management of Silicom STS device plugins
      for Kubernetes.
    operators.operatorframework.io/builder: operator-sdk-v1.13.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: github.com/silicomdk/sts-operator
  name: silicom-sts-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: StsConfig is the Schema for the stsconfigs API
      displayName: Sts Config
      kind: StsConfig
      name: stsconfigs.sts.silicom.com
      version: v1alpha1
    - description: StsNode is the Schema for the stsnodes API
      displayName: Sts Node
      kind: StsNode
      name: stsnodes.sts.silicom.com
      version: v1alpha1
  description: |
    Silicom STS line card for 4G and 5G NIC enable real-time data transmission
    with high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge
    deployments.

    * Support 1588/PTP over IPv4 / IPV6, IEEE1588v2
    * Support SyncE /ITU-T G.8262
    * T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2
    * T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile
    * PRTC Primary Reference Time Clock Class B/G.8272
    * T-TC Transparent Clock /G.8273.3
    * 1588 Software Stack and Servo Software in x86

    https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter/

    Prequisites:
    https://operatorhub.io/operator/nfd-operator
    https://kubernetes-sigs.github.io/node-feature-discovery/v0.9/get-started/deployment-and-usage.html#operator
    https://github.com/kubernetes-sigs/node-feature-discovery/tree/release-0.9

    NFD is needed for the operator to work
      apiVersion: nfd.openshift.io/v1
      kind: NodeFeatureDiscovery
      metadata:
        name: nfd-instance
        namespace: sro
      spec:
        instance: ""
        operand:
          namespace: sro
          image: k8s.gcr.io/nfd/node-feature-discovery:v0.9.0-minimal
          imagePullPolicy: Always
        workerConfig:
          configData: |
            sources:
              pci:
                deviceClassWhitelist:
                - "0200"
                - "1200"
                deviceLabelFields:
                - "class"
                - "vendor"
                - "device"
                - "subsystem_vendor"
                - "subsystem_device"
              usb:
                deviceClassWhitelist:
                - "0e"
                - "ef"
                - "fe"
                - "ff"
                deviceLabelFields:
                - "class"
                - "vendor"
                - "device"
              custom:
              - name: "silicom.sts.devices"
                matchOn:
                  - usbId:
                      vendor: ["1374"]
                      device: ["0001"]
                  - pciId :
                      vendor: ["8086"]
                      device: ["1591"]
                      subsystem_vendor: ["1374"]
                      subsystem_device: ["02d8"]
                      subsystem_device: ["02d0"]
                      subsystem_device: ["02de"]
              - name: "ublox.usb.serial"
                matchOn:
                  - usbId:
                      vendor: ["1546"]
                      device: ["01a9"]
  displayName: silicom-sts-operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - namespaces
          - nodes
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - sts.silicom.com
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - sts.silicom.com
          resources:
          - stsconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - sts.silicom.com
          resources:
          - stsconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - sts.silicom.com
          resources:
          - stsconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - sts.silicom.com
          resources:
          - stsnodes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: sts-controller-manager
      deployments:
      - name: sts-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/silicom/sts-operator:v0.0.1
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: true
              securityContext:
                runAsNonRoot: false
              serviceAccountName: sts-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: sts-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - sts
  - silicom
  - ptp
  links:
  - name: GitHub Repository
    url: https://github.com/silicomDK/sts-operator
  - name: Github SRO Helm Charts
    url: https://github.com/silicomDK/sts2-charts
  - name: Silicom Ltd.
    url: https://silicom.com
  maintainers:
  - email: rmr@silicom.dk
    name: Ryan M. Raasch
  maturity: alpha
  provider:
    name: Silicom Ltd.
    url: https://silicom.com
  version: 0.0.1
