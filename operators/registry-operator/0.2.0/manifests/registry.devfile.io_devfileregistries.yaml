apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: devfileregistries.registry.devfile.io
spec:
  group: registry.devfile.io
  names:
    kind: DevfileRegistry
    listKind: DevfileRegistryList
    plural: devfileregistries
    shortNames:
    - devreg
    - dr
    singular: devfileregistry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The URL for the Devfile Registry
      jsonPath: .status.url
      name: URL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DevfileRegistry is a custom resource allows you to create and
          manage your own index server and registry viewer. In order to be added,
          the Devfile Registry must be reachable, supports the Devfile v2.0 spec and
          above, and is not using the default namespace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DevfileRegistrySpec defines the desired state of DevfileRegistry
            properties:
              devfileIndex:
                description: Sets the devfile index container spec to be deployed
                  on the Devfile Registry
                properties:
                  image:
                    description: Sets the container image
                    type: string
                  imagePullPolicy:
                    description: Sets the image pull policy for the container
                    type: string
                type: object
              devfileIndexImage:
                description: Sets the container image containing devfile stacks to
                  be deployed on the Devfile Registry
                type: string
              headless:
                description: Sets the registry server deployment to run under headless
                  mode
                type: boolean
              k8s:
                description: DevfileRegistrySpecK8sOnly defines the desired state
                  of the kubernetes-only fields of the DevfileRegistry
                properties:
                  ingressDomain:
                    description: Ingress domain for a Kubernetes cluster. This MUST
                      be explicitly specified on Kubernetes. There are no defaults
                    type: string
                type: object
              ociRegistry:
                description: Sets the OCI registry container spec to be deployed on
                  the Devfile Registry
                properties:
                  image:
                    description: Sets the container image
                    type: string
                  imagePullPolicy:
                    description: Sets the image pull policy for the container
                    type: string
                type: object
              ociRegistryImage:
                description: Overrides the container image used for the OCI registry.
                  Recommended to leave blank and default to the image specified by
                  the operator.
                type: string
              registryViewer:
                description: Sets the registry viewer container spec to be deployed
                  on the Devfile Registry
                properties:
                  image:
                    description: Sets the container image
                    type: string
                  imagePullPolicy:
                    description: Sets the image pull policy for the container
                    type: string
                type: object
              registryViewerImage:
                description: Overrides the container image used for the registry viewer.
                type: string
              storage:
                description: DevfileRegistrySpecStorage defines the desired state
                  of the storage for the DevfileRegistry
                properties:
                  enabled:
                    description: Instructs the operator to deploy the DevfileRegistry
                      with persistent storage Disabled by default.
                    type: boolean
                  registryVolumeSize:
                    description: Configures the size of the devfile registry's persistent
                      volume, if enabled. Defaults to 1Gi.
                    type: string
                type: object
              telemetry:
                description: Telemetry defines the desired state for telemetry in
                  the DevfileRegistry
                properties:
                  key:
                    description: Specify a telemetry key to allow devfile specific
                      data to be sent to a client's own Segment analytics source.
                      If the write key is specified then telemetry will be enabled
                    type: string
                  registryName:
                    description: The registry name (can be any string) that is used
                      as identifier for devfile telemetry.
                    type: string
                  registryViewerWriteKey:
                    description: Specify a telemetry write key for the registry viewer
                      component to allow data to be sent to a client's own Segment
                      analytics source. If the write key is specified then telemetry
                      for the registry viewer component will be enabled
                    type: string
                type: object
              tls:
                description: DevfileRegistrySpecTLS defines the desired state for
                  TLS in the DevfileRegistry
                properties:
                  enabled:
                    description: Instructs the operator to deploy the DevfileRegistry
                      with TLS enabled. Enabled by default. Disabling is only recommended
                      for development or test.
                    type: boolean
                  secretName:
                    description: Name of an optional, pre-existing TLS secret to use
                      for TLS termination on ingress/route resources.
                    type: string
                type: object
            type: object
          status:
            description: DevfileRegistryStatus defines the observed state of DevfileRegistry
            properties:
              conditions:
                description: Conditions shows the state devfile registries.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              url:
                description: URL is the exposed URL for the Devfile Registry, and
                  is set in the status after the registry has become available.
                type: string
            required:
            - url
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
