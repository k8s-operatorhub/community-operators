apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "rds.services.k8s.aws/v1alpha1",
          "kind": "DBParameterGroup",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "rds.services.k8s.aws/v1alpha1",
          "kind": "DBSecurityGroup",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "apiVersion": "rds.services.k8s.aws/v1alpha1",
          "kind": "DBSubnetGroup",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ]
    capabilities: Basic Install
    categories: Cloud Provider
    certified: "false"
    containerImage: public.ecr.aws/aws-controllers-k8s/rds-controller:v0.0.24
    createdAt: "2022-04-22 17:03:38"
    description: AWS RDS controller is a service controller for managing RDS resources
      in Kubernetes
    operatorframework.io/suggested-namespace: ack-system
    operators.operatorframework.io/builder: operator-sdk-v1.16.0+git
    operators.operatorframework.io/project_layout: unknown
    repository: https://github.com/aws-controllers-k8s
    support: Community
  name: ack-rds-controller.v0.0.24
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DBClusterParameterGroup represents the state of an AWS rds DBClusterParameterGroup
        resource.
      displayName: DBClusterParameterGroup
      kind: DBClusterParameterGroup
      name: dbclusterparametergroups.rds.services.k8s.aws
      version: v1alpha1
    - description: DBCluster represents the state of an AWS rds DBCluster resource.
      displayName: DBCluster
      kind: DBCluster
      name: dbclusters.rds.services.k8s.aws
      version: v1alpha1
    - description: DBInstance represents the state of an AWS rds DBInstance resource.
      displayName: DBInstance
      kind: DBInstance
      name: dbinstances.rds.services.k8s.aws
      version: v1alpha1
    - description: DBParameterGroup represents the state of an AWS rds DBParameterGroup
        resource.
      displayName: DBParameterGroup
      kind: DBParameterGroup
      name: dbparametergroups.rds.services.k8s.aws
      version: v1alpha1
    - description: DBSecurityGroup represents the state of an AWS rds DBSecurityGroup
        resource.
      displayName: DBSecurityGroup
      kind: DBSecurityGroup
      name: dbsecuritygroups.rds.services.k8s.aws
      version: v1alpha1
    - description: DBSubnetGroup represents the state of an AWS rds DBSubnetGroup
        resource.
      displayName: DBSubnetGroup
      kind: DBSubnetGroup
      name: dbsubnetgroups.rds.services.k8s.aws
      version: v1alpha1
    - description: GlobalCluster represents the state of an AWS rds GlobalCluster
        resource.
      displayName: GlobalCluster
      kind: GlobalCluster
      name: globalclusters.rds.services.k8s.aws
      version: v1alpha1
  description: |-
    Manage Amazon Relational Database Service ("RDS") resources in AWS from within your Kubernetes cluster.

    **About Amazon RDS**

    Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. It frees you to focus on your applications so you can give them the fast performance, high availability, security and compatibility they need.

    Amazon RDS is available on several database instance types - optimized for memory, performance or I/O -and provides you with six familiar database engines to choose from, including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle Database, and SQL Server. You can use the AWS Database Migration Service to easily migrate or replicate your existing databases to Amazon RDS.

    **About the AWS Controllers for Kubernetes**

    This controller is a component of the [AWS Controller for Kubernetes](https://github.com/aws/aws-controllers-k8s) project. This project is currently in **developer preview**.

    **Pre-Installation Steps**

    Please follow the following link: [Red Hat OpenShift](https://aws-controllers-k8s.github.io/community/docs/user-docs/openshift/)
  displayName: AWS Controllers for Kubernetes - Amazon RDS
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IiB2aWV3Qm94PSIwIDAgMzA0IDE4MiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMzA0IDE4MjsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMyNTJGM0U7fQoJLnN0MXtmaWxsLXJ1bGU6ZXZlbm9kZDtjbGlwLXJ1bGU6ZXZlbm9kZDtmaWxsOiNGRjk5MDA7fQo8L3N0eWxlPgo8Zz4KCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04Ni40LDY2LjRjMCwzLjcsMC40LDYuNywxLjEsOC45YzAuOCwyLjIsMS44LDQuNiwzLjIsNy4yYzAuNSwwLjgsMC43LDEuNiwwLjcsMi4zYzAsMS0wLjYsMi0xLjksM2wtNi4zLDQuMiAgIGMtMC45LDAuNi0xLjgsMC45LTIuNiwwLjljLTEsMC0yLTAuNS0zLTEuNEM3Ni4yLDkwLDc1LDg4LjQsNzQsODYuOGMtMS0xLjctMi0zLjYtMy4xLTUuOWMtNy44LDkuMi0xNy42LDEzLjgtMjkuNCwxMy44ICAgYy04LjQsMC0xNS4xLTIuNC0yMC03LjJjLTQuOS00LjgtNy40LTExLjItNy40LTE5LjJjMC04LjUsMy0xNS40LDkuMS0yMC42YzYuMS01LjIsMTQuMi03LjgsMjQuNS03LjhjMy40LDAsNi45LDAuMywxMC42LDAuOCAgIGMzLjcsMC41LDcuNSwxLjMsMTEuNSwyLjJ2LTcuM2MwLTcuNi0xLjYtMTIuOS00LjctMTZjLTMuMi0zLjEtOC42LTQuNi0xNi4zLTQuNmMtMy41LDAtNy4xLDAuNC0xMC44LDEuM2MtMy43LDAuOS03LjMsMi0xMC44LDMuNCAgIGMtMS42LDAuNy0yLjgsMS4xLTMuNSwxLjNjLTAuNywwLjItMS4yLDAuMy0xLjYsMC4zYy0xLjQsMC0yLjEtMS0yLjEtMy4xdi00LjljMC0xLjYsMC4yLTIuOCwwLjctMy41YzAuNS0wLjcsMS40LTEuNCwyLjgtMi4xICAgYzMuNS0xLjgsNy43LTMuMywxMi42LTQuNWM0LjktMS4zLDEwLjEtMS45LDE1LjYtMS45YzExLjksMCwyMC42LDIuNywyNi4yLDguMWM1LjUsNS40LDguMywxMy42LDguMywyNC42VjY2LjR6IE00NS44LDgxLjYgICBjMy4zLDAsNi43LTAuNiwxMC4zLTEuOGMzLjYtMS4yLDYuOC0zLjQsOS41LTYuNGMxLjYtMS45LDIuOC00LDMuNC02LjRjMC42LTIuNCwxLTUuMywxLTguN3YtNC4yYy0yLjktMC43LTYtMS4zLTkuMi0xLjcgICBjLTMuMi0wLjQtNi4zLTAuNi05LjQtMC42Yy02LjcsMC0xMS42LDEuMy0xNC45LDRjLTMuMywyLjctNC45LDYuNS00LjksMTEuNWMwLDQuNywxLjIsOC4yLDMuNywxMC42ICAgQzM3LjcsODAuNCw0MS4yLDgxLjYsNDUuOCw4MS42eiBNMTI2LjEsOTIuNGMtMS44LDAtMy0wLjMtMy44LTFjLTAuOC0wLjYtMS41LTItMi4xLTMuOUw5Ni43LDEwLjJjLTAuNi0yLTAuOS0zLjMtMC45LTQgICBjMC0xLjYsMC44LTIuNSwyLjQtMi41aDkuOGMxLjksMCwzLjIsMC4zLDMuOSwxYzAuOCwwLjYsMS40LDIsMiwzLjlsMTYuOCw2Ni4ybDE1LjYtNjYuMmMwLjUtMiwxLjEtMy4zLDEuOS0zLjljMC44LTAuNiwyLjItMSw0LTEgICBoOGMxLjksMCwzLjIsMC4zLDQsMWMwLjgsMC42LDEuNSwyLDEuOSwzLjlsMTUuOCw2N2wxNy4zLTY3YzAuNi0yLDEuMy0zLjMsMi0zLjljMC44LTAuNiwyLjEtMSwzLjktMWg5LjNjMS42LDAsMi41LDAuOCwyLjUsMi41ICAgYzAsMC41LTAuMSwxLTAuMiwxLjZjLTAuMSwwLjYtMC4zLDEuNC0wLjcsMi41bC0yNC4xLDc3LjNjLTAuNiwyLTEuMywzLjMtMi4xLDMuOWMtMC44LDAuNi0yLjEsMS0zLjgsMWgtOC42Yy0xLjksMC0zLjItMC4zLTQtMSAgIGMtMC44LTAuNy0xLjUtMi0xLjktNEwxNTYsMjNsLTE1LjQsNjQuNGMtMC41LDItMS4xLDMuMy0xLjksNGMtMC44LDAuNy0yLjIsMS00LDFIMTI2LjF6IE0yNTQuNiw5NS4xYy01LjIsMC0xMC40LTAuNi0xNS40LTEuOCAgIGMtNS0xLjItOC45LTIuNS0xMS41LTRjLTEuNi0wLjktMi43LTEuOS0zLjEtMi44Yy0wLjQtMC45LTAuNi0xLjktMC42LTIuOHYtNS4xYzAtMi4xLDAuOC0zLjEsMi4zLTMuMWMwLjYsMCwxLjIsMC4xLDEuOCwwLjMgICBjMC42LDAuMiwxLjUsMC42LDIuNSwxYzMuNCwxLjUsNy4xLDIuNywxMSwzLjVjNCwwLjgsNy45LDEuMiwxMS45LDEuMmM2LjMsMCwxMS4yLTEuMSwxNC42LTMuM2MzLjQtMi4yLDUuMi01LjQsNS4yLTkuNSAgIGMwLTIuOC0wLjktNS4xLTIuNy03Yy0xLjgtMS45LTUuMi0zLjYtMTAuMS01LjJMMjQ2LDUyYy03LjMtMi4zLTEyLjctNS43LTE2LTEwLjJjLTMuMy00LjQtNS05LjMtNS0xNC41YzAtNC4yLDAuOS03LjksMi43LTExLjEgICBjMS44LTMuMiw0LjItNiw3LjItOC4yYzMtMi4zLDYuNC00LDEwLjQtNS4yYzQtMS4yLDguMi0xLjcsMTIuNi0xLjdjMi4yLDAsNC41LDAuMSw2LjcsMC40YzIuMywwLjMsNC40LDAuNyw2LjUsMS4xICAgYzIsMC41LDMuOSwxLDUuNywxLjZjMS44LDAuNiwzLjIsMS4yLDQuMiwxLjhjMS40LDAuOCwyLjQsMS42LDMsMi41YzAuNiwwLjgsMC45LDEuOSwwLjksMy4zdjQuN2MwLDIuMS0wLjgsMy4yLTIuMywzLjIgICBjLTAuOCwwLTIuMS0wLjQtMy44LTEuMmMtNS43LTIuNi0xMi4xLTMuOS0xOS4yLTMuOWMtNS43LDAtMTAuMiwwLjktMTMuMywyLjhjLTMuMSwxLjktNC43LDQuOC00LjcsOC45YzAsMi44LDEsNS4yLDMsNy4xICAgYzIsMS45LDUuNywzLjgsMTEsNS41bDE0LjIsNC41YzcuMiwyLjMsMTIuNCw1LjUsMTUuNSw5LjZjMy4xLDQuMSw0LjYsOC44LDQuNiwxNGMwLDQuMy0wLjksOC4yLTIuNiwxMS42ICAgYy0xLjgsMy40LTQuMiw2LjQtNy4zLDguOGMtMy4xLDIuNS02LjgsNC4zLTExLjEsNS42QzI2NC40LDk0LjQsMjU5LjcsOTUuMSwyNTQuNiw5NS4xeiIvPgoJPGc+CgkJPHBhdGggY2xhc3M9InN0MSIgZD0iTTI3My41LDE0My43Yy0zMi45LDI0LjMtODAuNywzNy4yLTEyMS44LDM3LjJjLTU3LjYsMC0xMDkuNS0yMS4zLTE0OC43LTU2LjdjLTMuMS0yLjgtMC4zLTYuNiwzLjQtNC40ICAgIGM0Mi40LDI0LjYsOTQuNywzOS41LDE0OC44LDM5LjVjMzYuNSwwLDc2LjYtNy42LDExMy41LTIzLjJDMjc0LjIsMTMzLjYsMjc4LjksMTM5LjcsMjczLjUsMTQzLjd6Ii8+CgkJPHBhdGggY2xhc3M9InN0MSIgZD0iTTI4Ny4yLDEyOC4xYy00LjItNS40LTI3LjgtMi42LTM4LjUtMS4zYy0zLjIsMC40LTMuNy0yLjQtMC44LTQuNWMxOC44LTEzLjIsNDkuNy05LjQsNTMuMy01ICAgIGMzLjYsNC41LTEsMzUuNC0xOC42LDUwLjJjLTIuNywyLjMtNS4zLDEuMS00LjEtMS45QzI4Mi41LDE1NS43LDI5MS40LDEzMy40LDI4Ny4yLDEyOC4xeiIvPgoJPC9nPgo8L2c+Cjwvc3ZnPg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - kms.services.k8s.aws
          resources:
          - keys
          verbs:
          - get
          - list
        - apiGroups:
          - kms.services.k8s.aws
          resources:
          - keys/status
          verbs:
          - get
          - list
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbclusterparametergroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbclusterparametergroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbclusters
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbclusters/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbinstances
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbinstances/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbparametergroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbparametergroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbsecuritygroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbsecuritygroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbsubnetgroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - dbsubnetgroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - globalclusters
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rds.services.k8s.aws
          resources:
          - globalclusters/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - services.k8s.aws
          resources:
          - adoptedresources
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - services.k8s.aws
          resources:
          - adoptedresources/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - services.k8s.aws
          resources:
          - fieldexports
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - services.k8s.aws
          resources:
          - fieldexports/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: ack-rds-controller
      deployments:
      - name: ack-rds-controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller
            spec:
              containers:
              - args:
                - --aws-region
                - $(AWS_REGION)
                - --aws-endpoint-url
                - $(AWS_ENDPOINT_URL)
                - --enable-development-logging
                - $(ACK_ENABLE_DEVELOPMENT_LOGGING)
                - --log-level
                - $(ACK_LOG_LEVEL)
                - --resource-tags
                - $(ACK_RESOURCE_TAGS)
                - --watch-namespace
                - $(ACK_WATCH_NAMESPACE)
                command:
                - ./bin/controller
                env:
                - name: ACK_SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                envFrom:
                - configMapRef:
                    name: ack-user-config
                    optional: false
                - secretRef:
                    name: ack-user-secrets
                    optional: false
                image: public.ecr.aws/aws-controllers-k8s/rds-controller:v0.0.24
                name: controller
                ports:
                - containerPort: 8080
                  name: http
                resources:
                  limits:
                    cpu: 100m
                    memory: 300Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  privileged: false
                  runAsNonRoot: true
              serviceAccountName: ack-rds-controller
              terminationGracePeriodSeconds: 10
    strategy: deployment
  installModes:
  - supported: true
    type: AllNamespaces
  keywords:
  - rds
  - aws
  - amazon
  - ack
  links:
  - name: AWS Controllers for Kubernetes
    url: https://github.com/aws-controllers-k8s/community
  - name: Documentation
    url: https://aws-controllers-k8s.github.io/community/
  - name: Amazon RDS Developer Resources
    url: https://aws.amazon.com/rds/developer-resources/
  maintainers:
  - email: ack-maintainers@amazon.com
    name: rds maintainer team
  maturity: alpha
  provider:
    name: Amazon, Inc.
    url: https://aws.amazon.com
  version: 0.0.24
