apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: inferencecomponents.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: InferenceComponent
    listKind: InferenceComponentList
    plural: inferencecomponents
    singular: inferencecomponent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.inferenceComponentStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InferenceComponent is the Schema for the InferenceComponents
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InferenceComponentSpec defines the desired state of InferenceComponent.
            properties:
              endpointName:
                description: The name of an existing endpoint where you host the inference
                  component.
                type: string
              inferenceComponentName:
                description: A unique name to assign to the inference component.
                type: string
              runtimeConfig:
                description: Runtime settings for a model that is deployed with an
                  inference component.
                properties:
                  copyCount:
                    format: int64
                    type: integer
                type: object
              specification:
                description: |-
                  Details about the resources to deploy with this inference component, including
                  the model, container, and compute resources.
                properties:
                  computeResourceRequirements:
                    description: |-
                      Defines the compute resources to allocate to run a model that you assign
                      to an inference component. These resources include CPU cores, accelerators,
                      and memory.
                    properties:
                      maxMemoryRequiredInMb:
                        format: int64
                        type: integer
                      minMemoryRequiredInMb:
                        format: int64
                        type: integer
                      numberOfAcceleratorDevicesRequired:
                        type: number
                      numberOfCPUCoresRequired:
                        type: number
                    type: object
                  container:
                    description: |-
                      Defines a container that provides the runtime environment for a model that
                      you deploy with an inference component.
                    properties:
                      artifactURL:
                        type: string
                      environment:
                        additionalProperties:
                          type: string
                        type: object
                      image:
                        type: string
                    type: object
                  modelName:
                    type: string
                  startupParameters:
                    description: Settings that take effect while the model container
                      starts up.
                    properties:
                      containerStartupHealthCheckTimeoutInSeconds:
                        format: int64
                        type: integer
                      modelDataDownloadTimeoutInSeconds:
                        format: int64
                        type: integer
                    type: object
                type: object
              tags:
                description: |-
                  A list of key-value pairs associated with the model. For more information,
                  see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.


                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).


                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              variantName:
                description: The name of an existing production variant where you
                  host the inference component.
                type: string
            required:
            - inferenceComponentName
            - runtimeConfig
            - specification
            type: object
          status:
            description: InferenceComponentStatus defines the observed state of InferenceComponent
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time when the inference component was created.
                format: date-time
                type: string
              endpointName:
                description: The name of the endpoint that hosts the inference component.
                type: string
              failureReason:
                description: If the inference component status is Failed, the reason
                  for the failure.
                type: string
              inferenceComponentStatus:
                description: The status of the inference component.
                type: string
              lastModifiedTime:
                description: The time when the inference component was last updated.
                format: date-time
                type: string
              variantName:
                description: The name of the production variant that hosts the inference
                  component.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
