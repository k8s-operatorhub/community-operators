apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "core.linuxsuren.github.com/v1alpha1",
          "kind": "ATest",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "operator",
              "app.kubernetes.io/instance": "atest-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "atest",
              "app.kubernetes.io/part-of": "operator"
            },
            "name": "atest-sample"
          },
          "spec": {
            "image": "ghcr.io/linuxsuren/api-testing",
            "version": "master"
          }
        }
      ]
    categories: 'Developer Tools,      Networking'
    description: >-
      API Testing Operator provides a fully automated experience for API Testing application.
    containerImage: 'ghcr.io/linuxsuren/api-testing-operator:master'
    repository: 'https://github.com/linuxsuren/api-testing'
    capabilities: Basic Install
    createdAt: "2023-08-04T07:37:33Z"
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ATest is the Schema for the atests API
      displayName: ATest
      kind: ATest
      name: atests.core.linuxsuren.github.com
      version: v1alpha1
  description: API Testing
  displayName: API Testing
  icon:
  - base64data: "iVBORw0KGgoAAAANSUhEUgAAAXwAAAE2CAYAAABiJCnAAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpaVUBM0g4pChOtlFRRxLFYtgobQVWnUwufQLmrQkKS6OgmvBwY/FqoOLs64OroIg+AHi6uKk6CIl/i8ptIjx4Lgf7+497t4BQqvKNLMvBmi6ZaQTcSmXX5UCrwgiBD9EDMnMrCczi1l4jq97+Ph6F+VZ3uf+HANqwWSATyKOsbphEW8Qz25adc77xCIryyrxOfGkQRckfuS64vIb55LDAs8UjWx6nlgklko9rPQwKxsa8QxxRNV0yhdyLquctzhr1Qbr3JO/MFzQVzJcpzmGBJaQRAoSFDRQQRUWorTqpJhI037cwz/q+FPkUshVASPHAmrQIDt+8D/43a1ZnJ5yk8JxoP/Ftj/GgcAu0G7a9vexbbdPAP8zcKV3/bUWMPdJerOrRY6AwW3g4rqrKXvA5Q4w8lSXDdmR/DSFYhF4P6NvygPDt0Boze2ts4/TByBLXS3fAAeHwESJstc93h3s7e3fM53+fgBOtHKYiyVOzQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAuIwAALiMBeKU/dgAAAAd0SU1FB+cICgMiFsl4ZxcAAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAgAElEQVR42u3dd1wUd/4/8BcdVLp0FMWCIhIbir2cNcagsUZJLEnMGYm5RE0uicHYokZjDGL0lIglhWgsF2IsqNiIqBE7KiqK9EU6wgK7O78/7nv53V1kF2f77uv5ePh43GV2Zj/7mdkXs5/5zHssBEEQQEREJs+SXUBExMAnIiIGPhERMfCJiIiBT0REDHwiImLgExERA5+IiBj4RETEwCciYuATEREDn4iIGPhERMTAJyIiBj4RETHwiYiIgU9ERAx8IiJi4BMREQOfiIiBT0REDHwiImLgExERA5+IiBj4RETEwCciIgY+EREx8ImIiIFPRMTAJyIiBj4RETHwiYiIgU9ERAx8IiJi4BMREQOfiIgY+ERExMAnIiIGPhERA5+IiBj4RETEwCciIgY+EREx8ImISCes2QX68dEnv2FzQqlGt3nnt4Hw8GhmFv135WoBhky4pLf3d7K3QHMXS7g4WcKxqSUc7C3h7GwFTw9buLnawdnZBk5ONnB3s0fz5k3g5moPFxcHODjYGF1f371XjF6jUo2u3V8tDsArkSEMGwa+fj1+/ETjYQ8AF37Px+hR7djBOlAhFVBRIAcK5M+03uDudhjYzw0dgpwR0NIJLVu6GOUfAWLgU2OD+WKeVrb7/Y/ZeH5kW1hYWLCTDVTypVokX8oHkP/HL4WZk93Qr48nOgV7wNvbkZ1EWsMxfB0TBAE//pSjlW0fSqnBw4el7GQj+6Xw1Y5iTHzzFoL7n8Z7C8/izNksPHlSx84hBr6xe5hVhsTT1Vrb/tmUPHayEdt+oBwRM2+gx8Dj+Pb7GygurmanEAPfWKX8lqvV7W/Znov6ejk72sgVliswb3EWOvdLRty2qygtrWGnEAPfmNTXy7F1u3YD/2aWDOnpRexsEyGVAe+vzMGQ0Sdx5Oh9yGQKdgox8I3BrduPcf2BTOvvczw5h51tYrKKFHh57m3Mefs0cnMr2CHEwDd0x0/oJohjvpGgsqqWHW6C9h57gqERKTib8oidQQx8Q1VVVYuv4gp18l4VUgGXLxew001UYbkCL864jk3/uMLrNcTAN0RXrhaiQiro7P0SD2az003cx2tzsWrNRdTWytgZxMA3JLoO4G/2lqOwsIodb+K+jC/GkuUXUFNTz84glXinrQ5IJFXYuqdM5+974WIexrzQnjvAxG1OKIVMdgHLl4TD1tZK49tv19YdJXdHi1q3tlYGn5Ajot/76A9d0KOHH3cyA994nL8g/maokb0dcPicuDnY3/2YjdHPt4OlJUst/K/sK8PQtKmt6PUVCgEKhQC5XEB9vQxSqQzSWjmqn9ShtFSK4pIaPMp+gkuXy7D32BOtf564n8oQ2Po6/jq7C3cuMfD1RRAE/LBb3OycoT3t8OH7nXB43O/izo5Spch8UIK2bdy5IzTM0tIClpYWsLYG7Oys0KyZXYOv3SCVISurFDdvFWP/P/Nw8Kx2bqL6aE0u2gQ6YtjQNtxB9PTjll2gXZmZpaLP0COntERwRw/06CC+muLZsyy1oG/29tYICvLAS2M7YOe2wUhL6oO1H7eAk73mf3lNf/s2HrCeEjHw9eOsGqUUeob5wMrKErMi/UVvY9O2XNTVceqeobCwsECrVq6YNSMUV84MRsynAbDX4O9sqQxYs+4678glBr6u1dXJ8Y94cYE/PcLpj1K5vXv7im7D3Tw5bt6UcGcYIBcXB0ROC8HFY/0xc5yzxrabcKgSx088YAcTA1+X0tMluJ0t7ux67JgWf/zvgJYueHFgE9HtSDqRy51hwPz8nLBqRW/ELAnQ2DYXfJKBsjIpO5cY+LpyTGTQ2lsDXbv6/Nd/mzyhheh2rI8rREUFSy0YMhsbK0RODcHerZ00sr3cEgWSTz5kxxIDXxcqK2uxbqu4UgrvvOYJJ6f/nvUR1sNHdFukMiDtcj53ihEYPKiVxkJ/XWwWpFLehUsMfK1Lu5wPsd+1YX/580Xa5s2b4s3JrqLbc+BnFtsyptBfv7il2tu5mSXD+fOsnEoMfK37Z6K4L1qgtxU6BXs+ddnoUeJn6+z8uRL5+SyrayxenhyMyDFOam/n54MMfGLga1VBQSW2HygXte6cWb6ws3v67fFdnvNSa+72+Qsc1jEWNjZWeCdK/aGd+P3lqKjk9Rti4GtNqhqlFPr3a3gKZrNmdnjndS/R2971QzYUCoE7yEi0CXRD9Nveam8n485jdiYx8LVBoRDw7Q/ifkYP7GqnsgzCkEHiC0klX6rFvfvF3ElGZOyLgWpv4/c0PvKSGPhacf9+MU78Lm7+86tT/VUWOgsO9kCnAPG3Zp4+wzn5xqRVK1dMGt5MrW2c+a2EHUkMfG04kyJ+OKdXT9V31NrYWOH16eLvvN0cn88HZhiZ8eP81Vr/UEoNy2sQA1/Tamvl+Ee8uMCf+rwjfH0bNyujXx/xwzqZBXLcuMFSC8YkqL361U6LS6rZkcTA16QbNwtxN0/cmdRLYxt/J21goCuG9rQT3c4jxzhVz5j4+TmhQwv1HmzyuIiBTwx8jUpSI0i7d2v8nbQWFhaYNll8qYW1cUUoL2edFWNhZWWJQX3Vm5P/uJiBTwx8jSkvlyImXtxsiPmvNYezs/0zrdOY8X5lfr/EOfnGpG0b9S7cVtfwug0x8DVGnVIKI4Y++0U5b29HTI8Qf9a390A2d5oR8fVpotb60hpetCUGvsbsExmgAR6WCAkRdzPViy+IH9ZJOFSJ3FyWWjAWTZrYqLV+Dc/wiYGvGXl5FfjuYKWodefM8oW9yEcedevmrdbTklLP8/GHxqKhchuNVc0zfGLga8Y5NYJzQH/xY/HOTvZ4e6aH6PW3f5sNuZyPwjMGtrbqBT4feUgMfA2QyxXY+Z242Tl9O9uiXVv15lg/rZRyY6Vcr8Pdeyy1YAzq69UL7CYO1uxEYuCr6969Ypy5Kq4a4fRp/rCyUm8XhHTyRKC3+LO/U6dZasEYqHunrIODFTuRGPjqOn1W/HBOeC9ftd/f3t4ab84Q/zSs2Lh81EjruSMN3JMn9WoeJwx8YuCrRSqV4etvxAX+pOHN4O/vrJF2DOgn/g9HbokC16+z1IKhK5Sod+OUq6s9O5EY+Oq4fqMQWUXixlbHj2uhsXa0beuOvp1tRa9/+Cjn5Bu6R9nqBX7z5g7sRGLgq+NIkvhSCj26+2isHVZWlnh1mviLt+u3F6O0tIY71EApFAKOHC9Taxvubk3YkcTAF6usrAbrtol7ktA7093h6qrZM67evdQttcA5+Ybq8eMnuJkl/sYpe2to/HgjBr5ZUacWzcjh/hpvj7+/s1oPytizjxU0DdWt2+o9onBahLPa8/iJgW/WxNai8XK2RGhnL6206aWx4v+Q/JRUhezscu5YA3TqTIFa64f3bM5OJAa+WDk55fjxcJWodd9+3RsODjZaaVeP7uoN65xL5Zx8Q1NcXI3129W7OS4oyI0dSQx88cEofrx70AA/rbXLzc0Bb78i/ssd/20uSy0YmOSTWWqt7+VsiTaBruxIYuCLIZcrsF1kKYUeHWwQFKTdn9fqXB84n16HO3cecycbiPJyKVatVy/w58zw0tovSmLgm7yMu8U4d6NO1LqzXlG/lIIqz4V6w8tZ/HucZKkFg7HnpzvILFCvpMLAAb7sSGLgiw7EU+IDsU+49r98TZrYYO4s8ReFN8QVoLqapRb07dbtIry/Sr2ZU13aWKNjBw92JjHwxaipqcfX28RNxxw3pClatnTRSTsHDRQ/rFNYrsC164Xc2XpUUVmLBR9eUXs770a15nRMYuCLde1aIXJLxF3UnDS+hc7a2SGoObq1Fz9u++thllrQl7o6OVZ9fkn0sOG/+blZYtDAAHYoMfDFOnTUMEopqGJtbYmZkeJnA8V+W4Li4mrucB1TKAR8vfkKNieUqr2tD99tCUdHO3YqMfDFKCmpRsxOcfOh5051g7u7bmuZ9O2t3vWCi7+z1IKuz+y/2pCGpRsK1N5WpwBrjBndlp1KDHzxASi+lMLzo/x13t6AABeM7ie+fsruvSy1oCvl5VJELzmPZbEFGtnesk+CeHZPDHx1/LRf3Li2ezMLPBfqpfP2WlhYYMpE8dcNDiQ/QVZWGXe8lp0/n4MXJ57Clt2lGtne1Ocd0b9fS3YsPRUfdNkIjx6VYe+xJ6LWnfe6N5o0sdVLu8PCfABkiF7/t3O5CAhw4QGgBXcyHuPb7+5i4/clGtumn5slPv57F63f60E8wzdpv50TP549eKCf3trt6dEMr08QH9jf7MqFTMZSC5pSXV2H8+dz8MFHKeg9+rxGwx4ANq3rBB8fJ3Y08QxfLJlMgW3fihvP7tLGGh30fOPLC8/7I+4ncUMzaRn1uH27CCEhXjwQRB47efkVyMwsQ9rlx9i0Q4LiKkEr77XyfT/068uhHGLgq/fT+85j/H5b3J2nr033h7W1fn9Ede3qDSf7m6iQigua5FO5DPz/IwgCFAoBcrkAuVwBuVwBqVSGJ9X1ePKkDlVV9SgqqkZ2zhPcyajEsTNVou/beBbzX2uO12aGcgcRA19dyafEz1ZRd2qkJjg2s0PUTE98tknc3bMxcQWYNaMOTZvamtR+bdElySQ+x4yxzpj/t+56P7Eg48CjRInq6jps3CYuKEf3czCYC55Dh4i/jlBcJeDq1QIeDAZo7lQ3LF/SE/b2PG8jBr7arlwtRGG5uJ/kUya1gIWFhUF8juBgT3RoIb6mSuKvnJNvaKLf9kb0op56mwFGDHyT8+sh8TVlevbwMZjPYWtrhTdeFT+89I8fS1FU9IQHhIGIWRKAeVHdYGPDwmjEwNeIx4+f4OsfxN0MM3uSKzw8mhnU5+nXT73poRdYakHvOre2xrHd3RA5NQSWlhbsEGLga4o6pRReeN7f4D5Pm0A3DO4u/nb7hN3ZEASBB4aeREW64cCPA9Ctqw87gxj4miQIAhL2iBvOcbK3QJfnDG8ao6WlBSKniP9DdPBsDR4+LOXBoWM9OtjgwLYQfPpJOFxdHdghpBZe3n+KrKwyJJ4WVx74nde90KyZYRau6tXLD8B90eun/JaH1q3deIDogHszC6xc1BrPj2qLJk34TFriGb7WpKhRSmHIYD+D/Vy+Po6YNtpR9Ppbd+Sivl7OA0SL2vla4evlrZF6bBAmjO/IsCcGvjbV18vxzQ5x0xA7BVgjuKNhP0N0XIT4CprXH8iQfquIB4kWjB3cFPu/6YSTh/+CKZODdf78BDIPHNL5H7dvP8aV+zJR697MksEr+LBJ98+J5Fw8F+rNA0UTf3yHNMXoUd7o3s0bLVs4G8x9G8TANxvHk3mTkTJfxRXijddqDfY6haHyc7PE839xQtcurmjX1gWBrV15EZYY+PpUVVWL9VsL2RFKVEgFXL5SgP79zPsB2U72FnB1tIBTM0t4eVjB3c0Gri42aO5uC3d3O7i52qF5cwe4uznA3b0JXF0dOHeeGPiG5MrVQtFVJc1J4sEcow/87CvDTK4gHJEqvGj7X0GWzU5ohLifylAoqWJHEDHwjZNEUoWte/gM18a6cIGlFogY+MYaYBfz2QnP4LsfWWqBiIFvhARBwPc/cjjnWRxNlSIzk6UWiBj4RibzQSkOn6thRzyjMym57AQiBr5xSfmNwSXGlu25qKtjqQUiBr6RqKuTY+t2XoAU43a2HDfTJewIIga+cUi/VYSbWTIeCSIdO847k4kY+Awss/BlnAQVlbXsCCIjYNZ32lZW1iI2XtyQRK9gW/yy7y+wsjL+v5lXrhZgyIRLotaVyoDLafkYOLAVv01EPMM3XGmX80WXUnj1ZV+TCHsA6NjBA4He4h+IfSCRU1qJGPgG7p+J4odzwnuZzrNF7eysMHu6+M+z458VyC+o5LeJiIFvmAoKKrH9QLmodYf0sEerVq4m1R99+6j3B+w8Sy0QMfANlToBNXWyn8k9rCKofXN0aSP+ks6u77OhULDUAhED38AoFAK+U6OUQlgPH5PrE2trS0yf5it6/eRLtbh/v5jfKCIGvmG5n1mCYxfETSV8cWATtPB3Nsl+6ROu3h+y02c5rEPEwDcwZ8+KL6Uw8SV/k+2XwEA39O0s/qEgm7blobaWN7ERMfANRG2tHJvjxZ+Jdu9uug/wtrKyROQUP9HrZxbIceMGSy0QMfANxM10Ce7miSv4NfV5R3h7OZp0//Tqqd6wzlHeuUzEwDcUR5PEX6yNGONv8v0TEOCC4eH2otffEF+E8nIpv1lEDHz9Kq+QIia+SPT63bp6m3wfWVhYYMoE8X/YpDLgUhqfHkbEwNeztLR8SEVeU5w9yRXu7k3Mop/UnXa67wBLLRAx8PVs/8/ix5dHjfA1m37y83PC+KFNRa///a+VyM2r4LeLiIGvH3n5lfg2UXwIdXnO26wOjJci1LtekXqec/KJGPh6knpe/Nz7v81wh7OzvVkdGN26qfcHbud3OZDLFfyGETHwdUuhELDre/HDOcP+4md2B4aXZzO8+qL4Kahnrtbi3j2WWiBi4OvY3XvFOHVZXCkFJ3sLhHb2MsuDY8xo9YZ1Tp3hsA4RA1/HzpwRP5wTNdMTTZvamuXB0bWLerN1Nm3Lg1TKUgtEDHwdkUpl2Lxd/LzwwQN9zfbgcHNzwF+niK/7n1WkwLXrhfyWETHwdePGjUJkFogrpeDnZongTh5mfYCMGqHe9YsjSZyTT2QoTP4h5oeTxF+s/esMbzjY25j1AfLcc96wt74h+oa1L+OLETWnBq6uDvy2Gam794rRa1SqXt57+MtXAFwRte5XiwPwSmQId6C5nOGXlUmxbttj0esP6Odr9geIk6Md5k5vrtY2fr/EUgtEDHwtu5QmfpZIO18rBAU15xECYOhg9YZ19u7nsA4RA1/L9h4QP5wze4YvbG2teIQA6NzZE+7NxD/Dd/fRKmTnlLMjiRj42pGTW4GEQ5Wi1+/b24dHx/9p0sQWc6Z7qrWN1FTOySdi4GvJuVTxc++7tbdBu3buPDr+w+CB6g3rbGepBSIGvjbI5Qrs/E78cM6Mab6wsrLk0fEfOnb0QICH+D45d6MOdzIesyOJGPialXG3GCnX60Sv37sXZ+f8L3t7a8yert4w18lTuexIIga+Zp06LT5YBna1Q+vWrjwynqJ/X/UCf0NcAWpq6tmRRAx8zaipqcfGb8TP+5422Q+WlhY8Mp4iKKg5OgWIv1evsFyBq9dYaoGIga8h164XIrdE/MXBnmGcndMQGxsrzIpUr38OHeGcfCIGvoYcPir+Yu3ofg5o0cKZR4USffqod31jw64SFBdXsyOJ9MBCEASB3UBExDN8IiJi4BMREQOfiIgY+ERExMAnIiIGPhERMfCJiIiBT0REDHwiIgY+EREx8ImIiIFPREQMfCIiYuATEREDn4iIGPhERMTAJyIiBj4REQOfiIgY+ERExMAnIiIGPhERMfCJiIiBT0REDHwiImLgExERA5+IiBj4REQMfCIiYuATEREDn4iIGPhERMTAJyIiBj4RETHwiYiIgU9ERAx8IiJi4BMRMfCJiIiBT0REDHwiImLgExERA5+IiBj4RETEwCciIgY+EREx8ImIGPhERMTAJyIiBj4RETHwiYiIgU9ERAx8IiJi4BMREQOfiIgY+ERExMAnImLgExERA5+IiBj4RETEwCciIj2zZheYN5lMhuzsbGRnZyMrKwuPHj3Co0ePkJWVhfz8fDx48AAtWrSAp6cnXF1d4e/vDy8vL3h4eMDHxweenp7w8vKCt7c37O3t2aFk8srKypCXl4ecnBxIJBLk5eXh4cOHKC4uxuPHj5GTk4Pq6moEBASgefPmCAgIgI+PD3x9feHn5wcvLy/4+PjAzc0NFhYWum280EgAjP5fRkZGg5+vsLDQYNtdUlIiaJJUKhUuXrworFmzRmjfvr3G2vnaa68JO3fuFC5duiSUlZWJapupHmc7duzQ2vulp6c/cz8/6/HerVs3oaKiQtCm+vp6pW0oLCwU9KGmpka4du2asG3bNmH06NEa22/h4eHCqlWrhOPHjwvZ2dmCQqHQ+mdh4JtR4FdWVgr79u0T+vbtq5N2z5s3T0hMTBTy8vIY+EYe+ACEhIQEswr87OxsIT4+XqMnRcr+RURECD/88INw7949rYU/A98MAl8mkwlJSUlCeHi43j7DG2+8IZw4cUKorKxk4Btp4Pv7+wvFxcUmH/gPHjwQPvnkE70eQ1OnThV+/fVXjf+6Z+CbeOAXFRUJCxcuNJjPsnbtWga+kQY+AGHr1q0mG/hlZWVCbGysQR1Ljo6OQmxsrJCZmamRz8hZOibs7t27mDhxItasWcPOII147733UFBQYHKf6+rVq3jppZcQFRVlUO2qrKxEVFQUAgMDce/ePbW3x8A3Ubdu3cLIkSNx8uRJdgZpNIC+//57k/k8CoUCCQkJ6NKlC06cOGHQbf3XD2D1cFqmCcrJycHYsWORmZnZqNe3b98ec+fORUhICHx9feHh4QE7OzvY2dnB2toaMpkMMpkMUqkU5eXlKC8vR15eHu7cuYPTp09j//797HQVXn31Vbz66qtPXSaTyWBjY9PgurGxsZg7d65O2xsdHY2lS5c+ddn8+fPx0ksvoVWrVka9T+rq6rBp0yb87W9/e6b1wsLCMGnSJISGhqJFixZwdXWFo6MjbGxsYGNjA7lcjvr6etTV1aG+vh7l5eWQSCTIz8/H/fv3sW/fPqSmpurtr4Ze5ObmKh27OnLkiE7bo2pMMzExUTAGNTU1wpQpUxo1Pjh79mzh0qVLglQqVes9i4qKhLNnzwrr1q0T/P391RrDN/XjTMzYdWxsrM6P9wcPHihdHh0dbdRj+PX19cKKFSue+frTjRs3hLq6OrUnUWRnZwvHjx8XPvjgA41cg9T4RVsGvnEE/p49e1QeOMHBwUJKSoogl8s1/v5PnjwRzp07J7z//vsMfCMO/Lq6OmHz5s0av1hsCIGvUCiEjRs3PlPQFxQUaG3/FxcXC0eOHBHGjRun9cDnGL4JqaiowLvvvqv0NRMnTsTRo0fRp08fWFpqfvc3adIE4eHhWL16NR48eID169dzxxipCRMmwN/fv8Hlmzdv1si4sq4dPHiwUUNkQ4YMwbVr1zB//nx4eXlprT1ubm4YPnw4du/ejQsXLiAyMlJr78XANyEpKSnIyclROlb/5Zdfws/PTyftadWqFd555x1kZmZi4cKF3EFGxt3dHatXr25weUxMDC5fvmxUn+n+/fuYOnWqyte9++67+Omnn9C5c2edtc3a2hphYWGIj4/HiRMnMGjQIAY+NezQoUNKl8fGxuos7P9T69atsWrVKhw6dAjW1pwnYExeeOEFhIaGKg19mUxmFJ+ltrYWH374ISorK5W+7sMPP8SKFSvg6uqql3ZaW1tj8ODB+OWXXxAfH8/Apz+rrq7Ghg0blJ7d9+nTR2/ts7S0xMiRI/HOO+9wZxkRJycnLFu2rMHlO3bswPnz543isxw9ehR79uxR+pq33noL0dHRcHBw0Ht7mzZtihkzZuD+/fuYMWMGA5/+P4lEonT5+PHj0bRpU3YUPbNhw4YpHV5YvXo16urqDPozlJaWYsGCBSo/57Jlywyu6mtgYCDi4+PRrl07Bj79i6qfqQEBAewkEsXBwQGLFi1qcHliYqLB3+CXlJSEjIwMpa9ZvXo13NzcTHpfMvBNRH19PTuBtGbAgAEYN25cg8uXLl2K6upqg2y7VCrF2rVrlb5m7dq16Nq1q8nvRwa+iVD1M7SoqIidRKLZ2NgonWmVkpKCI0eOGGTbL126hIsXLyp9zbRp08xiPzLwTUSTJk2ULj948CAUCgU7ikTr2bMnZs2a1eDyRYsWoby83ODafezYMaXLY2Nj4e3tzcAn4+Ho6Kh0eWpqqkaq7ZH5srKywrx58xpcnp6ejp9//tmg2lxVVYUvvvhC6WuGDx9uNvuQgW8i3NzcMGrUKKWv+e6774zyzkgyHKGhoXjvvfcaXL5gwQKDGj7MyMhQOqFh/PjxaNu2LQOfjIuFhQVefPFFpa9ZunSpwZ2BkfEdZ7Nnz25wuUQiwe7duw2mvXfv3lW6fNy4cbp/kDgDnzQhPDxc5WvGjh2L+Ph41NTUsMNIlKCgIKU3Y0VFRSkt8aFLaWlpSpc/99xzZrXvGPgm9nN7+vTpKl83a9YsRERE4OjRowZ5kY0Mn6rjbOfOnXpvo0KhUPmwFn2UGmHgG4ExY8bAwsJCL/9KS0sbtzMtLTFnzpxGvTYpKQkjRoxA+/bt8emnnyIpKQkPHz5EbW0tdzap1KJFC8TExDS4/OOPP9b7JIGKigqlvzQGDRqkt3o5DHzSiJ49ez5TSWKJRIIlS5Zg+PDhaN26NTw8PPDWW28hLi4OJ06cwJ07d1BWVsaLvfQnkydPVjo7bOvWrXptn6pfrz179jS7fcbShSbm3xfVrly5gu3btz/z+pWVldi0adOf/nt4eDiGDx+Ojh07onXr1vD394eXlxerX5oxT09PxMTEYObMmU9d/vnnnyMyMlKnJYafJfBbtmzJwCfj5+DggK+++gru7u4q5yA3Vmpq6p+ewxkYGIipU6ciLCwMnTp1QqtWrWBlZcUdYEbGjh2LlStXNlinJjY2Fps2bdLKw3ZUUTU8aW7DOQCHdEyWk5MTVqxYgdjYWK29R2ZmJpYvX46IiAi0bdsWw4cPx/bt2xv98HQyfi4uLvjss88aXL5lyxaVZQ20RVUFTzs7OwY+mQ47OzvMnTsXt27dwhtvvKH19ztx4gRmzpyJNm3a4P3338fVq1c59m8GRo4cqXRK8Lp16/RS3E9V4Nva2jLwyfR06NABX3/9NS5cuIC///3vOnnPNWvWoEuXLli2bBkLt5m4pk2bYvHixQ0u3717N86ePWtw7ZbL5Rrf5qRJk7Q2W+/WrVsMfF1JTEyEIAh6+aeJscZ/Py9z5cqVyJUn3tEAAAj0SURBVMvLw4EDB1Q+8FwTFi9ejPDwcJU3wJBxGzx4MEaPHt3g8pUrV0Iqler8F646vwB4hk8mwcfHBxEREVi3bh2qqqpw9epV7Nu3DytWrNDKg5MzMzPRvXt3lVULyXjZ2dnhgw8+aHB5UlISjh8/rtM22djYKF1uqPX7Gfik1Z/joaGhGDduHD766CMkJyejtLQUd+7cwcmTJ7Fr1y4sWrQIYWFhar/XsGHDcO3aNXa6ierduzciIyMbXB4dHY2qqiqdtUfVMyLy8/MZ+EQuLi5o3749Bg4ciMjISCxbtgznz59HSUkJbt68iQMHDmDRokUIDAx85m2/9dZbjb5zmIyLtbW10ofUp6Wl4eDBgzprj5OTk9LlDx48YOATPY2FhQVcXV0RHByMiIgILFu2DOnp6bh+/Tq+/vpreHp6Nmo7KSkpOHz4MDvURHXr1g1RUVENLl+wYAFKSkp00hZnZ2elyw8dOgSZTMbAJ2oMOzs7hISEYM6cOcjIyEB8fHyj1lu+fDmePHnCDjTFQFFRzyknJwf79u3T2Rm+shORnJwcSCQSBj6RmLOpGTNmID09XWWZ5vT0dI1MMSPDFBwcjEWLFjW4/L333kNBQYFO/vhMnjxZ6WsePnyo0ffcvXu36Nl46enpDHwyLh07dkRcXJzK192+fZudZcIaqq8D/Ktek6qyxZqiqkDa+fPneYZPpI5OnTph5cqV/KKZscDAQKxZs6bB5fPnz9f42fXTtG/fXunyuLg4syoJzsAnrVD1fF1d/Hwl/Zo2bZrS5Y295qOONm3aqDwOr1y5wsAnUoeq0rMnTpyAQqFgR5kwHx8fbNmypcHlS5cu1fq1HHd3d8ybN0/pawzpGbwMfDJKyh6M8W/6KKhFujV+/Hj4+/s3uHzz5s1aL7CnrOQD8K/ibjdv3mTgE4llbW2tcm6+OVYrNDdubm5Kx/JjYmJw+fJlrbYhLCxM5QlITEyMWczJZ+CTVlRXVyud4zxx4kRYWFiwo8zA6NGj0a1bN72Fraurq8pJBFu2bNHpXcAMfDIpxcXFSpermqtPpsPR0RGffvppg8t37Nih9VlbL7zwgsrXvPLKK7h79y4Dnwzf559/jmPHjhnMhdBz584pXd69e3fuNDMydOhQDBkypMHlq1ev1mq54oCAAKxfv17payorKzFz5kyd3BTGwCe11NfXY9iwYfj000/1frt4RUUFYmJilL4mJCSEO82MODg44OOPP25weWJiIpKTk7XahldeeUXlvPyUlBTMmjULubm5DHwyfMuWLUPnzp2RkJCgl3o1crkcX3zxBVJSUhp8zWeffQZ3d3fuLDPTv39/jB8/vsHl0dHRWn1/Nzc3bNiwQeXrDh06hAkTJpjkzB0GvgmSSCR4+eWXMXjwYOzbtw9lZWU6ed+amhp8+eWXWLp0qdLXTZw4kTvJDNnY2GDBggUNLtfFU9GGDh2K5cuXq3xdamoqQkJCkJCQoPMndTHwSZSLFy9i/PjxCAoKwsaNG3Hz5k2tzYa4e/cuoqKisHDhQqWvW7t2Ldq2bcudY6bCwsLwxhtv6C/wLC0xb948TJo0qVGvf/nllzFp0iSkpqZqdSZReXk5bty4wcAnzZzxR0VFISQkBMOGDcM333yDtLQ0VFZWqrXd2tpa3LhxA4sXL0b79u2xbds2pa8fMmQIXn/9de4QM2ZlZaW0Xr4uODo6IjY2VuUNWf+WmJiI3r17Y+zYsTh48KBGLurKZDI8evQIycnJiI6OhouLS6P/CKnDmodg44wZM0Zv711SUqKRB5kDwMmTJ3Hy5Mk//v+MGTPQt29ftGvXDh4eHnB1dYWjoyNsbW1hY2MDhUKBuro61NXVoaamBhKJBHl5ebh16xY2b96MjIyMRr2vp6cnNm7cqPKhFGT6OnfujIULFyq9IUvbPDw8EBcXh9mzZyMxMbFR6xw8ePCPufqRkZEYPHgwgoKC4OXlBRcXFzRt2hQ2NjawsrKCXC7/43tTW1uLkpISSCQS5Ofn49atW0hISGj0d0ejBD3Jzc0VADT478iRIzptT2FhodL26PNfSUmJyvYvX77cYNvv6ekpXLx40ayPsx07dmitf9PT0zV+vNfV1Wm1PzIyMp75cxYWFmq8HaWlpcK7775rsN8ddffz/+KQDml9zDY5ORk9evRgZ9Af2rVr16iLp9rm4uKCVatWYdeuXQbdXyNGjGhUfSpVGPgmon///hgxYoRBtemDDz7AoUOHEBwczB1EfzJ9+nSDaIetrS0iIyNx7949zJo1y6D6KDo6Gmlpafjll1+UFqFj4JuZAQMG4JdffkFaWhpWrFihkbMBsYYMGYKzZ89yvj0p5e/v36h58brSpk0bbNmyBampqZgyZYre2hEREYE9e/agoKAAS5YsQdeuXWFtrZnLrQx8E2JtbY2uXbvio48+Qk5ODk6dOoUlS5boLPzHjBmDpKQkHDx4EH379oWlJQ8vUm7y5Mkqq6rqkpWVFXr16oVdu3bh6tWr+Pzzz3Xy/YmMjMTevXvx8OFD7N+/HxMmTICXl5fmM4KHnGlycnLCgAEDMGDAACxYsAD37t3DzZs3cfLkSaUPpXhWgwYNwpQpU9C/f38EBQXBysqKnU+N5uHhgTVr1hjM8M5/njyFhoYiNDQUb775Jm7fvo3ff/8dCQkJOHPmjNrbDw4OxrRp0xAWFobg4GD4+fnp5HNZCNp++gAZnNraWuTn56OwsBBFRUXIz8+HRCKBRCJBbm4uJBIJiouLkZ2dDQ8PD/j5+cHT0xOtWrWCv78//Pz80LJlS/j7+8PHx4dn8mQ2BEFASUkJ8vPzkZ2djcLCQuTn5+Phw4coKirC48eP8eDBA9ja2qJly5bw9PREYGDgH98bf39/+Pr6wtPTU2PDNAx8IiL6E56aEREx8ImIiIFPREQMfCIiYuATEREDn4iIGPhERMTAJyIiBj4RETHwiYgY+ERExMAnIiIGPhERMfCJiIiBT0REDHwiImLgExERA5+IiBj4RETEwCciYuATEREDn4iIGPhERMTAJyIiBj4RETHwiYhIU/4fEl9/iQmTgmgAAAAASUVORK5CYII="
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - core.linuxsuren.github.com
          resources:
          - atests
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - core.linuxsuren.github.com
          resources:
          - atests/finalizers
          verbs:
          - update
        - apiGroups:
          - core.linuxsuren.github.com
          resources:
          - atests/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: operator
          control-plane: controller-manager
        name: operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: ghcr.io/linuxsuren/api-testing-operator:master
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - API
  - Testing
  links:
  - name: Document
    url: https://linuxsuren.github.io/api-testing/
  maintainers:
  - email: linuxsuren@gmail.com
    name: linuxsuren
  maturity: alpha
  provider:
    name: linuxsuren
    url: https://github.com/LinuxSuRen/api-testing
  version: 0.0.1
