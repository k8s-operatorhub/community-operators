apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgdistributedlogs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGDistributedLogs
    listKind: SGDistributedLogsList
    plural: sgdistributedlogs
    singular: sgdistributedlogs
    shortNames:
      - sgdil
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
        - name: volume-size
          type: string
          jsonPath: .spec.persistentVolume.size
      schema:
        openAPIV3Schema:
          type: object
          required:
            - metadata
            - spec
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 52
                  pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                  description: 'Name of the Distributed Logs cluster. Following [Kubernetes
                    naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md),
                    it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters
                    consisting of one or more lowercase labels separated by `.`. Where
                    each label is an alphanumeric (a-z, and 0-9) string, with the
                    `-` character allowed anywhere except the first or last character.


                    A Distributed Logs cluster may store logs for zero or more SGClusters.


                    The name must be unique across all SGCluster, SGShardedCluster
                    and SGDistributedLogs in the same namespace.

                    '
            spec:
              type: object
              properties:
                profile:
                  type: string
                  description: "The profile allow to change in a convenient place\
                    \ a set of configuration defaults that affect how the cluster\
                    \ is generated.\n\nAll those defaults can be overwritten by setting\
                    \ the correspoinding fields.\n\nAvailable profiles are:\n\n* `production`:\n\
                    \n  Prevents two Pods from running in the same Node (set `.spec.nonProductionOptions.disableClusterPodAntiAffinity`\
                    \ to `false` by default).\n  Sets both limits and requests using\
                    \ `SGInstanceProfile` for `patroni` container that runs both Patroni\
                    \ and Postgres (set `.spec.nonProductionOptions.disablePatroniResourceRequirements`\
                    \ to `false` by default).\n  Sets requests using the referenced\
                    \ `SGInstanceProfile` for sidecar containers other than `patroni`\
                    \ (set `.spec.nonProductionOptions.disableClusterResourceRequirements`\
                    \ to `false` by default).\n\n* `testing`:\n\n  Allows two Pods\
                    \ to running in the same Node (set `.spec.nonProductionOptions.disableClusterPodAntiAffinity`\
                    \ to `true` by default).\n  Sets both limits and requests using\
                    \ `SGInstanceProfile` for `patroni` container that runs both Patroni\
                    \ and Postgres (set `.spec.nonProductionOptions.disablePatroniResourceRequirements`\
                    \ to `false` by default).\n  Sets requests using the referenced\
                    \ `SGInstanceProfile` for sidecar containers other than `patroni`\
                    \ (set `.spec.nonProductionOptions.disableClusterResourceRequirements`\
                    \ to `false` by default).\n\n* `development`:\n\n  Allows two\
                    \ Pods from running in the same Node (set `.spec.nonProductionOptions.disableClusterPodAntiAffinity`\
                    \ to `true` by default).\n  Unset both limits and requests for\
                    \ `patroni` container that runs both Patroni and Postgres (set\
                    \ `.spec.nonProductionOptions.disablePatroniResourceRequirements`\
                    \ to `true` by default).\n  Unsets requests for sidecar containers\
                    \ other than `patroni` (set `.spec.nonProductionOptions.disableClusterResourceRequirements`\
                    \ to `true` by default).\n\n**Changing this field may require\
                    \ a restart.**\n"
                  default: production
                persistentVolume:
                  type: object
                  description: Pod's persistent volume configuration
                  properties:
                    size:
                      type: string
                      pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$
                      description: 'Size of the PersistentVolume set for the pod of
                        the cluster for distributed logs. This size is specified either
                        in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30
                        or 2^40, respectively).

                        '
                    storageClass:
                      type: string
                      description: 'Name of an existing StorageClass in the Kubernetes
                        cluster, used to create the PersistentVolumes for the instances
                        of the cluster.

                        '
                postgresServices:
                  type: object
                  nullable: true
                  description: "Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/)\
                    \ created or managed by StackGres.\n\n**Example:**\n\n```yaml\n\
                    apiVersion: stackgres.io/v1\nkind: SGDistributedLogs\nmetadata:\n\
                    \  name: stackgres\nspec:\n  postgresServices:\n    primary:\n\
                    \      type: ClusterIP\n    replicas:\n      enabled: true\n \
                    \     type: ClusterIP\n```\n"
                  properties:
                    primary:
                      type: object
                      description: Configuration for the `-primary` service. It provides
                        a stable connection (regardless of primary failures or switchovers)
                        to the read-write Postgres server of the cluster.
                      properties:
                        type:
                          type: string
                          enum:
                            - ClusterIP
                            - LoadBalancer
                            - NodePort
                          description: Specifies the type of Kubernetes service(`ClusterIP`,
                            `LoadBalancer`, `NodePort`)
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: "Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)\
                            \ passed to the `-primary` service.\n\n**Example:**\n\n\
                            ```yaml\napiVersion: stackgres.io/v1\nkind: SGDistributedLogs\n\
                            metadata:\n  name: stackgres\nspec:\n  pods:\n    metadata:\n\
                            \      annotations:\n        allResources:\n         \
                            \ customAnnotations: customAnnotationValue\n```\n"
                        loadBalancerIP:
                          type: string
                          description: Specify loadBalancer IP of Postgres primary
                            service for Distributed Log
                    replicas:
                      type: object
                      description: Configuration for the `-replicas` service. It provides
                        a stable connection (regardless of replica node failures)
                        to any read-only Postgres server of the cluster. Read-only
                        servers are load-balanced via this service.
                      properties:
                        enabled:
                          type: boolean
                          description: Specify if the `-replicas` service should be
                            created or not.
                        type:
                          type: string
                          enum:
                            - ClusterIP
                            - LoadBalancer
                            - NodePort
                          description: Specifies the type of Kubernetes service(`ClusterIP`,
                            `LoadBalancer`, `NodePort`).
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                            passed to the `-replicas` service.
                        loadBalancerIP:
                          type: string
                          description: Specify loadBalancer IP of Postgres replica
                            service for Distributed Log
                resources:
                  type: object
                  description: Pod custom resources configuration.
                  properties:
                    enableClusterLimitsRequirements:
                      type: boolean
                      description: 'When set to `true` resources limits for containers
                        other than the patroni container wil be set just like for
                        patroni contianer as specified in the SGInstanceProfile.


                        **Changing this field may require a restart.**

                        '
                    disableResourcesRequestsSplitFromTotal:
                      type: boolean
                      description: "When set to `true` the resources requests values\
                        \ in fields `SGInstanceProfile.spec.requests.cpu` and `SGInstanceProfile.spec.requests.memory`\
                        \ will represent the resources\n requests of the patroni container\
                        \ and the total resources requests calculated by adding the\
                        \ resources requests of all the containers (including the\
                        \ patroni container).\n\n**Changing this field may require\
                        \ a restart.**\n"
                scheduling:
                  type: object
                  description: 'Pod custom scheduling and affinity configuration.


                    **Changing this field may require a restart.**

                    '
                  properties:
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      description: 'NodeSelector is a selector which must be true
                        for the pod to fit on a node. Selector which must match a
                        node''s labels for the pod to be scheduled on that node. More
                        info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/

                        '
                    tolerations:
                      description: 'If specified, the pod''s tolerations.


                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core

                        '
                      type: array
                      items:
                        description: 'The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>


                          See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core

                          '
                        properties:
                          effect:
                            description: 'Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.


                              '
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: 'Operator represents a key''s relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.


                              '
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                    nodeAffinity:
                      description: 'Node affinity is a group of node affinity scheduling
                        rules.


                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core

                        '
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: 'Represents a key''s relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.


                                            '
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: 'Represents a key''s relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.


                                            '
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - weight
                              - preference
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: A node selector represents the union of the
                            results of one or more label queries over a set of nodes;
                            that is, it represents the OR of the selectors represented
                            by the node selector terms.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: 'Represents a key''s relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.


                                            '
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: 'Represents a key''s relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.


                                            '
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                            - nodeSelectorTerms
                          type: object
                      type: object
                    priorityClassName:
                      type: string
                      description: 'Priority indicates the importance of a Pod relative
                        to other Pods. If a Pod cannot be scheduled, the scheduler
                        tries to preempt (evict) lower priority Pods to make scheduling
                        of the pending Pod possible.

                        '
                    podAffinity:
                      description: 'Pod affinity is a group of inter pod affinity
                        scheduling rules.


                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core

                        '
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces
                                      list and null namespaceSelector means "this
                                      pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - weight
                              - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaceSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies a static list of
                                  namespace names that the term applies to. The term
                                  is applied to the union of the namespaces listed
                                  in this field and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector
                                  means "this pod's namespace".
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: 'Pod anti affinity is a group of inter pod anti
                        affinity scheduling rules.


                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core

                        '
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces
                                      list and null namespaceSelector means "this
                                      pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - weight
                              - podAffinityTerm
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaceSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies a static list of
                                  namespace names that the term applies to. The term
                                  is applied to the union of the namespaces listed
                                  in this field and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector
                                  means "this pod's namespace".
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                      type: object
                sgInstanceProfile:
                  type: string
                  description: 'Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/).
                    A SGInstanceProfile defines CPU and memory limits. Must exist
                    before creating a distributed logs. When no profile is set, a
                    default (currently: 1 core, 2 GiB RAM) one is used.


                    **Changing this field may require a restart.**

                    '
                configurations:
                  type: object
                  description: 'Cluster custom configurations.

                    '
                  properties:
                    sgPostgresConfig:
                      type: string
                      description: 'Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig)
                        used for the distributed logs. It must exist. When not set,
                        a default Postgres config, for the major version selected,
                        is used.


                        **Changing this field may require a restart.**

                        '
                metadata:
                  type: object
                  description: Metadata information from cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                        to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created
                            or managed by StackGres.
                          additionalProperties:
                            type: string
                        pods:
                          type: object
                          description: Annotations to attach to pods created or managed
                            by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to services created or
                            managed by StackGres.
                          additionalProperties:
                            type: string
                toInstallPostgresExtensions:
                  type: array
                  description: 'The list of Postgres extensions to install.


                    **This section is filled by the operator.**

                    '
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension
                          will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to
                          install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required:
                      - name
                      - publisher
                      - version
                      - repository
                      - postgresVersion
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: 'It is a best practice, on non-containerized environments,
                        when running production workloads, to run each database server
                        on a different server (virtual or physical), i.e., not to
                        co-locate more than one database server per host.


                        The same best practice applies to databases on containers.
                        By default, StackGres will not allow to run more than one
                        StackGres or Distributed Logs pod on a given Kubernetes node.
                        If set to `true` it will allow more than one StackGres pod
                        per node.


                        **Changing this field may require a restart.**

                        '
                    disablePatroniResourceRequirements:
                      type: boolean
                      description: 'It is a best practice, on containerized environments,
                        when running production workloads, to enforce container''s
                        resources requirements.


                        The same best practice applies to databases on containers.
                        By default, StackGres will configure resource requirements
                        for patroni container. Set this property to true to prevent
                        StackGres from setting patroni container''s resources requirement.


                        **Changing this field may require a restart.**

                        '
                    disableClusterResourceRequirements:
                      type: boolean
                      description: 'It is a best practice, on containerized environments,
                        when running production workloads, to enforce container''s
                        resources requirements.


                        By default, StackGres will configure resource requirements
                        for all the containers. Set this property to true to prevent
                        StackGres from setting container''s resources requirements
                        (except for patroni container, see `disablePatroniResourceRequirements`).


                        **Changing this field may require a restart.**

                        '
                    enableSetPatroniCpuRequests:
                      type: boolean
                      description: "**Deprecated** this value is ignored and you can\
                        \ consider it as always `true`.\n\nOn containerized environments,\
                        \ when running production workloads, enforcing container's\
                        \ cpu requirements request to be equals to the limit allow\
                        \ to achieve the highest level of performance. Doing so, reduces\
                        \ the chances of leaving\n  the workload with less cpu than\
                        \ it requires. It also allow to set [static CPU management\
                        \ policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy)\
                        \ that allows to guarantee a pod the usage exclusive CPUs\
                        \ on the node.\n\nBy default, StackGres will configure cpu\
                        \ requirements to have the same limit and request for the\
                        \ patroni container. Set this property to true to prevent\
                        \ StackGres from setting patroni container's cpu requirements\
                        \ request equals to the limit\n  when `.spec.requests.cpu`\
                        \ is configured in the referenced `SGInstanceProfile`.\n\n\
                        **Changing this field may require a restart.**\n"
                    enableSetClusterCpuRequests:
                      type: boolean
                      description: "**Deprecated** this value is ignored and you can\
                        \ consider it as always `true`.\n\nOn containerized environments,\
                        \ when running production workloads, enforcing container's\
                        \ cpu requirements request to be equals to the limit allow\
                        \ to achieve the highest level of performance. Doing so, reduces\
                        \ the chances of leaving\n  the workload with less cpu than\
                        \ it requires. It also allow to set [static CPU management\
                        \ policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy)\
                        \ that allows to guarantee a pod the usage exclusive CPUs\
                        \ on the node.\n\nBy default, StackGres will configure cpu\
                        \ requirements to have the same limit and request for all\
                        \ the containers. Set this property to true to prevent StackGres\
                        \ from setting container's cpu requirements request equals\
                        \ to the limit (except for patroni container, see `enablePatroniCpuRequests`)\n\
                        \  when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container\
                        \ name>.cpu` is configured in the referenced `SGInstanceProfile`.\n\
                        \n**Changing this field may require a restart.**\n"
                    enableSetPatroniMemoryRequests:
                      type: boolean
                      description: "**Deprecated** this value is ignored and you can\
                        \ consider it as always `true`.\n\nOn containerized environments,\
                        \ when running production workloads, enforcing container's\
                        \ memory requirements request to be equals to the limit allow\
                        \ to achieve the highest level of performance. Doing so, reduces\
                        \ the chances of leaving\n  the workload with less memory\
                        \ than it requires.\n\nBy default, StackGres will configure\
                        \ memory requirements to have the same limit and request for\
                        \ the patroni container. Set this property to true to prevent\
                        \ StackGres from setting patroni container's memory requirements\
                        \ request equals to the limit\n  when `.spec.requests.memory`\
                        \ is configured in the referenced `SGInstanceProfile`.\n\n\
                        **Changing this field may require a restart.**\n"
                    enableSetClusterMemoryRequests:
                      type: boolean
                      description: "**Deprecated** this value is ignored and you can\
                        \ consider it as always `true`.\n\nOn containerized environments,\
                        \ when running production workloads, enforcing container's\
                        \ memory requirements request to be equals to the limit allow\
                        \ to achieve the highest level of performance. Doing so, reduces\
                        \ the chances of leaving\n  the workload with less memory\
                        \ than it requires.\n\nBy default, StackGres will configure\
                        \ memory requirements to have the same limit and request for\
                        \ all the containers. Set this property to true to prevent\
                        \ StackGres from setting container's memory requirements request\
                        \ equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)\n\
                        \  when `.spec.requests.containers.<container name>.memory`\
                        \ `.spec.requests.initContainers.<container name>.memory`\
                        \ is configured in the referenced `SGInstanceProfile`.\n\n\
                        **Changing this field may require a restart.**\n"
              required:
                - persistentVolume
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                podStatuses:
                  type: array
                  description: The list of pod statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the pod.
                      primary:
                        type: boolean
                        description: Indicates if the pod is the elected primary
                      pendingRestart:
                        type: boolean
                        description: Indicates if the pod requires restart
                      installedPostgresExtensions:
                        type: array
                        description: The list of extensions currently installed.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the installed extension.
                            publisher:
                              type: string
                              description: The id of the publisher of the installed
                                extension.
                            version:
                              type: string
                              description: The version of the installed extension.
                            repository:
                              type: string
                              description: The repository base URL from where the
                                extension was installed.
                            postgresVersion:
                              type: string
                              description: The postgres major version of the installed
                                extension.
                            build:
                              type: string
                              description: The build version of the installed extension.
                          required:
                            - name
                            - publisher
                            - version
                            - repository
                            - postgresVersion
                    required:
                      - name
                databases:
                  type: array
                  description: The list of database status
                  items:
                    type: object
                    description: A database status
                    properties:
                      name:
                        type: string
                        description: The database name that has been created
                      retention:
                        type: string
                        description: The retention window that has been applied to
                          tables
                connectedClusters:
                  type: array
                  description: The list of connected `sgclusters`
                  items:
                    type: object
                    description: A connected `sgcluster`
                    properties:
                      namespace:
                        type: string
                        description: The `sgcluster` namespace
                      name:
                        type: string
                        description: The `sgcluster` name
                      config:
                        type: object
                        description: The configuration for `sgdistributedlgos` of
                          this `sgcluster`
                        properties:
                          sgDistributedLogs:
                            type: string
                            description: The `sgdistributedlogs` to which this `sgcluster`
                              is connected to
                          retention:
                            type: string
                            description: The retention window that has been applied
                              to tables
                fluentdConfigHash:
                  type: string
                  description: The hash of the configuration file that is used by
                    fluentd
                arch:
                  type: string
                  description: The architecture on which the cluster has been initialized.
                os:
                  type: string
                  description: The operative system on which the cluster has been
                    initialized.
                labelPrefix:
                  type: string
                  description: The custom prefix that is prepended to all labels.
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          namespace: system
          name: stackgres-operator
          path: /stackgres/conversion/sgdistributedlogs
      conversionReviewVersions:
        - v1
