apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: tables.dynamodb.services.k8s.aws
spec:
  group: dynamodb.services.k8s.aws
  names:
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ackResourceMetadata.arn
      name: ARN
      priority: 1
      type: string
    - jsonPath: .spec.tableClass
      name: CLASS
      type: string
    - jsonPath: .status.tableStatus
      name: STATUS
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the Tables API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table.
            properties:
              attributeDefinitions:
                items:
                  description: Represents an attribute for describing the schema for
                    the table and indexes.
                  properties:
                    attributeName:
                      type: string
                    attributeType:
                      type: string
                  type: object
                type: array
              billingMode:
                type: string
              continuousBackups:
                description: Represents the settings used to enable point in time
                  recovery.
                properties:
                  pointInTimeRecoveryEnabled:
                    type: boolean
                type: object
              deletionProtectionEnabled:
                type: boolean
              globalSecondaryIndexes:
                items:
                  description: Represents the properties of a global secondary index.
                  properties:
                    indexName:
                      type: string
                    keySchema:
                      items:
                        description: |-
                          Represents a single element of a key schema. A key schema specifies the attributes
                          that make up the primary key of a table, or the key attributes of an index.

                          A KeySchemaElement represents exactly one attribute of the primary key. For
                          example, a simple primary key would be represented by one KeySchemaElement
                          (for the partition key). A composite primary key would require one KeySchemaElement
                          for the partition key, and another KeySchemaElement for the sort key.

                          A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute).
                          The data type must be one of String, Number, or Binary. The attribute cannot
                          be nested within a List or a Map.
                        properties:
                          attributeName:
                            type: string
                          keyType:
                            type: string
                        type: object
                      type: array
                    projection:
                      description: |-
                        Represents attributes that are copied (projected) from the table into an
                        index. These are in addition to the primary key attributes and index key
                        attributes, which are automatically projected.
                      properties:
                        nonKeyAttributes:
                          items:
                            type: string
                          type: array
                        projectionType:
                          type: string
                      type: object
                    provisionedThroughput:
                      description: |-
                        Represents the provisioned throughput settings for a specified table or index.
                        The settings can be modified using the UpdateTable operation.

                        For current minimum and maximum provisioned throughput values, see Service,
                        Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html)
                        in the Amazon DynamoDB Developer Guide.
                      properties:
                        readCapacityUnits:
                          format: int64
                          type: integer
                        writeCapacityUnits:
                          format: int64
                          type: integer
                      type: object
                  type: object
                type: array
              keySchema:
                items:
                  description: |-
                    Represents a single element of a key schema. A key schema specifies the attributes
                    that make up the primary key of a table, or the key attributes of an index.

                    A KeySchemaElement represents exactly one attribute of the primary key. For
                    example, a simple primary key would be represented by one KeySchemaElement
                    (for the partition key). A composite primary key would require one KeySchemaElement
                    for the partition key, and another KeySchemaElement for the sort key.

                    A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute).
                    The data type must be one of String, Number, or Binary. The attribute cannot
                    be nested within a List or a Map.
                  properties:
                    attributeName:
                      type: string
                    keyType:
                      type: string
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              localSecondaryIndexes:
                items:
                  description: Represents the properties of a local secondary index.
                  properties:
                    indexName:
                      type: string
                    keySchema:
                      items:
                        description: |-
                          Represents a single element of a key schema. A key schema specifies the attributes
                          that make up the primary key of a table, or the key attributes of an index.

                          A KeySchemaElement represents exactly one attribute of the primary key. For
                          example, a simple primary key would be represented by one KeySchemaElement
                          (for the partition key). A composite primary key would require one KeySchemaElement
                          for the partition key, and another KeySchemaElement for the sort key.

                          A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute).
                          The data type must be one of String, Number, or Binary. The attribute cannot
                          be nested within a List or a Map.
                        properties:
                          attributeName:
                            type: string
                          keyType:
                            type: string
                        type: object
                      type: array
                    projection:
                      description: |-
                        Represents attributes that are copied (projected) from the table into an
                        index. These are in addition to the primary key attributes and index key
                        attributes, which are automatically projected.
                      properties:
                        nonKeyAttributes:
                          items:
                            type: string
                          type: array
                        projectionType:
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              provisionedThroughput:
                description: |-
                  Represents the provisioned throughput settings for a specified table or index.
                  The settings can be modified using the UpdateTable operation.

                  For current minimum and maximum provisioned throughput values, see Service,
                  Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html)
                  in the Amazon DynamoDB Developer Guide.
                properties:
                  readCapacityUnits:
                    format: int64
                    type: integer
                  writeCapacityUnits:
                    format: int64
                    type: integer
                type: object
              sseSpecification:
                description: Represents the settings used to enable server-side encryption.
                properties:
                  enabled:
                    type: boolean
                  kmsMasterKeyID:
                    type: string
                  sseType:
                    type: string
                type: object
              streamSpecification:
                description: Represents the DynamoDB Streams configuration for a table
                  in DynamoDB.
                properties:
                  streamEnabled:
                    type: boolean
                  streamViewType:
                    type: string
                type: object
              tableClass:
                type: string
              tableName:
                type: string
              tags:
                items:
                  description: |-
                    Describes a tag. A tag is a key-value pair. You can add up to 50 tags to
                    a single DynamoDB table.

                    Amazon Web Services-assigned tag names and values are automatically assigned
                    the aws: prefix, which the user cannot assign. Amazon Web Services-assigned
                    tag names do not count towards the tag limit of 50. User-assigned tag names
                    have the prefix user: in the Cost Allocation Report. You cannot backdate
                    the application of a tag.

                    For an overview on tagging DynamoDB resources, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html)
                    in the Amazon DynamoDB Developer Guide.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              timeToLive:
                description: |-
                  Represents the settings used to enable or disable Time to Live (TTL) for
                  the specified table.
                properties:
                  attributeName:
                    type: string
                  enabled:
                    type: boolean
                type: object
            required:
            - attributeDefinitions
            - keySchema
            - tableName
            type: object
          status:
            description: TableStatus defines the observed state of Table
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              archivalSummary:
                description: Contains information about the table archive.
                properties:
                  archivalBackupARN:
                    type: string
                  archivalDateTime:
                    format: date-time
                    type: string
                  archivalReason:
                    type: string
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationDateTime:
                description: |-
                  The date and time when the table was created, in UNIX epoch time (http://www.epochconverter.com/)
                  format.
                format: date-time
                type: string
              globalSecondaryIndexesDescriptions:
                items:
                  description: Represents the properties of a global secondary index.
                  properties:
                    backfilling:
                      type: boolean
                    indexARN:
                      type: string
                    indexName:
                      type: string
                    indexSizeBytes:
                      format: int64
                      type: integer
                    indexStatus:
                      type: string
                    itemCount:
                      format: int64
                      type: integer
                    keySchema:
                      items:
                        description: |-
                          Represents a single element of a key schema. A key schema specifies the attributes
                          that make up the primary key of a table, or the key attributes of an index.

                          A KeySchemaElement represents exactly one attribute of the primary key. For
                          example, a simple primary key would be represented by one KeySchemaElement
                          (for the partition key). A composite primary key would require one KeySchemaElement
                          for the partition key, and another KeySchemaElement for the sort key.

                          A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute).
                          The data type must be one of String, Number, or Binary. The attribute cannot
                          be nested within a List or a Map.
                        properties:
                          attributeName:
                            type: string
                          keyType:
                            type: string
                        type: object
                      type: array
                    projection:
                      description: |-
                        Represents attributes that are copied (projected) from the table into an
                        index. These are in addition to the primary key attributes and index key
                        attributes, which are automatically projected.
                      properties:
                        nonKeyAttributes:
                          items:
                            type: string
                          type: array
                        projectionType:
                          type: string
                      type: object
                    provisionedThroughput:
                      description: |-
                        Represents the provisioned throughput settings for the table, consisting
                        of read and write capacity units, along with data about increases and decreases.
                      properties:
                        lastDecreaseDateTime:
                          format: date-time
                          type: string
                        lastIncreaseDateTime:
                          format: date-time
                          type: string
                        numberOfDecreasesToday:
                          format: int64
                          type: integer
                        readCapacityUnits:
                          format: int64
                          type: integer
                        writeCapacityUnits:
                          format: int64
                          type: integer
                      type: object
                  type: object
                type: array
              globalTableVersion:
                description: |-
                  Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)
                  in use, if the table is replicated across Amazon Web Services Regions.
                type: string
              itemCount:
                description: |-
                  The number of items in the specified table. DynamoDB updates this value approximately
                  every six hours. Recent changes might not be reflected in this value.
                format: int64
                type: integer
              latestStreamARN:
                description: |-
                  The Amazon Resource Name (ARN) that uniquely identifies the latest stream
                  for this table.
                type: string
              latestStreamLabel:
                description: |-
                  A timestamp, in ISO 8601 format, for this stream.

                  Note that LatestStreamLabel is not a unique identifier for the stream, because
                  it is possible that a stream from another table might have the same timestamp.
                  However, the combination of the following three elements is guaranteed to
                  be unique:

                     * Amazon Web Services customer ID

                     * Table name

                     * StreamLabel
                type: string
              replicas:
                description: Represents replicas of the table.
                items:
                  description: Contains the details of the replica.
                  properties:
                    globalSecondaryIndexes:
                      items:
                        description: Represents the properties of a replica global
                          secondary index.
                        properties:
                          indexName:
                            type: string
                          provisionedThroughputOverride:
                            description: |-
                              Replica-specific provisioned throughput settings. If not specified, uses
                              the source table's provisioned throughput settings.
                            properties:
                              readCapacityUnits:
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                    kmsMasterKeyID:
                      type: string
                    provisionedThroughputOverride:
                      description: |-
                        Replica-specific provisioned throughput settings. If not specified, uses
                        the source table's provisioned throughput settings.
                      properties:
                        readCapacityUnits:
                          format: int64
                          type: integer
                      type: object
                    regionName:
                      type: string
                    replicaInaccessibleDateTime:
                      format: date-time
                      type: string
                    replicaStatus:
                      type: string
                    replicaStatusDescription:
                      type: string
                    replicaStatusPercentProgress:
                      type: string
                    replicaTableClassSummary:
                      description: Contains details of the table class.
                      properties:
                        lastUpdateDateTime:
                          format: date-time
                          type: string
                        tableClass:
                          type: string
                      type: object
                  type: object
                type: array
              restoreSummary:
                description: Contains details for the restore.
                properties:
                  restoreDateTime:
                    format: date-time
                    type: string
                  restoreInProgress:
                    type: boolean
                  sourceBackupARN:
                    type: string
                  sourceTableARN:
                    type: string
                type: object
              tableID:
                description: Unique identifier for the table for which the backup
                  was created.
                type: string
              tableSizeBytes:
                description: |-
                  The total size of the specified table, in bytes. DynamoDB updates this value
                  approximately every six hours. Recent changes might not be reflected in this
                  value.
                format: int64
                type: integer
              tableStatus:
                description: |-
                  The current state of the table:

                     * CREATING - The table is being created.

                     * UPDATING - The table/index configuration is being updated. The table/index
                     remains available for data operations when UPDATING.

                     * DELETING - The table is being deleted.

                     * ACTIVE - The table is ready for use.

                     * INACCESSIBLE_ENCRYPTION_CREDENTIALS - The KMS key used to encrypt the
                     table in inaccessible. Table operations may fail due to failure to use
                     the KMS key. DynamoDB will initiate the table archival process when a
                     table's KMS key remains inaccessible for more than seven days.

                     * ARCHIVING - The table is being archived. Operations are not allowed
                     until archival is complete.

                     * ARCHIVED - The table has been archived. See the ArchivalReason for more
                     information.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
