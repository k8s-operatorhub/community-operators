apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: tempostacks.tempo.grafana.com
spec:
  group: tempo.grafana.com
  names:
    kind: TempoStack
    listKind: TempoStackList
    plural: tempostacks
    shortNames:
    - tempo
    - tempos
    singular: tempostack
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Tempo Version
      jsonPath: .status.tempoVersion
      name: Tempo version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TempoStack is the Schema for the tempostacks API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TempoStackSpec defines the desired state of TempoStack.
            properties:
              images:
                description: Images defines the image for each container.
                properties:
                  tempo:
                    description: Tempo defines the tempo container image.
                    type: string
                  tempoGateway:
                    description: TempoGateway defines the tempo-gateway container
                      image.
                    type: string
                  tempoGatewayOpa:
                    description: TempoGatewayOpa defines the OPA sidecar container
                      for TempoGateway.
                    type: string
                  tempoQuery:
                    description: TempoQuery defines the tempo-query container image.
                    type: string
                type: object
              limits:
                description: LimitSpec is used to limit ingestion and querying rates.
                properties:
                  global:
                    description: Global is used to define global rate limits.
                    properties:
                      ingestion:
                        description: Ingestion is used to define ingestion rate limits.
                        properties:
                          ingestionBurstSizeBytes:
                            description: IngestionBurstSizeBytes defines the burst
                              size (bytes) used in ingestion.
                            type: integer
                          ingestionRateLimitBytes:
                            description: IngestionRateLimitBytes defines the Per-user
                              ingestion rate limit (bytes) used in ingestion.
                            type: integer
                          maxBytesPerTrace:
                            description: MaxBytesPerTrace defines the maximum number
                              of bytes of an acceptable trace.
                            type: integer
                          maxTracesPerUser:
                            description: MaxTracesPerUser defines the maximum number
                              of traces a user can send.
                            type: integer
                        type: object
                      query:
                        description: Query is used to define query rate limits.
                        properties:
                          maxBytesPerTagValues:
                            description: MaxBytesPerTagValues defines the maximum
                              size in bytes of a tag-values query.
                            type: integer
                          maxSearchBytesPerTrace:
                            description: 'MaxSearchBytesPerTrace defines the maximum
                              size of search data for a single trace in bytes. default:
                              `0` to disable.'
                            type: integer
                        type: object
                    type: object
                  perTenant:
                    additionalProperties:
                      description: RateLimitSpec defines rate limits for Ingestion
                        and Query components.
                      properties:
                        ingestion:
                          description: Ingestion is used to define ingestion rate
                            limits.
                          properties:
                            ingestionBurstSizeBytes:
                              description: IngestionBurstSizeBytes defines the burst
                                size (bytes) used in ingestion.
                              type: integer
                            ingestionRateLimitBytes:
                              description: IngestionRateLimitBytes defines the Per-user
                                ingestion rate limit (bytes) used in ingestion.
                              type: integer
                            maxBytesPerTrace:
                              description: MaxBytesPerTrace defines the maximum number
                                of bytes of an acceptable trace.
                              type: integer
                            maxTracesPerUser:
                              description: MaxTracesPerUser defines the maximum number
                                of traces a user can send.
                              type: integer
                          type: object
                        query:
                          description: Query is used to define query rate limits.
                          properties:
                            maxBytesPerTagValues:
                              description: MaxBytesPerTagValues defines the maximum
                                size in bytes of a tag-values query.
                              type: integer
                            maxSearchBytesPerTrace:
                              description: 'MaxSearchBytesPerTrace defines the maximum
                                size of search data for a single trace in bytes. default:
                                `0` to disable.'
                              type: integer
                          type: object
                      type: object
                    description: PerTenant is used to define rate limits per tenant.
                    type: object
                type: object
              observability:
                description: ObservabilitySpec defines how telemetry data gets handled.
                properties:
                  tracing:
                    description: Tracing defines a config for operands.
                    properties:
                      jaeger_agent_endpoint:
                        default: localhost:6831
                        description: JaegerAgentEndpoint defines the jaeger endpoint
                          data gets send to.
                        type: string
                      sampling_fraction:
                        description: SamplingFraction defines the sampling ratio.
                          Valid values are 0 to 1.
                        type: string
                    type: object
                type: object
              replicationFactor:
                description: 'NOTE: currently this field is not considered. ReplicationFactor
                  is used to define how many component replicas should exist.'
                type: integer
              resources:
                description: Resources defines resources configuration.
                properties:
                  total:
                    description: The total amount of resources for Tempo instance.
                      The operator autonomously splits resources between deployed
                      Tempo components. Only limits are supported, the operator calculates
                      requests automatically. See http://github.com/grafana/tempo/issues/1540.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              retention:
                description: 'NOTE: currently this field is not considered. Retention
                  period defined by dataset. User can specify how long data should
                  be stored.'
                properties:
                  global:
                    description: Global is used to configure global retention.
                    properties:
                      traces:
                        description: 'Traces defines retention period. Supported parameter
                          suffixes are “s”, “m” and “h”. example: 336h default: value
                          is 48h.'
                        type: string
                    type: object
                  perTenant:
                    additionalProperties:
                      description: RetentionConfig defines how long data should be
                        provided.
                      properties:
                        traces:
                          description: 'Traces defines retention period. Supported
                            parameter suffixes are “s”, “m” and “h”. example: 336h
                            default: value is 48h.'
                          type: string
                      type: object
                    description: PerTenant is used to configure retention per tenant.
                    type: object
                type: object
              search:
                description: SearchSpec control the configuration for the search capabilities.
                properties:
                  defaultResultLimit:
                    description: 'Limit used for search requests if none is set by
                      the caller (default: 20)'
                    type: integer
                  maxDuration:
                    description: 'The maximum allowed time range for a search, default:
                      0s which means unlimited.'
                    type: string
                  maxResultLimit:
                    description: The maximum allowed value of the limit parameter
                      on search requests. If the search request limit parameter exceeds
                      the value configured here it will be set to the value configured
                      here. The default value of 0 disables this limit.
                    type: integer
                type: object
              serviceAccount:
                description: ServiceAccount defines the service account to use for
                  all tempo components.
                type: string
              storage:
                description: Storage defines the spec for the object storage endpoint
                  to store traces. User is required to create secret and supply it.
                properties:
                  secret:
                    description: Secret for object storage authentication. Name of
                      a secret in the same namespace as the tempo TempoStack custom
                      resource.
                    properties:
                      name:
                        description: Name of a secret in the namespace configured
                          for object storage secrets.
                        type: string
                      type:
                        description: Type of object storage that should be used
                        enum:
                        - azure
                        - gcs
                        - s3
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  tls:
                    description: TLS configuration for reaching the object storage
                      endpoint.
                    properties:
                      caName:
                        description: CA is the name of a ConfigMap containing a CA
                          certificate. It needs to be in the same namespace as the
                          Tempo custom resource.
                        type: string
                    type: object
                required:
                - secret
                type: object
              storageClassName:
                description: StorageClassName for PVCs used by ingester. Defaults
                  to nil (default storage class in the cluster).
                type: string
              storageSize:
                anyOf:
                - type: integer
                - type: string
                description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              template:
                description: Template defines requirements for a set of tempo components.
                properties:
                  compactor:
                    description: Compactor defines the tempo compactor component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector is the simplest recommended form
                          of node selection constraint.
                        type: object
                      replicas:
                        description: Replicas represents the number of replicas to
                          create for this component.
                        format: int32
                        type: integer
                      tolerations:
                        description: Tolerations defines component specific pod tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  distributor:
                    description: Distributor defines the distributor component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector is the simplest recommended form
                          of node selection constraint.
                        type: object
                      replicas:
                        description: Replicas represents the number of replicas to
                          create for this component.
                        format: int32
                        type: integer
                      tolerations:
                        description: Tolerations defines component specific pod tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  gateway:
                    description: Gateway defines the tempo gateway spec.
                    properties:
                      component:
                        description: "TempoComponentSpec is embedded to extend this
                          definition with further options. \n Currently there is no
                          way to inline this field. See: https://github.com/golang/go/issues/6213"
                        properties:
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector is the simplest recommended
                              form of node selection constraint.
                            type: object
                          replicas:
                            description: Replicas represents the number of replicas
                              to create for this component.
                            format: int32
                            type: integer
                          tolerations:
                            description: Tolerations defines component specific pod
                              tolerations.
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      enabled:
                        type: boolean
                    required:
                    - enabled
                    type: object
                  ingester:
                    description: Ingester defines the ingester component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector is the simplest recommended form
                          of node selection constraint.
                        type: object
                      replicas:
                        description: Replicas represents the number of replicas to
                          create for this component.
                        format: int32
                        type: integer
                      tolerations:
                        description: Tolerations defines component specific pod tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  querier:
                    description: Querier defines the querier component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector is the simplest recommended form
                          of node selection constraint.
                        type: object
                      replicas:
                        description: Replicas represents the number of replicas to
                          create for this component.
                        format: int32
                        type: integer
                      tolerations:
                        description: Tolerations defines component specific pod tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  queryFrontend:
                    description: TempoQueryFrontendSpec defines the query frontend
                      spec.
                    properties:
                      component:
                        description: "TempoComponentSpec is embedded to extend this
                          definition with further options. \n Currently there is no
                          way to inline this field. See: https://github.com/golang/go/issues/6213"
                        properties:
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector is the simplest recommended
                              form of node selection constraint.
                            type: object
                          replicas:
                            description: Replicas represents the number of replicas
                              to create for this component.
                            format: int32
                            type: integer
                          tolerations:
                            description: Tolerations defines component specific pod
                              tolerations.
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      jaegerQuery:
                        description: JaegerQuerySpec defines Jaeger Query specific
                          options.
                        properties:
                          enabled:
                            description: Enabled is used to define if Jaeger Query
                              component should be created.
                            type: boolean
                          ingress:
                            description: Ingress defines Jaeger Query Ingress options.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations defines the annotations of
                                  the Ingress object.
                                type: object
                              host:
                                description: Host defines the hostname of the Ingress
                                  object.
                                type: string
                              ingressClassName:
                                description: IngressClassName is the name of an IngressClass
                                  cluster resource. Ingress controller implementations
                                  use this field to know whether they should be serving
                                  this Ingress resource.
                                type: string
                              route:
                                description: Route defines OpenShift Route specific
                                  options.
                                properties:
                                  termination:
                                    description: Termination specifies the termination
                                      type. By default "edge" is used.
                                    enum:
                                    - insecure
                                    - edge
                                    - passthrough
                                    - reencrypt
                                    type: string
                                type: object
                              type:
                                description: Type defines the type of Ingress for
                                  the Jaeger Query UI. Currently ingress, route and
                                  none are supported.
                                enum:
                                - ingress
                                - route
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              tenants:
                description: Tenants defines the per-tenant authentication and authorization
                  spec.
                properties:
                  authentication:
                    description: Authentication defines the tempo-gateway component
                      authentication configuration spec per tenant.
                    items:
                      description: AuthenticationSpec defines the oidc configuration
                        per tenant for tempo Gateway component.
                      properties:
                        oidc:
                          description: OIDC defines the spec for the OIDC tenant's
                            authentication.
                          properties:
                            groupClaim:
                              description: Group claim field from ID Token
                              type: string
                            issuerURL:
                              description: IssuerURL defines the URL for issuer.
                              type: string
                            redirectURL:
                              description: RedirectURL defines the URL for redirect.
                              type: string
                            secret:
                              description: Secret defines the spec for the clientID,
                                clientSecret and issuerCAPath for tenant's authentication.
                              properties:
                                name:
                                  description: Name of a secret in the namespace configured
                                    for tenant secrets.
                                  type: string
                              type: object
                            usernameClaim:
                              description: User claim field from ID Token
                              type: string
                          type: object
                        tenantId:
                          description: TenantID defines the id of the tenant.
                          type: string
                        tenantName:
                          description: TenantName defines the name of the tenant.
                          type: string
                      required:
                      - tenantId
                      - tenantName
                      type: object
                    type: array
                  authorization:
                    description: Authorization defines the tempo-gateway component
                      authorization configuration spec per tenant.
                    properties:
                      roleBindings:
                        description: RoleBindings defines configuration to bind a
                          set of roles to a set of subjects.
                        items:
                          description: RoleBindingsSpec binds a set of roles to a
                            set of subjects.
                          properties:
                            name:
                              type: string
                            roles:
                              items:
                                type: string
                              type: array
                            subjects:
                              items:
                                description: Subject represents a subject that has
                                  been bound to a role.
                                properties:
                                  kind:
                                    description: SubjectKind is a kind of Tempo Gateway
                                      RBAC subject.
                                    enum:
                                    - user
                                    - group
                                    type: string
                                  name:
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          - roles
                          - subjects
                          type: object
                        type: array
                      roles:
                        description: Roles defines a set of permissions to interact
                          with a tenant.
                        items:
                          description: RoleSpec describes a set of permissions to
                            interact with a tenant.
                          properties:
                            name:
                              type: string
                            permissions:
                              items:
                                description: PermissionType is a Tempo Gateway RBAC
                                  permission.
                                enum:
                                - read
                                - write
                                type: string
                              type: array
                            resources:
                              items:
                                type: string
                              type: array
                            tenants:
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - permissions
                          - resources
                          - tenants
                          type: object
                        type: array
                    type: object
                  mode:
                    default: static
                    description: Mode defines the multitenancy mode.
                    enum:
                    - static
                    - openshift
                    type: string
                required:
                - mode
                type: object
            required:
            - storage
            type: object
          status:
            description: TempoStackStatus defines the observed state of TempoStack.
            properties:
              components:
                description: Components provides summary of all Tempo pod status grouped
                  per component.
                properties:
                  compactor:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Compactor is a map to the pod status of the compactor
                      pod.
                    type: object
                  distributor:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Distributor is a map to the per pod status of the
                      distributor deployment
                    type: object
                  gateway:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Gateway is a map to the per pod status of the query
                      frontend deployment
                    type: object
                  ingester:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Ingester is a map to the per pod status of the ingester
                      statefulset
                    type: object
                  querier:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Querier is a map to the per pod status of the querier
                      deployment
                    type: object
                  queryFrontend:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: QueryFrontend is a map to the per pod status of the
                      query frontend deployment
                    type: object
                type: object
              conditions:
                description: Conditions of the Tempo deployment health.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              tempoQueryVersion:
                description: Version of the Tempo Query component used.
                type: string
              tempoVersion:
                description: Version of the managed Tempo instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
