apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: discoveryservices.operator.marin3r.3scale.net
spec:
  group: operator.marin3r.3scale.net
  names:
    kind: DiscoveryService
    listKind: DiscoveryServiceList
    plural: discoveryservices
    singular: discoveryservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DiscoveryService represents an envoy discovery service server.
          Only one instance per namespace is currently supported.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DiscoveryServiceSpec defines the desired state of DiscoveryService
            properties:
              debug:
                description: Debug enables debugging log level for the discovery service
                  controllers. It is safe to use since secret data is never shown
                  in the logs.
                type: boolean
              image:
                description: Image holds the image to use for the discovery service
                  Deployment
                type: string
              metricsPort:
                description: MetricsPort is the port where metrics are served. Defaults
                  to 8383.
                format: int32
                type: integer
              pkiConfg:
                description: PKIConfig has configuration for the PKI that marin3r
                  manages for the different certificates it requires
                properties:
                  rootCertificateAuthority:
                    description: CertificateOptions specifies options to generate
                      the server certificate used both for the xDS server and the
                      mutating webhook server.
                    properties:
                      duration:
                        type: string
                      secretName:
                        type: string
                    required:
                    - duration
                    - secretName
                    type: object
                  serverCertificate:
                    description: CertificateOptions specifies options to generate
                      the server certificate used both for the xDS server and the
                      mutating webhook server.
                    properties:
                      duration:
                        type: string
                      secretName:
                        type: string
                    required:
                    - duration
                    - secretName
                    type: object
                required:
                - rootCertificateAuthority
                - serverCertificate
                type: object
              podPriorityClass:
                description: PriorityClass to assign the discovery service Pod to
                type: string
              probePort:
                description: ProbePort is the port where healthz endpoint is served.
                  Defaults to 8384.
                format: int32
                type: integer
              resources:
                description: Resources holds the Resource Requirements to use for
                  the discovery service Deployment. When not set it defaults to no
                  resource requests nor limits. CPU and Memory resources are supported.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceConfig:
                description: ServiceConfig configures the way the DiscoveryService
                  endpoints are exposed
                properties:
                  name:
                    type: string
                  type:
                    description: ServiceType is an enum with the available discovery
                      service Service types
                    type: string
                type: object
              xdsServerPort:
                description: XdsServerPort is the port where the xDS server listens.
                  Defaults to 18000.
                format: int32
                type: integer
            type: object
          status:
            description: DiscoveryServiceStatus defines the observed state of DiscoveryService
            properties:
              deploymentName:
                type: string
              deploymentStatus:
                description: DeploymentStatus is the most recently observed status
                  of the Deployment.
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least
                      minReadySeconds) targeted by this deployment.
                    format: int32
                    type: integer
                  collisionCount:
                    description: Count of hash collisions for the Deployment. The
                      Deployment controller uses this field as a collision avoidance
                      mechanism when it needs to create the name for the newest ReplicaSet.
                    format: int32
                    type: integer
                  conditions:
                    description: Represents the latest available observations of a
                      deployment's current state.
                    items:
                      description: DeploymentCondition describes the state of a deployment
                        at a certain point.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of deployment condition.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  observedGeneration:
                    description: The generation observed by the deployment controller.
                    format: int64
                    type: integer
                  readyReplicas:
                    description: readyReplicas is the number of pods targeted by this
                      Deployment with a Ready Condition.
                    format: int32
                    type: integer
                  replicas:
                    description: Total number of non-terminated pods targeted by this
                      deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this
                      deployment. This is the total number of pods that are still
                      required for the deployment to have 100% available capacity.
                      They may either be pods that are running but not yet available
                      or pods that still have not been created.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this
                      deployment that have the desired template spec.
                    format: int32
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
