apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: envoyconfigs.marin3r.3scale.net
spec:
  group: marin3r.3scale.net
  names:
    kind: EnvoyConfig
    listKind: EnvoyConfigList
    plural: envoyconfigs
    shortNames:
    - ec
    singular: envoyconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.nodeID
      name: Node ID
      type: string
    - jsonPath: .spec.envoyAPI
      name: Envoy API
      type: string
    - jsonPath: .status.desiredVersion
      name: Desired Version
      type: string
    - jsonPath: .status.publishedVersion
      name: Published Version
      type: string
    - jsonPath: .status.cacheState
      name: Cache State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyConfig holds the configuration for a given envoy nodeID.
          The spec of an EnvoyConfig object holds the Envoy resources that conform
          the desired configuration for the given nodeID and that the discovery service
          will send to any envoy client that identifies itself with that nodeID.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnvoyConfigSpec defines the desired state of EnvoyConfig
            properties:
              envoyAPI:
                description: EnvoyAPI is the version of envoy's API to use. Defaults
                  to v3.
                enum:
                - v3
                type: string
              envoyResources:
                description: EnvoyResources holds the different types of resources
                  suported by the envoy discovery service DEPRECATED. Use the `resources`
                  field instead.
                properties:
                  clusters:
                    description: 'Clusters is a list of the envoy Cluster resource
                      type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  endpoints:
                    description: 'Endpoints is a list of the envoy ClusterLoadAssignment
                      resource type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  extensionConfigs:
                    description: 'ExtensionConfigs is a list of the envoy ExtensionConfig
                      resource type API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/extension.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  listeners:
                    description: 'Listeners is a list of the envoy Listener resource
                      type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  routes:
                    description: 'Routes is a list of the envoy Route resource type.
                      API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  runtimes:
                    description: 'Runtimes is a list of the envoy Runtime resource
                      type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  scopedRoutes:
                    description: 'ScopedRoutes is a list of the envoy ScopeRoute resource
                      type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/scoped_route.proto'
                    items:
                      description: EnvoyResource holds serialized representation of
                        an envoy resource
                      properties:
                        name:
                          description: 'Name of the envoy resource. DEPRECATED: this
                            field has no effect and will be removed in an upcoming
                            release. The name of the resources for discovery purposes
                            is included in the resource itself. Refer to the envoy
                            API reference to check how the name is specified for each
                            resource type.'
                          type: string
                        value:
                          description: Value is the serialized representation of the
                            envoy resource
                          type: string
                      required:
                      - value
                      type: object
                    type: array
                  secrets:
                    description: Secrets is a list of references to Kubernetes Secret
                      objects.
                    items:
                      description: EnvoySecretResource holds a reference to a k8s
                        Secret from where to take a secret from. Only Secrets within
                        the same namespace can be referred.
                      properties:
                        name:
                          description: Name of the envoy tslCerticate secret resource.
                            The certificate will be fetched from a Kubernetes Secrets
                            of type 'kubernetes.io/tls' with this same name.
                          type: string
                        ref:
                          description: 'DEPRECATED: this field is deprecated and it''s
                            value will be ignored. The ''name'' of the Kubernetes
                            Secret must match the ''name'' field.'
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - name
                      type: object
                    type: array
                type: object
              nodeID:
                description: NodeID holds the envoy identifier for the discovery service
                  to know which set of resources to send to each of the envoy clients
                  that connect to it.
                type: string
              resources:
                description: Resources holds the different types of resources suported
                  by the envoy discovery service
                items:
                  description: Resource holds serialized representation of an envoy
                    resource
                  properties:
                    blueprint:
                      description: Blueprint specifies a template to generate a configuration
                        proto. It is currently only supported to generate secret configuration
                        resources from k8s Secrets
                      enum:
                      - tlsCertificate
                      - validationContext
                      type: string
                    generateFromEndpointSlices:
                      description: Specifies a label selector to watch for EndpointSlices
                        that will be used to generate the endpoint resource
                      properties:
                        clusterName:
                          type: string
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        targetPort:
                          type: string
                      required:
                      - clusterName
                      - selector
                      - targetPort
                      type: object
                    generateFromOpaqueSecret:
                      description: The name of a Kubernetes Secret of type "Opaque".
                        It will generate an envoy "generic secret" proto.
                      properties:
                        alias:
                          description: A unique name to refer to the name:key combination
                          type: string
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: The name of the secret in the pod's namespace
                            to select from.
                          type: string
                      required:
                      - alias
                      - key
                      - name
                      type: object
                    generateFromTlsSecret:
                      description: The name of a Kubernetes Secret of type "kubernetes.io/tls"
                      type: string
                    type:
                      description: Type is the type url for the protobuf message
                      enum:
                      - listener
                      - route
                      - scopedRoute
                      - cluster
                      - endpoint
                      - secret
                      - runtime
                      - extensionConfig
                      type: string
                    value:
                      description: Value is the protobufer message that configures
                        the resource. The proto must match the envoy configuration
                        API v3 specification for the given resource type (https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol#resource-types)
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - type
                  type: object
                type: array
              serialization:
                description: Serialization specicifies the serialization format used
                  to describe the resources. "json" and "yaml" are supported. "json"
                  is used if unset.
                enum:
                - json
                - yaml
                type: string
            required:
            - nodeID
            type: object
          status:
            description: EnvoyConfigStatus defines the observed state of EnvoyConfig
            properties:
              cacheState:
                description: CacheState summarizes all the observations about the
                  EnvoyConfig to give the user a concrete idea on the general status
                  of the discovery servie cache. It is intended only for human consumption.
                  Other controllers should relly on conditions to determine the status
                  of the discovery server cache.
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              desiredVersion:
                description: DesiredVersion represents the resources version described
                  in the spec of the EnvoyConfig object
                type: string
              publishedVersion:
                description: PublishedVersion is the config version currently served
                  by the envoy discovery service for the give nodeID
                type: string
              revisions:
                description: ConfigRevisions is an ordered list of references to EnvoyConfigRevision
                  objects
                items:
                  description: ConfigRevisionRef holds a reference to EnvoyConfigRevision
                    object
                  properties:
                    ref:
                      description: Ref is a reference to the EnvoyConfigRevision object
                        that holds the configuration matching the Version field.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    version:
                      description: Version is a hash of the EnvoyResources field
                      type: string
                  required:
                  - ref
                  - version
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
