apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: temporalclusters.temporal.io
spec:
  group: temporal.io
  names:
    kind: TemporalCluster
    listKind: TemporalClusterList
    plural: temporalclusters
    singular: temporalcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type == 'Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type == 'ReconcileSuccess')].status
      name: ReconcileSuccess
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TemporalCluster defines a temporal cluster deployment.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the Temporal cluster.
            properties:
              metrics:
                description: Metrics allows configuration of the optional prometheus
                        endpoints for temporal services.                    
                properties:
                  enabled:
                    description: Enabled defines if the operator configures prometheus
                      endpoints for temporal services.                     
                    type: boolean    
                  prometheus:
                    description: Prometheues sets the desired prometheus configuration
                    properties:
                      listenAddress:
                        description: The IP address and port for scrapping prometheus metrics
                        type: string     
                    type: object    
                type: object              
              admintools:
                description: AdminTools allows configuration of the optional admin
                  tool pod deployed alongside the cluster.
                properties:
                  enabled:
                    description: Enabled defines if the operator should deploy the
                      admin tools alongside the cluster.
                    type: boolean
                  image:
                    description: Image defines the temporal admin tools docker image
                      the instance should run.
                    type: string
                type: object
              image:
                description: Image defines the temporal server docker image the cluster
                  should use for each services.
                type: string
              imagePullSecrets:
                description: An optional list of references to secrets in the same
                  namespace to use for pulling temporal images from registries.
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              jobTtlSecondsAfterFinished:
                description: JobTtlSecondsAfterFinished is amount of time to keep
                  job pods after jobs are completed. This field is immutable.
                format: int32
                minimum: 1
                type: integer
              mTLS:
                description: MTLS allows configuration of the network traffic encryption
                  for the cluster.
                properties:
                  certificatesDuration:
                    description: CertificatesDuration allows configuration of maximum
                      certificates lifetime. Useless if mTLS provider is not cert-manager.
                    properties:
                      clientCertificates:
                        description: ClientCertificates is the 'duration' (i.e. lifetime)
                          of the client certificates. It defaults to 1 year.
                        type: string
                      frontendCertificate:
                        description: FrontendCertificate is the 'duration' (i.e. lifetime)
                          of the frontend certificate. It defaults to 1 year.
                        type: string
                      intermediateCAsCertificates:
                        description: IntermediateCACertificates is the 'duration'
                          (i.e. lifetime) of the intermediate CAs Certificates. It
                          defaults to 5 years.
                        type: string
                      internodeCertificate:
                        description: InternodeCertificate is the 'duration' (i.e.
                          lifetime) of the internode certificate. It defaults to 1
                          year.
                        type: string
                      rootCACertificate:
                        description: RootCACertificate is the 'duration' (i.e. lifetime)
                          of the Root CA Certificate. It defaults to 10 years.
                        type: string
                    type: object
                  frontend:
                    description: Frontend allows configuration of the frontend's public
                      endpoint traffic encryption. Useless if mTLS provider is not
                      cert-manager.
                    properties:
                      enabled:
                        description: Enabled defines if the operator should enable
                          mTLS for cluster's public endpoints.
                        type: boolean
                    type: object
                  internode:
                    description: Internode allows configuration of the internode traffic
                      encryption. Useless if mTLS provider is not cert-manager.
                    properties:
                      enabled:
                        description: Enabled defines if the operator should enable
                          mTLS for network between cluster nodes.
                        type: boolean
                    type: object
                  provider:
                    default: cert-manager
                    description: Provider defines the tool used to manage mTLS certificates.
                    enum:
                    - cert-manager
                    - linkerd
                    - istio
                    type: string
                  refreshInterval:
                    description: RefreshInterval defines interval between refreshes
                      of certificates in the cluster components. Defaults to 1 hour.
                      Useless if mTLS provider is not cert-manager.
                    type: string
                type: object
              numHistoryShards:
                description: NumHistoryShards is the desired number of history shards.
                  This field is immutable.
                format: int32
                minimum: 1
                type: integer
              persistence:
                description: Persistence defines temporal persistence configuration.
                properties:
                  advancedVisibilityStore:
                    description: AdvancedVisibilityStore holds the avanced visibility
                      datastore specs.
                    properties:
                      cassandra:
                        description: Cassandra holds all connection parameters for
                          Cassandra datastore.
                        properties:
                          connectTimeout:
                            description: ConnectTimeout is a timeout for initial dial
                              to cassandra server.
                            type: string
                          consistency:
                            description: Consistency configuration.
                            properties:
                              consistency:
                                description: Consistency sets the default consistency
                                  level. Values identical to gocql Consistency values.
                                  (defaults to LOCAL_QUORUM if not set).
                                enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - LOCAL_ONE
                                type: integer
                              serialConsistency:
                                description: SerialConsistency sets the consistency
                                  for the serial prtion of queries. Values identical
                                  to gocql SerialConsistency values. (defaults to
                                  LOCAL_SERIAL if not set)
                                enum:
                                - SERIAL
                                - LOCAL_SERIAL
                                type: integer
                            type: object
                          datacenter:
                            description: Datacenter is the data center filter arg
                              for cassandra.
                            type: string
                          disableInitialHostLookup:
                            description: DisableInitialHostLookup instructs the gocql
                              client to connect only using the supplied hosts.
                            type: boolean
                          hosts:
                            description: Hosts is a list of cassandra endpoints.
                            items:
                              type: string
                            type: array
                          keyspace:
                            description: Keyspace is the cassandra keyspace.
                            type: string
                          maxConns:
                            description: MaxConns is the max number of connections
                              to this datastore for a single keyspace.
                            type: integer
                          port:
                            description: Port is the cassandra port used for connection
                              by gocql client.
                            type: integer
                          user:
                            description: User is the cassandra user used for authentication
                              by gocql client.
                            type: string
                        required:
                        - datacenter
                        - hosts
                        - keyspace
                        - port
                        - user
                        type: object
                      elasticsearch:
                        description: Elasticsearch holds all connection parameters
                          for Elasticsearch datastores.
                        properties:
                          closeIdleConnectionsInterval:
                            description: CloseIdleConnectionsInterval is the max duration
                              a connection stay open while idle.
                            type: string
                          enableHealthcheck:
                            description: EnableHealthcheck enables or disables healthcheck
                              on the temporal cluster's es client.
                            type: boolean
                          enableSniff:
                            description: EnableSniff enables or disables sniffer on
                              the temporal cluster's es client.
                            type: boolean
                          indices:
                            description: Indices holds visibility index names.
                            properties:
                              secondaryVisibility:
                                description: SecondaryVisibility defines secondary
                                  visibility's index name.
                                type: string
                              visibility:
                                description: Visibility defines visibility's index
                                  name.
                                type: string
                            required:
                            - visibility
                            type: object
                          logLevel:
                            description: LogLevel defines the temporal cluster's es
                              client logger level.
                            type: string
                          url:
                            description: URL is the connection url to connect to the
                              instance.
                            pattern: ^https?:\/\/.+$
                            type: string
                          username:
                            description: Username is the username to be used for the
                              connection.
                            type: string
                          version:
                            default: v7
                            description: Version defines the elasticsearch version.
                            pattern: ^v(6|7)$
                            type: string
                        required:
                        - indices
                        - url
                        - username
                        - version
                        type: object
                      name:
                        description: Name is the name of the datatstore. It should
                          be unique and will be referenced within the persitence spec.
                          Defaults to "default" for default sore, "visibility" for
                          visibility store and "advancedVisibility" for advanced visibility
                          store.
                        type: string
                      passwordSecretRef:
                        description: PasswordSecret is the reference to the secret
                          holding the password.
                        properties:
                          key:
                            description: Key in the Secret.
                            type: string
                          name:
                            description: Name of the Secret.
                            type: string
                        required:
                        - name
                        type: object
                      sql:
                        description: SQL holds all connection parameters for SQL datastores.
                        properties:
                          connectAddr:
                            description: ConnectAddr is the remote addr of the database.
                            type: string
                          connectAttributes:
                            additionalProperties:
                              type: string
                            description: ConnectAttributes is a set of key-value attributes
                              to be sent as part of connect data_source_name url
                            type: object
                          connectProtocol:
                            description: ConnectProtocol is the protocol that goes
                              with the ConnectAddr.
                            type: string
                          databaseName:
                            description: DatabaseName is the name of SQL database
                              to connect to.
                            type: string
                          maxConnLifetime:
                            description: MaxConnLifetime is the maximum time a connection
                              can be alive
                            format: int64
                            type: integer
                          maxConns:
                            description: MaxConns the max number of connections to
                              this datastore.
                            type: integer
                          maxIdleConns:
                            description: MaxIdleConns is the max number of idle connections
                              to this datastore.
                            type: integer
                          pluginName:
                            description: PluginName is the name of SQL plugin.
                            type: string
                          taskScanPartitions:
                            description: TaskScanPartitions is the number of partitions
                              to sequentially scan during ListTaskQueue operations.
                            type: integer
                          user:
                            description: User is the username to be used for the connection.
                            type: string
                        required:
                        - connectAddr
                        - databaseName
                        - pluginName
                        - user
                        type: object
                      tls:
                        description: TLS is an optional option to connect to the datastore
                          using TLS.
                        properties:
                          caFileRef:
                            description: CaFileRef is a reference to a secret containing
                              the ca file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          certFileRef:
                            description: CertFileRef is a reference to a secret containing
                              the cert file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          enableHostVerification:
                            description: EnableHostVerification defines if the hostname
                              should be verified when connecting to the datastore.
                            type: boolean
                          enabled:
                            description: Enabled defines if the cluster should use
                              a TLS connection to connect to the datastore.
                            type: boolean
                          keyFileRef:
                            description: KeyFileRef is a reference to a secret containing
                              the key file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          serverName:
                            description: ServerName the datastore should present.
                            type: string
                        required:
                        - enableHostVerification
                        - enabled
                        type: object
                    required:
                    - passwordSecretRef
                    type: object
                  defaultStore:
                    description: DefaultStore holds the default datastore specs.
                    properties:
                      cassandra:
                        description: Cassandra holds all connection parameters for
                          Cassandra datastore.
                        properties:
                          connectTimeout:
                            description: ConnectTimeout is a timeout for initial dial
                              to cassandra server.
                            type: string
                          consistency:
                            description: Consistency configuration.
                            properties:
                              consistency:
                                description: Consistency sets the default consistency
                                  level. Values identical to gocql Consistency values.
                                  (defaults to LOCAL_QUORUM if not set).
                                enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - LOCAL_ONE
                                type: integer
                              serialConsistency:
                                description: SerialConsistency sets the consistency
                                  for the serial prtion of queries. Values identical
                                  to gocql SerialConsistency values. (defaults to
                                  LOCAL_SERIAL if not set)
                                enum:
                                - SERIAL
                                - LOCAL_SERIAL
                                type: integer
                            type: object
                          datacenter:
                            description: Datacenter is the data center filter arg
                              for cassandra.
                            type: string
                          disableInitialHostLookup:
                            description: DisableInitialHostLookup instructs the gocql
                              client to connect only using the supplied hosts.
                            type: boolean
                          hosts:
                            description: Hosts is a list of cassandra endpoints.
                            items:
                              type: string
                            type: array
                          keyspace:
                            description: Keyspace is the cassandra keyspace.
                            type: string
                          maxConns:
                            description: MaxConns is the max number of connections
                              to this datastore for a single keyspace.
                            type: integer
                          port:
                            description: Port is the cassandra port used for connection
                              by gocql client.
                            type: integer
                          user:
                            description: User is the cassandra user used for authentication
                              by gocql client.
                            type: string
                        required:
                        - datacenter
                        - hosts
                        - keyspace
                        - port
                        - user
                        type: object
                      elasticsearch:
                        description: Elasticsearch holds all connection parameters
                          for Elasticsearch datastores.
                        properties:
                          closeIdleConnectionsInterval:
                            description: CloseIdleConnectionsInterval is the max duration
                              a connection stay open while idle.
                            type: string
                          enableHealthcheck:
                            description: EnableHealthcheck enables or disables healthcheck
                              on the temporal cluster's es client.
                            type: boolean
                          enableSniff:
                            description: EnableSniff enables or disables sniffer on
                              the temporal cluster's es client.
                            type: boolean
                          indices:
                            description: Indices holds visibility index names.
                            properties:
                              secondaryVisibility:
                                description: SecondaryVisibility defines secondary
                                  visibility's index name.
                                type: string
                              visibility:
                                description: Visibility defines visibility's index
                                  name.
                                type: string
                            required:
                            - visibility
                            type: object
                          logLevel:
                            description: LogLevel defines the temporal cluster's es
                              client logger level.
                            type: string
                          url:
                            description: URL is the connection url to connect to the
                              instance.
                            pattern: ^https?:\/\/.+$
                            type: string
                          username:
                            description: Username is the username to be used for the
                              connection.
                            type: string
                          version:
                            default: v7
                            description: Version defines the elasticsearch version.
                            pattern: ^v(6|7)$
                            type: string
                        required:
                        - indices
                        - url
                        - username
                        - version
                        type: object
                      name:
                        description: Name is the name of the datatstore. It should
                          be unique and will be referenced within the persitence spec.
                          Defaults to "default" for default sore, "visibility" for
                          visibility store and "advancedVisibility" for advanced visibility
                          store.
                        type: string
                      passwordSecretRef:
                        description: PasswordSecret is the reference to the secret
                          holding the password.
                        properties:
                          key:
                            description: Key in the Secret.
                            type: string
                          name:
                            description: Name of the Secret.
                            type: string
                        required:
                        - name
                        type: object
                      sql:
                        description: SQL holds all connection parameters for SQL datastores.
                        properties:
                          connectAddr:
                            description: ConnectAddr is the remote addr of the database.
                            type: string
                          connectAttributes:
                            additionalProperties:
                              type: string
                            description: ConnectAttributes is a set of key-value attributes
                              to be sent as part of connect data_source_name url
                            type: object
                          connectProtocol:
                            description: ConnectProtocol is the protocol that goes
                              with the ConnectAddr.
                            type: string
                          databaseName:
                            description: DatabaseName is the name of SQL database
                              to connect to.
                            type: string
                          maxConnLifetime:
                            description: MaxConnLifetime is the maximum time a connection
                              can be alive
                            format: int64
                            type: integer
                          maxConns:
                            description: MaxConns the max number of connections to
                              this datastore.
                            type: integer
                          maxIdleConns:
                            description: MaxIdleConns is the max number of idle connections
                              to this datastore.
                            type: integer
                          pluginName:
                            description: PluginName is the name of SQL plugin.
                            type: string
                          taskScanPartitions:
                            description: TaskScanPartitions is the number of partitions
                              to sequentially scan during ListTaskQueue operations.
                            type: integer
                          user:
                            description: User is the username to be used for the connection.
                            type: string
                        required:
                        - connectAddr
                        - databaseName
                        - pluginName
                        - user
                        type: object
                      tls:
                        description: TLS is an optional option to connect to the datastore
                          using TLS.
                        properties:
                          caFileRef:
                            description: CaFileRef is a reference to a secret containing
                              the ca file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          certFileRef:
                            description: CertFileRef is a reference to a secret containing
                              the cert file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          enableHostVerification:
                            description: EnableHostVerification defines if the hostname
                              should be verified when connecting to the datastore.
                            type: boolean
                          enabled:
                            description: Enabled defines if the cluster should use
                              a TLS connection to connect to the datastore.
                            type: boolean
                          keyFileRef:
                            description: KeyFileRef is a reference to a secret containing
                              the key file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          serverName:
                            description: ServerName the datastore should present.
                            type: string
                        required:
                        - enableHostVerification
                        - enabled
                        type: object
                    required:
                    - passwordSecretRef
                    type: object
                  visibilityStore:
                    description: VisibilityStore holds the visibility datastore specs.
                    properties:
                      cassandra:
                        description: Cassandra holds all connection parameters for
                          Cassandra datastore.
                        properties:
                          connectTimeout:
                            description: ConnectTimeout is a timeout for initial dial
                              to cassandra server.
                            type: string
                          consistency:
                            description: Consistency configuration.
                            properties:
                              consistency:
                                description: Consistency sets the default consistency
                                  level. Values identical to gocql Consistency values.
                                  (defaults to LOCAL_QUORUM if not set).
                                enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - LOCAL_ONE
                                type: integer
                              serialConsistency:
                                description: SerialConsistency sets the consistency
                                  for the serial prtion of queries. Values identical
                                  to gocql SerialConsistency values. (defaults to
                                  LOCAL_SERIAL if not set)
                                enum:
                                - SERIAL
                                - LOCAL_SERIAL
                                type: integer
                            type: object
                          datacenter:
                            description: Datacenter is the data center filter arg
                              for cassandra.
                            type: string
                          disableInitialHostLookup:
                            description: DisableInitialHostLookup instructs the gocql
                              client to connect only using the supplied hosts.
                            type: boolean
                          hosts:
                            description: Hosts is a list of cassandra endpoints.
                            items:
                              type: string
                            type: array
                          keyspace:
                            description: Keyspace is the cassandra keyspace.
                            type: string
                          maxConns:
                            description: MaxConns is the max number of connections
                              to this datastore for a single keyspace.
                            type: integer
                          port:
                            description: Port is the cassandra port used for connection
                              by gocql client.
                            type: integer
                          user:
                            description: User is the cassandra user used for authentication
                              by gocql client.
                            type: string
                        required:
                        - datacenter
                        - hosts
                        - keyspace
                        - port
                        - user
                        type: object
                      elasticsearch:
                        description: Elasticsearch holds all connection parameters
                          for Elasticsearch datastores.
                        properties:
                          closeIdleConnectionsInterval:
                            description: CloseIdleConnectionsInterval is the max duration
                              a connection stay open while idle.
                            type: string
                          enableHealthcheck:
                            description: EnableHealthcheck enables or disables healthcheck
                              on the temporal cluster's es client.
                            type: boolean
                          enableSniff:
                            description: EnableSniff enables or disables sniffer on
                              the temporal cluster's es client.
                            type: boolean
                          indices:
                            description: Indices holds visibility index names.
                            properties:
                              secondaryVisibility:
                                description: SecondaryVisibility defines secondary
                                  visibility's index name.
                                type: string
                              visibility:
                                description: Visibility defines visibility's index
                                  name.
                                type: string
                            required:
                            - visibility
                            type: object
                          logLevel:
                            description: LogLevel defines the temporal cluster's es
                              client logger level.
                            type: string
                          url:
                            description: URL is the connection url to connect to the
                              instance.
                            pattern: ^https?:\/\/.+$
                            type: string
                          username:
                            description: Username is the username to be used for the
                              connection.
                            type: string
                          version:
                            default: v7
                            description: Version defines the elasticsearch version.
                            pattern: ^v(6|7)$
                            type: string
                        required:
                        - indices
                        - url
                        - username
                        - version
                        type: object
                      name:
                        description: Name is the name of the datatstore. It should
                          be unique and will be referenced within the persitence spec.
                          Defaults to "default" for default sore, "visibility" for
                          visibility store and "advancedVisibility" for advanced visibility
                          store.
                        type: string
                      passwordSecretRef:
                        description: PasswordSecret is the reference to the secret
                          holding the password.
                        properties:
                          key:
                            description: Key in the Secret.
                            type: string
                          name:
                            description: Name of the Secret.
                            type: string
                        required:
                        - name
                        type: object
                      sql:
                        description: SQL holds all connection parameters for SQL datastores.
                        properties:
                          connectAddr:
                            description: ConnectAddr is the remote addr of the database.
                            type: string
                          connectAttributes:
                            additionalProperties:
                              type: string
                            description: ConnectAttributes is a set of key-value attributes
                              to be sent as part of connect data_source_name url
                            type: object
                          connectProtocol:
                            description: ConnectProtocol is the protocol that goes
                              with the ConnectAddr.
                            type: string
                          databaseName:
                            description: DatabaseName is the name of SQL database
                              to connect to.
                            type: string
                          maxConnLifetime:
                            description: MaxConnLifetime is the maximum time a connection
                              can be alive
                            format: int64
                            type: integer
                          maxConns:
                            description: MaxConns the max number of connections to
                              this datastore.
                            type: integer
                          maxIdleConns:
                            description: MaxIdleConns is the max number of idle connections
                              to this datastore.
                            type: integer
                          pluginName:
                            description: PluginName is the name of SQL plugin.
                            type: string
                          taskScanPartitions:
                            description: TaskScanPartitions is the number of partitions
                              to sequentially scan during ListTaskQueue operations.
                            type: integer
                          user:
                            description: User is the username to be used for the connection.
                            type: string
                        required:
                        - connectAddr
                        - databaseName
                        - pluginName
                        - user
                        type: object
                      tls:
                        description: TLS is an optional option to connect to the datastore
                          using TLS.
                        properties:
                          caFileRef:
                            description: CaFileRef is a reference to a secret containing
                              the ca file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          certFileRef:
                            description: CertFileRef is a reference to a secret containing
                              the cert file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          enableHostVerification:
                            description: EnableHostVerification defines if the hostname
                              should be verified when connecting to the datastore.
                            type: boolean
                          enabled:
                            description: Enabled defines if the cluster should use
                              a TLS connection to connect to the datastore.
                            type: boolean
                          keyFileRef:
                            description: KeyFileRef is a reference to a secret containing
                              the key file.
                            properties:
                              key:
                                description: Key in the Secret.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                          serverName:
                            description: ServerName the datastore should present.
                            type: string
                        required:
                        - enableHostVerification
                        - enabled
                        type: object
                    required:
                    - passwordSecretRef
                    type: object
                required:
                - defaultStore
                - visibilityStore
                type: object
              services:
                description: Services allows customizations for for each temporal
                  services deployment.
                properties:
                  frontend:
                    description: Frontend service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  history:
                    description: History service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  matching:
                    description: Matching service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  worker:
                    description: Worker service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                type: object
              ui:
                description: UI allows configuration of the optional temporal web
                  ui deployed alongside the cluster.
                properties:
                  enabled:
                    description: Enabled defines if the operator should deploy the
                      web ui alongside the cluster.
                    type: boolean
                  image:
                    description: Image defines the temporal ui docker image the instance
                      should run.
                    type: string
                  ingress:
                    description: Ingress is an optional ingress configuration for
                      the UI. If lived empty, no ingress configuration will be created
                      and the UI will only by available trough ClusterIP service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations allows custom annotations on the
                          ingress ressource.
                        type: object
                      hosts:
                        description: Host is the list of host the ingress should use.
                        items:
                          type: string
                        type: array
                      ingressClassName:
                        description: IngressClassName is the name of the IngressClass
                          the deployed ingress resource should use.
                        type: string
                      tls:
                        description: TLS configuration.
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate TLS traffic on port 443. Field is left
                                optional to allow TLS routing based on SNI hostname
                                alone. If the SNI host in a listener conflicts with
                                the "Host" header field used by an IngressRule, the
                                SNI host is used for termination and value of the
                                Host header is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - hosts
                    type: object
                  version:
                    description: Version defines the temporal ui version the instance
                      should run.
                    type: string
                type: object
              version:
                description: Version defines the temporal version the cluster to be
                  deployed. This version impacts the underlying persistence schemas
                  versions.
                type: string
            required:
            - jobTtlSecondsAfterFinished
            - numHistoryShards
            - persistence
            - version
            type: object
          status:
            description: Most recent observed status of the Temporal cluster.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the Cluster state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              services:
                description: Services holds all services statuses.
                items:
                  description: ServiceStatus reports a service status.
                  properties:
                    name:
                      description: Name of the temporal service.
                      type: string
                    ready:
                      description: Ready defines if the service is ready.
                      type: boolean
                    version:
                      description: Current observed version of the service.
                      type: string
                  required:
                  - name
                  - ready
                  - version
                  type: object
                type: array
              version:
                description: Version holds the current temporal version.
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
