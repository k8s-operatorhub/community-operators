apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: pulsarpermissions.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - pulsar
    - pulsarres
    kind: PulsarPermission
    listKind: PulsarPermissionList
    plural: pulsarpermissions
    shortNames:
    - ppermission
    singular: pulsarpermission
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.resourceName
      name: RESOURCE NAME
      type: string
    - jsonPath: .spec.resourceType
      name: RESOURCE TYPE
      type: string
    - jsonPath: .spec.roles
      name: ROLES
      type: string
    - jsonPath: .spec.actions
      name: ACTIONS
      type: string
    - jsonPath: .metadata.generation
      name: GENERATION
      type: string
    - jsonPath: .status.observedGeneration
      name: OBSERVED GENERATION
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PulsarPermission is the Schema for the pulsarpermissions API.
          It represents a set of permissions granted to specific roles for a Pulsar resource (namespace or topic).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PulsarPermissionSpec defines the desired state of PulsarPermission.
              It specifies the configuration for granting permissions to Pulsar resources.
            properties:
              actions:
                description: |-
                  Actions is a list of permissions to grant.
                  Valid options include "produce", "consume", and "functions".
                items:
                  type: string
                type: array
              connectionRef:
                description: |-
                  ConnectionRef is the reference to the PulsarConnection resource
                  used to connect to the Pulsar cluster for this permission.
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              lifecyclePolicy:
                description: |-
                  LifecyclePolicy determines how to handle the Pulsar permissions
                  when the PulsarPermission resource is deleted.
                type: string
              resourceName:
                description: |-
                  ResourceName is the name of the target resource (namespace or topic)
                  to which the permissions will be granted.
                type: string
              resourceType:
                description: ResourceType indicates whether the permission is for
                  a namespace or a topic.
                enum:
                - namespace
                - topic
                type: string
              roles:
                description: |-
                  Roles is a list of role names that will be granted the specified permissions
                  for the target resource.
                items:
                  type: string
                type: array
            required:
            - connectionRef
            - resourceName
            - resourceType
            - roles
            type: object
          status:
            description: |-
              PulsarPermissionStatus defines the observed state of PulsarPermission.
              It provides information about the current status of the Pulsar permission configuration.
            properties:
              conditions:
                description: |-
                  Conditions represent the latest available observations of the PulsarPermission's current state.
                  It follows the Kubernetes conventions for condition types and status.
                  The "Ready" condition type is typically used to indicate the overall status of the permission configuration.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this resource.
                  It corresponds to the metadata generation, which is updated on mutation by the API Server.
                  This field is used to track whether the controller has processed the latest changes.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
