apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "Kubero",
          "metadata": {
            "name": "kubero"
          },
          "spec": {
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "ghcr.io/kubero-dev/kubero/kubero",
              "tag": "main"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "className": "",
              "enabled": true,
              "hosts": [
                {
                  "host": "kubero.lacolhost.com",
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "ImplementationSpecific"
                    }
                  ]
                }
              ],
              "tls": []
            },
            "kubero": {
              "auth": {
                "buildpacks": [
                  {
                    "build": {
                      "command": "npm install",
                      "repository": "node",
                      "tag": "latest"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "JavaScript",
                    "name": "NodeJS",
                    "run": {
                      "command": "node index.js",
                      "repository": "node",
                      "tag": "latest"
                    }
                  },
                  {
                    "build": {
                      "command": "composer install; chown -R 1000:1000 /app",
                      "repository": "composer",
                      "tag": "latest"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "PHP",
                    "name": "PHP",
                    "run": {
                      "command": "apache2-foreground",
                      "readOnlyAppStorage": false,
                      "repository": "webdevops/php-apache",
                      "securityContext": {
                        "allowPrivilegeEscalation": true,
                        "readOnlyRootFilesystem": false
                      },
                      "tag": "8.1"
                    }
                  },
                  {
                    "build": {
                      "command": "python3 -m venv .venv \u0026\u0026 . .venv/bin/activate \u0026\u0026 pip install -r requirements.txt",
                      "repository": "python",
                      "tag": "3.10-buster"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "Python",
                    "name": "Python",
                    "run": {
                      "command": "python3 -m venv .venv \u0026\u0026 . .venv/bin/activate \u0026\u0026 python3 main.py",
                      "repository": "python",
                      "tag": "3.10-buster"
                    }
                  },
                  {
                    "build": {
                      "command": "go mod download \u0026\u0026 go mod verify \u0026\u0026 go build -v -o app",
                      "repository": "golang",
                      "tag": "alpine"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "GoLang",
                    "name": "GoLang",
                    "run": {
                      "command": "./app",
                      "repository": "golang",
                      "tag": "alpine"
                    }
                  },
                  {
                    "build": {
                      "command": "export GEM_HOME=/app/bundle; bundle install --jobs=4 --retry=3",
                      "repository": "ruby",
                      "tag": "2.7"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "Ruby",
                    "name": "Ruby",
                    "run": {
                      "command": "export GEM_HOME=/app/bundle; bundle exec ruby main.rb",
                      "repository": "ruby",
                      "tag": "2.7"
                    }
                  },
                  {
                    "build": {
                      "command": "echo 'Buildpack not required'",
                      "repository": "busybox",
                      "tag": "latest"
                    },
                    "fetch": {
                      "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                      "tag": "main"
                    },
                    "language": "HTML",
                    "name": "Static",
                    "run": {
                      "command": "supervisord",
                      "repository": "webdevops/nginx",
                      "tag": "alpine"
                    }
                  }
                ],
                "config": "",
                "github": {
                  "callbackUrl": "",
                  "enabled": false,
                  "id": "",
                  "org": "",
                  "secret": ""
                },
                "kubero": {
                  "context": "inClusterContext",
                  "namespace": "kubero",
                  "port": 3000
                },
                "oauth2": {
                  "authUrl": "",
                  "callbackUrl": "",
                  "enabled": false,
                  "id": "",
                  "name": "",
                  "secret": "",
                  "tokenUrl": ""
                },
                "podSizeList": [
                  {
                    "default": true,
                    "description": "Small (CPU: 0.25, Memory: 0.5Gi)",
                    "name": "small",
                    "resources": {
                      "limits": {
                        "cpu": "500m",
                        "memory": "1Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "0.5Gi"
                      }
                    }
                  },
                  {
                    "description": "Medium (CPU: 1, Memory: 2Gi)",
                    "name": "medium",
                    "resources": {
                      "limits": {
                        "cpu": "2000m",
                        "memory": "4Gi"
                      },
                      "requests": {
                        "cpu": "1000m",
                        "memory": "2Gi"
                      }
                    }
                  },
                  {
                    "active": false,
                    "description": "Large (CPU: 2, Memory: 4Gi)",
                    "name": "large",
                    "resources": {
                      "requests": {
                        "cpu": "2000m",
                        "memory": "4Gi"
                      }
                    }
                  }
                ]
              },
              "context": "inClusterContext",
              "debug": "",
              "namespace": "kubero",
              "sessionKey": "randomString",
              "webhook_url": "https://kubero.lacolhost.com:80/api/webhook"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 2000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoApp",
          "metadata": {
            "name": "kuberoapp"
          },
          "spec": {
            "addons": [
              {
                "env": [],
                "id": "mongodb-operator",
                "kind": "MongoDB",
                "resourceDefinitions": {
                  "MongoDB": {
                    "apiVersion": "opstreelabs.in/v1alpha1",
                    "kind": "MongoDB",
                    "metadata": {
                      "name": "mongodbinstanceasdf"
                    },
                    "spec": {
                      "kubernetesConfig": {
                        "image": "quay.io/opstree/mongo:v5.0.6",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                          "fsGroup": 1001
                        }
                      },
                      "mongoDBSecurity": {
                        "mongoDBAdminUser": "admin",
                        "secretRef": {
                          "key": "password",
                          "name": "mongodb-secret"
                        }
                      },
                      "storage": {
                        "accessModes": [
                          "ReadWriteOnce"
                        ],
                        "storageClass": "standard",
                        "storageSize": "1Gi"
                      }
                    }
                  },
                  "mongodbSecret": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                      "annotations": {
                        "meta.helm.sh/release-name": "test",
                        "meta.helm.sh/release-namespace": "kubero-dev"
                      },
                      "labels": {
                        "app.kubernetes.io/managed-by": "Kubero"
                      },
                      "name": "mongodb-secret"
                    },
                    "stringData": {
                      "password": "test"
                    },
                    "type": "Opaque"
                  }
                },
                "version": {
                  "installed": "0.3.0"
                }
              }
            ],
            "affinity": {},
            "autodeploy": false,
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "branch": "master",
            "cronjobs": [
              {
                "command": [
                  "/bin/sh",
                  "-c",
                  "date; echo Hello from the Kubernetes cluster"
                ],
                "env": [],
                "image": "busybox:1.28",
                "name": "cronjob-sample",
                "restartPolicy": "OnFailure",
                "schedule": "* */6 * * *"
              }
            ],
            "deploymentstrategy": "git",
            "envVars": [
              {
                "name": "EXAMPLE",
                "value": "foo"
              },
              {
                "name": "BAR",
                "value": 3000
              }
            ],
            "extraVolumes": [],
            "fullnameOverride": "",
            "gitrepo": {
              "admin": false,
              "clone_url": "https://github.com/foo/bar.git",
              "ssh_url": "git@github.com:foo/bar.git"
            },
            "image": {
              "build": {
                "command": "npm install",
                "repository": "node",
                "securityContext": {
                  "readOnlyRootFilesystem": false
                },
                "tag": "latest"
              },
              "containerPort": 8080,
              "fetch": {
                "repository": "ghcr.io/kubero-dev/buildpacks/fetch",
                "securityContext": {
                  "readOnlyRootFilesystem": false
                },
                "tag": "main"
              },
              "pullPolicy": "Always",
              "repository": "ghcr.io/kubero-dev/docker-images/node",
              "run": {
                "command": "node index.js",
                "readOnlyAppStorage": true,
                "repository": "node",
                "securityContext": {
                  "readOnlyRootFilesystem": true
                },
                "tag": "latest"
              },
              "tag": "main"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "className": "",
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "ImplementationSpecific"
                    }
                  ]
                }
              ],
              "tls": []
            },
            "name": "kuberoapp",
            "nameOverride": "",
            "nodeSelector": {},
            "phase": "production",
            "pipeline": "kuberopipeline",
            "podAnnotations": {},
            "podSecurityContext": {},
            "podsize": {
              "default": true,
              "description": "Small (CPU: 0.25, Memory: 0.5Gi)",
              "name": "small",
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "0.5Gi"
                }
              }
            },
            "ref": "refs/heads/dummy-pr",
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 80,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": [],
            "web": {
              "autoscaling": {
                "maxReplicas": 100,
                "minReplicas": 1,
                "targetCPUUtilizationPercentage": 80,
                "targetMemoryUtilizationPercentage": 80
              },
              "replicaCount": 1
            },
            "worker": {
              "autoscaling": {
                "maxReplicas": 100,
                "minReplicas": 1,
                "targetCPUUtilizationPercentage": 80,
                "targetMemoryUtilizationPercentage": 80
              },
              "replicaCount": 1
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoCouchDB",
          "metadata": {
            "name": "kuberocouchdb-sample"
          },
          "spec": {
            "couchdb": {
              "adminHash": "-pbkdf2-this_is_not_necessarily_secure_either",
              "adminPassword": "this_is_not_secure",
              "adminUsername": "admin",
              "autoSetup": {
                "enabled": false
              },
              "clusterSize": 3,
              "cookieAuthSecret": "neither_is_this",
              "couchdbConfig": {
                "couchdb": {
                  "uuid": "randomstring"
                }
              },
              "enableSearch": false,
              "persistentVolume": {
                "enabled": true,
                "size": "10Gi",
                "storageClass": "standard"
              }
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoElasticsearch",
          "metadata": {
            "name": "kuberoelasticsearch-sample"
          },
          "spec": {
            "elasticsearch": {
              "data": {
                "persistence": {
                  "size": "8Gi"
                },
                "replicaCount": 2
              },
              "global": {
                "storageClass": ""
              },
              "ingest": {
                "enabled": true,
                "replicaCount": 2
              },
              "master": {
                "persistence": {
                  "size": "8Gi"
                },
                "replicaCount": 2
              },
              "security": {
                "elasticPassword": "",
                "tls": {
                  "verificationMode": "none"
                }
              }
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoKafka",
          "metadata": {
            "name": "kuberokafka-sample"
          },
          "spec": {
            "kafka": {
              "global": {
                "storageClass": ""
              },
              "persistence": {
                "size": "8Gi"
              }
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoMongoDB",
          "metadata": {
            "name": "kuberomongodb-sample"
          },
          "spec": {
            "mongodb": {
              "auth": {
                "databases": [
                  "kubero"
                ],
                "passwords": [
                  "kubero"
                ],
                "rootPassword": "",
                "rootUser": "root",
                "usernames": [
                  "kubero"
                ]
              },
              "directoryPerDB": false,
              "disableJavascript": false,
              "global": {
                "storageClass": ""
              },
              "persistence": {
                "size": "8Gi"
              },
              "replicaCount": 2
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoMysql",
          "metadata": {
            "name": "kuberomysql"
          },
          "spec": {
            "mysql": {
              "auth": {
                "createDatabase": false,
                "database": "my_database",
                "password": "example",
                "rootPassword": "random",
                "username": "example"
              },
              "global": {
                "storageClass": ""
              },
              "primary": {
                "persistence": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "8Gi"
                }
              }
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoPipeline",
          "metadata": {
            "name": "kuberopipeline"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "nginx",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "className": "",
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "ImplementationSpecific"
                    }
                  ]
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 80,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoPostgresql",
          "metadata": {
            "name": "kuberopostgresql-sample"
          },
          "spec": {
            "postgresql": {
              "global": {
                "postgresql": {
                  "auth": {
                    "database": "",
                    "password": "",
                    "postgresPassword": "",
                    "username": ""
                  }
                },
                "storageClass": ""
              },
              "primary": {
                "persistence": {
                  "size": "8Gi"
                }
              }
            }
          }
        },
        {
          "apiVersion": "application.kubero.dev/v1alpha1",
          "kind": "KuberoRedis",
          "metadata": {
            "name": "kuberoredis-sample"
          },
          "spec": {
            "redis": {
              "architecture": "replication",
              "global": {
                "redis": {
                  "password": ""
                },
                "storageClass": ""
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery
    certified: "false"
    containerImage: ghcr.io/kubero-dev/kubero-operator/kuberoapp:v0.0.99
    description: Kubero is a GitOps continuous delivery tool for Kubernetes.
    operators.operatorframework.io/builder: operator-sdk-v1.24.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/kubero-dev/kubero
    support: Kubero Community
  name: kubero-operator.v0.0.99
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Creates a App in a Kubero Pipeline
      displayName: Kubero App
      kind: KuberoApp
      name: kuberoapps.application.kubero.dev
      version: v1alpha1
    - description: Apache CouchDB is a database featuring seamless multi-master sync,
        that scales from big data to mobile, with an intuitive HTTP/JSON API and designed
        for reliability.
      displayName: Kubero CouchDB
      kind: KuberoCouchDB
      name: kuberocouchdbs.application.kubero.dev
      version: v1alpha1
    - description: Elasticsearch is a distributed search and analytics engine. It
        is used for web search, log monitoring, and real-time analytics. Ideal for
        Big Data applications.
      displayName: Kubero Elasticsearch
      kind: KuberoElasticsearch
      name: kuberoelasticsearches.application.kubero.dev
      version: v1alpha1
    - description: Starts the Kubero UI and API
      displayName: Kubero UI and API
      kind: Kubero
      name: kuberoes.application.kubero.dev
      version: v1alpha1
    - description: Apache Kafka is a distributed streaming platform designed to build
        real-time pipelines and can be used as a message broker or as a replacement
        for a log aggregation solution for big data applications.
      displayName: Kubero Kafka
      kind: KuberoKafka
      name: kuberokafkas.application.kubero.dev
      version: v1alpha1
    - description: MongoDB(R) is a relational open source NoSQL database. Easy to
        use, it stores data in JSON-like documents. Automated scalability and high-performance.
        Ideal for developing cloud native applications.
      displayName: Kubero MongoDB
      kind: KuberoMongoDB
      name: kuberomongodbs.application.kubero.dev
      version: v1alpha1
    - description: MySQL is a fast, reliable, scalable, and easy to use open source
        relational database system. Designed to handle mission-critical, heavy-load
        production applications.
      displayName: Kubero Mysql
      kind: KuberoMysql
      name: kuberomysqls.application.kubero.dev
      version: v1alpha1
    - description: Creates a Kubero Pipeline
      displayName: Kubero Pipeline
      kind: KuberoPipeline
      name: kuberopipelines.application.kubero.dev
      version: v1alpha1
    - description: PostgreSQL (Postgres) is an open source object-relational database
        known for reliability and data integrity. ACID-compliant, it supports foreign
        keys, joins, views, triggers and stored procedures.
      displayName: Kubero Postgresql
      kind: KuberoPostgresql
      name: kuberopostgresqls.application.kubero.dev
      version: v1alpha1
    - description: Redis(R) is an open source, advanced key-value store. It is often
        referred to as a data structure server since keys can contain strings, hashes,
        lists, sets and sorted sets.
      displayName: Kubero Redis
      kind: KuberoRedis
      name: kuberoredis.application.kubero.dev
      version: v1alpha1
  description: |-
    Kubero is a Internal Developer Platform (IDP) that brings the convinience of Heroku/platform.sh/vercel/Netlify to your kubernetes cluster. Your developers should not need to worry about the underlying infrastructure and deployment. It enables you to deploy your applications with a few clicks. It also provides a API and CLI to manage your applications.

    ## Features
    - Automated GitOps deployment and Pull Request previews
    - Integrated CI/CD

    ## Supported Git Providers
    - Gitea
    - Forgejo (WIP)
    - OneDev (WIP)
    - Gogs
    - Github
    - Gitlab
    - Bitbucket

    ## Tested languages/frameworks
    Basicly everything that can be shipped in a single container. Kubero uses official images to build and run the apps. But they can be replaced or extended to fit your needs.

    - GoLang (including Hugo, gin-gonic)
    - Python (including Flask)
    - JavaScript/NodeJS
    - PHP (including Laravel)
    - Ruby (including Rails)
    - Static HTML
    - Rust (including Rocket)
  displayName: Kubero
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB3aWR0aD0iMTM2bW0iCiAgIGhlaWdodD0iMTM2bW0iCiAgIHZpZXdCb3g9IjAgMCAxMzYgMTM2IgogICB2ZXJzaW9uPSIxLjEiCiAgIGlkPSJzdmc0NzQ0IgogICBpbmtzY2FwZTp2ZXJzaW9uPSIxLjIuMSAoOWM2ZDQxZTQsIDIwMjItMDctMTQpIgogICBzb2RpcG9kaTpkb2NuYW1lPSJrdWJlcm8tbG9nby1oYXQtc3F1YXJlLWJvbGQuc3ZnIgogICBpbmtzY2FwZTpleHBvcnQtZmlsZW5hbWU9Imt1YmVyby1sb2dvLWhhdC1zcXVhcmUtbmVnYXRpdmUtYm9sZC5wbmciCiAgIGlua3NjYXBlOmV4cG9ydC14ZHBpPSI4MCIKICAgaW5rc2NhcGU6ZXhwb3J0LXlkcGk9IjgwIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICBpZD0ibmFtZWR2aWV3NDc0NiIKICAgICBwYWdlY29sb3I9IiNmZmZmZmYiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgYm9yZGVyb3BhY2l0eT0iMS4wIgogICAgIGlua3NjYXBlOnNob3dwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgIGlua3NjYXBlOnBhZ2VjaGVja2VyYm9hcmQ9IjAiCiAgICAgaW5rc2NhcGU6ZGVza2NvbG9yPSIjZDFkMWQxIgogICAgIGlua3NjYXBlOmRvY3VtZW50LXVuaXRzPSJtbSIKICAgICBzaG93Z3JpZD0iZmFsc2UiCiAgICAgaW5rc2NhcGU6em9vbT0iMS40ODgiCiAgICAgaW5rc2NhcGU6Y3g9IjE4OS44NTIxNSIKICAgICBpbmtzY2FwZTpjeT0iMjI1LjgwNjQ1IgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTM4NyIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMDkyIgogICAgIGlua3NjYXBlOndpbmRvdy14PSIzNjYiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9IjI5MiIKICAgICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIwIgogICAgIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9ImxheWVyMSIgLz4KICA8ZGVmcwogICAgIGlkPSJkZWZzNDc0MSIgLz4KICA8ZwogICAgIGlua3NjYXBlOmxhYmVsPSJFYmVuZSAxIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiCiAgICAgaWQ9ImxheWVyMSI+CiAgICA8cGF0aAogICAgICAgc3R5bGU9ImRpc3BsYXk6aW5saW5lO2ZpbGw6Izc0NzNiZjtmaWxsLW9wYWNpdHk6MTtzdHJva2U6Izc0NzNiZjtzdHJva2Utd2lkdGg6My45NzUyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDozLjI7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICBkPSJtIDk4LjUwODcxMyw5Ni4wMzAzNjIgYyAtMi40NDQyNywwLjc2OTIyNCAtNy42NzI0ODIsMS41NDczNzkgLTExLjczODIyMiwxLjc0NzEyNyAtOC42OTkyODYsMC40MjczNzMgLTE1LjEwMDMwNywtMC42NzE0NyAtMzEuOTA5NjEyLC01LjQ3NzkxMSAtMTUuMjQyMzQyLC00LjM1ODQwOCAtMjIuNTExNjQ2LC01LjgxNDE5MyAtMjcuNjMwNjQ1LC01LjUzMzUzNSAtNi44MDg2NjYsMC4zNzMzNDUgLTcuMjQ2MDU0LDMuNzkxMjM4IC0wLjc1ODUzOSw1LjkyNzYwMiAxLjI4NjI5NCwwLjQyMzU4OSA2LjQ5MzYxLDAuOTk5NTA2IDExLjU3MTgwNywxLjI3OTc2IGwgOS4yMzMwNjcsMC41MDk2MjIgLTQuMjg2NzksMC45Nzk2NzIgYyAtNS4xNTA4NzYsMS4xNzcxNTkgLTE1LjIxMTYxMiwxLjU4OTEyNCAtMTguNjExNjAzLDAuNzYyMDk2IC0zLjczNjY1LC0wLjkwODkxNSAtNi40NDk1ODQsLTMuODg1ODY2IC02LjQ0OTU4NCwtNy4wNzcxOTEgMCwtMy40MDk5MDggMC45MTAxODksLTUuMjY5OTExIDMuMjYwMjY4LC02LjY2MjQ4NyA1LjA5NjQ2NiwtMy4wMTk5NjMgMTQuOTQ5NjMsLTEuOTI2OTQyIDM2Ljc5OTMzOSw0LjA4MjE3NyAxOC43NzE3MDgsNS4xNjI2MTkgMjEuNDA3NjYsNS41OTg5NzIgMzEuMDk2NDEsNS4xNDc4NDggNi45OTQ3MjcsLTAuMzI1NzAzIDkuMzAxMzgsLTAuNzY0MjkgMTQuNTMyODYxLC0yLjc2MzMyNCA3LjQ1MzAxLC0yLjg0Nzk2MiAxMi4xOTM1OCwtNS44Mzk1MTMgMTYuMDM3ODksLTEwLjEyMDgwNCAyLjcxMTg3LC0zLjAyMDE2IDUuNDE5MzYsLTguMTE4OTM4IDcuMDE1NiwtMTIuNDg2ODI5IDAuMTUyMTQsLTAuNDE2MjYyIDEuMDc5OCwtMS4xNDY5NDkgLTMuOTQzMDgsMS4zNTc0NDIgLTYuNjU4MiwzLjMxOTcxNyAtMTQuNzcwMzIsNC44NTYyODEgLTI3LjIzNDk5MSw0LjMxMTQ2OCBDIDgzLjkzMzEzMyw3MS41MDc4NzEgNzguMTQ0NjYsNzAuMzg5OTk3IDYyLjA4MTEzNCw2NS41NjA4MzQgMjkuNDM4ODIxLDU1Ljc0NzU2OSAxNC43MTk3NDMsNTUuNjEzNDYzIDcuNDc4OTM4LDY1LjA2MzM2MiBjIC0yLjY1ODQ4OTQsMy40Njk1NiAtMi42OTYzNzgzLDIuNDA4NDc3IC0wLjA2MDYyMiwtMS42OTg0MTcgMS4zNTY0NTI0LC0yLjExMzU4MSAzLjM2MTAwMiwtMy44OTU4MzUgNi4xMDA0MTUsLTUuNDIzOTE1IDEwLjA5MzY0NywtNS42MzAzODMgMjUuMTYwNjExLC00Ljg4MTQ2NCA1Mi44ODM0OTMsMi42Mjg2NTIgOC4zNzYxMTQsMi4yNjkwNzkgMjEuNDk0OTQzLDUuMDQzNzQ4IDIxLjg3NzM0NCw0LjYyNzE1NCAwLjEwNzcwNiwtMC4xMTc0NDEgLTQuOTkxOTY3LC0xMC41MDMxMzEgLTExLjQ2NzE5OSwtMjMuMzUzNTIzIC0yLjg0MDQwOCwtNS42MzY5MDMgLTMuMDQxNjk4LC01Ljg1NTgxNCAtNS4zNjE2OCwtNS44MzA0MyAtMS4zMjU3NTgsMC4wMTMzNSAtNC42MzYzMDcsMC40ODQ5OTYgLTcuMzU2NzQ4LDEuMDQ1NTEzIEMgNTIuOTQ2ODE0LDM5LjM1NTE5IDUwLjkxNjE1LDQwLjcyMzgxMiA0OC44NTI5OCw0Ny4zMzA1MDcgbCAtMS4yOTU0MTEsNC4xNDgxOCAwLjIyMDA0NCwtNS4wOTI5MjEgYyAwLjI3OTI3NCwtNi40NjM3MDYgMS41MTc2MzQsLTguNTAyNzY1IDcuMTA5NjQzLC0xMS43MDY1MDQgOC4yMjU5NjMsLTQuNzEyNzg4IDE5LjYyNzg5MywtNi4zOTk4NjIgMjIuMzI5NjM2LC0zLjMwMzk4IDMuMTI0OTEsMy41ODA4MTIgNy43Njc1NDMsMTUuNjkzMDMxIDEwLjYzODU1NCwyNy43NTUyMTQgbCAxLjQ2MTUxNyw2LjE0MDM2NCAzLjM4MTUwNywwLjQ2NTU2NyBjIDExLjcxMDI3LDEuNjEyMzE3IDI3LjM1OTE1LC0wLjkxNCAzMS4yNzMwMywtNS4wNDg2NzQgNC45NzIyOCwtNS4yNTI3OCAtMi45ODY0MywtOC43MzI1NTQgLTI0LjI4MjE1MywtMTAuNjE2ODEgTCA4OC44MjUzOTgsNDkuMTA5NzM0IDk1Ljk5OTAzLDQ4LjQ5NzAxOCBjIDguMzk4NTMsLTAuNzE3MzQ2IDIyLjc4OTk2LC0wLjE0ODA0NiAyNi4yMDg5NSwxLjAzNzAyOCA2LjAwMjM0LDIuMDgwMjQ2IDguODQ1NzQsNi4zMzcxNSA3LjI0ODI3LDEwLjg1MTQ1OCAtMC40NzI3MSwxLjMzNTkxNyAtMS41MjU2Miw1LjEwOTQ4OSAtMi42NTczNSw4LjI0NjE2IC0yLjk5NDEzLDguMjk4NDI1IC01LjM5MDQ4LDEzLjMzNjA4OCAtOS4yODc1OSwxOC4wMzI2NDIgLTAuOTM1OTYsMS4xMjc5NTIgLTIuMzIxMzQsMi44NjAwNzEgLTUuNzUzNzEsNC44MDMzMTQgLTcuNzgsMy42OTQ0MTkgLTkuOTIwNjgsMy43NjgyMTEgLTEzLjI0ODg4Nyw0LjU2Mjc0MiB6IgogICAgICAgaWQ9InBhdGgxNjYtNS04IgogICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjc3Nzc3Njc3Nzc3Nzc3Nzc3Nzc3Nzc3NzY3NzY3Nzc3Njc3NzY3Njc3NzY2MiCiAgICAgICBpbmtzY2FwZTpsYWJlbD0iaGF0IiAvPgogIDwvZz4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - clusterroles
          - clusterrolebindings
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberoapps
          - kuberoapps/status
          - kuberoapps/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - opstreelabs.in
          resources:
          - mongodbs
          verbs:
          - '*'
        - apiGroups:
          - redis.redis.opstreelabs.in
          resources:
          - redis
          - redisclusters
          verbs:
          - '*'
        - apiGroups:
          - postgres-operator.crunchydata.com
          resources:
          - postgresclusters
          verbs:
          - '*'
        - apiGroups:
          - minio.min.io
          resources:
          - tenants
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberoes
          - kuberoes/status
          - kuberoes/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          - persistentvolumeclaims/finalizers
          - persistentvolumes/finalizers
          verbs:
          - '*'
        - apiGroups:
          - operators.coreos.com
          resources:
          - clusterserviceversions
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberopipelines
          - kuberopipelines/status
          - kuberopipelines/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberomysqls
          - kuberomysqls/status
          - kuberomysqls/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberopostgresqls
          - kuberopostgresqls/status
          - kuberopostgresqls/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberoredis
          - kuberoredis/status
          - kuberoredis/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberomongodbs
          - kuberomongodbs/status
          - kuberomongodbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberoelasticsearches
          - kuberoelasticsearches/status
          - kuberoelasticsearches/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberocouchdbs
          - kuberocouchdbs/status
          - kuberocouchdbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - application.kubero.dev
          resources:
          - kuberokafkas
          - kuberokafkas/status
          - kuberokafkas/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - persistentvolumeclaims
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - job
          resources:
          - batch
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: kubero-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: kubero-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=kubero-operator
                image: ghcr.io/kubero-dev/kubero-operator/kuberoapp:v0.0.99
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: "1"
                    memory: 1Gi
                  requests:
                    cpu: 100m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: kubero-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: kubero-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - gitops
  - devops
  - workflow
  links:
  - name: Kubero Operator
    url: https://github.com/kubero-dev/kubero-operator
  - name: Kubero UI
    url: https://github.com/kubero-dev/kubero
  maintainers:
  - email: gicara+kubero@gmail.com
    name: Gianni Carafa
  maturity: alpha
  provider:
    name: kubero
    url: https://github.com/kubero-dev/
  version: 0.0.99
