apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: brokers.mq.services.k8s.aws
spec:
  group: mq.services.k8s.aws
  names:
    kind: Broker
    listKind: BrokerList
    plural: brokers
    singular: broker
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Broker is the Schema for the Brokers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BrokerSpec defines the desired state of Broker.
            properties:
              authenticationStrategy:
                description: |-
                  Optional. The authentication strategy used to secure the broker. The default
                  is SIMPLE.
                type: string
              autoMinorVersionUpgrade:
                description: |-
                  Enables automatic upgrades to new patch versions for brokers as new versions
                  are released and supported by Amazon MQ. Automatic upgrades occur during
                  the scheduled maintenance window or after a manual broker reboot. Set to
                  true by default, if no value is specified.

                  Must be set to true for ActiveMQ brokers version 5.18 and above and for RabbitMQ
                  brokers version 3.13 and above.
                type: boolean
              configuration:
                description: A list of information about the configuration.
                properties:
                  id:
                    type: string
                  revision:
                    format: int64
                    type: integer
                type: object
              creatorRequestID:
                description: |-
                  The unique ID that the requester receives for the created broker. Amazon
                  MQ passes your ID with the API action.

                  We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId.
                  You may omit the creatorRequestId if your application doesn't require idempotency.
                type: string
              deploymentMode:
                description: Required. The broker's deployment mode.
                type: string
              encryptionOptions:
                description: Encryption options for the broker.
                properties:
                  kmsKeyID:
                    type: string
                  useAWSOwnedKey:
                    type: boolean
                type: object
              engineType:
                description: |-
                  Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ
                  and RABBITMQ.
                type: string
              engineVersion:
                description: |-
                  The broker engine version. Defaults to the latest available version for the
                  specified broker engine type. For more information, see the ActiveMQ version
                  management (https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/activemq-version-management.html)
                  and the RabbitMQ version management (https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/rabbitmq-version-management.html)
                  sections in the Amazon MQ Developer Guide.
                type: string
              hostInstanceType:
                description: Required. The broker's instance type.
                type: string
              ldapServerMetadata:
                description: |-
                  Optional. The metadata of the LDAP server used to authenticate and authorize
                  connections to the broker. Does not apply to RabbitMQ brokers.
                properties:
                  hosts:
                    items:
                      type: string
                    type: array
                  roleBase:
                    type: string
                  roleName:
                    type: string
                  roleSearchMatching:
                    type: string
                  roleSearchSubtree:
                    type: boolean
                  serviceAccountPassword:
                    type: string
                  serviceAccountUsername:
                    type: string
                  userBase:
                    type: string
                  userRoleName:
                    type: string
                  userSearchMatching:
                    type: string
                  userSearchSubtree:
                    type: boolean
                type: object
              logs:
                description: Enables Amazon CloudWatch logging for brokers.
                properties:
                  audit:
                    type: boolean
                  general:
                    type: boolean
                type: object
              maintenanceWindowStartTime:
                description: The parameters that determine the WeeklyStartTime.
                properties:
                  dayOfWeek:
                    type: string
                  timeOfDay:
                    type: string
                  timeZone:
                    type: string
                type: object
              name:
                description: |-
                  Required. The broker's name. This value must be unique in your Amazon Web
                  Services account, 1-50 characters long, must contain only letters, numbers,
                  dashes, and underscores, and must not contain white spaces, brackets, wildcard
                  characters, or special characters.

                  Do not add personally identifiable information (PII) or other confidential
                  or sensitive information in broker names. Broker names are accessible to
                  other Amazon Web Services services, including CloudWatch Logs. Broker names
                  are not intended to be used for private or sensitive data.
                type: string
              publiclyAccessible:
                description: |-
                  Enables connections from applications outside of the VPC that hosts the broker's
                  subnets. Set to false by default, if no value is provided.
                type: boolean
              securityGroupRefs:
                items:
                  description: "AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference\ntype to provide more user friendly syntax
                    for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                    \ name: my-api"
                  properties:
                    from:
                      description: |-
                        AWSResourceReference provides all the values necessary to reference another
                        k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                  type: object
                type: array
              securityGroups:
                description: |-
                  The list of rules (1 minimum, 125 maximum) that authorize connections to
                  brokers.
                items:
                  type: string
                type: array
              storageType:
                description: The broker's storage type.
                type: string
              subnetIDs:
                description: |-
                  The list of groups that define which subnets and IP ranges the broker can
                  use from different Availability Zones. If you specify more than one subnet,
                  the subnets must be in different Availability Zones. Amazon MQ will not be
                  able to create VPC endpoints for your broker with multiple subnets in the
                  same Availability Zone. A SINGLE_INSTANCE deployment requires one subnet
                  (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ Amazon MQ for
                  ActiveMQ deployment requires two subnets. A CLUSTER_MULTI_AZ Amazon MQ for
                  RabbitMQ deployment has no subnet requirements when deployed with public
                  accessibility. Deployment without public accessibility requires at least
                  one subnet.

                  If you specify subnets in a shared VPC (https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html)
                  for a RabbitMQ broker, the associated VPC to which the specified subnets
                  belong must be owned by your Amazon Web Services account. Amazon MQ will
                  not be able to create VPC endpoints in VPCs that are not owned by your Amazon
                  Web Services account.
                items:
                  type: string
                type: array
              subnetRefs:
                items:
                  description: "AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference\ntype to provide more user friendly syntax
                    for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                    \ name: my-api"
                  properties:
                    from:
                      description: |-
                        AWSResourceReference provides all the values necessary to reference another
                        k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                description: Create tags when creating the broker.
                type: object
              users:
                description: |-
                  The list of broker users (persons or applications) who can access queues
                  and topics. For Amazon MQ for RabbitMQ brokers, one and only one administrative
                  user is accepted and created when a broker is first provisioned. All subsequent
                  broker users are created by making RabbitMQ API calls directly to brokers
                  or via the RabbitMQ web console.
                items:
                  description: |-
                    A user associated with the broker. For Amazon MQ for RabbitMQ brokers, one
                    and only one administrative user is accepted and created when a broker is
                    first provisioned. All subsequent broker users are created by making RabbitMQ
                    API calls directly to brokers or via the RabbitMQ web console.
                  properties:
                    consoleAccess:
                      type: boolean
                    groups:
                      items:
                        type: string
                      type: array
                    password:
                      description: |-
                        SecretKeyReference combines a k8s corev1.SecretReference with a
                        specific key within the referred-to Secret
                      properties:
                        key:
                          description: Key is the key within the secret
                          type: string
                        name:
                          description: name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    username:
                      type: string
                  type: object
                type: array
            required:
            - deploymentMode
            - engineType
            - hostInstanceType
            - name
            - publiclyAccessible
            - users
            type: object
          status:
            description: BrokerStatus defines the observed state of Broker
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              brokerID:
                description: The unique ID that Amazon MQ generates for the broker.
                type: string
              brokerInstances:
                description: A list of information about allocated brokers.
                items:
                  description: Returns information about all brokers.
                  properties:
                    consoleURL:
                      type: string
                    endpoints:
                      items:
                        type: string
                      type: array
                    ipAddress:
                      type: string
                  type: object
                type: array
              brokerState:
                description: The broker's status.
                type: string
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
