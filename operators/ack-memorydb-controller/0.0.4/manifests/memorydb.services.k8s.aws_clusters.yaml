apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusters.memorydb.services.k8s.aws
spec:
  group: memorydb.services.k8s.aws
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "ClusterSpec defines the desired state of Cluster. \n Contains
              all of the attributes of a specific cluster."
            properties:
              aclName:
                description: The name of the Access Control List to associate with
                  the cluster.
                type: string
              autoMinorVersionUpgrade:
                description: When set to true, the cluster will automatically receive
                  minor engine version upgrades after launch.
                type: boolean
              description:
                description: An optional description of the cluster.
                type: string
              engineVersion:
                description: The version number of the Redis engine to be used for
                  the cluster.
                type: string
              kmsKeyID:
                description: The ID of the KMS key used to encrypt the cluster.
                type: string
              maintenanceWindow:
                description: Specifies the weekly time range during which maintenance
                  on the cluster is performed. It is specified as a range in the format
                  ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
                  window is a 60 minute period.
                type: string
              name:
                description: The name of the cluster. This value must be unique as
                  it also serves as the cluster identifier.
                type: string
              nodeType:
                description: The compute and memory capacity of the nodes in the cluster.
                type: string
              numReplicasPerShard:
                description: The number of replicas to apply to each shard. The default
                  value is 1. The maximum is 5.
                format: int64
                type: integer
              numShards:
                description: The number of shards the cluster will contain. The default
                  value is 1.
                format: int64
                type: integer
              parameterGroupName:
                description: The name of the parameter group associated with the cluster.
                type: string
              port:
                description: The port number on which each of the nodes accepts connections.
                format: int64
                type: integer
              securityGroupIDs:
                description: A list of security group names to associate with this
                  cluster.
                items:
                  type: string
                type: array
              snapshotARNs:
                description: A list of Amazon Resource Names (ARN) that uniquely identify
                  the RDB snapshot files stored in Amazon S3. The snapshot files are
                  used to populate the new cluster. The Amazon S3 object name in the
                  ARN cannot contain any commas.
                items:
                  type: string
                type: array
              snapshotName:
                description: The name of a snapshot from which to restore data into
                  the new cluster. The snapshot status changes to restoring while
                  the new cluster is being created.
                type: string
              snapshotRetentionLimit:
                description: The number of days for which MemoryDB retains automatic
                  snapshots before deleting them. For example, if you set SnapshotRetentionLimit
                  to 5, a snapshot that was taken today is retained for 5 days before
                  being deleted.
                format: int64
                type: integer
              snapshotWindow:
                description: "The daily time range (in UTC) during which MemoryDB
                  begins taking a daily snapshot of your shard. \n Example: 05:00-09:00
                  \n If you do not specify this parameter, MemoryDB automatically
                  chooses an appropriate time range."
                type: string
              snsTopicARN:
                description: The Amazon Resource Name (ARN) of the Amazon Simple Notification
                  Service (SNS) topic to which notifications are sent.
                type: string
              subnetGroupName:
                description: The name of the subnet group to be used for the cluster.
                type: string
              tags:
                description: 'A list of tags to be added to this resource. Tags are
                  comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue.
                  You can include multiple tags as shown following: Key=myKey, Value=myKeyValue
                  Key=mySecondKey, Value=mySecondKeyValue.'
                items:
                  description: A tag that can be added to an MemoryDB resource. Tags
                    are composed of a Key/Value pair. You can use tags to categorize
                    and track all your MemoryDB resources. When you add or remove
                    tags on clusters, those actions will be replicated to all nodes
                    in the cluster. A tag with a null Value is permitted. For more
                    information, see Tagging your MemoryDB resources (https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging-resources.html)
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              tlsEnabled:
                description: A flag to enable in-transit encryption on the cluster.
                type: boolean
            required:
            - aclName
            - name
            - nodeType
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              allowedScaleDownNodeTypes:
                description: A list node types which you can use to scale down your
                  cluster.
                items:
                  type: string
                type: array
              allowedScaleUpNodeTypes:
                description: A list node types which you can use to scale up your
                  cluster.
                items:
                  type: string
                type: array
              availabilityMode:
                description: Indicates if the cluster has a Multi-AZ configuration
                  (multiaz) or not (singleaz).
                type: string
              clusterEndpoint:
                description: The cluster's configuration endpoint
                properties:
                  address:
                    type: string
                  port:
                    format: int64
                    type: integer
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              enginePatchVersion:
                description: The Redis engine patch version used by the cluster
                type: string
              numberOfShards:
                description: The number of shards in the cluster
                format: int64
                type: integer
              parameterGroupStatus:
                description: The status of the parameter group used by the cluster,
                  for example 'active' or 'applying'.
                type: string
              pendingUpdates:
                description: A group of settings that are currently being applied.
                properties:
                  acls:
                    description: The status of the ACL update
                    properties:
                      aclToApply:
                        type: string
                    type: object
                  resharding:
                    description: The status of the online resharding
                    properties:
                      slotMigration:
                        description: Represents the progress of an online resharding
                          operation.
                        properties:
                          progressPercentage:
                            type: number
                        type: object
                    type: object
                  serviceUpdates:
                    items:
                      description: Update action that has yet to be processed for
                        the corresponding apply/stop request
                      properties:
                        serviceUpdateName:
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                type: object
              securityGroups:
                description: A list of security groups used by the cluster
                items:
                  description: Represents a single security group and its status.
                  properties:
                    securityGroupID:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              shards:
                description: A list of shards that are members of the cluster.
                items:
                  description: Represents a collection of nodes in a cluster. One
                    node in the node group is the read/write primary node. All the
                    other nodes are read-only Replica nodes.
                  properties:
                    name:
                      type: string
                    nodes:
                      items:
                        description: Represents an individual node within a cluster.
                          Each node runs its own instance of the cluster's protocol-compliant
                          caching software.
                        properties:
                          availabilityZone:
                            type: string
                          createTime:
                            format: date-time
                            type: string
                          endpoint:
                            description: Represents the information required for client
                              programs to connect to the cluster and its nodes.
                            properties:
                              address:
                                type: string
                              port:
                                format: int64
                                type: integer
                            type: object
                          name:
                            type: string
                          status:
                            type: string
                        type: object
                      type: array
                    numberOfNodes:
                      format: int64
                      type: integer
                    slots:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              snsTopicStatus:
                description: The SNS topic must be in Active status to receive notifications
                type: string
              status:
                description: The status of the cluster. For example, Available, Updating,
                  Creating.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
