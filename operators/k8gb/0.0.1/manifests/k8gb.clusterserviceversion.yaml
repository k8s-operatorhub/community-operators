apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[{"apiVersion":"k8gb.absa.oss/v1beta1","kind":"Gslb","metadata":{"name":"test-gslb-failover","namespace":"test-gslb"},"spec":{"ingress":{"rules":[{"host":"failover.cloud.example.com","http":{"paths":[{"backend":{"serviceName":"frontend-podinfo","servicePort":"http"},"path":"/"}]}}]},"strategy":{"type":"failover","primaryGeoTag":"eu"}}},{"apiVersion":"k8gb.absa.oss/v1beta1","kind":"Gslb","metadata":{"name":"test-gslb","namespace":"test-gslb"},"spec":{"ingress":{"rules":[{"host":"notfound.cloud.example.com","http":{"paths":[{"backend":{"serviceName":"non-existing-app","servicePort":"http"},"path":"/"}]}},{"host":"unhealthy.cloud.example.com","http":{"paths":[{"backend":{"serviceName":"unhealthy-app","servicePort":"http"},"path":"/"}]}},{"host":"roundrobin.cloud.example.com","http":{"paths":[{"backend":{"serviceName":"frontend-podinfo","servicePort":"http"},"path":"/"}]}}]},"strategy":{"type":"roundRobin","splitBrainThresholdSeconds":300,"dnsTtlSeconds":30}}}]'
    capabilities: Full Lifecycle
    categories: Networking
    certified: "false"
    containerImage: absaoss/k8gb:v0.8.2
    createdAt: "2021-09-24 12:00:00"
    description: A cloud native Kubernetes Global Balancer
    operatorframework.io/suggested-namespace: k8gb
    operators.operatorframework.io/builder: operator-sdk-v1.11.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/k8gb/k8gb
    support: jiri.kremser@gmail.com
  name: k8gb.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - kind: DNSEndpoint
        name: dnsendpoints.externaldns.k8s.io
        version: v1alpha1
      - kind: Gslb
        name: gslbs.k8gb.absa.oss
        version: v1beta1
  description: |
    **A cloud native Kubernetes Global Balancer**

    A Global Service Load Balancing solution with a focus on having cloud native qualities and work natively in a Kubernetes context.

    Key Differentiators:
     - Load balancing is based on timeproof DNS protocol which is perfect for global scope and extremely reliable
     - No dedicated management cluster and no single point of failure
     - Kubernetes native application health checks utilizing status of Liveness and Readiness probes for load balancing decisions
     - Configuration with a single Kubernetes CRD of `Gslb` kind

    Operator needs to be configured by setting couple of environment variables. This can be done by modifying
    the subscription yaml in the web ui or via kubectl. Here is an example of changing the `EDGE_DNS_ZONE`:

    ```yaml
    kind: Subscription
      ...
    spec:
      ...
      config:
        env:
        - name: CLUSTER_GEO_TAG
          value: us
        - name: EDGE_DNS_ZONE
          value: mycloud.example.com
          ...
     ```
     For more deployment variables see [helm code](https://github.com/k8gb-io/k8gb/blob/5beb6fc5244ef61c77fcbebb5243908ee77c615f/chart/k8gb/templates/operator.yaml#L53:L70).

     For more information see [k8gb.io](https://k8gb.io).
  displayName: k8gb
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - endpoints
                - services
                - pods
                - namespaces
              verbs:
                - list
                - watch
            - apiGroups:
                - discovery.k8s.io
              resources:
                - endpointslices
              verbs:
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - list
                - watch
            - apiGroups:
                - externaldns.k8s.io
              resources:
                - dnsendpoints
              verbs:
                - list
                - watch
          serviceAccountName: coredns
        - rules:
            - apiGroups:
                - ""
              resources:
                - endpoints
                - services
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - k8gb.absa.oss
              resources:
                - '*'
                - gslbs
              verbs:
                - '*'
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - externaldns.k8s.io
              resources:
                - dnsendpoints
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - list
          serviceAccountName: k8gb
      deployments:
        - name: k8gb-coredns
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/instance: k8gb
                app.kubernetes.io/name: coredns
            strategy:
              rollingUpdate:
                maxSurge: 25%
                maxUnavailable: 1
              type: RollingUpdate
            template:
              metadata:
                annotations:
                  checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
                labels:
                  app.kubernetes.io/instance: k8gb
                  app.kubernetes.io/name: coredns
                  k8gb-migrated-svc: "true"
              spec:
                containers:
                  - args:
                      - -conf
                      - /etc/coredns/Corefile
                    image: absaoss/k8s_crd:v0.0.6
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /health
                        port: 8080
                        scheme: HTTP
                      initialDelaySeconds: 60
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 5
                    name: coredns
                    ports:
                      - containerPort: 5353
                        name: udp-5353
                        protocol: UDP
                      - containerPort: 5353
                        name: tcp-5353
                        protocol: TCP
                    readinessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /ready
                        port: 8181
                        scheme: HTTP
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 5
                    resources:
                      limits:
                        cpu: 100m
                        memory: 128Mi
                      requests:
                        cpu: 100m
                        memory: 128Mi
                    volumeMounts:
                      - mountPath: /etc/coredns
                        name: config-volume
                serviceAccountName: coredns
                terminationGracePeriodSeconds: 30
                volumes:
                  - configMap:
                      items:
                        - key: Corefile
                          path: Corefile
                      name: k8gb-coredns
                    name: config-volume
        - name: k8gb
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: k8gb
            strategy: {}
            template:
              metadata:
                labels:
                  name: k8gb
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: OPERATOR_NAME
                        value: k8gb
                      - name: K8GB_VERSION
                        value: v0.8.2
                      - name: CLUSTER_GEO_TAG
                        value: eu
                      - name: EXT_GSLB_CLUSTERS_GEO_TAGS
                        value: us
                      - name: EDGE_DNS_ZONE
                        value: example.com
                      - name: EDGE_DNS_SERVER
                        value: 1.1.1.1
                      - name: EDGE_DNS_SERVER_PORT
                        value: "53"
                      - name: DNS_ZONE
                        value: cloud.example.com
                      - name: RECONCILE_REQUEUE_SECONDS
                        value: "30"
                      - name: LOG_FORMAT
                        value: simple
                      - name: LOG_LEVEL
                        value: info
                      - name: NO_COLOR
                        value: "true"
                      - name: SPLIT_BRAIN_CHECK
                        value: "false"
                      - name: METRICS_ADDRESS
                        value: 0.0.0.0:8080
                    image: absaoss/k8gb:v0.8.2
                    imagePullPolicy: IfNotPresent
                    name: k8gb
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 100m
                        memory: 32Mi
                    securityContext:
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                serviceAccountName: k8gb
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - gslb
    - balancer
    - dns-lb
    - kubernetes-global-balancer
  links:
    - name: K8gb
      url: https://k8gb.io
  maintainers:
    - email: jiri.kremser@gmail.com
      name: Jiri Kremser
  maturity: alpha
  minKubeVersion: 1.17.0
  provider:
    name: Absa Group
    url: https://github.com/k8gb-io/k8gb
  version: 0.0.1
