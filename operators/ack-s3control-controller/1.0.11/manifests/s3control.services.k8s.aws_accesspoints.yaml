apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: accesspoints.s3control.services.k8s.aws
spec:
  group: s3control.services.k8s.aws
  names:
    kind: AccessPoint
    listKind: AccessPointList
    plural: accesspoints
    singular: accesspoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessPoint is the Schema for the AccessPoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AccessPointSpec defines the desired state of AccessPoint.

              An access point used to access a bucket.
            properties:
              accountID:
                description: |-
                  The Amazon Web Services account ID for the account that owns the specified
                  access point.

                  Regex Pattern: `^\d{12}$`
                type: string
              bucket:
                description: |-
                  The name of the bucket that you want to associate this access point with.

                  For using this parameter with Amazon S3 on Outposts with the REST API, you
                  must specify the name and the x-amz-outpost-id as well.

                  For using this parameter with S3 on Outposts with the Amazon Web Services
                  SDK and CLI, you must specify the ARN of the bucket accessed in the format
                  arn:aws:s3-outposts:::outpost//bucket/. For example, to access the bucket
                  reports through Outpost my-outpost owned by account 123456789012 in Region
                  us-west-2, use the URL encoding of arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports.
                  The value must be URL encoded.
                type: string
              bucketAccountID:
                description: |-
                  The Amazon Web Services account ID associated with the S3 bucket associated
                  with this access point.

                  For same account access point when your bucket and access point belong to
                  the same account owner, the BucketAccountId is not required. For cross-account
                  access point when your bucket and access point are not in the same account,
                  the BucketAccountId is required.

                  Regex Pattern: `^\d{12}$`
                type: string
              name:
                description: The name you want to assign to this access point.
                type: string
              publicAccessBlockConfiguration:
                description: |-
                  The PublicAccessBlock configuration that you want to apply to the access
                  point.
                properties:
                  blockPublicACLs:
                    type: boolean
                  blockPublicPolicy:
                    type: boolean
                  ignorePublicACLs:
                    type: boolean
                  restrictPublicBuckets:
                    type: boolean
                type: object
              vpcConfiguration:
                description: |-
                  If you include this field, Amazon S3 restricts access to this access point
                  to requests from the specified virtual private cloud (VPC).

                  This is required for creating an access point for Amazon S3 on Outposts buckets.
                properties:
                  vpcID:
                    type: string
                type: object
            required:
            - accountID
            - bucket
            - name
            type: object
          status:
            description: AccessPointStatus defines the observed state of AccessPoint
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              alias:
                description: |-
                  The name or alias of the access point.

                  Regex Pattern: `^[0-9a-z\\-]{63}$`
                type: string
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
