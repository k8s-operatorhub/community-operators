apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  labels:
    alloydb-omni: "true"
  name: replicationconfigs.alloydbomni.internal.dbadmin.goog
spec:
  group: alloydbomni.internal.dbadmin.goog
  names:
    kind: ReplicationConfig
    listKind: ReplicationConfigList
    plural: replicationconfigs
    shortNames:
    - rcg
    singular: replicationconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.parent.dbnode.name
      name: Parent
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .spec.role
      name: Role
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Healthy")].status
      name: Healthy
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              logicalUpstream:
                properties:
                  applicationName:
                    description: ApplicationName is required when Synchronous is set
                      to true. The ApplicationName will be used as the standby name
                      when configuring synchronous replication.
                    type: string
                  databaseName:
                    description: DatabaseName is the database with which the logical
                      replication slot will be associated.
                    type: string
                  password:
                    description: Password is a reference to a Secret holding the User's
                      password. Any update made to the Secret will be captured and
                      reflected on the database user.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  pluginName:
                    description: PluginName is the logical decoding plugin that should
                      be associated with the slot. See https://www.postgresql.org/docs/current/logicaldecoding-explanation.html#LOGICALDECODING-EXPLANATION-OUTPUT-PLUGINS
                      for more information.
                    type: string
                  slotName:
                    description: SlotName is the replication slot that will be configured
                      on the database. This must be unique among all PhysicalUpstream
                      and LogicalUpstream specs on the same instance.
                    type: string
                  synchronous:
                    default: "false"
                    description: Synchronous sets whether this replication should
                      be synchronous or not `true` means this replication should be
                      set as synchronous. `false` means that this replication should
                      be asynchronous.
                    enum:
                    - "true"
                    - "false"
                    - ""
                    type: string
                  username:
                    description: "User is the name of a database user that will be
                      created on the Instance for this ReplicationConfig. Multiple
                      Upstream ReplicationConfigs can share the same user. \n Note,
                      the User specified here will be managed by the ReplicationConfig
                      controller and removed when there are no longer any ReplicationConfigs
                      with this username. Do not specify a user here if you wish it
                      to have a lifecycle outside of the ReplicationConfig's lifecycle."
                    type: string
                required:
                - databaseName
                - pluginName
                - slotName
                type: object
              parent:
                description: Parent is a reference to the database this ReplicationConfig
                  belongs to.
                properties:
                  dbnode:
                    description: DBNode is a reference to the DBNode the ReplicationConfig
                      belongs to. It should be non-nil if the ReplicationConfig belongs
                      to a DBS DBNode. The DBNode should be in the same namespace
                      as the ReplicationConfig.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              physicalDownstream:
                properties:
                  host:
                    description: Host is the hostname or address of the upstream database
                      server to connect to.
                    type: string
                  invalidateSyncStatusAt:
                    description: "InvalidateSyncStatusAt if specified causes the SynchronousEnabled
                      and SynchronousState fields in the status to be invalidated
                      until their values are propagated from the upstream with a timestamp
                      newer than the time specified in this field. \n Once this field
                      is updated, in the next reconcile the controller will reset
                      the status values if their associated timestamp is older than
                      the time specified in this field. If the values remain after
                      the reconcile it means they have a timestamp more recent than
                      the specified time. You may compare the Generation and ObservedGeneration
                      of the ReplicationConfig to know whether the controller has
                      performed a reconcile after updating this field."
                    format: date-time
                    type: string
                  password:
                    description: Password is a reference to a Secret holding the User's
                      password.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  port:
                    description: Port is the port number of the upstream database
                      server to connect to. kubebuilder:default:=5432
                    type: integer
                  setupStrategies:
                    description: "SetupStrategies determine how the initial setup
                      will be done so that the downstream database can start streaming
                      from the upstream. \n Multiple strategies can be provided to
                      provide fallbacks in case a strategy fails. They will be attempted
                      in the same order they are provided in this list. If a strategy
                      succeeds then the rest of the strategies in the list will be
                      ignored. If all strategies fail then the ReplicationConfig will
                      be in a permanently failed state and the user must delete and
                      recreate the ReplicationConfig to retry. \n Note, not all failures
                      that occur in a setup strategy will make it fallback to the
                      next strategy. Depending on what type of error occurs, we might
                      retry the same strategy again or fallback to the next strategy.
                      \n Typically, errors such as connection errors will result in
                      the strategy being retried since the actual strategy wouldn't
                      have gotten the chance to actually be attempted. On the other
                      hand, if a strategy determines that it would not be able to
                      succeed no matter how many times it is retried then it would
                      fallback. Documentation on each strategy should specify in what
                      circumstances it would fallback to the next strategy."
                    items:
                      properties:
                        pgBaseBackup:
                          description: "PGBaseBackup is a replication setup strategy
                            that uses pg_basebackup to retrieve a backup of the upstream
                            database. \n This strategy will never fallback to next
                            strategy and will always be retried on errors. It should
                            typically be used as the last-resort strategy that is
                            expected to succeed as long as the upstream database is
                            available, but may be slow to complete."
                          properties:
                            checkpoint:
                              default: fast
                              description: "Checkpoint controls how the PostgreSQL
                                server performs a checkpoint over before initiating
                                the base backup. \n Accepted values are: - fast: This
                                option tells PostgreSQL to perform a \"fast\" checkpoint.
                                It is the quickest way to create a checkpoint, but
                                it may cause some additional load on the server during
                                the backup process. - spread: This option instructs
                                PostgreSQL to spread the checkpoint over a longer
                                period. It minimizes the impact on the server's performance
                                during the backup but might take longer to complete
                                the checkpoint."
                              enum:
                              - fast
                              - spread
                              type: string
                            maxRate:
                              description: "MaxRate sets the maximum transfer rate
                                at which data is collected from the source server.
                                \n This can be useful to limit the impact of pg_basebackup
                                on the server. Values are in kilobytes per second.
                                Use a suffix of M to indicate megabytes per second.
                                A suffix of k is also accepted, and has no effect.
                                Valid values are between 32 kilobytes per second and
                                1024 megabytes per second."
                              pattern: ^[0-9]+[kKmM]?$
                              type: string
                            walMethod:
                              default: stream
                              description: "WalMethod determines if and how WAL records
                                should be collected during backup. This will include
                                all write-ahead logs generated during the backup.
                                Unless the method none is specified, it is possible
                                to start a postmaster in the target directory without
                                the need to consult the WAL archive, thus making the
                                output a completely standalone backup. \n Accepted
                                values are: - none: Don't include write-ahead logs
                                in the backup. - fetch: The write-ahead log files
                                are collected at the end of the backup. - stream:
                                Stream write-ahead log data while the backup is being
                                taken."
                              enum:
                              - none
                              - fetch
                              - stream
                              type: string
                          type: object
                        pgRewind:
                          description: "PGRewind is a downstream replication setup
                            strategy that uses pg_rewind to put the upstream in-sync
                            with the upstream. It is useful for cases where the two
                            databases where previously replicating from each other
                            but have since diverged. \n This strategy will check connectivity
                            with the upstream before running pg_rewind. If it fails
                            due to the upstream being unreachable it will be retried,
                            however if the pg_rewind command is run and returns unsuccessfully
                            then it will fallback to the next strategy."
                          type: object
                      type: object
                    type: array
                  slotName:
                    description: SlotName is the replication slot that the database
                      will use on the upstream server.
                    type: string
                  username:
                    description: User is the database user which will be used to establish
                      the replication connection.
                    type: string
                required:
                - host
                - password
                - slotName
                - username
                type: object
              physicalUpstream:
                properties:
                  password:
                    description: Password is a reference to a Secret holding the User's
                      password. Any update made to the Secret will be captured and
                      reflected on the database user.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  slotName:
                    description: SlotName is the replication slot that will be configured
                      on the database. This must be unique among all PhysicalUpstream
                      specs on the same instance.
                    type: string
                  synchronous:
                    default: "false"
                    description: Synchronous sets whether this replication should
                      be synchronous or not `true` means this replication should be
                      set as synchronous. `false` means that this replication should
                      be asynchronous. `auto_managed` means that the synchronous state
                      of this replication will be managed by the DBS system. It will
                      generally be set to synchronous after initial set up is complete,
                      but might be temporarily disabled during certain operations.
                      `` is used for backward compatibility but should be treated
                      as false
                    enum:
                    - "true"
                    - "false"
                    - auto_managed
                    - ""
                    type: string
                  username:
                    description: "User is the name of a database user that will be
                      created on the Instance for this ReplicationConfig. Multiple
                      Upstream ReplicationConfigs can share the same user. \n Note,
                      the User specified here will be managed by the ReplicationConfig
                      controller and removed when there are no longer any ReplicationConfigs
                      with this username. Do not specify a user here if you wish it
                      to have a lifecycle outside of the ReplicationConfig's lifecycle."
                    type: string
                required:
                - slotName
                - synchronous
                type: object
              role:
                description: ReplicationRole determines the role of the ReplicationConfig's
                  parent in the replication. An Upstream role means the parent is
                  the source of replication and a Downstream role means the parent
                  is the destination of the replication.
                type: string
              type:
                description: ReplicationType determines the type of replication which
                  will be used (i.e., Physical, Logical).
                type: string
            required:
            - parent
            - role
            - type
            type: object
          status:
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the Entity's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              criticalIncidents:
                description: CriticalIncidents is a flat list of all active Critical
                  Incidents.
                items:
                  description: CriticalIncident contains all information about an
                    ongoing critical incident.
                  properties:
                    code:
                      description: Code is the error code of this particular error.
                        Error codes are DBSE+numeric strings, like "DBSE1012".
                      type: string
                    createTime:
                      description: CreateTime is the timestamp when this Incident
                        was created at the origin.
                      format: date-time
                      type: string
                    message:
                      description: Message describes the incident/error that occurred.
                      type: string
                    messageTemplateParams:
                      additionalProperties:
                        type: string
                      description: MessageTemplateParams contains key-value pairs
                        necessary for generating a user-friendly data-driven version
                        of Message in the UI.
                      type: object
                    resource:
                      description: Resource contains information about the Database
                        Service component that reported the incident as well as about
                        the K8s resource.
                      properties:
                        component:
                          description: Component is an internal identifier of the
                            Database Service subsystem that reported the incident.
                          type: string
                        location:
                          description: Location
                          properties:
                            cluster:
                              description: Cluster is the name of the cluster of the
                                affected K8S resource.
                              type: string
                            group:
                              description: Group is the Group name of the k8s resource.
                              type: string
                            kind:
                              description: Kind is the Kind of the k8s resource.
                              type: string
                            name:
                              description: Name is the name of the affected K8S resource.
                              type: string
                            namespace:
                              description: Namespace is the namespace of the affected
                                K8S resource.
                              type: string
                            version:
                              description: Group is the Version of the k8s resource.
                              type: string
                          type: object
                      required:
                      - component
                      type: object
                    stackTrace:
                      description: StackTrace contains an unstructured list of messages
                        from the stack trace.
                      items:
                        description: CriticalIncidentStackTraceMessage contains stack
                          trace information available for the incident.
                        properties:
                          component:
                            description: Component is the name of a Database Service
                              component that logged the message.
                            type: string
                          message:
                            description: Logged message.
                            type: string
                        type: object
                      type: array
                    transientUntil:
                      description: TransientUntil if present indicates that the issue
                        should be considered transient until the specified time.
                      format: date-time
                      type: string
                  required:
                  - code
                  - createTime
                  - resource
                  type: object
                type: array
              logicalUpstream:
                properties:
                  clientAddr:
                    description: ClientAddr is the address of the downstream client
                      connected to this replication slot.
                    type: string
                  clientHostname:
                    description: ClientHostname is the hostname of the downstream
                      client connected to this replication slot.
                    type: string
                  clientPort:
                    description: ClientPort is the source port of the downstream client
                      connected to this replication slot.
                    type: integer
                  passwordResourceVersion:
                    description: PasswordResourceVersion is the Password Secret's
                      resourceVersion when the password was last updated on the database.
                    type: string
                  startedAt:
                    description: StartedAt is the time at which the downstream client
                      connected to the server.
                    format: date-time
                    type: string
                  state:
                    description: 'State is the current state of replication. It can
                      take one of the following values: See document for the `state`
                      column of the `pg_stat_replication` table for more info: https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-REPLICATION-VIEW'
                    type: string
                  synchronousEnabled:
                    description: SynchronousEnabled is whether this replication application
                      name is marked as synchronous from the database property synchronous_standby_names
                      as read from the database itself. If the database is not connectable,
                      this value will remain unchanged.
                    type: boolean
                  synchronousStatus:
                    description: SynchronousStatus returns the value from the column
                      sync_state from the database table pg_stat_replication. The
                      currently supported values are empty string, async, potential,
                      sync, quorum. If there is no active connection this value will
                      be empty. If the database is not connectable, this value will
                      remain unchanged.
                    type: string
                type: object
              observedGeneration:
                description: 'Internal: The generation observed by the controller.'
                format: int64
                type: integer
              physicalDownstream:
                properties:
                  setupStrategies:
                    description: SetupStrategies contains information on the execution
                      of each attempted setup strategy. They appear in this list in
                      the same order as the strategies were defined in the spec.
                    items:
                      properties:
                        endedAt:
                          description: EndedAt is the time at which the most recent
                            attempt of this strategy ended..
                          format: date-time
                          type: string
                        message:
                          description: Message is a description of why the setup attempt
                            is in the state it is.
                          type: string
                        retries:
                          description: Retries is the number of times this strategy
                            has been retried.
                          format: int32
                          type: integer
                        startedAt:
                          description: StartedAt is the time at which the most recent
                            attempt of this strategy was started.
                          format: date-time
                          type: string
                        state:
                          description: "State is the current state of this setup strategy.
                            It can take the following values: \n - InProgress: The
                            strategy is currently executing. - Success: The strategy
                            has successfully completed and no more setup strategies
                            will be attempted. - Error: The strategy has failed but
                            will be retried. The Retries field will show how many
                            times this strategy has been retried. - Fallback: The
                            strategy has failed and will not be reattempted. Instead
                            we will fallback to the next available strategy if it
                            exists."
                          enum:
                          - Unknown
                          - InProgress
                          - Success
                          - Error
                          - Fallback
                          type: string
                        strategy:
                          description: Strategy is the name of the strategy type this
                            status is for.
                          type: string
                      required:
                      - state
                      - strategy
                      type: object
                    type: array
                  state:
                    description: State is the state of replication as seen in the
                      pg_stat_wal_receiver table of the downstream database server.
                    type: string
                  synchronousEnabled:
                    description: SynchronousEnabled indicates whether the application_name
                      used by this replication has been included in the synchronous_standby_names
                      config on the upstream database. When using this field, keep
                      in mind that there may be a delay between when the change is
                      made on the upstream and when the new value gets reflected here.
                      Also, this field will contain the last value pushed down from
                      the upstream. If upstream is unreachable it will retain its
                      last value until it can reach the upstream again.
                    type: boolean
                  synchronousStatus:
                    description: SynchronousStatus contains the value from the sync_state
                      column from the database table pg_stat_replication on the upstream
                      side of the connection. When using this field, keep in mind
                      that there may be a delay between when the change is made on
                      the upstream and when the new value gets reflected here. Also,
                      this field will contain the last value pushed down from the
                      upstream. If the upstream is unreachable it will retain its
                      last value until it can reach the upstream again.
                    type: string
                type: object
              physicalUpstream:
                properties:
                  clientAddr:
                    description: ClientAddr is the address of the downstream client
                      connected to this replication slot.
                    type: string
                  clientHostname:
                    description: ClientHostname is the hostname of the downstream
                      client connected to this replication slot.
                    type: string
                  clientPort:
                    description: ClientPort is the source port of the downstream client
                      connected to this replication slot.
                    type: integer
                  passwordResourceVersion:
                    description: PasswordResourceVersion is the Password Secret's
                      resourceVersion when the password was last updated on the database.
                    type: string
                  startedAt:
                    description: StartedAt is the time at which the downstream client
                      connected to the server.
                    format: date-time
                    type: string
                  state:
                    description: 'State is the current state of replication. It can
                      take one of the following values: See document for the `state`
                      column of the `pg_stat_replication` table for more info: https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-REPLICATION-VIEW'
                    type: string
                  synchronousEnabled:
                    description: SynchronousEnabled is whether this replication application
                      name is marked as synchronous from the database property synchronous_standby_names
                      as read from the database itself. If the database is not connectable,
                      this value will remain unchanged.
                    type: boolean
                  synchronousStatus:
                    description: SynchronousStatus returns the value from the column
                      sync_state from the database table pg_stat_replication. The
                      currently supported values are empty string, async, potential,
                      sync, quorum. If there is no active connection this value will
                      be empty. If the database is not connectable, this value will
                      remain unchanged.
                    type: string
                type: object
              reconciled:
                description: 'Internal: Whether the resource was reconciled by the
                  controller.'
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
