apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples:  |-
      [
        {
          "apiVersion": "applicationservices.redhat.com/v1",
          "kind": "Meter",
          "metadata": {
            "name": "app-services-metrics-example"
          },
          "spec": {
            "includeInfrastructure": false,
            "meterCollectionEnabled": true
          }
        }
      ]
    capabilities: Basic Install
    categories: "Monitoring, Application Runtime"
    certified: "false"
    containerImage: quay.io/redhat-developer/application-services-metering-operator:0.6.0
    createdAt: "2021-09-28T13:00:00Z"
    description: >-
      Collect the core usage of products from the Application Services
      portfolio into a single metric labeled by Runtimes, Integration, and
      Automation.
    repository: https://github.com/redhat-developer/application-services-metering-operator
    support: Red Hat
  name: application-services-metering-operator.v0.6.0
  namespace: placeholder
spec:
  displayName: Application Services Metering Operator
  description: |-
    ## About the managed application

    There is no managed application created with this operator.

    ## About this Operator

    The metering operator watches pods for predetermined labels, across a cluster or namespace(s).
    The label schema for Red Hat Application Services is in the format:

    * `com.company=Red_Hat`
    * `rht.comp=PAM`
    * `rht.comp_ver=7.10`
    * `rht.prod_name=Red_Hat_Process_Automation`
    * `rht.prod_ver=7.11`
    * `rht.subcomp=rhpam-kogito-runtime`
    * `rht.subcomp_t=application`

    It's important not to remove labels as the operator will cease monitoring those pods.

    The operator exposes a metric named: `appsvcs_cpu_usage_cores`
    The metric has a label for product category, these are Runtimes, Integration and Automation.
    There is a prometheus rule using the metric to group by product name, `appsvcs_cores_by_product:sum`.

    The operator utilises the OpenShift Monitoring Stack to provide usage observability via cloud.redhat.com

    ## Prerequisites for enabling this Operator

    None.
  maturity: alpha
  version: 0.6.0
  skips: []
  keywords:
    - metering
    - operator
  provider:
    name: Red Hat
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Red Hat Application Services portfolio
      url: https://www.redhat.com/en/products/middleware
  icon:
    - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNTguNTEgMjU4LjUxIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2QxZDFkMTt9LmNscy0ye2ZpbGw6IzhkOGQ4Zjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPkFzc2V0IDQ8L3RpdGxlPjxnIGlkPSJMYXllcl8yIiBkYXRhLW5hbWU9IkxheWVyIDIiPjxnIGlkPSJMYXllcl8xLTIiIGRhdGEtbmFtZT0iTGF5ZXIgMSI+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTI5LjI1LDIwQTEwOS4xLDEwOS4xLDAsMCwxLDIwNi40LDIwNi40LDEwOS4xLDEwOS4xLDAsMSwxLDUyLjExLDUyLjExLDEwOC40NSwxMDguNDUsMCwwLDEsMTI5LjI1LDIwbTAtMjBoMEM1OC4xNiwwLDAsNTguMTYsMCwxMjkuMjVIMGMwLDcxLjA5LDU4LjE2LDEyOS4yNiwxMjkuMjUsMTI5LjI2aDBjNzEuMDksMCwxMjkuMjYtNTguMTcsMTI5LjI2LTEyOS4yNmgwQzI1OC41MSw1OC4xNiwyMDAuMzQsMCwxMjkuMjUsMFoiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0xNzcuNTQsMTAzLjQxSDE0MS42NkwxNTQuOSw2NS43NmMxLjI1LTQuNC0yLjMzLTguNzYtNy4yMS04Ljc2SDEwMi45M2E3LjMyLDcuMzIsMCwwLDAtNy40LDZsLTEwLDY5LjYxYy0uNTksNC4xNywyLjg5LDcuODksNy40LDcuODloMzYuOUwxMTUuNTUsMTk3Yy0xLjEyLDQuNDEsMi40OCw4LjU1LDcuMjQsOC41NWE3LjU4LDcuNTgsMCwwLDAsNi40Ny0zLjQ4TDE4NCwxMTMuODVDMTg2Ljg2LDEwOS4yNCwxODMuMjksMTAzLjQxLDE3Ny41NCwxMDMuNDFaIi8+PC9nPjwvZz48L3N2Zz4=
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: meters.applicationservices.redhat.com
        displayName: Meter
        kind: Meter
        version: v1
        description: Meter
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - endpoints
                - namespaces
                - pods
                - services
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - prometheusrules
                - servicemonitors
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
            - apiGroups:
                - metrics.k8s.io
              resources:
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
                - clusterrolebindings
                - roles
                - rolebindings
              verbs:
                - create
                - delete
                - get
                - list
                - update
            - apiGroups:
                - authorization.openshift.io
              resources:
                - clusterroles
                - clusterrolebindings
                - roles
                - rolebindings
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - applicationservices.redhat.com
              resources:
                - meters
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - applicationservices.redhat.com
              resources:
                - meters/finalizers
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - applicationservices.redhat.com
              resources:
                - meters/status
              verbs:
                - get
                - patch
                - update
          serviceAccountName: application-services-metering-operator
      deployments:
        - name: application-services-metering-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/version: 0.6.0
                app.kubernetes.io/name: application-services-metering-operator
            template:
              metadata:
                annotations:
                  app.quarkus.io/commit-id: 512842e67afa41cb0b2bb8dfaf530391b771dc1a
                  app.quarkus.io/build-timestamp: 2021-10-04 - 12:35:13 +0000
                labels:
                  app.kubernetes.io/version: 0.6.0
                  app.kubernetes.io/name: application-services-metering-operator
              spec:
                containers:
                  - env:
                      - name: KUBERNETES_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                    image: >-
                      quay.io/redhat-developer/application-services-metering-operator:0.6.0
                    imagePullPolicy: Always
                    livenessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /q/health/live
                        port: 8080
                        scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 30
                      successThreshold: 1
                      timeoutSeconds: 10
                    name: application-services-metering-operator
                    ports:
                      - containerPort: 8080
                        name: http
                        protocol: TCP
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /q/health/ready
                        port: 8080
                        scheme: HTTP
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      successThreshold: 1
                      timeoutSeconds: 10
                serviceAccountName: application-services-metering-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: true
    - type: AllNamespaces
      supported: true