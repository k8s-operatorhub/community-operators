apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    shortNames:
    - sgbkp
    singular: sgbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sgCluster
      name: cluster
      type: string
    - jsonPath: .status.process.managedLifecycle
      name: managed
      type: string
    - jsonPath: .status.process.status
      name: status
      type: string
    - jsonPath: .status.backupInformation.postgresVersion
      name: pg-version
      priority: 1
      type: string
    - format: byte
      jsonPath: .status.backupInformation.size.compressed
      name: compressed-size
      priority: 1
      type: integer
    - jsonPath: .status.backupInformation.timeline
      name: timeline
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |
          A manual or automatically generated backup of an SGCluster configured with an SGBackupConfig.

          When a SGBackup is created a Job will perform a full backup of the database and update the status of the SGBackup
           with the all the information required to restore it and some stats (or a failure message in case something unexpected
           happened).
          After an SGBackup is created the same Job performs a reconciliation of the backups by applying the retention window
           that has been configured in the SGBackupConfig and removing the backups with managed lifecycle and the WAL files older
           than the ones that fit in the retention window. The reconciliation also removes backups (excluding WAL files) that do
           not belongs to any SGBackup. If the target storage of the SGBackupConfig is changed deletion of an SGBackup backups
           with managed lifecycle and the WAL files older than the ones that fit in the retention window and of backups that do
           not belongs to any SGBackup will not be performed anymore on the previous storage, only on the new target storage.
        properties:
          metadata:
            properties:
              name:
                description: |
                  Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                  The name must be unique across all StackGres backups in the same namespace."
                maxLength: 56
                pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                type: string
            type: object
          spec:
            properties:
              managedLifecycle:
                description: |
                  Indicate if this backup is permanent and should not be removed by the automated
                   retention policy. Default is `false`.
                type: boolean
              sgCluster:
                description: |
                  The name of the `SGCluster` from which this backup is/will be taken.

                  If this is a copy of an existing completed backup in a different namespace
                   the value must be prefixed with the namespace of the source backup and a
                   dot `.` (e.g. `<cluster namespace>.<cluster name>`) or have the same value
                   if the source backup is also a copy.
                type: string
            type: object
          status:
            properties:
              backupInformation:
                properties:
                  controlData:
                    description: |
                      An object containing data from the output of pg_controldata on the backup.
                    properties:
                      Backup end location:
                        type: string
                      Backup start location:
                        type: string
                      Blocks per segment of large relation:
                        type: string
                      Bytes per WAL segment:
                        type: string
                      Catalog version number:
                        type: string
                      Data page checksum version:
                        type: string
                      Database block size:
                        type: string
                      Database cluster state:
                        type: string
                      Database system identifier:
                        type: string
                      Date/time type storage:
                        type: string
                      End-of-backup record required:
                        type: string
                      Fake LSN counter for unlogged rels:
                        type: string
                      Float4 argument passing:
                        type: string
                      Float8 argument passing:
                        type: string
                      Latest checkpoint location:
                        type: string
                      Latest checkpoint's NextMultiOffset:
                        type: string
                      Latest checkpoint's NextMultiXactId:
                        type: string
                      Latest checkpoint's NextOID:
                        type: string
                      Latest checkpoint's NextXID:
                        type: string
                      Latest checkpoint's PrevTimeLineID:
                        type: string
                      Latest checkpoint's REDO WAL file:
                        type: string
                      Latest checkpoint's REDO location:
                        type: string
                      Latest checkpoint's TimeLineID:
                        type: string
                      Latest checkpoint's full_page_writes:
                        type: string
                      Latest checkpoint's newestCommitTsXid:
                        type: string
                      Latest checkpoint's oldestActiveXID:
                        type: string
                      Latest checkpoint's oldestCommitTsXid:
                        type: string
                      Latest checkpoint's oldestMulti's DB:
                        type: string
                      Latest checkpoint's oldestMultiXid:
                        type: string
                      Latest checkpoint's oldestXID:
                        type: string
                      Latest checkpoint's oldestXID's DB:
                        type: string
                      Maximum columns in an index:
                        type: string
                      Maximum data alignment:
                        type: string
                      Maximum length of identifiers:
                        type: string
                      Maximum size of a TOAST chunk:
                        type: string
                      Min recovery ending loc's timeline:
                        type: string
                      Minimum recovery ending location:
                        type: string
                      Mock authentication nonce:
                        type: string
                      Size of a large-object chunk:
                        type: string
                      Time of latest checkpoint:
                        type: string
                      WAL block size:
                        type: string
                      max_connections setting:
                        type: string
                      max_locks_per_xact setting:
                        type: string
                      max_prepared_xacts setting:
                        type: string
                      max_wal_senders setting:
                        type: string
                      max_worker_processes setting:
                        type: string
                      pg_control last modified:
                        type: string
                      pg_control version number:
                        type: string
                      track_commit_timestamp setting:
                        type: string
                      wal_level setting:
                        type: string
                      wal_log_hints setting:
                        type: string
                    type: object
                  hostname:
                    description: |
                      Hostname of the instance where the backup is taken from.
                    type: string
                  lsn:
                    properties:
                      end:
                        description: |
                          LSN of when the backup finished.
                        type: string
                      start:
                        description: |
                          LSN of when the backup started.
                        type: string
                    type: object
                  pgData:
                    description: |
                      Data directory where the backup is taken from.
                    type: string
                  postgresVersion:
                    description: |
                      Postgres version of the server where the backup is taken from.
                    type: string
                  size:
                    properties:
                      compressed:
                        description: |
                          Size (in bytes) of the compressed backup.
                        format: int64
                        type: integer
                      uncompressed:
                        description: |
                          Size (in bytes) of the uncompressed backup.
                        format: int64
                        type: integer
                    type: object
                  sourcePod:
                    description: |
                      Pod where the backup is taken from.
                    type: string
                  startWalFile:
                    description: |
                      WAL segment file name when the backup was started.
                    type: string
                  systemIdentifier:
                    description: |
                      Postgres *system identifier* of the cluster this backup is taken from.
                    type: string
                  timeline:
                    description: |
                      Backup timeline.
                    type: string
                type: object
              backupPath:
                description: |
                  The path were the backup is stored.
                type: string
              internalName:
                description: |
                  The name of the backup.
                type: string
              process:
                properties:
                  failure:
                    description: |
                      If the status is `failed` this field will contain a message indicating the failure reason.
                    type: string
                  jobPod:
                    description: |
                      Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                    type: string
                  managedLifecycle:
                    description: |
                      Status (may be transient) until converging to `spec.managedLifecycle`.
                    type: boolean
                  status:
                    description: |
                      Status of the backup.
                    type: string
                  timing:
                    properties:
                      end:
                        description: |
                          End time of backup.
                        type: string
                      start:
                        description: |
                          Start time of backup.
                        type: string
                      stored:
                        description: |
                          Time at which the backup is safely stored in the object storage.
                        type: string
                    type: object
                type: object
              sgBackupConfig:
                description: The name of the backup configuration used to perform
                  this backup.
                properties:
                  baseBackups:
                    description: |
                      Back backups configuration.
                    properties:
                      compression:
                        description: |
                          Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                        enum:
                        - lz4
                        - lzma
                        - brotli
                        type: string
                      cronSchedule:
                        description: |
                          Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                          Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                          *  `m`: minute, 0 to 59
                          *  `h`: hour, 0 to 23
                          *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
                          *  `mon`: month, 1 to 12
                          *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

                          Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                          If not provided, full backups will be performed each day at 05:00 UTC
                        type: string
                      performance:
                        properties:
                          maxDiskBandwidth:
                            description: |
                              Maximum disk read I/O when performing a backup. In bytes (per second).
                            type: integer
                          maxDiskBandwitdh:
                            description: |
                              **Deprecated**: use instead maxDiskBandwidth.

                              Maximum disk read I/O when performing a backup. In bytes (per second).
                            type: integer
                          maxNetworkBandwidth:
                            description: |
                              Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            type: integer
                          maxNetworkBandwitdh:
                            description: |
                              **Deprecated**: use instead maxNetworkBandwidth.

                              Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            type: integer
                          uploadConcurrency:
                            description: |
                              Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
                            minimum: 1
                            type: integer
                          uploadDiskConcurrency:
                            description: |
                              Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1 (use one stream).
                            minimum: 1
                            type: integer
                        type: object
                      retention:
                        description: |
                          Based on this parameter, an automatic retention policy is defined to delete old base backups.
                          This parameter specifies the number of base backups to keep, in a sliding window.
                          Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                          Default is 5.
                        minimum: 1
                        type: integer
                    type: object
                  compression:
                    description: |
                      Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                    enum:
                    - lz4
                    - lzma
                    - brotli
                    type: string
                  storage:
                    description: |
                      Backup storage configuration.
                    properties:
                      azureBlob:
                        description: |
                          Azure Blob Storage configuration.
                        properties:
                          azureCredentials:
                            description: |
                              Credentials to access Azure Blob Storage for writing and reading.
                            properties:
                              secretKeySelectors:
                                description: |
                                  Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                properties:
                                  accessKey:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                  storageAccount:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the name of the storage account.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                required:
                                - storageAccount
                                - accessKey
                                type: object
                            type: object
                          bucket:
                            description: |
                              Azure Blob Storage bucket name.
                            pattern: ^[^/]+(/[^/]*)*$
                            type: string
                          path:
                            description: |
                              Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            pattern: ^(/[^/]*)*$
                            type: string
                        required:
                        - bucket
                        - azureCredentials
                        type: object
                      gcs:
                        description: |
                          Google Cloud Storage configuration.
                        properties:
                          bucket:
                            description: |
                              GCS bucket name.
                            pattern: ^[^/]+(/[^/]*)*$
                            type: string
                          gcpCredentials:
                            description: |
                              Credentials to access GCS for writing and reading.
                            properties:
                              fetchCredentialsFromMetadataService:
                                description: |
                                  If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                  This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                type: boolean
                              secretKeySelectors:
                                description: |
                                  A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                properties:
                                  serviceAccountJSON:
                                    description: |
                                      A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                required:
                                - serviceAccountJSON
                                type: object
                            type: object
                          path:
                            description: |
                              Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            pattern: ^(/[^/]*)*$
                            type: string
                        required:
                        - bucket
                        - gcpCredentials
                        type: object
                      s3:
                        description: |
                          Amazon Web Services S3 configuration.
                        properties:
                          awsCredentials:
                            description: |
                              Credentials to access AWS S3 for writing and reading.
                            properties:
                              secretKeySelectors:
                                description: |
                                  Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                properties:
                                  accessKeyId:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                  secretAccessKey:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                required:
                                - accessKeyId
                                - secretAccessKey
                                type: object
                            required:
                            - secretKeySelectors
                            type: object
                          bucket:
                            description: |
                              AWS S3 bucket name.
                            pattern: ^[^/]+(/[^/]*)*$
                            type: string
                          path:
                            description: |
                              Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                              StackGres cluster, using the `SGCluster.metadata.name`.
                            pattern: ^(/[^/]*)*$
                            type: string
                          region:
                            description: |
                              AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            type: string
                          storageClass:
                            description: |
                              [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            type: string
                        required:
                        - bucket
                        - awsCredentials
                        type: object
                      s3Compatible:
                        description: AWS S3-Compatible API configuration
                        properties:
                          awsCredentials:
                            description: |
                              Credentials to access AWS S3 for writing and reading.
                            properties:
                              secretKeySelectors:
                                description: |
                                  A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                properties:
                                  accessKeyId:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                  secretAccessKey:
                                    description: |
                                      [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                    properties:
                                      key:
                                        description: |
                                          The key of the secret to select from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |
                                          Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                required:
                                - accessKeyId
                                - secretAccessKey
                                type: object
                            required:
                            - secretKeySelectors
                            type: object
                          bucket:
                            description: |
                              Bucket name.
                            pattern: ^[^/]+(/[^/]*)*$
                            type: string
                          enablePathStyleAddressing:
                            description: |
                              Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                            type: boolean
                          endpoint:
                            description: |
                              Overrides the default url to connect to an S3-compatible service.
                              For example: `http://s3-like-service:9000`.
                            type: string
                          path:
                            description: |
                              Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            pattern: ^(/[^/]*)*$
                            type: string
                          region:
                            description: |
                              AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            type: string
                          storageClass:
                            description: |
                              [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            type: string
                        required:
                        - bucket
                        - awsCredentials
                        type: object
                      type:
                        description: |
                          Specifies the type of object storage used for storing the base backups and WAL segments.
                          Possible values:
                          *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                          *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                          *  `gcs`: Google Cloud Storage.
                          *  `azureBlob`: Microsoft Azure Blob Storage.
                        enum:
                        - s3
                        - s3Compatible
                        - gcs
                        - azureBlob
                        type: string
                    required:
                    - type
                    type: object
                required:
                - storage
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
