apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempomonolithics.tempo.grafana.com
spec:
  group: tempo.grafana.com
  names:
    kind: TempoMonolithic
    listKind: TempoMonolithicList
    plural: tempomonolithics
    singular: tempomonolithic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TempoMonolithicSpec defines the desired state of TempoMonolithic.
            properties:
              extraConfig:
                description: ExtraConfig defines any extra (overlay) configuration
                  of components.
                properties:
                  tempo:
                    description: Tempo defines any extra Tempo configuration, which
                      will be merged with the operator's generated Tempo configuration
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              ingestion:
                description: Ingestion defines the trace ingestion configuration.
                properties:
                  otlp:
                    description: OTLP defines the ingestion configuration for the
                      OTLP protocol.
                    properties:
                      grpc:
                        description: GRPC defines the OTLP over gRPC configuration.
                        properties:
                          enabled:
                            default: true
                            description: 'Enabled defines if OTLP over gRPC is enabled.
                              Default: enabled.'
                            type: boolean
                          tls:
                            description: TLS defines the TLS configuration for OTLP/gRPC
                              ingestion.
                            properties:
                              caName:
                                description: CA is the name of a ConfigMap containing
                                  a CA certificate (service-ca.crt). It needs to be
                                  in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: Cert is the name of a Secret containing
                                  a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo
                                  custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - enabled
                        type: object
                      http:
                        description: HTTP defines the OTLP over HTTP configuration.
                        properties:
                          enabled:
                            default: true
                            description: 'Enabled defines if OTLP over HTTP is enabled.
                              Default: enabled.'
                            type: boolean
                          tls:
                            description: TLS defines the TLS configuration for OTLP/HTTP
                              ingestion.
                            properties:
                              caName:
                                description: CA is the name of a ConfigMap containing
                                  a CA certificate (service-ca.crt). It needs to be
                                  in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: Cert is the name of a Secret containing
                                  a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo
                                  custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - enabled
                        type: object
                    type: object
                type: object
              jaegerui:
                description: JaegerUI defines the Jaeger UI configuration.
                properties:
                  enabled:
                    description: Enabled defines if the Jaeger UI component should
                      be created.
                    type: boolean
                  ingress:
                    description: Ingress defines the Ingress configuration for the
                      Jaeger UI.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations defines the annotations of the Ingress
                          object.
                        type: object
                      enabled:
                        description: Enabled defines if an Ingress object should be
                          created for Jaeger UI.
                        type: boolean
                      host:
                        description: Host defines the hostname of the Ingress object.
                        type: string
                      ingressClassName:
                        description: IngressClassName defines the name of an IngressClass
                          cluster resource. Defines which ingress controller serves
                          this ingress resource.
                        type: string
                    required:
                    - enabled
                    type: object
                  resources:
                    description: Resources defines the compute resource requirements
                      of the Jaeger UI container.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  route:
                    description: Route defines the OpenShift route configuration for
                      the Jaeger UI.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations defines the annotations of the Route
                          object.
                        type: object
                      enabled:
                        description: Enabled defines if a Route object should be created
                          for Jaeger UI.
                        type: boolean
                      host:
                        description: Host defines the hostname of the Route object.
                        type: string
                      termination:
                        default: edge
                        description: 'Termination specifies the termination type.
                          Default: edge.'
                        enum:
                        - insecure
                        - edge
                        - passthrough
                        - reencrypt
                        type: string
                    required:
                    - enabled
                    type: object
                required:
                - enabled
                type: object
              management:
                description: 'ManagementState defines whether this instance is managed
                  by the operator or self-managed. Default: Managed.'
                enum:
                - Managed
                - Unmanaged
                type: string
              resources:
                description: Resources defines the compute resource requirements of
                  the Tempo container.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              storage:
                description: Storage defines the storage configuration.
                properties:
                  traces:
                    description: Traces defines the storage configuration for traces.
                    properties:
                      azure:
                        description: Azure defines the configuration for Azure Storage.
                        properties:
                          secret:
                            description: Secret is the name of a Secret containing
                              credentials for accessing object storage. It needs to
                              be in the same namespace as the TempoMonolithic custom
                              resource.
                            minLength: 1
                            type: string
                        required:
                        - secret
                        type: object
                      backend:
                        default: memory
                        description: 'Backend defines the backend for storing traces.
                          Default: memory.'
                        enum:
                        - memory
                        - pv
                        - azure
                        - gcs
                        - s3
                        type: string
                      gcs:
                        description: GCP defines the configuration for Google Cloud
                          Storage.
                        properties:
                          secret:
                            description: Secret is the name of a Secret containing
                              credentials for accessing object storage. It needs to
                              be in the same namespace as the TempoMonolithic custom
                              resource.
                            minLength: 1
                            type: string
                        required:
                        - secret
                        type: object
                      s3:
                        description: S3 defines the configuration for Amazon S3.
                        properties:
                          secret:
                            description: Secret is the name of a Secret containing
                              credentials for accessing object storage. It needs to
                              be in the same namespace as the TempoMonolithic custom
                              resource.
                            minLength: 1
                            type: string
                          tls:
                            description: TLS defines the TLS configuration for Amazon
                              S3.
                            properties:
                              caName:
                                description: CA is the name of a ConfigMap containing
                                  a CA certificate (service-ca.crt). It needs to be
                                  in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: Cert is the name of a Secret containing
                                  a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo
                                  custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - secret
                        type: object
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 10Gi
                        description: 'Size defines the size of the volume where traces
                          are stored. For in-memory storage, this defines the size
                          of the tmpfs volume. For persistent volume storage, this
                          defines the size of the persistent volume. For object storage,
                          this defines the size of the persistent volume containing
                          the Write-Ahead Log (WAL) of Tempo. Default: 10Gi.'
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - backend
                    type: object
                required:
                - traces
                type: object
            type: object
          status:
            description: TempoMonolithicStatus defines the observed state of TempoMonolithic.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
