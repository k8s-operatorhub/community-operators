apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: methods.apigateway.services.k8s.aws
spec:
  group: apigateway.services.k8s.aws
  names:
    kind: Method
    listKind: MethodList
    plural: methods
    singular: method
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Method is the Schema for the Methods API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              MethodSpec defines the desired state of Method.

              Represents a client-facing interface by which the client calls the API to
              access back-end resources. A Method resource is integrated with an Integration
              resource. Both consist of a request and one or more responses. The method
              request takes the client input that is passed to the back end through the
              integration request. A method response returns the output from the back end
              to the client through an integration response. A method request is embodied
              in a Method resource, whereas an integration request is embodied in an Integration
              resource. On the other hand, a method response is represented by a MethodResponse
              resource, whereas an integration response is represented by an IntegrationResponse
              resource.
            properties:
              apiKeyRequired:
                description: Specifies whether the method required a valid ApiKey.
                type: boolean
              authorizationScopes:
                description: |-
                  A list of authorization scopes configured on the method. The scopes are used
                  with a COGNITO_USER_POOLS authorizer to authorize the method invocation.
                  The authorization works by matching the method scopes against the scopes
                  parsed from the access token in the incoming request. The method invocation
                  is authorized if any method scopes matches a claimed scope in the access
                  token. Otherwise, the invocation is not authorized. When the method scope
                  is configured, the client must provide an access token instead of an identity
                  token for authorization purposes.
                items:
                  type: string
                type: array
              authorizationType:
                description: |-
                  The method's authorization type. Valid values are NONE for open access, AWS_IAM
                  for using AWS IAM permissions, CUSTOM for using a custom authorizer, or COGNITO_USER_POOLS
                  for using a Cognito user pool.
                type: string
              authorizerID:
                description: |-
                  Specifies the identifier of an Authorizer to use on this Method, if the type
                  is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is generated by
                  API Gateway when you created the authorizer.
                type: string
              httpMethod:
                description: Specifies the method request's HTTP method type.
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              operationName:
                description: |-
                  A human-friendly operation identifier for the method. For example, you can
                  assign the operationName of ListPets for the GET /pets method in the PetStore
                  example.
                type: string
              requestModels:
                additionalProperties:
                  type: string
                description: |-
                  Specifies the Model resources used for the request's content type. Request
                  models are represented as a key/value map, with a content type as the key
                  and a Model name as the value.
                type: object
              requestParameters:
                additionalProperties:
                  type: boolean
                description: |-
                  A key-value map defining required or optional method request parameters that
                  can be accepted by API Gateway. A key defines a method request parameter
                  name matching the pattern of method.request.{location}.{name}, where location
                  is querystring, path, or header and name is a valid and unique parameter
                  name. The value associated with the key is a Boolean flag indicating whether
                  the parameter is required (true) or optional (false). The method request
                  parameter names defined here are available in Integration to be mapped to
                  integration request parameters or body-mapping templates.
                type: object
              requestValidatorID:
                description: The identifier of a RequestValidator for validating the
                  method request.
                type: string
              resourceID:
                description: The Resource identifier for the new Method resource.
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              resourceRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              restAPIID:
                description: The string identifier of the associated RestApi.
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              restAPIRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
            required:
            - authorizationType
            - httpMethod
            type: object
          status:
            description: MethodStatus defines the observed state of Method
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              methodIntegration:
                description: |-
                  Gets the method's integration responsible for passing the client-submitted
                  request to the back end and performing necessary transformations to make
                  the request compliant with the back end.
                properties:
                  cacheKeyParameters:
                    items:
                      type: string
                    type: array
                  cacheNamespace:
                    type: string
                  connectionID:
                    type: string
                  connectionType:
                    type: string
                  contentHandling:
                    type: string
                  credentials:
                    type: string
                  httpMethod:
                    type: string
                  integrationResponses:
                    additionalProperties:
                      description: |-
                        Represents an integration response. The status code must map to an existing
                        MethodResponse, and parameters and templates can be used to transform the
                        back-end response.
                      properties:
                        contentHandling:
                          type: string
                        responseParameters:
                          additionalProperties:
                            type: string
                          type: object
                        responseTemplates:
                          additionalProperties:
                            type: string
                          type: object
                        selectionPattern:
                          type: string
                        statusCode:
                          description: The status code.
                          type: string
                      type: object
                    type: object
                  passthroughBehavior:
                    type: string
                  requestParameters:
                    additionalProperties:
                      type: string
                    type: object
                  requestTemplates:
                    additionalProperties:
                      type: string
                    type: object
                  timeoutInMillis:
                    format: int64
                    type: integer
                  tlsConfig:
                    description: Specifies the TLS configuration for an integration.
                    properties:
                      insecureSkipVerification:
                        type: boolean
                    type: object
                  type:
                    description: |-
                      The integration type. The valid value is HTTP for integrating an API method
                      with an HTTP backend; AWS with any Amazon Web Services service endpoints;
                      MOCK for testing without actually invoking the backend; HTTP_PROXY for integrating
                      with the HTTP proxy integration; AWS_PROXY for integrating with the Lambda
                      proxy integration.
                    type: string
                  uri:
                    type: string
                type: object
              methodResponses:
                additionalProperties:
                  description: |-
                    Represents a method response of a given HTTP status code returned to the
                    client. The method response is passed from the back end through the associated
                    integration response that can be transformed using a mapping template.
                  properties:
                    responseModels:
                      additionalProperties:
                        type: string
                      type: object
                    responseParameters:
                      additionalProperties:
                        type: boolean
                      type: object
                    statusCode:
                      description: The status code.
                      type: string
                  type: object
                description: Gets a method response associated with a given HTTP status
                  code.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
