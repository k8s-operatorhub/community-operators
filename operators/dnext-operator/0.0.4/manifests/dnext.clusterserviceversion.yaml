apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "dnext.pia-team.com/v1alpha1",
          "kind": "Api",
          "metadata": {
            "name": "dpc-api"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 4,
              "minReplicas": 1,
              "targetMemoryUtilizationPercentage": 80
            },
            "domain": "dnext.kubernetes.pia-team.com",
            "extraEnv": "- name: SPRING_DATA_MONGODB_USERNAME\n  value: \"root\"\n- name: SPRING_DATA_MONGODB_PASSWORD\n  value: \"dummy\"\n- name: SPRING_PROFILES_ACTIVE\n  value: \"kubernetesDev\"\n- name: SPRING_DATA_MONGODB_INETADDRESSES\n  value: \"mongodb-cluster-0.mongodb-cluster-headless.dnext.svc.cluster.local:27017, mongodb-cluster-1.mongodb-cluster-headless.dnext.svc.cluster.local:27017, mongodb-cluster-2.mongodb-cluster-headless.dnext.svc.cluster.local:27017\"\n",
            "fullnameOverride": "",
            "healthCheck": {
              "enabled": true,
              "livenessProbe": {
                "failureThreshold": 5,
                "httpGet": {
                  "path": "/api/productCatalogManagement/v4/actuator/health/liveness",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 250,
                "periodSeconds": 3,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "failureThreshold": 5,
                "httpGet": {
                  "path": "/api/productCatalogManagement/v4/actuator/health/readiness",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 250,
                "periodSeconds": 3,
                "successThreshold": 1,
                "timeoutSeconds": 10
              }
            },
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "hub.kubernetes.pia-team.com/productcatalog",
              "tag": "develop-100"
            },
            "imagePullSecrets": "reg-secret",
            "ingress": {
              "annotations": {
                "meta.helm.sh/release-name": "dpc-api",
                "meta.helm.sh/release-namespace": "dnext"
              },
              "enabled": true,
              "path": "api/productCatalogManagement(/|$)(.*)"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "800m",
                "memory": "1Gi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "10Mi"
              }
            },
            "securityContext": {},
            "service": {
              "port": 80,
              "targetPort": 8080,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        },
        {
          "apiVersion": "dnext.pia-team.com/v1alpha1",
          "kind": "MongoDb",
          "metadata": {
            "name": "mongodb-cluster"
          },
          "spec": {
            "affinity": {},
            "annotations": {},
            "arbiter": {
              "enabled": false
            },
            "architecture": "replicaset",
            "auth": {
              "enabled": true,
              "replicaSetKey": "",
              "rootPassword": "dummy"
            },
            "clusterDomain": "cluster.local",
            "common": {
              "exampleValue": "common-chart",
              "global": {}
            },
            "configuration": "",
            "containerSecurityContext": {
              "enabled": true,
              "runAsNonRoot": true,
              "runAsUser": 1001
            },
            "customLivenessProbe": {},
            "customReadinessProbe": {},
            "directoryPerDB": false,
            "disableSystemLog": false,
            "enableIPv6": false,
            "externalAccess": {
              "autoDiscovery": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "pullSecrets": [],
                  "registry": "docker.io",
                  "repository": "bitnami/kubectl",
                  "tag": "1.18.12-debian-10-r2"
                },
                "resources": {
                  "limits": {},
                  "requests": {}
                }
              },
              "enabled": false,
              "service": {
                "annotations": {},
                "loadBalancerIPs": [],
                "loadBalancerSourceRanges": [],
                "nodePorts": [],
                "port": 27017,
                "type": "LoadBalancer"
              }
            },
            "extraFlags": [],
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "image": {
              "debug": false,
              "pullPolicy": "IfNotPresent",
              "registry": "docker.io",
              "repository": "bitnami/mongodb",
              "tag": "4.4.2-debian-10-r0"
            },
            "initContainers": {},
            "initdbScripts": {},
            "labels": {},
            "livenessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 30,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "metrics": {
              "enabled": false,
              "extraFlags": "",
              "extraUri": "",
              "image": {
                "pullPolicy": "IfNotPresent",
                "registry": "docker.io",
                "repository": "bitnami/mongodb-exporter",
                "tag": "0.11.2-debian-10-r44"
              },
              "livenessProbe": {
                "enabled": true,
                "failureThreshold": 3,
                "initialDelaySeconds": 15,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "prometheusRule": {
                "additionalLabels": {},
                "enabled": false,
                "rules": {}
              },
              "readinessProbe": {
                "enabled": true,
                "failureThreshold": 3,
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "service": {
                "annotations": {
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "{{ .Values.metrics.service.port }}",
                  "prometheus.io/scrape": "true"
                },
                "port": 9216,
                "type": "ClusterIP"
              },
              "serviceMonitor": {
                "additionalLabels": {},
                "enabled": false,
                "interval": "30s"
              }
            },
            "nodeAffinityPreset": {
              "key": "",
              "type": "",
              "values": []
            },
            "nodeSelector": {},
            "pdb": {
              "create": false,
              "minAvailable": 1
            },
            "persistence": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "annotations": {},
              "enabled": true,
              "mountPath": "/bitnami/mongodb",
              "size": "8Gi",
              "subPath": ""
            },
            "podAffinityPreset": "",
            "podAnnotations": {},
            "podAntiAffinityPreset": "soft",
            "podLabels": {},
            "podManagementPolicy": "OrderedReady",
            "podSecurityContext": {
              "enabled": true,
              "fsGroup": 1001,
              "sysctls": []
            },
            "rbac": {
              "create": false
            },
            "readinessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "replicaCount": 3,
            "replicaSetHostnames": true,
            "replicaSetName": "rs0",
            "resources": {
              "limits": {},
              "requests": {}
            },
            "service": {
              "annotations": {},
              "externalIPs": [],
              "loadBalancerSourceRanges": [],
              "nodePort": "",
              "port": 27017,
              "portName": "mongodb",
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "create": true
            },
            "sidecars": {},
            "strategyType": "RollingUpdate",
            "systemLogVerbosity": 0,
            "tls": {
              "enabled": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "registry": "docker.io",
                "repository": "bitnami/nginx",
                "tag": "1.19.4-debian-10-r19"
              }
            },
            "tolerations": [],
            "useStatefulSet": false,
            "volumePermissions": {
              "enabled": false,
              "image": {
                "pullPolicy": "Always",
                "pullSecrets": [],
                "registry": "docker.io",
                "repository": "bitnami/minideb",
                "tag": "buster"
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "securityContext": {
                "runAsUser": 0
              }
            }
          }
        },
        {
          "apiVersion": "dnext.pia-team.com/v1alpha1",
          "kind": "Ui",
          "metadata": {
            "name": "dpc-ui"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "domain": "dnext.kubernetes.pia-team.com",
            "fullnameOverride": "",
            "healthCheck": {
              "enabled": true,
              "livenessProbe": {
                "httpGet": {
                  "path": "/ui/productCatalogManagement/healthz",
                  "port": 8080
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ui/productCatalogManagement/healthz",
                  "port": 8080
                }
              }
            },
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "hub.kubernetes.pia-team.com/productcatalog-ui",
              "tag": "jenkins-dpc-ui-CI-develop-34"
            },
            "imagePullSecrets": "reg-secret",
            "ingress": {
              "annotations": {
                "nginx.ingress.kubernetes.io/rewrite-target": "/$2"
              },
              "enabled": true,
              "path": "ui/productCatalogManagement(/|$)(.*)"
            },
            "initCommand": "sed -i -e 's?dnext-dev.kubernetes.pia-team.com?dnext.kubernetes.pia-team.com?g' /usr/share/nginx/html/*.js",
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "1Gi"
              },
              "requests": {
                "cpu": "256m",
                "memory": "256Mi"
              }
            },
            "securityContext": {},
            "service": {
              "port": 80,
              "targetPort": 8080,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.13.1
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: dnext.v0.0.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Api
      name: apis.dnext.pia-team.com
      version: v1alpha1
    - kind: MongoDb
      name: mongodbs.dnext.pia-team.com
      version: v1alpha1
    - kind: Ui
      name: uis.dnext.pia-team.com
      version: v1alpha1
  description: dnext operator
  displayName: dnext-operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - dnext.pia-team.com
          resources:
          - apis
          - apis/status
          - apis/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - dnext.pia-team.com
          resources:
          - uis
          - uis/status
          - uis/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - dnext.pia-team.com
          resources:
          - mongodbs
          - mongodbs/status
          - mongodbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          - statefulsets
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: dnext-controller-manager
      deployments:
      - name: dnext-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
                securityContext:
                  runAsNonRoot: true
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=dnext
                image: docker.io/piateam/dnext-operator:v0.0.4
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 300Mi
                  requests:
                    cpu: 100m
                    memory: 60Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: dnext-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: dnext-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - dnext
  - pia
  - crm
  - Telecommunication
  - order management
  - billing
  links:
  - name: Dnext
    url: https://dnext.domain
  maintainers:
  - email: merih.ilgor@pia-team.com
    name: merih ilgör
  maturity: alpha
  provider:
    name: Merih ilgör
    url: https://www.pia-team.com
  version: 0.0.4
