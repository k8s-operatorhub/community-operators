---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: flux-operator.v0.16.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [
        {
          "apiVersion": "fluxcd.controlplane.io/v1",
          "kind": "FluxInstance",
          "metadata": {
            "name": "flux",
            "namespace": "flux-system",
            "annotations": {
              "fluxcd.controlplane.io/reconcileEvery": "1h",
              "fluxcd.controlplane.io/reconcileTimeout": "5m"
            }
          },
          "spec": {
            "distribution": {
              "version": "2.x",
              "registry": "ghcr.io/fluxcd"
            },
            "components": [
              "source-controller",
              "kustomize-controller",
              "helm-controller",
              "notification-controller",
              "image-reflector-controller",
              "image-automation-controller"
            ],
            "cluster": {
              "type": "openshift",
              "domain": "cluster.local",
              "networkPolicy": true,
              "multitenant": true,
              "tenantDefaultServiceAccount": "flux"
            }
          }
        },
        {
          "apiVersion": "fluxcd.controlplane.io/v1",
          "kind": "FluxReport",
          "metadata": {
            "name": "flux",
            "namespace": "flux-system"
          },
          "spec": {
            "distribution": {
              "entitlement": "Issued by controlplane",
              "managedBy": "flux-operator",
              "status": "Installed",
              "version": "v2.3.0"
            },
          "components": [
              {
                "image": "ghcr.io/fluxcd/kustomize-controller:v1.3.0@sha256:48a032574dd45c39750ba0f1488e6f1ae36756a38f40976a6b7a588d83acefc1",
                "name": "kustomize-controller",
                "ready": true,
                "status": "Current Deployment is available. Replicas: 1"
              },
              {
                "image": "ghcr.io/fluxcd/source-controller:v1.3.0@sha256:161da425b16b64dda4b3cec2ba0f8d7442973aba29bb446db3b340626181a0bc",
                "name": "source-controller",
                "ready": true,
                "status": "Current Deployment is available. Replicas: 1"
              }
            ],
          "reconcilers": [
              {
                "apiVersion": "kustomize.toolkit.fluxcd.io/v1",
                "kind": "Kustomization",
                "stats": {
                  "failing": 0,
                  "running": 1,
                  "suspended": 0
                }
              },
              {
                "apiVersion": "source.toolkit.fluxcd.io/v1",
                "kind": "GitRepository",
                "stats": {
                  "failing": 0,
                  "running": 1,
                  "suspended": 0,
                  "totalSize": "3.7 MiB"
                }
              }
            ],
            "sync": {
              "ready": true,
              "id": "kustomization/flux-system",
              "path": "clusters/production",
              "source": "https://github.com/my-org/my-fleet.git",
              "status": "Applied revision: refs/heads/main@sha1:a90cd1ac35de01c175f7199315d3f4cd60195911"
            }
          }
        },
        {
          "apiVersion": "fluxcd.controlplane.io/v1",
          "kind": "ResourceSet",
          "metadata": {
            "name": "podinfo",
            "namespace": "default",
            "annotations": {
              "fluxcd.controlplane.io/reconcile": "enabled",
              "fluxcd.controlplane.io/reconcileEvery": "30m",
              "fluxcd.controlplane.io/reconcileTimeout": "5m"
            }
          },
          "spec": {
            "commonMetadata": {
              "labels": {
                "app.kubernetes.io/name": "podinfo"
              }
            },
            "inputs": [
              {
                "tenant": "team1",
                "version": "6.7.x",
                "replicas": "2"
              },
              {
                "tenant": "team2",
                "version": "6.6.x",
                "replicas": "3"
              }
            ],
            "resources": [
              {
                "apiVersion": "source.toolkit.fluxcd.io/v1beta2",
                "kind": "OCIRepository",
                "metadata": {
                  "name": "podinfo-<< inputs.tenant >>",
                  "namespace": "default"
                },
                "spec": {
                  "interval": "10m",
                  "url": "oci://ghcr.io/stefanprodan/charts/podinfo",
                  "ref": {
                    "semver": "<< inputs.version | quote >>"
                  }
                }
              },
              {
                "apiVersion": "helm.toolkit.fluxcd.io/v2",
                "kind": "HelmRelease",
                "metadata": {
                  "name": "podinfo-<< inputs.tenant >>",
                  "namespace": "default"
                },
                "spec": {
                  "interval": "1h",
                  "releaseName": "podinfo-<< inputs.tenant >>",
                  "chartRef": {
                    "kind": "OCIRepository",
                    "name": "podinfo-<< inputs.tenant >>"
                  },
                  "values": {
                    "replicaCount": "<< inputs.replicas | int >>"
                  }
                }
              }
            ]
          }
        },
        {
          "apiVersion": "fluxcd.controlplane.io/v1",
          "kind": "ResourceSetInputProvider",
          "metadata": {
            "name": "demo",
            "namespace": "default",
            "annotations": {
              "fluxcd.controlplane.io/reconcile": "enabled",
              "fluxcd.controlplane.io/reconcileEvery": "10m",
              "fluxcd.controlplane.io/reconcileTimeout": "1m"
            }
          },
          "spec": {
            "type": "GitHubPullRequest",
            "url": "https://github.com/fluxcd-testing/pr-testing",
            "filter": {
              "limit": 10,
              "includeBranch": "^stefanprodan-patch-.*$",
              "labels": [
                "enhancement"
              ]
            }
          }
        }
      ]
    categories: Integration & Delivery
    certified: "false"
    createdAt: 2025-02-26T09:10:54Z
    description: The Flux Operator manages the lifecycle of the CNCF Flux project.
    containerImage: ghcr.io/controlplaneio-fluxcd/flux-operator:v0.16.0
    support: Community
    capabilities: Deep Insights
    repository: https://github.com/controlplaneio-fluxcd/flux-operator
    operatorframework.io/suggested-namespace: flux-system
spec:
  displayName: Flux Operator
  description: >-
    [Flux](https://fluxcd.io) is a leading GitOps Continuous Delivery tool
    used to streamline and automate application deployments on Kubernetes.
    Flux enables teams to achieve a reliable and auditable delivery process
    while promoting collaboration and traceability across different environments.

    Flux is powered by the GitOps Toolkit, a set of composable APIs and
    specialized tools that enable a wide range of continuous delivery use-cases,
    from simple Kubernetes deployment pipelines to multi-tenant and multi-cluster
    progressive delivery rollouts.

    For more information about the CNCF-graduated Flux project, please see
    the [Flux architecture overview](https://fluxcd.control-plane.io/guides/flux-architecture/).

    ### Operator Capabilities

    The [Flux Operator](https://github.com/controlplaneio-fluxcd/flux-operator) provides a
    declarative API for the installation, configuration and upgrade of CNCF Flux
    and the ControlPlane [enterprise distribution](https://fluxcd.control-plane.io/).

    The operator allows the configuration of Flux multi-tenancy lockdown, network policies,
    persistent storage, sharding, vertical scaling, custom patches, and the synchronization
    of the cluster state from Git repositories, OCI artifacts and S3-compatible storage.

    The Flux Operator supervises the Flux controllers and provides a unified view
    of all the Flux resources that define the GitOps workflows for the target cluster.
    The operator generates reports, emits events, and exports Prometheus metrics
    to help with monitoring and troubleshooting Flux.

    ### OpenShift Support

    The Flux Operator should be installed in a dedicated namespace, e.g. `flux-system`.

    To deploy Flux on OpenShift clusters, create a `FluxInstance` custom resource
    named `flux` in the same namespace as the operator
    and set the `.spec.cluster.type` field to `openshift`.

    For more information on how to configure the Flux instance, please see the
    [Flux Operator documentation](https://fluxcd.control-plane.io/operator/flux-config/).
  maturity: beta
  version: 0.16.0
  minKubeVersion: 1.22.0
  keywords:
    - flux
    - fluxcd
    - gitops
    - continuous delivery
  maintainers:
    - name: ControlPlane Flux Team
      email: flux-enterprise@control-plane.io
  provider:
    name: ControlPlane Ltd.
    url: https://control-plane.io
  labels:
    app.kubernetes.io/name: flux-operator
  selector:
    matchLabels:
      app.kubernetes.io/name: flux-operator
  links:
    - name: Source Code
      url: https://github.com/controlplaneio-fluxcd/flux-operator
    - name: Documentation
      url: https://fluxcd.control-plane.io/operator/
    - name: Enterprise Support
      url: https://fluxcd.control-plane.io/pricing/
  icon:
    - base64data: 
      mediatype: image/png
  customresourcedefinitions:
    owned:
      - name: fluxinstances.fluxcd.controlplane.io
        displayName: FluxInstance
        kind: FluxInstance
        version: v1
        description: Flux Instance
      - name: fluxreports.fluxcd.controlplane.io
        displayName: FluxReport
        kind: FluxReport
        version: v1
        description: Flux Report (Autogenerated)
      - name: resourcesets.fluxcd.controlplane.io
        displayName: ResourceSet
        kind: ResourceSet
        version: v1
        description: Resource Set
      - name: resourcesetinputproviders.fluxcd.controlplane.io
        displayName: ResourceSetInputProvider
        kind: ResourceSetInputProvider
        version: v1
        description: ResourceSet Input Provider
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - serviceAccountName: flux-operator
          rules:
            - apiGroups:
                - "*"
              resources:
                - "*"
              verbs:
                - "*"
      services:
        - name: flux-operator
          spec:
            ports:
              - name: http-metrics
                port: 8080
                protocol: TCP
                targetPort: 8080
            selector:
              app.kubernetes.io/name: flux-operator
      deployments:
        - name: flux-operator
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/name: flux-operator
            replicas: 1
            template:
              metadata:
                annotations:
                  prometheus.io/scrape: "true"
                  prometheus.io/port: "8080"
                  prometheus.io/path: /metrics
                labels:
                  app.kubernetes.io/name: flux-operator
              spec:
                serviceAccountName: flux-operator
                terminationGracePeriodSeconds: 10
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                containers:
                  - name: manager
                    image: ghcr.io/controlplaneio-fluxcd/flux-operator:v0.16.0
                    imagePullPolicy: IfNotPresent
                    args:
                      - --default-service-account=flux-operator
                    securityContext:
                      runAsNonRoot: true
                      readOnlyRootFilesystem: true
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      seccompProfile:
                        type: RuntimeDefault
                    ports:
                      - containerPort: 8080
                        name: http-metrics
                        protocol: TCP
                      - containerPort: 8081
                        name: http
                        protocol: TCP
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 1000m
                        memory: 1Gi
                      requests:
                        cpu: 10m
                        memory: 64Mi
                    env:
                      - name: RUNTIME_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                    volumeMounts:
                      - name: temp
                        mountPath: /tmp
                volumes:
                  - name: temp
                    emptyDir: {}
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: false
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
