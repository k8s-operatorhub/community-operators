apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "designer.kaoto.io/v1alpha1",
          "kind": "Kaoto",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "kaoto-operator",
              "app.kubernetes.io/instance": "kaoto-demo",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "kaoto",
              "app.kubernetes.io/part-of": "kaoto-operator"
            },
            "name": "kaoto-demo"
          },
          "spec": {}
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools, Integration & Delivery
    certified: "false"
    containerImage: "quay.io/kaotoio/kaoto-operator@sha256:de41fcb59b1b940740ead6eb49b70a35fdfdf0c1a9588d43e496a50818891155"
    createdAt: "2023-10-17T12:16:47Z"
    operators.operatorframework.io/builder: operator-sdk-v1.32.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: kaoto-operator.v0.0.9
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Kaoto is the Schema for the kaotoes API.
        displayName: Kaoto
        kind: Kaoto
        name: kaotoes.designer.kaoto.io
        version: v1alpha1
  description: Kaoto is a low code and no code integration designer to edit and deploy based on Apache Camel . It is designed to be extendable and flexible and adaptable to different usecases.
  displayName: Kaoto Operator
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - pods/log
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - serviceaccounts
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - camel.apache.org
              resources:
                - integrations
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - camel.apache.org
              resources:
                - kameletbindings
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - camel.apache.org
              resources:
                - kamelets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - designer.kaoto.io
              resources:
                - kaotoes
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - designer.kaoto.io
              resources:
                - kaotoes/finalizers
              verbs:
                - update
            - apiGroups:
                - designer.kaoto.io
              resources:
                - kaotoes/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: kaoto-operator
      deployments:
        - label:
            app.kubernetes.io/component: manager
            app.kubernetes.io/created-by: kaoto-operator
            app.kubernetes.io/instance: controller-manager
            app.kubernetes.io/managed-by: kustomize
            app.kubernetes.io/name: deployment
            app.kubernetes.io/part-of: kaoto-operator
            control-plane: controller-manager
          name: kaoto-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: kaoto-operator
            strategy: {}
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  control-plane: kaoto-operator
              spec:
                containers:
                  - args:
                      - run
                      - --leader-election
                    command:
                      - /kaoto
                    image: quay.io/kaotoio/kaoto-operator@sha256:de41fcb59b1b940740ead6eb49b70a35fdfdf0c1a9588d43e496a50818891155
                    imagePullPolicy: Always
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 10m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                securityContext:
                  runAsNonRoot: true
                serviceAccountName: kaoto-operator
                terminationGracePeriodSeconds: 10
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: kaoto-operator
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - integration
    - kaoto
    - camel-k
    - designer
  links:
    - name: Kaoto Operator
      url: https://kaoto-operator.domain
  maintainers:
    - email: info@kaoto.io
      name: kaoto
  maturity: alpha
  minKubeVersion: 1.22.0
  provider:
    name: kaoto.io
    url: https://kaoto.io
  relatedImages:
    - image: quay.io/kaotoio/kaoto-operator@sha256:de41fcb59b1b940740ead6eb49b70a35fdfdf0c1a9588d43e496a50818891155
      name: manager
  version: 0.0.9
  skips:
    - kaoto-operator.v0.0.8
  replaces: kaoto-operator.v0.0.7
