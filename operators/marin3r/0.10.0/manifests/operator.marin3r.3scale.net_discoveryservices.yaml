apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: discoveryservices.operator.marin3r.3scale.net
spec:
  group: operator.marin3r.3scale.net
  names:
    kind: DiscoveryService
    listKind: DiscoveryServiceList
    plural: discoveryservices
    singular: discoveryservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DiscoveryService represents an envoy discovery service server.
          Only one instance per namespace is currently supported.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DiscoveryServiceSpec defines the desired state of DiscoveryService
            properties:
              debug:
                description: Debug enables debugging log level for the discovery service
                  controllers. It is safe to use since secret data is never shown
                  in the logs.
                type: boolean
              image:
                description: Image holds the image to use for the discovery service
                  Deployment
                type: string
              metricsPort:
                description: MetricsPort is the port where metrics are served. Defaults
                  to 8383.
                format: int32
                type: integer
              pkiConfg:
                description: PKIConfig has configuration for the PKI that marin3r
                  manages for the different certificates it requires
                properties:
                  rootCertificateAuthority:
                    description: CertificateOptions specifies options to generate
                      the server certificate used both for the xDS server and the
                      mutating webhook server.
                    properties:
                      duration:
                        type: string
                      secretName:
                        type: string
                    required:
                    - duration
                    - secretName
                    type: object
                  serverCertificate:
                    description: CertificateOptions specifies options to generate
                      the server certificate used both for the xDS server and the
                      mutating webhook server.
                    properties:
                      duration:
                        type: string
                      secretName:
                        type: string
                    required:
                    - duration
                    - secretName
                    type: object
                required:
                - rootCertificateAuthority
                - serverCertificate
                type: object
              resources:
                description: Resources holds the Resource Requirements to use for
                  the discovery service Deployment. When not set it defaults to no
                  resource requests nor limits. CPU and Memory resources are supported.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceConfig:
                description: ServiceConfig configures the way the DiscoveryService
                  endpoints are exposed
                properties:
                  name:
                    type: string
                  type:
                    description: ServiceType is an enum with the available discovery
                      service Service types
                    type: string
                type: object
              xdsServerPort:
                description: XdsServerPort is the port where the xDS server listens.
                  Defaults to 18000.
                format: int32
                type: integer
            type: object
          status:
            description: DiscoveryServiceStatus defines the observed state of DiscoveryService
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
