apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "Keycloak",
          "metadata": {
            "name": "keycloak-sample"
          },
          "spec": {
            "secret": "my-keycloak-secret",
            "url": "https://example.com"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakAuthFlow",
          "metadata": {
            "name": "keycloakauthflow-sample"
          },
          "spec": {
            "alias": "MyBrowser",
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "priority": 0,
                "requirement": "ALTERNATIVE"
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorConfig": {
                  "alias": "my-alias",
                  "config": {
                    "defaultProvider": "my-alias"
                  }
                },
                "priority": 1,
                "requirement": "REQUIRED"
              }
            ],
            "builtIn": false,
            "description": "browser with idp",
            "providerId": "basic-flow",
            "realm": "d2-id-k8s-realm-name",
            "topLevel": true
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakClient",
          "metadata": {
            "name": "keycloakclient-sample"
          },
          "spec": {
            "advancedProtocolMappers": true,
            "clientId": "agocd",
            "defaultClientScopes": [
              "argocd_groups"
            ],
            "directAccess": true,
            "public": false,
            "secret": "",
            "targetRealm": "edp-main",
            "webUrl": "https://argocd.example.com"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakClientScope",
          "metadata": {
            "name": "keycloakclientscope-sample"
          },
          "spec": {
            "description": "Group Membership",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMappers": [
              {
                "config": {
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "full.path": "false",
                  "id.token.claim": "true",
                  "userinfo.token.claim": "true"
                },
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-group-membership-mapper"
              }
            ],
            "realm": "main"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealm",
          "metadata": {
            "name": "keycloakrealm-sample"
          },
          "spec": {
            "id": "d1-id-kc-realm-name",
            "keycloakOwner": "main",
            "passwordPolicy": [
              {
                "type": "forceExpiredPasswordChange",
                "value": "365"
              },
              {
                "type": "length",
                "value": "8"
              }
            ],
            "realmEventConfig": {
              "adminEventsDetailsEnabled": false,
              "adminEventsEnabled": true,
              "enabledEventTypes": [
                "UPDATE_CONSENT_ERROR",
                "CLIENT_LOGIN"
              ],
              "eventsEnabled": true,
              "eventsExpiration": 15000,
              "eventsListeners": [
                "jboss-logging"
              ]
            },
            "realmName": "d2-id-kc-realm-name",
            "ssoAutoRedirectEnabled": false,
            "ssoRealmEnabled": false,
            "ssoRealmName": "openshift"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmComponent",
          "metadata": {
            "name": "keycloakrealmcomponent-sample"
          },
          "spec": {
            "config": {
              "allowPasswordAuthentication": [
                "true"
              ],
              "cachePolicy": [
                "EVICT_WEEKLY"
              ],
              "debug": [
                "true"
              ],
              "editMode": [
                "READ_ONLY"
              ],
              "enabled": [
                "true"
              ],
              "evictionDay": [
                "3"
              ],
              "evictionHour": [
                "5"
              ],
              "evictionMinute": [
                "7"
              ],
              "kerberosRealm": [
                "test-realm"
              ],
              "keyTab": [
                "test-key-tab"
              ],
              "priority": [
                "0"
              ],
              "serverPrincipal": [
                "srv-principal-test"
              ],
              "updateProfileFirstLogin": [
                "true"
              ]
            },
            "name": "cr-kerb-test",
            "providerId": "kerberos",
            "providerType": "org.keycloak.storage.UserStorageProvider",
            "realm": "d1-id-k8s-realm-name"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmGroup",
          "metadata": {
            "name": "keycloakrealmgroup-sample"
          },
          "spec": {
            "clientRoles": null,
            "name": "ArgoCDAdmins",
            "realm": "main"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmIdentityProvider",
          "metadata": {
            "name": "keycloakrealmidentityprovider-sample"
          },
          "spec": {
            "alias": "instagram",
            "authenticateByDefault": false,
            "config": {
              "clientId": "foo",
              "clientSecret": "bar",
              "hideOnLoginPage": "true",
              "syncMode": "IMPORT",
              "useJwksUrl": "true"
            },
            "enabled": true,
            "firstBrokerLoginFlowAlias": "first broker login",
            "mappers": [
              {
                "config": {
                  "role": "role-tr",
                  "syncMode": "INHERIT"
                },
                "identityProviderAlias": "instagram",
                "identityProviderMapper": "oidc-hardcoded-role-idp-mapper",
                "name": "test3212"
              },
              {
                "config": {
                  "attribute": "foo",
                  "attribute.value": "bar",
                  "syncMode": "IMPORT"
                },
                "identityProviderAlias": "instagram",
                "identityProviderMapper": "hardcoded-attribute-idp-mapper",
                "name": "test-33221"
              }
            ],
            "providerId": "instagram",
            "realm": "d2-id-k8s-realm-name"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmRole",
          "metadata": {
            "name": "keycloakrealmrole-sample"
          },
          "spec": {
            "attributes": null,
            "composite": true,
            "composites": null,
            "description": "default developer role",
            "name": "developer",
            "realm": "main"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmRoleBatch",
          "metadata": {
            "name": "keycloakrealmrolebatch-sample"
          },
          "spec": {
            "realm": "main",
            "roles": [
              {
                "attributes": null,
                "composite": true,
                "composites": null,
                "description": "default developer role",
                "isDefault": false,
                "name": "developer"
              },
              {
                "attributes": null,
                "composite": true,
                "composites": null,
                "description": "default administrator role",
                "isDefault": false,
                "name": "administrator"
              }
            ]
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1",
          "kind": "KeycloakRealmUser",
          "metadata": {
            "name": "keycloakrealmuser-sample"
          },
          "spec": {
            "attributes": {
              "baz": "jazz",
              "foo": "bar"
            },
            "email": "john.snow13@example.com",
            "emailVerified": true,
            "enabled": true,
            "firstName": "John",
            "keepResource": true,
            "lastName": "Snow",
            "password": "12345678",
            "realm": "d1-id-k8s-realm-name",
            "requiredUserActions": [
              "UPDATE_PASSWORD"
            ],
            "username": "john.snow13"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1alpha1",
          "kind": "ClusterKeycloak",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "edp-keycloak-operator",
              "app.kubernetes.io/instance": "clusterkeycloak-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "clusterkeycloak",
              "app.kubernetes.io/part-of": "edp-keycloak-operator"
            },
            "name": "clusterkeycloak-sample"
          },
          "spec": {
            "secret": "keycloak-access",
            "url": "https://keycloak.example.com"
          }
        },
        {
          "apiVersion": "v1.edp.epam.com/v1alpha1",
          "kind": "ClusterKeycloakRealm",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "edp-keycloak-operator",
              "app.kubernetes.io/instance": "clusterkeycloakrealm-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "clusterkeycloakrealm",
              "app.kubernetes.io/part-of": "edp-keycloak-operator"
            },
            "name": "clusterkeycloakrealm-sample"
          },
          "spec": {
            "keycloakRef": {
              "kind": "ClusterKeycloak",
              "name": "clusterkeycloak-sample"
            },
            "realmName": "realm-sample"
          }
        }
      ]
    capabilities: Deep Insights
    categories: Security
    containerImage: docker.io/epamedp/keycloak-operator:1.17.0
    createdAt: "2023-09-02T15:49:43Z"
    description: An Operator for managing Keycloak
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/epam/edp-keycloak-operator
  name: edp-keycloak-operator.v1.17.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ClusterKeycloakRealm is the Schema for the clusterkeycloakrealms
        API.
      displayName: Cluster Keycloak Realm
      kind: ClusterKeycloakRealm
      name: clusterkeycloakrealms.v1.edp.epam.com
      version: v1alpha1
    - description: ClusterKeycloak is the Schema for the clusterkeycloaks API.
      displayName: Cluster Keycloak
      kind: ClusterKeycloak
      name: clusterkeycloaks.v1.edp.epam.com
      version: v1alpha1
    - description: KeycloakAuthFlow is the Schema for the keycloak authentication
        flow API.
      displayName: Keycloak Auth Flow
      kind: KeycloakAuthFlow
      name: keycloakauthflows.v1.edp.epam.com
      version: v1
    - description: KeycloakClient is the Schema for the keycloak clients API.
      displayName: Keycloak Client
      kind: KeycloakClient
      name: keycloakclients.v1.edp.epam.com
      version: v1
    - description: KeycloakClientScope is the Schema for the keycloakclientscopes
        API.
      displayName: Keycloak Client Scope
      kind: KeycloakClientScope
      name: keycloakclientscopes.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmComponent is the Schema for the keycloak component
        API.
      displayName: Keycloak Realm Component
      kind: KeycloakRealmComponent
      name: keycloakrealmcomponents.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmGroup is the Schema for the keycloak group API.
      displayName: Keycloak Realm Group
      kind: KeycloakRealmGroup
      name: keycloakrealmgroups.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmIdentityProvider is the Schema for the keycloak realm
        identity provider API.
      displayName: Keycloak Realm Identity Provider
      kind: KeycloakRealmIdentityProvider
      name: keycloakrealmidentityproviders.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmRoleBatch is the Schema for the keycloak roles API.
      displayName: Keycloak Realm Role Batch
      kind: KeycloakRealmRoleBatch
      name: keycloakrealmrolebatches.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmRole is the Schema for the keycloak group API.
      displayName: Keycloak Realm Role
      kind: KeycloakRealmRole
      name: keycloakrealmroles.v1.edp.epam.com
      version: v1
    - description: KeycloakRealm is the Schema for the keycloak realms API.
      displayName: Keycloak Realm
      kind: KeycloakRealm
      name: keycloakrealms.v1.edp.epam.com
      version: v1
    - description: KeycloakRealmUser is the Schema for the keycloak user API.
      displayName: Keycloak Realm User
      kind: KeycloakRealmUser
      name: keycloakrealmusers.v1.edp.epam.com
      version: v1
    - description: Keycloak is the Schema for the keycloaks API.
      displayName: Keycloak
      kind: Keycloak
      name: keycloaks.v1.edp.epam.com
      version: v1
  description: |
    Keycloak Operator is an operator that is responsible for establishing
    a connection to provided Keycloak Server, reconciling Keycloak entities (realms,
    roles, groups, users, etc) according to the created CRs.

    ## Quick Start

    1. Create a User in the Keycloak `Master` realm, and assign a `create-realm` role.

    2. Insert newly created user credentials into Kubernetes secret:

        ```yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name:  keycloak-access
        type: Opaque
        data:
          username: dXNlcg==   # base64-encoded value of "user"
          password: cGFzcw==   # base64-encoded value of "pass"
        ```

    3. Create Custom Resource `kind: Keycloak` with Keycloak instance URL and secret created on the previous step:

        ```yaml
        apiVersion: v1.edp.epam.com/v1
        kind: Keycloak
        metadata:
          name: keycloak-sample
        spec:
          secret: keycloak-access             # Secret name
          url: https://keycloak.example.com   # Keycloak URL
        ```

        Wait for the `.status` field with  `status.connected: true`

    4. Create Keycloak realm and group using Custom Resources:

      ```yaml
      apiVersion: v1.edp.epam.com/v1
      kind: KeycloakRealm
      metadata:
        name: keycloakrealm-sample
      spec:
        realmName: realm-sample
        keycloakOwner: keycloak-sample   # the name of `kind: Keycloak`
        ```

        ```yaml
        apiVersion: v1.edp.epam.com/v1
        kind: KeycloakRealmGroup
        metadata:
          name: argocd-admins
        spec:
          name: ArgoCDAdmins
          realm: keycloakrealm-sample   # the name of `kind: KeycloakRealm`
        ```
  displayName: EDP Keycloak Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      deployments:
      - label:
          control-plane: controller-manager
        name: edp-keycloak-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/epamedp/keycloak-operator:1.17.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: edp-keycloak-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakauthflows
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakauthflows/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakauthflows/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclients
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclients/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclients/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclientscopes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclientscopes/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakclientscopes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmcomponents
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmcomponents/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmcomponents/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmgroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmgroups/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmgroups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmidentityproviders
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmidentityproviders/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmidentityproviders/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmrolebatches
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmrolebatches/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmrolebatches/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmroles/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmroles/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealms
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealms/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealms/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmusers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmusers/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloakrealmusers/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloaks
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloaks/finalizers
          verbs:
          - update
        - apiGroups:
          - v1.edp.epam.com
          resources:
          - keycloaks/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: edp-keycloak-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - authentication
  - authorization
  - edp
  - idp
  - keycloak
  - oauth
  - oidc
  - operator
  - saml
  - sso
  links:
  - name: Edp Keycloak Operator
    url: https://github.com/epam/edp-keycloak-operator
  maintainers:
  - email: SupportEPMD-EDP@epam.com
    name: epmd-edp
  maturity: alpha
  minKubeVersion: 1.20.0
  provider:
    name: EPAM Delivery Platform
    url: https://epam.github.io/edp-install/
  version: 1.17.0
