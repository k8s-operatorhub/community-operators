apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasBackupPolicy",
          "metadata": {
            "name": "atlasbackuppolicy-sample"
          },
          "spec": {
            "items": [
              {
                "frequencyInterval": 3,
                "frequencyType": "daily",
                "retentionUnit": "weeks",
                "retentionValue": 2
              }
            ]
          }
        },
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasBackupSchedule",
          "metadata": {
            "name": "atlasbackupschedule-sample"
          },
          "spec": {
            "autoExportEnabled": false,
            "copySettings": [
              {
                "cloudProvider": "AWS",
                "frequencies": [
                  "WEEKLY"
                ],
                "regionName": "US_WEST_1",
                "replicationSpecId": "a1b2c3",
                "shouldCopyOplogs": false
              }
            ],
            "policy": {
              "name": "atlasbackuppolicy-sample"
            },
            "referenceHourOfDay": 10,
            "referenceMinuteOfHour": 10,
            "restoreWindowDays": 2,
            "useOrgAndGroupNamesInExportPrefix": true
          }
        },
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasDatabaseUser",
          "metadata": {
            "name": "my-database-user"
          },
          "spec": {
            "databaseName": "admin",
            "passwordSecretRef": {
              "name": "my-database-user-password"
            },
            "projectRef": {
              "name": "my-project"
            },
            "roles": [
              {
                "databaseName": "admin",
                "roleName": "readWriteAnyDatabase"
              }
            ],
            "username": "david"
          }
        },
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasDeployment",
          "metadata": {
            "name": "my-atlas-deployment"
          },
          "spec": {
            "deploymentSpec": {
              "name": "test-deployment",
              "providerSettings": {
                "instanceSizeName": "M10",
                "providerName": "AWS",
                "regionName": "US_EAST_1"
              }
            },
            "projectRef": {
              "name": "my-project"
            }
          }
        },
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasProject",
          "metadata": {
            "name": "my-project"
          },
          "spec": {
            "name": "Test Atlas Operator Project",
            "projectIpAccessList": [
              {
                "comment": "IP address for Application Server A",
                "ipAddress": "192.0.2.15"
              }
            ]
          }
        },
        {
          "apiVersion": "atlas.mongodb.com/v1",
          "kind": "AtlasTeam",
          "metadata": {
            "name": "atlasteam-sample"
          },
          "spec": {
            "name": "my-team",
            "usernames": [
              "username@mongodb.com"
            ]
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Database
    description: The MongoDB Atlas Kubernetes Operator enables easy management of Clusters in MongoDB Atlas
    operators.operatorframework.io/builder: operator-sdk-v1.15.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    containerImage: quay.io/mongodb/mongodb-atlas-kubernetes-operator:1.7.2
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  name: mongodb-atlas-kubernetes.v1.7.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: AtlasBackupPolicy is the Schema for the atlasbackuppolicies API
        displayName: Atlas Backup Policy
        kind: AtlasBackupPolicy
        name: atlasbackuppolicies.atlas.mongodb.com
        version: v1
      - description: AtlasBackupSchedule is the Schema for the atlasbackupschedules API
        displayName: Atlas Backup Schedule
        kind: AtlasBackupSchedule
        name: atlasbackupschedules.atlas.mongodb.com
        version: v1
      - description: AtlasDatabaseUser is the Schema for the Atlas Database User API
        displayName: Atlas Database User
        kind: AtlasDatabaseUser
        name: atlasdatabaseusers.atlas.mongodb.com
        version: v1
      - description: AtlasDeployment is the Schema for the atlasdeployments API
        displayName: Atlas Deployment
        kind: AtlasDeployment
        name: atlasdeployments.atlas.mongodb.com
        version: v1
      - description: AtlasProject is the Schema for the atlasprojects API
        displayName: Atlas Project
        kind: AtlasProject
        name: atlasprojects.atlas.mongodb.com
        version: v1
      - description: AtlasTeam is the Schema for the Atlas Teams API
        displayName: Atlas Team
        kind: AtlasTeam
        name: atlasteams.atlas.mongodb.com
        version: v1
  description: |
    The MongoDB Atlas Operator provides a native integration between the Kubernetes orchestration platform and MongoDB Atlas â€”
    the only multi-cloud document database service that gives you the versatility you need to build sophisticated and resilient applications that can adapt to changing customer demands and market trends.

    > Current Status: *Stable*. The Operator gives users the ability to provision
    > Atlas projects, clusters and database users using Kubernetes Specifications and bind connection information
    > into applications deployed to Kubernetes.

    ## Quick Start guide
    ### Step 1. Deploy Kubernetes operator by clicking Install button.

    ### Step 2. Create Atlas Cluster

    **1.** Create an Atlas API Key Secret
    In order to work with the Atlas Operator you need to provide [authentication information](https://docs.atlas.mongodb.com/configure-api-access)
     to allow the Atlas Operator to communicate with Atlas API. Once you have generated a Public and Private key in Atlas, you can create a Kuberentes Secret with:
    ```
    kubectl create secret generic mongodb-atlas-operator-api-key \
             --from-literal="orgId=<the_atlas_organization_id>" \
             --from-literal="publicApiKey=<the_atlas_api_public_key>" \
             --from-literal="privateApiKey=<the_atlas_api_private_key>" \
             -n openshift-operators
    ```
    (Note, that you should use the namespace where the Operator was installed - it's `openshift-operators` by default)

    **2.** Create an `AtlasProject` Custom Resource

    The `AtlasProject` CustomResource represents Atlas Projects in our Kubernetes cluster. You need to specify
    `projectIpAccessList` with the IP addresses or CIDR blocks of any hosts that will connect to the Atlas Cluster.
    ```
    apiVersion: atlas.mongodb.com/v1
    kind: AtlasProject
    metadata:
      name: my-project
    spec:
      name: Test Atlas Operator Project
      projectIpAccessList:
        - ipAddress: "192.0.2.15"
          comment: "IP address for Application Server A"
        - cidrBlock: "203.0.113.0/24"
          comment: "CIDR block for Application Server B - D"
    ```
    **3.** Create an `AtlasDeployment` Custom Resource.
    The example below is a minimal configuration to create an M10 Atlas cluster in the AWS US East region. For a full list of properties, check
    `atlasdeployments.atlas.mongodb.com` [CRD specification](config/crd/bases/atlas.mongodb.com_atlasdeployments.yaml)):
    ```
    apiVersion: atlas.mongodb.com/v1
    kind: AtlasDeployment
    metadata:
      name: my-atlas-cluster
    spec:
      name: "Test-cluster"
      projectRef:
        name: my-project
      providerSettings:
        instanceSizeName: M10
        providerName: AWS
        regionName: US_EAST_1
    ```

    **4.** Create a database user password Kubernetes Secret
    The Secret must be created in the same namespace as the `AtlasDeployment` and `AtlasProject` were created.
    ```
    kubectl create secret generic the-user-password --from-literal="password=P@@sword%"
    ```

    **5.** Create an `AtlasDatabaseUser` Custom Resource

    In order to connect to an Atlas Cluster the database user needs to be created. `AtlasDatabaseUser` resource should reference
    the password Kubernetes Secret created in the previous step.
    ```
    apiVersion: atlas.mongodb.com/v1
    kind: AtlasDatabaseUser
    metadata:
      name: my-database-user
    spec:
      roles:
        - roleName: "readWriteAnyDatabase"
          databaseName: "admin"
      projectRef:
        name: my-project
      username: theuser
      passwordSecretRef:
        name: the-user-password
    ```
    **6.** Wait for the `AtlasDatabaseUser` Custom Resource to be ready

    Wait until the AtlasDatabaseUser resource gets to "ready" status (it will wait until the cluster is created that may take around 10 minutes):
    ```
    kubectl get atlasdatabaseusers my-database-user -o=jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
    True
    ```
    ### Step 3. Connect your application to the Atlas Cluster

    The Atlas Operator will create a Kubernetes Secret with the information necessary to connect to the Atlas Cluster created
    in the previous step. An application in the same Kubernetes Cluster can mount and use the Secret:

    ```
    ...
    containers:
          - name: test-app
            env:
             - name: "CONNECTION_STRING"
               valueFrom:
                 secretKeyRef:
                   name: test-atlas-operator-project-test-cluster-theuser
                   key: connectionStringStandardSrv

    ```
  displayName: MongoDB Atlas Operator
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasbackuppolicies
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasbackuppolicies/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasbackupschedules
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasbackupschedules/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasdatabaseusers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasdatabaseusers/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasdeployments
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasdeployments/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasprojects
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasprojects/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasteams
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - atlas.mongodb.com
              resources:
                - atlasteams/status
              verbs:
                - get
                - patch
                - update
          serviceAccountName: mongodb-atlas-operator
      deployments:
        - name: mongodb-atlas-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/component: controller
                app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
                app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
            strategy: {}
            template:
              metadata:
                labels:
                  app.kubernetes.io/component: controller
                  app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
                  app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
              spec:
                containers:
                  - args:
                      - --atlas-domain=https://cloud.mongodb.com/
                      - --leader-elect
                      - --health-probe-bind-address=:8081
                      - --metrics-bind-address=127.0.0.1:8080
                      - --log-level=info
                      - --log-encoder=json
                    command:
                      - /manager
                    env:
                      - name: OPERATOR_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                    image: quay.io/mongodb/mongodb-atlas-kubernetes-operator:1.7.2
                    imagePullPolicy: Always
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 100m
                        memory: 50Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                serviceAccountName: mongodb-atlas-operator
                terminationGracePeriodSeconds: 10
      permissions:
        - rules:
            - apiGroups:
                - ""
                - coordination.k8s.io
              resources:
                - configmaps
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: mongodb-atlas-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - MongoDB
    - Atlas
    - Database
    - Replica Set
    - Cluster
  links:
    - name: MongoDB Atlas Kubernetes
      url: https://github.com/mongodb/mongodb-atlas-kubernetes
  maintainers:
    - email: support@mongodb.com
      name: MongoDB, Inc
  maturity: beta
  provider:
    name: MongoDB, Inc
  version: 1.7.2
  replaces: mongodb-atlas-kubernetes.v1.7.1
