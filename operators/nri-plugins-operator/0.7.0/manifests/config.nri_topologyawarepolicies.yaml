apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: topologyawarepolicies.config.nri
spec:
  group: config.nri
  names:
    kind: TopologyAwarePolicy
    listKind: TopologyAwarePolicyList
    plural: topologyawarepolicies
    singular: topologyawarepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TopologyAwarePolicy represents the configuration for the topology-aware
          policy.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopologyAwarePolicySpec describes a topology-aware policy.
            properties:
              availableResources:
                additionalProperties:
                  type: string
                description: |-
                  AvailableResources defines the bounding set for the policy to allocate
                  resources from.
                type: object
              colocateNamespaces:
                description: |-
                  ColocateNamespaces controls whether an attempt is made to allocate all
                  containers of pods in a namespace close to each other (to the same topology
                  zone).
                type: boolean
              colocatePods:
                description: |-
                  ColocatePods controls whether an attempt is made to allocate containers
                  within the same pod close to each other (to the same topology zone).
                type: boolean
              control:
                properties:
                  cpu:
                    properties:
                      classes:
                        additionalProperties:
                          properties:
                            energyPerformancePreference:
                              description: EnergyPerformancePreference for CPUs in
                                this class.
                              type: integer
                            maxFreq:
                              description: MaxFreq is the maximum frequency for this
                                class.
                              type: integer
                            minFreq:
                              description: MinFreq is the minimum frequency for this
                                class.
                              type: integer
                            uncoreMaxFreq:
                              description: UncoreMaxFreq is the maximum uncore frequency
                                for this class.
                              type: integer
                            uncoreMinFreq:
                              description: UncoreMinFreq is the minimum uncore frequency
                                for this class.
                              type: integer
                          required:
                          - maxFreq
                          - minFreq
                          type: object
                        type: object
                    required:
                    - classes
                    type: object
                type: object
              defaultCPUPriority:
                default: none
                description: |-
                  DefaultCPUPriority (high, normal, low, none) is the preferred CPU
                  priority for allocated CPUs when a container has not been annotated
                  with any other CPU preference.
                  Notes: Currently this option only affects exclusive CPU allocations.
                enum:
                - high
                - normal
                - low
                - none
                type: string
              instrumentation:
                description: Config provides runtime configuration for instrumentation.
                properties:
                  httpEndpoint:
                    description: |-
                      HTTPEndpoint is the address our HTTP server listens on. This endpoint is used
                      to expose Prometheus metrics among other things.
                    example: :8891
                    type: string
                  prometheusExport:
                    description: PrometheusExport enables exporting /metrics for Prometheus.
                    type: boolean
                  reportPeriod:
                    description: ReportPeriod is the interval between reporting aggregated
                      metrics.
                    format: duration
                    type: string
                  samplingRatePerMillion:
                    description: SamplingRatePerMillion is the number of samples to
                      collect per million spans.
                    example: 100000
                    type: integer
                  tracingCollector:
                    description: |-
                      TracingCollector defines the external endpoint for tracing data collection.
                      Endpoints are specified as full URLs, or as plain URL schemes which then
                      imply scheme-specific defaults. The supported schemes and their default
                      URLs are:
                        - otlp-http, http: localhost:4318
                        - otlp-grpc, grpc: localhost:4317
                    example: otlp-http://localhost:4318
                    type: string
                type: object
              log:
                properties:
                  debug:
                    description: Debub turns on debug messages matching listed logger
                      sources.
                    items:
                      type: string
                    type: array
                  klog:
                    description: Klog configures the klog backend.
                    properties:
                      add_dir_header:
                        type: boolean
                      alsologtostderr:
                        type: boolean
                      log_backtrace_at:
                        type: string
                      log_dir:
                        type: string
                      log_file:
                        type: string
                      log_file_max_size:
                        format: int64
                        type: integer
                      logtostderr:
                        type: boolean
                      one_output:
                        type: boolean
                      skip_headers:
                        type: boolean
                      skip_log_headers:
                        type: boolean
                      stderrthreshold:
                        type: string
                      v:
                        type: integer
                      vmodule:
                        type: string
                    type: object
                  source:
                    description: Source controls whether messages are prefixed with
                      their logger source.
                    type: boolean
                type: object
              pinCPU:
                default: true
                description: PinCPU controls whether the policy pins containers to
                  allocated CPUs.
                type: boolean
              pinMemory:
                default: true
                description: PinMemory controls whether the policy pins containers
                  allocated memory nodes.
                type: boolean
              preferIsolatedCPUs:
                default: true
                description: |-
                  PreferIsolated controls whether kernel-isolated CPUs are preferred for
                  Guaranteed QoS-class containers that request 1 full CPU.
                type: boolean
              preferSharedCPUs:
                description: |-
                  PreferShared controls whether exclusive CPU allocation is considered for
                  all eligible containers. If set to trues, exclusive CPU allocation is only
                  considered for eligible containers which are explicitly annotated to opt
                  out from shared allocation.
                type: boolean
              reservedPoolNamespaces:
                description: |-
                  ReservedPoolNamespaces lists extra namespaces which are treated like
                  'kube-system' (resources allocate from the reserved pool).
                items:
                  type: string
                type: array
              reservedResources:
                additionalProperties:
                  type: string
                description: |-
                  ReservedResources defines the resources reserved namespaces get assigned
                  to. If AvailableResources is defined, ReservedResources must be a subset
                  of it.
                type: object
            required:
            - reservedResources
            type: object
          status:
            description: ConfigStatus is the per-node status for a configuration resource.
            properties:
              nodes:
                additionalProperties:
                  description: NodeStatus is the configuration status for a single
                    node.
                  properties:
                    errors:
                      description: Error can provide further details of a configuration
                        error.
                      type: string
                    generation:
                      description: Generation is the generation the configuration
                        this status was set for.
                      format: int64
                      type: integer
                    status:
                      description: Status of activating the configuration on this
                        node.
                      enum:
                      - Success
                      - Failure
                      type: string
                    timestamp:
                      description: Timestamp of setting this status.
                      format: date-time
                      type: string
                  required:
                  - generation
                  - status
                  type: object
                type: object
            required:
            - nodes
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
