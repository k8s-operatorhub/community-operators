apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "apicodegen.apimatic.io/v1beta1",
          "kind": "APIMatic",
          "metadata": {
            "name": "apimatic-sample"
          },
          "spec": {
            "licensespec": {
              "licenseSourceName": "apimaticlicense",
              "licenseSourceType": "ConfigMap"
            },
            "podspec": {
              "apimaticContainerSpec": {
                "image": "apimaticio/apimatic-codegen",
                "imagePullSecret": "apimaticimagesecret"
              }
            },
            "replicas": 3,
            "servicespec": {
              "apimaticserviceport": {
                "nodePort": 32000,
                "port": 8070
              },
              "servicetype": "NodePort"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools
    containerImage: docker.io/apimaticio/apimatic-kubernetes-operator:v0.0.1
    createdAt: "2021-08-24 12:00:00"
    description: Operator to bring APIMatic CodeGen features within Kubernetes
    operators.operatorframework.io/builder: operator-sdk-v1.9.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/apimatic/apimatic-kubernetes-operator
    support: APIMatic.io
  name: apimatic-kubernetes-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: APIMatic is the Schema for the apimatics API
      displayName: APIMatic App
      kind: APIMatic
      name: apimatics.apicodegen.apimatic.io
      resources:
      - kind: Deployment
        name: apimatic-deployment
        version: apps/v1
      - kind: Service
        name: apimatic-service
        version: v1
      specDescriptors:
      - description: APIMaticVolumeSpec contains configuration for volumes associated
          with created APIMatic pods
        displayName: License Spec
        path: licensespec
      - description: The name of the resource that includes the APIMatic license file
          information.
        displayName: APIMatic License Source Name
        path: licensespec.licenseSourceName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The type of resource that includes the APIMatic license file
          information. Valid values are ConfigMap and ConfigSecret.
        displayName: APIMatic License Source Type
        path: licensespec.licenseSourceType
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: APIMaticPodPlacementSpec configures the APIMatic pod scheduling
          policy
        displayName: APIMatic Pod Placement Spec
        path: podplacementspec
      - description: Describes node affinity scheduling rules for the pod.
        displayName: Node Affinity
        path: podplacementspec.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: NodeName is a request to schedule this pod onto a specific node.
          If it is non-empty, the scheduler simply schedules this pod onto that node,
          assuming that it fits resource requirements.
        displayName: Node Name
        path: podplacementspec.nodeName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'NodeSelector is a selector which must be true for the pod to
          fit on a node. Selector which must match a node''s labels for the pod to
          be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
        displayName: Node Selector
        path: podplacementspec.nodeSelector
      - description: Describes pod affinity scheduling rules (e.g. co-locate this
          pod in the same node, zone, etc. as some other pod(s)).
        displayName: Pod Affinity
        path: podplacementspec.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: If specified, the pod's tolerations.
        displayName: Tolerations
        path: podplacementspec.tolerations
      - description: APIMaticPodSpec contains configuration for created APIMatic pods
        displayName: Pod Spec
        path: podspec
      - description: Optional duration in seconds the pod may be active on the node
          relative to StartTime before the system will actively try to mark it failed
          and kill associated containers. Value must be a positive integer.
        displayName: Active Deadline Seconds
        path: podspec.activeDeadlineSeconds
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: APIMaticContainerSpec defines the configurations used for the
          APIMatic CodeGen container
        displayName: APIMatic Container Spec
        path: podspec.apimaticContainerSpec
      - description: APIMatic container image
        displayName: Image
        path: podspec.apimaticContainerSpec.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults
          to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot
          be updated.More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
        displayName: Image Pull Policy
        path: podspec.apimaticContainerSpec.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: 'ImagePullSecret is an optional reference to a secret in the
          same namespace to use for pulling the APIMatic CodeGen container image.
          If specified, this secrets will be passed to the puller implementation to
          use. For example, in the case of docker, only DockerConfig type secrets
          are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
        displayName: Image Pull Secret
        path: podspec.apimaticContainerSpec.imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resource Requirements represents the compute resource requirements
          of the APIMatic container
        displayName: Resource Requirements
        path: podspec.apimaticContainerSpec.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirement
      - description: AutomountServiceAccountToken indicates whether a service account
          token should be automatically mounted.
        displayName: Automount Service Account Token
        path: podspec.automountServiceAccountToken
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies the DNS parameters of a pod. Parameters specified here
          will be merged to the generated DNS configuration based on DNSPolicy.
        displayName: DNSConfig
        path: podspec.dnsConfig
      - description: Set DNS policy for the pod. Defaults to "ClusterFirst". Valid
          values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
          DNS parameters given in DNSConfig will be merged with the policy selected
          with DNSPolicy. To have DNS options set along with hostNetwork, you have
          to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
        displayName: DNSPolicy
        path: podspec.dnsPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'EnableServiceLinks indicates whether information about services
          should be injected into pod''s environment variables, matching the syntax
          of Docker links. Optional: Defaults to true.'
        displayName: Enable Service Links
        path: podspec.enableServiceLinks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: HostAliases is an optional list of hosts and IPs that will be
          injected into the pod's hosts file if specified. This is only valid for
          non-hostNetwork pods.
        displayName: Host Aliases
        path: podspec.hostAliases
      - description: 'Use the host''s ipc namespace. Optional: Default to false.'
        displayName: Host IPC
        path: podspec.hostIPC
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host networking requested for this pod. Use the host's network
          namespace. If this option is set, the ports that will be used must be specified.
          Default to false.
        displayName: Host Network
        path: podspec.hostNetwork
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'Use the host''s pid namespace. Optional: Default to false.'
        displayName: Host PID
        path: podspec.hostPID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies the hostname of the Pod If not specified, the pod's
          hostname will be set to a system-defined value.
        displayName: Hostname
        path: podspec.hostname
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The priority value. Various system components use this field
          to find the priority of the pod. When Priority Admission Controller is enabled,
          it prevents users from setting this field. The admission controller populates
          this field from PriorityClassName. The higher the value, the higher the
          priority.
        displayName: Priority
        path: podspec.priority
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: If specified, indicates the pod's priority. "system-node-critical"
          and "system-cluster-critical" are two special keywords which indicate the
          highest priorities with the former being the highest priority. Any other
          name must be defined by creating a PriorityClass object with that name.
          If not specified, the pod priority will be default or zero if there is no
          default.
        displayName: Priority Class Name
        path: podspec.priorityClassName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'If specified, all readiness gates will be evaluated for pod
          readiness. A pod is ready when all its containers are ready AND all conditions
          specified in the readiness gates have status equal to "True" More info:
          https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md'
        displayName: Readiness Gates
        path: podspec.readinessGates
      - description: 'Restart policy for all containers within the pod. One of Always,
          OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
        displayName: Restart Policy
        path: podspec.restartPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: If specified, the pod will be dispatched by specified scheduler.
          If not specified, the pod will be dispatched by default scheduler.
        displayName: Scheduler Name
        path: podspec.schedulerName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'SecurityContext holds pod-level security attributes and common
          container settings. Optional: Defaults to empty.  See type description for
          default values of each field.'
        displayName: Security Context
        path: podspec.securityContext
      - description: 'ServiceAccountName is the name of the ServiceAccount to use
          to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
        displayName: Service Account Name
        path: podspec.serviceAccountName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: If a pod does not have FQDN, this has no effect. Default to false.
        displayName: Set Hostname As FQDN
        path: podspec.setHostnameAsFQDN
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod
          namespace>.svc.<cluster domain>". If not specified, the pod will not have
          a domainname at all.
        displayName: Subdomain
        path: podspec.subdomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional duration in seconds the pod needs to terminate gracefully.
          May be decreased in delete request. Value must be non-negative integer.
          The value zero indicates delete immediately. If this value is nil, the default
          grace period will be used instead. The grace period is the duration in seconds
          after the processes running in the pod are sent a termination signal and
          the time when the processes are forcibly halted with a kill signal. Set
          this value longer than the expected cleanup time for your process. Defaults
          to 30 seconds.
        displayName: Termination Grace Period Seconds
        path: podspec.terminationGracePeriodSeconds
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: replicas is the desired number of instances of APIMatic. Minimum
          is 0. Defaults to 1 if not provided
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: APIMaticServiceSpec contains configuration for the service that
          exposes the APIMatic pods
        displayName: Service Spec
        path: servicespec
      - description: APIMatic Service Port specifies how the APIMatic service is exposed
          within the pod
        displayName: APIMatic Service Port
        path: servicespec.apimaticserviceport
      - description: The name of the APIMatic service port within the service. This
          must be a DNS_LABEL. Defaults to apimatic
        displayName: Name
        path: servicespec.apimaticserviceport.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'The port on each node on which this service is exposed when
          type is NodePort or LoadBalancer.  Usually assigned by the system. If a
          value is specified, in-range, and not in use it will be used, otherwise
          the operation will fail.  If not specified, a port will be allocated if
          this Service requires one.  If this field is specified when creating a Service
          which does not need it, creation will fail. This field will be wiped when
          updating a Service to no longer need it (e.g. changing type from NodePort
          to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
        displayName: Node Port
        path: servicespec.apimaticserviceport.nodePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: The port that will be exposed by this service.
        displayName: Port
        path: servicespec.apimaticserviceport.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: 'clusterIP is the IP address of the service and is usually assigned
          randomly. If an address is specified manually, is in-range (as per system
          configuration), and is not in use, it will be allocated to the service;
          otherwise creation of the service will fail. This field may not be changed
          through updates unless the type field is also being changed to ExternalName
          (which requires this field to be blank) or the type field is being changed
          from ExternalName (in which case this field may optionally be specified,
          as describe above).  Valid values are "None", empty string (""), or a valid
          IP address. Setting this to "None" makes a "headless service" (no virtual
          IP), which is useful when direct endpoint connections are preferred and
          proxying is not required.  Only applies to types ClusterIP, NodePort, and
          LoadBalancer. If this field is specified when creating a Service of type
          ExternalName, creation will fail. This field will be wiped when updating
          a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
        displayName: Cluster IP
        path: servicespec.clusterIP
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: externalIPs is a list of IP addresses for which nodes in the
          cluster will also accept traffic for this service.  These IPs are not managed
          by Kubernetes.  The user is responsible for ensuring that traffic arrives
          at a node with this IP.  A common example is external load-balancers that
          are not part of the Kubernetes system.
        displayName: External IPs
        path: servicespec.externalIPs
      - description: externalName is the external reference that discovery mechanisms
          will return as an alias for this service (e.g. a DNS CNAME record). No proxying
          will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
          and requires Type to be ExternalName
        displayName: External Name
        path: servicespec.externalName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: externalTrafficPolicy denotes if this Service desires to route
          external traffic to node-local or cluster-wide endpoints. "Local" preserves
          the client source IP and avoids a second hop for LoadBalancer and Nodeport
          type services, but risks potentially imbalanced traffic spreading. "Cluster"
          obscures the client source IP and may cause a second hop to another node,
          but should have good overall load-spreading. Only set if Type is LoadBalancer
          or Nodeport. If not defined for LoadBalancer or Nodeport type, defaults
          to Cluster.
        displayName: External Traffic Policy
        path: servicespec.externalTrafficPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: healthCheckNodePort specifies the healthcheck nodePort for the
          service. This only applies when type is set to LoadBalancer and externalTrafficPolicy
          is set to Local. If a value is specified, is in-range, and is not in use,
          it will be used.  If not specified, a value will be automatically allocated.  External
          systems (e.g. load-balancers) can use this port to determine if a given
          node holds endpoints for this service or not.  If this field is specified
          when creating a Service which does not need it, creation will fail. This
          field will be wiped when updating a Service to no longer need it (e.g. changing
          type).
        displayName: Health Check Node Port
        path: servicespec.healthCheckNodePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned
          to this service, and is gated by the \"IPv6DualStack\" feature gate.  This
          field is usually assigned automatically based on cluster configuration and
          the ipFamilyPolicy field. If this field is specified manually, the requested
          family is available in the cluster, and ipFamilyPolicy allows it, it will
          be used; otherwise creation of the service will fail.  This field is conditionally
          mutable: it allows for adding or removing a secondary IP family, but it
          does not allow changing the primary IP family of the Service.  Valid values
          are \"IPv4\" and \"IPv6\".  This field only applies to Services of types
          ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services.
          \ This field will be wiped when updating a Service to type ExternalName.
          \n This field may hold a maximum of two entries (dual-stack families, in
          either order).  These families must correspond to the values of the clusterIPs
          field, if specified. Both clusterIPs and ipFamilies are governed by the
          ipFamilyPolicy field."
        displayName: IPFamilies
        path: servicespec.ipFamilies
      - description: IPFamilyPolicy represents the dual-stack-ness requested or required
          by this Service, and is gated by the "IPv6DualStack" feature gate.  If there
          is no value provided, then this field will be set to SingleStack. Services
          can be "SingleStack" (a single IP family), "PreferDualStack" (two IP families
          on dual-stack configured clusters or a single IP family on single-stack
          clusters), or "RequireDualStack" (two IP families on dual-stack configured
          clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on
          the value of this field.  This field will be wiped when updating a service
          to type ExternalName.
        displayName: IPFamily Policy
        path: servicespec.ipFamilyPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Only applies to Service Type: LoadBalancer LoadBalancer will
          get created with the IP specified in this field. This feature depends on
          whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature.'
        displayName: Load Balancer IP
        path: servicespec.loadBalancerIP
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: publishNotReadyAddresses indicates that any agent which deals
          with endpoints for this Service should disregard any indications of ready/not-ready.
          The primary use case for setting this field is for a StatefulSet's Headless
          Service to propagate SRV DNS records for its Pods for the purpose of peer
          discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice
          resources for Services interpret this to mean that all endpoints are considered
          "ready" even if the Pods themselves are not. Agents which consume only Kubernetes
          generated endpoints through the Endpoints or EndpointSlice resources can
          safely assume this behavior. Defaults to false
        displayName: Publish Not Ready Addresses
        path: servicespec.publishNotReadyAddresses
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Type string describes ingress methods for a service. Valid values
          are ClusterIP, NodePort, LoadBalancer, ExternalName, None. Defaults to ClusterIP
        displayName: Type
        path: servicespec.servicetype
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Supports "ClientIP" and "None". Used to maintain session affinity.
          Enable client IP based session affinity. Must be ClientIP or None. Defaults
          to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
        displayName: Session Affinity
        path: servicespec.sessionAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: sessionAffinityConfig contains the configurations of session
          affinity.
        displayName: Session Affinity Config
        path: servicespec.sessionAffinityConfig
      - description: topologyKeys is a preference-order list of topology keys which
          implementations of services should use to preferentially sort endpoints
          when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local.
          Topology keys must be valid label keys and at most 16 keys may be specified.
          Endpoints are chosen based on the first topology key with available backends.
          If this field is specified and all entries have no backends that match the
          topology of the client, the service has no backends for that client and
          connections should fail. The special value "*" may be used to mean "any
          topology". This catch-all value, if used, only makes sense as the last value
          in the list. If this is not specified or empty, no topology constraints
          will be applied. This field is alpha-level and is only honored by servers
          that enable the ServiceTopology feature.
        displayName: Topology Keys
        path: servicespec.topologyKeys
      statusDescriptors:
      - description: statefulsetStatus displays the status of the owned deployment
          resource which exposes the APIMatic pods for communication
        displayName: Deployment Status
        path: deploymentStatus
      - description: serviceStatus displays the status of the owned service resource
          which exposes the APIMatic pods for communication
        displayName: Service Status
        path: serviceStatus
      version: v1beta1
  description: "## Table of contents\n\n* [Introduction](#introduction)\n* [Features](#features)\n*
    [Running the Sample](#running-the-sample)\n  * [Prerequisites](#prerequisites)\n
    \ * [Steps for Direct Deployment](#steps-for-direct-deployment)\n  * [Steps for
    OLM Deployment](#steps-for-olm-deployment)\n* [Technical Support](#technical-support)\n*
    [Copyrights](#copyrights)\n\n## Introduction\n\nAPIMatic Operator simplifies the
    configuration and lifecycle management of the APIMatic code and docs generation
    on different Kubernetes distributions and OpenShift. The Operator encapsulates
    key operational knowledge on how to configure and upgrade the APIMatic CodeGen
    application, making the use of it for APIMatic API management features easy to
    set and use.\n\n\nMore information about the underlying APIMatic CodeGen API that
    is exposed\nby this operator can be found [here](https://apimatic-core-v3-docs.netlify.app/#/http/getting-started/overview-apimatic-core).\n\n##
    Features\n\nAPIMatic Operator provides the following features:\n- Deploys the
    APIMatic CodeGen Web API service within the Kubernetes or OpenShift cluster.\n-
    Exposes the APIMatic CodeGen API external to the cluster, using Service type as
    [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport),
    [LoadBalancer](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer)
    or [ExternalName](https://kubernetes.io/docs/concepts/services-networking/service/#externalname).\n-
    For exposing the service through an ingress resource, create an Ingress resource
    in the namespace of your APIMatic CR and set owned APIMatic service created by
    the operator as a backed service. More information can be found [here](https://kubernetes.io/docs/concepts/services-networking/ingress/).\n-
    Manual horizontal scaling of pods.\n  ```sh\n  kubectl scale apm apimatic-sample--replicas=2\n
    \ ```\n\n## Running the Sample \n\n### Prerequisites\n\nPlease contact APIMatic
    at [support@apimatic.io](mailto:support@apimatic.io) to register with the APIMatic
    CodeGen Docker Hub registry and acquire a valid license to run the APIMatic CodeGen
    API.\n\nFurther prerequisites for running the sample include:\n\n- [go](https://golang.org/)
    v1.16.*\n- [git](https://git-scm.com/)\n- [make](https://www.gnu.org/software/make/)\n-
    [Operator SDK](https://sdk.operatorframework.io/docs/overview/)\n- A running Kubernetes
    cluster with [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/)
    on client. For testing purposes, you can use [Minikube](https://minikube.sigs.k8s.io/docs/)
    or [kind](https://kind.sigs.k8s.io/)\n- For checking the service created by the
    APIMatic operator on-prem, you can use [MetalLB](https://metallb.org/)\n\n###
    Steps for Direct Deployment\n\nTo run the sample for checking the APIMatic operator:\n\n-
    Clone the APIMatic repository into your working directory using the following
    command:\n  ```sh\n  git clone https://github.com/apimatic/apimatic-kubernetes-operator.git\n
    \ ```\n- Run `make deploy` to set up the APIMatic operator resources. This will
    deploy the '`apimatic-system`' namespace as well as the CRD and the RBAC manifests.\n\n-
    Create a secret named '`apimaticimagesecret`' to allow pulling the APIMatic CodeGen
    image using the Docker Hub username registered with APIMatic. If you have not
    done so, please contact support@apimatic.io for the steps required.\n  ```sh\n
    \ kubectl create secret docker-registry apimaticimagesecret --docker-server=https://index.docker.io/v1/
    --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email>\n
    \ ```\n- Create a [configmap](https://kubernetes.io/docs/concepts/configuration/configmap/)
    resource named '`apimaticlicense`' that will serve as the volume storing the APIMatic
    license. An example of this is given below which will create the ConfigMap using
    the *License.lic* file located at */usr/local/apimatic/license/*\n  ```sh\n  kubectl
    create configmap apimaticlicense --from-file /usr/local/apimatic/license/License.lic\n
    \ ```\n- This will deploy a ConfigMap resource with the following definition:\n
    \ ```sh\n  apiVersion: v1\n  data:\n    License.lic: \\\"<License file contents
    here>\\\"\n  kind: ConfigMap\n  metadata:\n    name: apimaticlicense\n    namespace:
    default\n  ```\n- Now run the sample using the following command:\n  ```sh\n  kubectl
    apply -f config/samples/apicodegen_v1beta1_apimatic.yaml\n  ```\n- You will now
    see a new [Deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
    with replica count of 3 and [Service](https://kubernetes.io/docs/concepts/services-networking/service/)
    of type `NodePort` created, both named ***apimatic-sample***. Accessing http://localhost:32000
    from your browser (or using curl from within the Minikube or Kind cluster, if
    using that) should now show the APIMatic Titan page.\n- You can now use the exposed
    APIMatic CodeGen API to generate API SDKs and Docs using [curl](https://curl.se/),
    [Postman](https://www.postman.com/) or your own custom Web application that consumes
    the APIMatic CodeGen API service.\n\n- Once done, you can remove the APIMatic
    resources using the following command:\n  ```sh\n  make undeploy\n  ```\n\n###
    Steps for OLM Deployment\n\nThe following steps can be used to utilize [Operator
    LifeCycle Manager (OLM)](https://olm.operatorframework.io/docs/) to deploy the
    operator and run the sample. The steps are as follows:\n\n- If not already done
    so, clone the APIMatic repository into your working directory:\n  ```sh\n  git
    clone https://github.com/apimatic/apimatic-kubernetes-operator.git\n  ``` \n-
    [Install OLM in your Kubernetes cluster](https://olm.operatorframework.io/docs/getting-started/#installing-olm-in-your-cluster).\n\n-
    Run the following script to install the resources required by OLM to deploy the
    APIMatic operator in the Kubernetes cluster within the `apimatic-system` namespace.
    Information about the different resources required can be found using the steps
    given [here](https://olm.operatorframework.io/docs/tasks/).\n  ```sh\n  kubectl
    apply -f olm/manifests.yaml\n  ```\n\n- This should spin up the `ClusterServiceVersion`
    of the operator in the `apimatic-system` namespace, following which the operator
    pod will spin up. To ensure the that the operator installed successfully, check
    for the `ClusterServiceVersion` and the operator deployment in the namespace it
    was installed in.\n  ```sh\n  kubectl get csv -n apimatic-system\n  \n  kubectl
    get deployment -n apimatic-system\n  ```\n\n  - Create a secret named `apimaticimagesecret`
    to allow pulling the APIMatic CodeGen image using the Docker Hub username registered
    with APIMatic. If you have not done so, please contact support@apimatic.io for
    the steps required.\n  ```sh\n  kubectl create secret docker-registry apimaticimagesecret
    --docker-server=https://index.docker.io/v1/ --docker-username=<your-name> --docker-password=<your-pword>
    --docker-email=<your-email>\n  ```\n- Create a [configmap](https://kubernetes.io/docs/concepts/configuration/configmap/)
    resource named `apimaticlicense` that will serve as the volume storing the APIMatic
    license. An example of this is given below which will create the ConfigMap using
    the *License.lic* file located at */usr/local/apimatic/license/*\n  ```sh\n  kubectl
    create configmap apimaticlicense --from-file /usr/local/apimatic/license/License.lic\n
    \ ```\n- This will deploy a ConfigMap resource with the following definition:\n
    \ ```sh\n  apiVersion: v1\n  data:\n    License.lic: \\\"<License file contents
    here>\\\"\n  kind: ConfigMap\n  metadata:\n    name: apimaticlicense\n    namespace:
    default\n  ```\n- Now run the sample using the following command:\n  ```sh\n  kubectl
    apply -f config/samples/apicodegen_v1beta1_apimatic.yaml\n  ```\n\n- You will
    now see a new [Deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
    with replica count of 3 and [Service](https://kubernetes.io/docs/concepts/services-networking/service/)
    of type `NodePort` created, both named ***apimatic-sample***. Accessing http://localhost:32000
    from your browser (or using curl from within the Minikube or Kind cluster, if
    using that) should now show the APIMatic Titan page.\n- You can now use the exposed
    APIMatic CodeGen API to generate API SDKs and Docs using [curl](https://curl.se/),
    [Postman](https://www.postman.com/) or your own custom Web application that consumes
    the APIMatic CodeGen API service.\n- Once done, you can remove the APIMatic operator
    resources using the follow script:\n  ```sh\n  kubectl delete -f olm/manifests.yaml\n
    \ ```\n\n## Technical Support\n\n- To request additional features in the future,
    or if you notice any discrepancy regarding this document, please drop an email
    to [support@apimatic.io](mailto:support@apimatic.io).\n\n### Copyrights\n\n&copy;
    2021 APIMatic.io\n"
  displayName: APIMatic Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMjk4IiBoZWlnaHQ9IjUzIiB2aWV3Qm94PSIwIDAgMjk4IDUzIj4KICA8ZGVmcz4KICAgIDxjbGlwUGF0aCBpZD0iY2xpcC1wYXRoIj4KICAgICAgPHJlY3QgaWQ9IlJlY3RhbmdsZV8yNjgiIGRhdGEtbmFtZT0iUmVjdGFuZ2xlIDI2OCIgd2lkdGg9IjI5OCIgaGVpZ2h0PSI1MyIvPgogICAgPC9jbGlwUGF0aD4KICA8L2RlZnM+CiAgPGcgaWQ9Ikhvcl9CbHVlIiBjbGlwLXBhdGg9InVybCgjY2xpcC1wYXRoKSI+CiAgICA8ZyBpZD0iR3JvdXBfODIxIiBkYXRhLW5hbWU9Ikdyb3VwIDgyMSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTEwNDAgLTM2MCkiPgogICAgICA8cGF0aCBpZD0iQVBJTUFUSUMiIGQ9Ik0yMi40NDksMCwyMC4yNDQtNy4yNEg5LjE1NEw2Ljk0OSwwSDBMMTAuNzM2LTMwLjU0M2g3Ljg4NUwyOS40LDBaTTE4LjctMTIuNjVxLTMuMDU4LTkuODQxLTMuNDQzLTExLjEzMVQxNC43MS0yNS44MnEtLjY4NywyLjY2My0zLjkzMiwxMy4xN1pNMzkuNjc2LTE2LjFINDEuOGE3LjA2Nyw3LjA2NywwLDAsMCw0LjQ1Mi0xLjE3NkE0LjExNCw0LjExNCwwLDAsMCw0Ny43MjgtMjAuN2E0LjIxOCw0LjIxOCwwLDAsMC0xLjIzOC0zLjM1LDUuOCw1LjgsMCwwLDAtMy44OC0xLjA4MkgzOS42NzZaTTU0LjI0LTIwLjkzcTAsNC45MS0zLjA2OSw3LjUxMXQtOC43MjgsMi42SDM5LjY3NlYwaC02LjQ1Vi0zMC40MThoOS43MTZxNS41MzQsMCw4LjQxNiwyLjM4MlQ1NC4yNC0yMC45M1pNNTkuOTgzLDBWLTMwLjQxOGg2LjQ1VjBaTTg2Ljk2OCwwLDc5LjY0NC0yMy44NjRoLS4xODdxLjQsNy4yODIuNCw5LjcxNlYwSDc0LjA4OVYtMzAuNDE4aDguNzhsNy4yLDIzLjI2MWguMTI1bDcuNjM2LTIzLjI2MWg4Ljc4VjBIMTAwLjZWLTE0LjRxMC0xLjAxOS4wMzEtMi4zNTF0LjI4MS03LjA3NGgtLjE4N0w5Mi44NzYsMFptNDUuOTE4LDBMMTMwLjY4LTcuMjRIMTE5LjU5MUwxMTcuMzg2LDBoLTYuOTQ5bDEwLjczNi0zMC41NDNoNy44ODVMMTM5LjgzNSwwWm0tMy43NDUtMTIuNjVxLTMuMDU4LTkuODQxLTMuNDQzLTExLjEzMXQtLjU1MS0yLjAzOXEtLjY4NywyLjY2My0zLjkzMiwxMy4xN1pNMTU1LjQsMGgtNi40NVYtMjUuMDVoLTguMjZ2LTUuMzY4aDIyLjk2OXY1LjM2OEgxNTUuNFptMTIuOTQxLDBWLTMwLjQxOGg2LjQ1VjBabTI3LjAyNy0yNS40ODdhNi41NzIsNi41NzIsMCwwLDAtNS42MzgsMi43MzZxLTIsMi43MzYtMiw3LjYyNSwwLDEwLjE3NCw3LjYzNiwxMC4xNzRhMjQuMTM3LDI0LjEzNywwLDAsMCw3Ljc2MS0xLjZ2NS40MDlhMjEuNTUyLDIxLjU1MiwwLDAsMS04LjM2NCwxLjU2cS02LjYzNywwLTEwLjE1My00LjAyNnQtMy41MTYtMTEuNTU4YTE4Ljg3MywxOC44NzMsMCwwLDEsMS43MjctOC4zMTIsMTIuNDgxLDEyLjQ4MSwwLDAsMSw0Ljk2Mi01LjQ3MiwxNC42NzksMTQuNjc5LDAsMCwxLDcuNTg0LTEuOSwyMC40NjgsMjAuNDY4LDAsMCwxLDguOSwyLjE0M2wtMi4wODEsNS4yNDNhMzQuNDQsMzQuNDQsMCwwLDAtMy40MzMtMS40MTVBMTAuMjQxLDEwLjI0MSwwLDAsMCwxOTUuMzY1LTI1LjQ4N1oiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDExMzMuODI4IDQwMi4yNzcpIiBmaWxsPSIjMGM3ZmYyIi8+CiAgICAgIDxwYXRoIGlkPSJTaGFwZV80X2NvcHkiIGRhdGEtbmFtZT0iU2hhcGUgNCBjb3B5IiBkPSJNNDc0Ljg3OSwxMjI0Ljk5SDQ0MC44MzZhMTYuMjQ4LDE2LjI0OCwwLDAsMS0xNC4yMTktOS4xMiwxNS45ODYsMTUuOTg2LDAsMCwxLTEuNTQ2LTUuNDQzLDIwLjIxNywyMC4yMTcsMCwwLDEtLjA2OC0yLjQ4MywxNi4yLDE2LjIsMCwwLDEsOS4wMzUtMTMuNzIxYy4xMzQtLjA4LjM3NS0uMTM5LjMyOS0uMzQ1YTE5LjkwOSwxOS45MDksMCwwLDEsLjItNi4zMzIsMTkuMzQzLDE5LjM0MywwLDAsMSw0LTguNDY0LDE5LjkyNSwxOS45MjUsMCwwLDEsNi44MTktNS4yODYsMTkuNDA2LDE5LjQwNiwwLDAsMSwyNC44MTYsNy42MTdjLjMzNS41MzQuNTksMS4xMTMuOTEyLDEuNjUzYTExLjA3MSwxMS4wNzEsMCwwLDEsNS4wODEtMS44NDQsMTAuOTQ0LDEwLjk0NCwwLDAsMSw4LjMzOSwyLjgsMTAuODM1LDEwLjgzNSwwLDAsMSwzLjQzNSw3LjEyNSwxMC42NzMsMTAuNjczLDAsMCwxLTEuMDUyLDUuNDQxYy0uMDk1LjE4MS0uMTg1LjM2NS0uMjY0LjU1MmEyMS4zNjYsMjEuMzY2LDAsMCwxLDIuNDc2LDEuMDg0LDE0LjQxLDE0LjQxLDAsMCwxLDYuMjk0LDYuODU2LDE0LjI1NSwxNC4yNTUsMCwwLDEsLjY4OCw5LjM0OCwxMy45NTYsMTMuOTU2LDAsMCwxLTMuNSw2LjE4OEExNC4yNzUsMTQuMjc1LDAsMCwxLDQ4Mi43NCwxMjI1UTQ3OC44MDksMTIyNC45Nyw0NzQuODc5LDEyMjQuOTlabTYuOTE1LTEyLjc2NWE1LjgzNyw1LjgzNywwLDAsMSwuMzUyLjc4NSw0LjE1Nyw0LjE1NywwLDEsMCw0LjM4Mi01LjkxNiw0LjY3Miw0LjY3MiwwLDAsMC0yLjUuMzQ3Yy0uMTIxLTEuMDM2LS4wNjktMi4wODgtLjEzNy0zLjEzMS0uMjcxLjI0My0uNS41MzEtLjc0OS43OTFhNC4xMzgsNC4xMzgsMCwwLDEtLjM2My0uNzA2cS0xLjk2LTQuMjE2LTMuNzc1LTguNWMtLjExMS0uMTc3LjA4Ny0uMy4yMTEtLjM4MmE0LjA3MSw0LjA3MSwwLDAsMCwxLjc0LTIuNDQzLDQuMzQsNC4zNCwwLDAsMC0uMzc0LTIuOTY2LDQuMTcyLDQuMTcyLDAsMCwwLTIuOTk0LTIuMTIxLDQuMjU0LDQuMjU0LDAsMCwwLTMuMDc0LjY5Miw1LjEsNS4xLDAsMCwwLTEuMzU1LDEuNTUyYy0uNzMxLS43NzEtMS40LTEuNi0yLjExLTIuMzg5LS4xMTMuMzQ1LS4wNDkuNzE1LS4xMzEsMS4wNjdhMS45NzEsMS45NzEsMCwwLDEtLjMwOS0uMDhxLTguNDM1LTMuMjM5LTE2Ljk0LTYuM2MtLjE0OC0uMDM4LS4yOTQtLjE0Ny0uMjItLjMxOGE0LjE2NSw0LjE2NSwwLDAsMC03LjY4OC0yLjgwNyw0LjIwOCw0LjIwOCwwLDAsMC0uMDk0LDQuMDc3LDQuOTg5LDQuOTg5LDAsMCwwLDEuNTU0LDEuNjM4Yy0uODI3LjctMS43MzgsMS4zLTIuNTQ3LDIuMDE0YTguOTc5LDguOTc5LDAsMCwxLDEuMTQ4LjE3OXEtNC44MTMsOS4xODktOS43MTEsMTguMzM0Yy0uMDU2LjE4MS0uMjM4LjE0My0uMzc2LjFhNC4xNjksNC4xNjksMCwwLDAtNC41ODQsMS43MzcsNC4xMjcsNC4xMjcsMCwwLDAtLjI3Miw0LjA0NSw0LjE2OSw0LjE2OSwwLDAsMCw3LjkwNi0xLjM4MWMuODM4LjYxOSwxLjYsMS4zNCwyLjQxNiwxLjk5MS0uMDI0LS4zODktLjA5NC0uNzc1LS4wODktMS4xNjZhOC41NzIsOC41NzIsMCwwLDEsLjkzMS4xNTMsMTI3LjQxLDEyNy40MSwwLDAsMCwzOC45ODksMS4xNzVjLjIxNC0uMDIuNDI4LS4wNzguNjQzLS4wNzhhMS4xMDYsMS4xMDYsMCwwLDEsLjExOSwwWk00MzMsMTIxMi41OGEzLjI3NSwzLjI3NSwwLDEsMSwxLjU2Ni40MTEsMy4xLDMuMSwwLDAsMS0xLjU2Ni0uNDExWm0uOTgxLTQuODQ0YTIuMTA2LDIuMTA2LDAsMSwwLDIuMy43NzRBMi4xLDIuMSwwLDAsMCw0MzMuOTgxLDEyMDcuNzM2Wm0yNC45MzYsNC41MmExMjQuMTY5LDEyNC4xNjksMCwwLDEtMTcuNTgyLTIuMTM4LDEwLjM3NSwxMC4zNzUsMCwwLDEsLjYtLjk3NWMtMS4wMzMuMTQxLTIuMDQ1LjQzMi0zLjA3Ni41OTUtLjEzMy0uMTQzLS4wNjEtLjQxLS4xMTYtLjYtLjAxNC0uMzQ0LS4yMDgtLjY2NS0uMjE1LTEsMi44ODQtMS42NCw1Ljg0Ni0zLjE0NCw4Ljg0My00LjU2M2ExNDQuNjY0LDE0NC42NjQsMCwwLDEsMjEuMjQ2LTguMDYxYy43NDgtLjIsMS40ODYtLjQ1NCwyLjI0NS0uNjEzLjAyMy4zMzgtLjAzLjY3Ny0uMDA5LDEuMDE3Ljc2LS42ODIsMS40OTUtMS4zOTEsMi4yNTEtMi4wNzZhNC45MzMsNC45MzMsMCwwLDAsMS43MSwxLjgyMiw0LjM4NSw0LjM4NSwwLDAsMCwzLjE4Mi40MTNjLjEzOS0uMDY4LjIuMTEzLjI0Ni4yLjc5NCwxLjgzOSwxLjU3NiwzLjY4NSwyLjQsNS41MTEuNTQ5LDEuMjU5LDEuMTY2LDIuNDkxLDEuNywzLjc1Ny0uMzkyLjA3Ny0uNzg5LjExOS0xLjE4NC4xODVhMy45NTQsMy45NTQsMCwwLDAsLjYxOC40OTFjLjYzMS40NzQsMS4yOTMuOTEsMS45LDEuNDEyYTQuMjY1LDQuMjY1LDAsMCwwLTEuODU3LDIuNjA4Yy0uMTA4LjM1NS0uMDQ4Ljc0My0uMTUsMS4wOTQtMy4xNTguNDUzLTYuMzQ1LjcwOC05LjUzLjg5LTIuMzU0LjEyMi00LjcxMy4xOTEtNy4wNy4xOTEtMi4wNDMsMC00LjEtLjA0Ni02LjE1MS0uMTU2Wm0tMjAuOTM3LTQuOTg1YTUuNzc4LDUuNzc4LDAsMCwwLTEuMTc0LTEuMTExYzIuNDczLTQuNjU4LDQuOTY5LTkuMyw3LjQxNi0xMy45NzUuOC0xLjUsMS41NjMtMy4wMDcsMi4zNzQtNC40OTMuMjkuMjM5LjU2MS41Ljg0NC43NS4wMDctMS4wNjMtLjAxLTIuMTI2LjAyLTMuMTg3YTQuODA3LDQuODA3LDAsMCwwLDIuMjI4LjQsNC4yNDEsNC4yNDEsMCwwLDAsMy40NDUtMi4zODksNi4yNDUsNi4yNDUsMCwwLDEsLjgyNy4yN2M0LjA1NCwxLjQ1Myw4LjA5LDIuOTUzLDEyLjExOCw0LjQ3MSwxLjUwNy41ODUsMy4wMjksMS4xMzMsNC41MjUsMS43NDUtLjI1MS4zMTctLjU1MS41OTItLjguOTA5LDEuMDc1LS4wMjUsMi4xNDYtLjEzMSwzLjIyMS0uMTQyYTUuNDI4LDUuNDI4LDAsMCwwLS4yNjgsMS40Nyw1Ljc5NCw1Ljc5NCwwLDAsMCwuMTkxLDEuNDQzYy0xLjAwOC0uMTI4LTIuMDA2LS4zMjItMy4wMTMtLjQ1OHEuMzc4LjUxNi43NjMsMS4wMjhhMS4zNiwxLjM2LDAsMCwxLS40ODUuMTkzLDE0NS40LDE0NS40LDAsMCwwLTMxLjg2NywxMy4wOC41ODcuNTg3LDAsMCwxLS4yMzUuMDg5LjEzNS4xMzUsMCwwLDEtLjEyOS0uMDk0WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoNjE1IC04MTIpIiBmaWxsPSIjMGM3ZmYyIi8+CiAgICA8L2c+CiAgPC9nPgo8L3N2Zz4K
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apicodegen.apimatic.io
          resources:
          - apimatics
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apicodegen.apimatic.io
          resources:
          - apimatics/finalizers
          verbs:
          - update
        - apiGroups:
          - apicodegen.apimatic.io
          resources:
          - apimatics/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - get
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: apimatic-controller-manager
      deployments:
      - name: apimatic-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: docker.io/apimaticio/apimatic-kubernetes-operator:v0.0.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: apimatic-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: apimatic-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Rest APIs
  - API SDK Generator
  - API Docs Generator
  - API Developer Portal
  - APIMatic
  - Developer Tools
  links:
  - name: Overview
    url: https://www.apimatic.io/
  - name: Developer Experience Portal
    url: https://www.apimatic.io/developer-experience-portal
  - name: Code-Gen as a Service
    url: https://www.apimatic.io/continuous-code-generation
  - name: API Transformer
    url: https://www.apimatic.io/transformer
  - name: Contact
    url: https://www.apimatic.io/contact
  - name: Documentation
    url: https://docs.apimatic.io/
  - name: Blogs
    url: https://www.apimatic.io/blog/
  maintainers:
  - email: support@apimatic.io
    name: Support
  maturity: alpha
  provider:
    name: APIMatic.io
    url: https://www.apimatic.io/
  version: 0.0.1
