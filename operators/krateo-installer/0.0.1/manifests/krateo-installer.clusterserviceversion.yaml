apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    categories: Integration & Delivery,Cloud Provider,Developer Tools
    containerImage: ghcr.io/krateoplatformops/krateo-installer:0.0.1
    repository: https://github.com/krateoplatformops/krateo-installer
    support: Krateo PlatformOps
    alm-examples: |-
      [
        {
          "apiVersion": "installer.krateo.io/v1alpha1",
          "kind": "Installer",
          "metadata": {
            "name": "installer-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "env": {
              "INSTALLER_DEBUG": "true"
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "ghcr.io/krateoplatformops/installer",
              "tag": ""
            },
            "imagePullSecrets": [],
            "krateoplatformops": {
              "authn": {
                "KUBECONFIG_SERVER_URL": "https://127.0.0.1:6443",
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/authn",
                  "tag": ""
                }
              },
              "backend": {
                "etcd": {
                  "auth": {
                    "rbac": {
                      "create": false
                    }
                  },
                  "global": {
                    "compatibility": {
                      "openshift": {
                        "adaptSecurityContext": "auto"
                      }
                    },
                    "imageRegistry": "",
                    "storageClass": ""
                  },
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "registry": "docker.io",
                    "repository": "bitnami/etcd",
                    "tag": "3.5.14-debian-12-r0"
                  }
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/backend",
                  "tag": ""
                }
              },
              "bff": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/bff",
                  "tag": ""
                }
              },
              "core-provider": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/core-provider",
                  "tag": ""
                }
              },
              "custom": {
                "enabled": false
              },
              "eventrouter": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/eventrouter",
                  "tag": ""
                }
              },
              "frontend": {
                "env": {
                  "AUTHN_API_BASE_URL": "",
                  "BFF_API_BASE_URL": ""
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/krateo-frontend",
                  "tag": ""
                },
                "overrideconf": false
              },
              "ingress": {
                "authn": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "bff": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "enabled": false,
                "frontend": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "vcluster": {
                  "annotations": {
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS",
                    "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
                    "nginx.ingress.kubernetes.io/ssl-redirect": "true"
                  },
                  "host": "vcluster.local",
                  "ingressClassName": "",
                  "pathType": "ImplementationSpecific",
                  "tls": []
                }
              },
              "init": {
                "enabled": true
              },
              "patch-provider": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/patch-provider",
                  "tag": ""
                }
              },
              "service": {
                "externalIpAvailable": false,
                "type": "NodePort"
              },
              "vcluster": {
                "defaultImageRegistry": "",
                "enabled": false,
                "openshift": {
                  "enable": false
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false
                },
                "storage": {
                  "className": ""
                },
                "sync": {
                  "persistentvolumes": {
                    "enabled": true
                  },
                  "storageclasses": {
                    "enabled": true
                  }
                }
              }
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podLabels": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "automount": true,
              "create": true,
              "name": ""
            },
            "tolerations": [],
            "volumeMounts": [],
            "volumes": []
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2024-06-14T14:17:53Z"
    operators.operatorframework.io/builder: operator-sdk-v1.34.2
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: krateo-installer.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Installer
      name: installers.installer.krateo.io
      version: v1alpha1
  description: Install Krateo PlatformOps.
  displayName: Krateo Installer
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - core.krateo.io
          resources:
          - compositiondefinitions
          - compositiondefinitions/status
          verbs:
          - '*'
        - apiGroups:
          - composition.krateo.io
          resources:
          - installers
          - installers/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - configmaps/status
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/status
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          - horizontalpodautoscalers/status
          verbs:
          - '*'
        - apiGroups:
          - krateo.io
          resources:
          - krateoplatformops
          - krateoplatformops/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - roles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - rolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - serviceaccounts/status
          verbs:
          - '*'
        - apiGroups:
          - krateo.io
          resources:
          - krateoplatformops
          - krateoplatformops/status
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: krateo-installer-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: krateo-installer
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: krateo-installer
          control-plane: controller-manager
        name: krateo-installer-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=krateo-installer
                image: ghcr.io/krateoplatformops/krateo-installer:0.0.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: krateo-installer-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: krateo-installer-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Krateo
  - Installer
  - PlatformOps
  links:
  - name: Krateo Installer
    url: https://github.com/krateoplatformops/krateo-installer
  maintainers:
  - email: matteo.gastaldellomiotto@gmail.com
    name: matteogastaldello
  maturity: alpha
  provider:
    name: krateo-installer
  version: 0.0.1
