apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: messages.quay.herve4m.github.io
spec:
  group: quay.herve4m.github.io
  names:
    kind: Message
    plural: messages
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of the resource creation process in Quay
      jsonPath: .status.conditions[?(@.type == 'Successful')].status
      name: Success
      type: string
    - description: The error message when the resource creation process fails
      jsonPath: .status.message
      name: Message
      type: string
    - description: The state of the reconciliation process
      jsonPath: .status.conditions[?(@.type == 'Running')].reason
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Manage Quay Container Registry global messages
        properties:
          apiVersion:
            description: |
              APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |
              Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Message
            properties:
              connSecretRef:
                description: |
                  Reference to the secret resource that stores the connection parameters to the Quay Container Registry API.
                  The secret must include the 'host', 'token' (or 'username' and 'password'), and optionally the 'validateCerts' keys.
                properties:
                  name:
                    description: Name of the secret resource.
                    type: string
                  namespace:
                    description: |
                      Namespace of the secret resource. By default, the secret resource is retrieved from the same namespace as the current Message resource.
                    type: string
                required:
                - name
                type: object
              content:
                description: Text of the message to display on each web UI page.
                type: string
              format:
                description: Format of the text in 'content'. If you do not set this
                  parameter, then the resource uses the 'plain' format.
                enum:
                - markdown
                - plain
                type: string
              preserveInQuayOnDeletion:
                default: false
                description: |
                  Whether to preserve the corresponding Quay object when you delete the Message resource. When set to 'false' (the default), the object is deleted from Quay.
                type: boolean
              regexp:
                description: The regular expression to look for in the existing messages.
                  This does not have to match an entire line. For 'state=present',
                  if several messages match, then the resource updates one and deletes
                  the others. For 'state=absent', the resource deletes all the messages
                  that match. Uses Python regular expressions. See <https://docs.python.org/3/library/re.html>.
                  Mutually exclusive with 'searchString'.
                type: string
              searchSeverity:
                description: Search messages by their severity level. If you also
                  set 'searchString', 'regexp', or 'content', messages must match
                  all those criteria.
                enum:
                - info
                - warning
                - error
                type: string
              searchString:
                description: The literal string to look for in the existing messages.
                  This does not have to match an entire line. For 'state=present',
                  if several messages match, then the resource updates one and deletes
                  the others. For 'state=absent', the resource deletes all the messages
                  that match. Mutually exclusive with 'regexp'.
                type: string
              severity:
                description: Severity of the message. If you do not set this parameter,
                  then the resource creates the message with the 'info' severity.
                enum:
                - info
                - warning
                - error
                type: string
            required:
            - connSecretRef
            type: object
          status:
            description: |
              Status defines the observed state of Message
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
