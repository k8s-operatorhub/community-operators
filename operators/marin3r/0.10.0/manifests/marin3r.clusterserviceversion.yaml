apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "marin3r.3scale.net/v1alpha1",
          "kind": "EnvoyConfig",
          "metadata": {
            "name": "envoyconfig-example",
            "namespace": "my-namespace"
          },
          "spec": {
            "envoyAPI": "v3",
            "envoyResources": {
              "clusters": [
                {
                  "name": "example",
                  "value": "name: example\nconnect_timeout: 10ms\ntype: STRICT_DNS\ndns_lookup_family: V4_ONLY\nlb_policy: ROUND_ROBIN\nload_assignment:\n  cluster_name: example\n  endpoints:\n    - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: example\n                port_value: 8080\n"
                }
              ],
              "listeners": [
                {
                  "name": "https",
                  "value": "name: https\naddress:\n  socket_address:\n    address: 0.0.0.0\n    port_value: 8443\nfilter_chains:\n  - filters:\n    - name: envoy.filters.network.http_connection_manager\n      typed_config:\n        \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n        access_log:\n          - name: envoy.access_loggers.file\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n              path: /dev/stdout\n        stat_prefix: https\n        rds: { route_config_name: \"local\", config_source: { ads: {}, resource_api_version: \"V3\" }}\n        http_filters:\n          - name: envoy.filters.http.router\n    transport_socket:\n      name: envoy.transport_sockets.tls\n      typed_config:\n        \"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\n        common_tls_context:\n          tls_certificate_sds_secret_configs:\n            - name: example.default.svc\n              sds_config: { ads: {}, resource_api_version: \"V3\" }\n"
                }
              ],
              "routes": [
                {
                  "name": "local",
                  "value": "name: local\nvirtual_hosts:\n  - name: all\n    domains: [\"*\"]\n    routes:\n      - match:\n          prefix: \"/\"\n        route:\n          cluster: example\n"
                }
              ],
              "secrets": [
                {
                  "name": "example.default.svc"
                }
              ]
            },
            "nodeID": "example",
            "serialization": "yaml"
          }
        },
        {
          "apiVersion": "operator.marin3r.3scale.net/v1alpha1",
          "kind": "DiscoveryService",
          "metadata": {
            "name": "discoveryservice-example",
            "namespace": "my-namespace"
          },
          "spec": {}
        },
        {
          "apiVersion": "operator.marin3r.3scale.net/v1alpha1",
          "kind": "EnvoyDeployment",
          "metadata": {
            "name": "envoydeployment-sample",
            "namespace": "my-namespace"
          },
          "spec": {
            "discoveryServiceRef": "discoveryservice-example",
            "envoyConfigRef": "envoyconfig-example",
            "ports": [
              {
                "name": "https",
                "port": 8443
              }
            ]
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Networking
    certified: "false"
    containerImage: quay.io/3scale/marin3r
    description: Lighweight, CRD based Envoy control plane for Kubernetes
    operators.operatorframework.io/builder: operator-sdk-v1.14.0+git
    operators.operatorframework.io/internal-objects: '["envoyconfigrevisions.marin3r.3scale.net","discoveryservicecertificates.operator.marin3r.3scale.net"]'
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/3scale-ops/marin3r
    support: Red Hat, Inc.
  name: marin3r.v0.10.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DiscoveryServiceCertificate is an internal resource used to create
        certificates. This resource is used by the DiscoveryService controller to
        create the required certificates for the different components. Direct use
        of DiscoveryServiceCertificate objects is discouraged.
      displayName: DiscoveryServiceCertificate
      kind: DiscoveryServiceCertificate
      name: discoveryservicecertificates.operator.marin3r.3scale.net
      specDescriptors:
      - description: CertificateRenewalConfig configures the certificate renewal process.
          If unset default behavior is to renew the certificate but not notify of
          renewals.
        displayName: Certificate Renewal Config
        path: certificateRenewal
      - description: Enabled is a flag to enable or disable renewal of the certificate
        displayName: Enabled
        path: certificateRenewal.enabled
      - description: CommonName is the CommonName of the certificate
        displayName: Common Name
        path: commonName
      - description: Hosts is the list of hosts the certificate is valid for. Only
          use when 'IsServerCertificate' is true. If unset, the CommonName field will
          be used to populate the valid hosts of the certificate.
        displayName: Hosts
        path: hosts
      - description: IsCA is a boolean specifying that the certificate is a CA
        displayName: Is CA
        path: isCA
      - description: SecretRef is a reference to the secret that will hold the certificate
          and the private key.
        displayName: Secret Ref
        path: secretRef
      - description: IsServerCertificate is a boolean specifying if the certificate
          should be issued with server auth usage enabled
        displayName: Is Server Certificate
        path: server
      - description: Signer specifies  the signer to use to create this certificate.
          Supported signers are CertManager and SelfSigned.
        displayName: Signer
        path: signer
      - description: CASigned holds specific configuration for the CASigned signer
        displayName: CASigned
        path: signer.caSigned
      - description: A reference to a Secret containing the CA
        displayName: Secret Ref
        path: signer.caSigned.caSecretRef
      - description: SelfSigned holds specific configuration for the SelfSigned signer
        displayName: Self Signed
        path: signer.selfSigned
      - description: ValidFor specifies the validity of the certificate in seconds
        displayName: Valid For
        path: validFor
      statusDescriptors:
      - description: CertificateHash stores the current hash of the certificate. It
          is used for other controllers to validate if a certificate has been re-issued.
        displayName: Certificate Hash
        path: certificateHash
      - description: Conditions represent the latest available observations of an
          object's state
        displayName: Conditions
        path: conditions
      - description: NotAfter is the time at which the certificate expires
        displayName: Not After
        path: notAfter
      - description: NotBefore is the time at which the certificate starts being valid
        displayName: Not Before
        path: notBefore
      - description: Ready is a boolean that specifies if the certificate is ready
          to be used
        displayName: Ready
        path: ready
      version: v1alpha1
    - description: DiscoveryService represents an envoy discovery service server.
        Only one instance per namespace is currently supported.
      displayName: DiscoveryService
      kind: DiscoveryService
      name: discoveryservices.operator.marin3r.3scale.net
      specDescriptors:
      - description: Debug enables debugging log level for the discovery service controllers.
          It is safe to use since secret data is never shown in the logs.
        displayName: Debug
        path: debug
      - description: Image holds the image to use for the discovery service Deployment
        displayName: Image
        path: image
      - description: MetricsPort is the port where metrics are served. Defaults to
          8383.
        displayName: Metrics Port
        path: metricsPort
      - description: PKIConfig has configuration for the PKI that marin3r manages
          for the different certificates it requires
        displayName: PKIConfig
        path: pkiConfg
      - displayName: Root Certificate Authority
        path: pkiConfg.rootCertificateAuthority
      - displayName: Duration
        path: pkiConfg.rootCertificateAuthority.duration
      - displayName: Secret Name
        path: pkiConfg.rootCertificateAuthority.secretName
      - displayName: Server Certificate
        path: pkiConfg.serverCertificate
      - displayName: Duration
        path: pkiConfg.serverCertificate.duration
      - displayName: Secret Name
        path: pkiConfg.serverCertificate.secretName
      - description: Resources holds the Resource Requirements to use for the discovery
          service Deployment. When not set it defaults to no resource requests nor
          limits. CPU and Memory resources are supported.
        displayName: Resources
        path: resources
      - description: ServiceConfig configures the way the DiscoveryService endpoints
          are exposed
        displayName: Service Config
        path: serviceConfig
      - displayName: Name
        path: serviceConfig.name
      - displayName: Type
        path: serviceConfig.type
      - description: XdsServerPort is the port where the xDS server listens. Defaults
          to 18000.
        displayName: Xds Server Port
        path: xdsServerPort
      statusDescriptors:
      - description: Conditions represent the latest available observations of an
          object's state
        displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: EnvoyConfigRevision is an internal resource that stores a specific
        version of an EnvoyConfig resource. EnvoyConfigRevisions are automatically
        created and deleted by the EnvoyConfig controller and are not intended to
        be directly used. Use EnvoyConfig objects instead.
      displayName: EnvoyConfigRevision
      kind: EnvoyConfigRevision
      name: envoyconfigrevisions.marin3r.3scale.net
      specDescriptors:
      - description: EnvoyAPI is the version of envoy's API to use. Defaults to v3.
        displayName: Envoy API
        path: envoyAPI
      - description: EnvoyResources holds the different types of resources suported
          by the envoy discovery service
        displayName: Envoy Resources
        path: envoyResources
      - description: 'Clusters is a list of the envoy Cluster resource type. API V3
          reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
        displayName: Clusters
        path: envoyResources.clusters
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.clusters[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.clusters[0].value
      - description: 'Endpoints is a list of the envoy ClusterLoadAssignment resource
          type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
        displayName: Endpoints
        path: envoyResources.endpoints
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.endpoints[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.endpoints[0].value
      - description: 'Listeners is a list of the envoy Listener resource type. API
          V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
        displayName: Listeners
        path: envoyResources.listeners
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.listeners[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.listeners[0].value
      - description: 'Routes is a list of the envoy Route resource type. API V3 reference:
          https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
        displayName: Routes
        path: envoyResources.routes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.routes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.routes[0].value
      - description: 'Runtimes is a list of the envoy Runtime resource type. API V3
          reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
        displayName: Runtimes
        path: envoyResources.runtimes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.runtimes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.runtimes[0].value
      - description: 'ScopedRoutes is a list of the envoy ScopeRoute resource type.
          API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/scoped_route.proto'
        displayName: Scoped Routes
        path: envoyResources.scopedRoutes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.scopedRoutes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.scopedRoutes[0].value
      - description: Secrets is a list of references to Kubernetes Secret objects.
        displayName: Secrets
        path: envoyResources.secrets
      - description: Name of the envoy resource. If ref is not set, a Secret with
          this same name will be fetched from within the namespace.
        displayName: Name
        path: envoyResources.secrets[0].name
      - description: Ref is a reference to a Kubernetes Secret of type "kubernetes.io/tls".
          The value of 'ref' cannot point to a different namespace.
        displayName: Ref
        path: envoyResources.secrets[0].ref
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:SecretReference
      - description: NodeID holds the envoy identifier for the discovery service to
          know which set of resources to send to each of the envoy clients that connect
          to it.
        displayName: Node ID
        path: nodeID
      - description: Serialization specicifies the serialization format used to describe
          the resources. "json" and "yaml" are supported. "json" is used if unset.
        displayName: Serialization
        path: serialization
      - description: Version is a hash of the EnvoyResources field
        displayName: Version
        path: version
      statusDescriptors:
      - description: Conditions represent the latest available observations of an
          object's state
        displayName: Conditions
        path: conditions
      - description: LastPublishedAt indicates the last time this config review transitioned
          to published
        displayName: Last Published At
        path: lastPublishedAt
      - description: ProvidesVersions keeps track of the version that this revision
          publishes in the xDS server for each resource type
        displayName: Provides Versions
        path: providesVersions
      - description: Published signals if the EnvoyConfigRevision is the one currently
          published in the xds server cache
        displayName: Published
        path: published
      - description: Tainted indicates whether the EnvoyConfigRevision is eligible
          for publishing or not
        displayName: Tainted
        path: tainted
      version: v1alpha1
    - description: EnvoyConfig holds the configuration for a given envoy nodeID. The
        spec of an EnvoyConfig object holds the Envoy resources that conform the desired
        configuration for the given nodeID and that the discovery service will send
        to any envoy client that identifies itself with that nodeID.
      displayName: EnvoyConfig
      kind: EnvoyConfig
      name: envoyconfigs.marin3r.3scale.net
      resources:
      - kind: EnvoyConfigRevision
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: EnvoyAPI is the version of envoy's API to use. Defaults to v3.
        displayName: Envoy API
        path: envoyAPI
      - description: EnvoyResources holds the different types of resources suported
          by the envoy discovery service
        displayName: Envoy Resources
        path: envoyResources
      - description: 'Clusters is a list of the envoy Cluster resource type. API V3
          reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
        displayName: Clusters
        path: envoyResources.clusters
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.clusters[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.clusters[0].value
      - description: 'Endpoints is a list of the envoy ClusterLoadAssignment resource
          type. API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
        displayName: Endpoints
        path: envoyResources.endpoints
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.endpoints[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.endpoints[0].value
      - description: 'Listeners is a list of the envoy Listener resource type. API
          V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
        displayName: Listeners
        path: envoyResources.listeners
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.listeners[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.listeners[0].value
      - description: 'Routes is a list of the envoy Route resource type. API V3 reference:
          https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
        displayName: Routes
        path: envoyResources.routes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.routes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.routes[0].value
      - description: 'Runtimes is a list of the envoy Runtime resource type. API V3
          reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
        displayName: Runtimes
        path: envoyResources.runtimes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.runtimes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.runtimes[0].value
      - description: 'ScopedRoutes is a list of the envoy ScopeRoute resource type.
          API V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/scoped_route.proto'
        displayName: Scoped Routes
        path: envoyResources.scopedRoutes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.scopedRoutes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.scopedRoutes[0].value
      - description: Secrets is a list of references to Kubernetes Secret objects.
        displayName: Secrets
        path: envoyResources.secrets
      - description: Name of the envoy resource. If ref is not set, a Secret with
          this same name will be fetched from within the namespace.
        displayName: Name
        path: envoyResources.secrets[0].name
      - description: Ref is a reference to a Kubernetes Secret of type "kubernetes.io/tls".
          The value of 'ref' cannot point to a different namespace.
        displayName: Ref
        path: envoyResources.secrets[0].ref
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:SecretReference
      - description: NodeID holds the envoy identifier for the discovery service to
          know which set of resources to send to each of the envoy clients that connect
          to it.
        displayName: Node ID
        path: nodeID
      - description: Serialization specicifies the serialization format used to describe
          the resources. "json" and "yaml" are supported. "json" is used if unset.
        displayName: Serialization
        path: serialization
      statusDescriptors:
      - description: CacheState summarizes all the observations about the EnvoyConfig
          to give the user a concrete idea on the general status of the discovery
          servie cache. It is intended only for human consumption. Other controllers
          should relly on conditions to determine the status of the discovery server
          cache.
        displayName: Cache State
        path: cacheState
      - description: Conditions represent the latest available observations of an
          object's state
        displayName: Conditions
        path: conditions
      - description: DesiredVersion represents the resources version described in
          the spec of the EnvoyConfig object
        displayName: Desired Version
        path: desiredVersion
      - description: PublishedVersion is the config version currently served by the
          envoy discovery service for the give nodeID
        displayName: Published Version
        path: publishedVersion
      - description: ConfigRevisions is an ordered list of references to EnvoyConfigRevision
          objects
        displayName: Config Revisions
        path: revisions
      - description: Ref is a reference to the EnvoyConfigRevision object that holds
          the configuration matching the Version field.
        displayName: Ref
        path: revisions[0].ref
      - description: Version is a hash of the EnvoyResources field
        displayName: Version
        path: revisions[0].version
      version: v1alpha1
    - description: EnvoyDeployment is a resource to deploy and manage a Kubernetes
        Deployment of Envoy Pods.
      displayName: EnvoyDeployment
      kind: EnvoyDeployment
      name: envoydeployments.operator.marin3r.3scale.net
      specDescriptors:
      - description: Configures envoy's admin access log path. Defaults to /dev/null.
        displayName: Admin Access Log Path
        path: adminAccessLogPath
      - description: Configures envoy's admin port. Defaults to 9901.
        displayName: Admin Port
        path: adminPort
      - description: Affinity configuration for the envoy pods
        displayName: Affinity
        path: affinity
      - description: Defines the local service cluster name where Envoy is running.
          Defaults to the NodeID in the EnvoyConfig if unset
        displayName: Cluster ID
        path: clusterID
      - description: DiscoveryServiceRef points to a DiscoveryService in the same
          namespace
        displayName: Discovery Service Ref
        path: discoveryServiceRef
      - description: Defines the duration of the client certificate that is used to
          authenticate with the DiscoveryService
        displayName: Client Certificate Duration
        path: duration
      - description: EnvoyConfigRef points to an EnvoyConfig in the same namespace
          that holds the envoy resources for this Deployment
        displayName: Envoy Config Ref
        path: envoyConfigRef
      - description: Allows the user to define extra command line arguments for the
          Envoy process
        displayName: Extra Args
        path: extraArgs
      - description: Image is the envoy image and tag to use
        displayName: Image
        path: image
      - description: InitManager defines configuration for Envoy's init manager, which
          handles initialization for Envoy pods
        displayName: Init Manager
        path: initManager
      - description: Image is the init manager image and tag to use
        displayName: Image
        path: initManager.image
      - description: Liveness probe for the envoy pods
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Configures PodDisruptionBudget for the envoy Pods
        displayName: Pod Disruption Budget
        path: podDisruptionBudget
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: podDisruptionBudget.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: podDisruptionBudget.minAvailable
      - description: Ports exposed by the Envoy container
        displayName: Ports
        path: ports
      - description: Port name
        displayName: Name
        path: ports[0].name
      - description: Port value
        displayName: Port
        path: ports[0].port
      - description: Protocol. Defaults to TCP.
        displayName: Protocol
        path: ports[0].protocol
      - description: Readiness probe for the envoy pods
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Replicas configures the number of replicas in the Deployment.
          One of 'static', 'dynamic' can be set. If both are set, static has precedence.
        displayName: Replicas
        path: replicas
      - description: Configure a min and max value for the number of pods to autoscale
          dynamically.
        displayName: Dynamic
        path: replicas.dynamic
      - description: behavior configures the scaling behavior of the target in both
          Up and Down directions (scaleUp and scaleDown fields respectively). If not
          set, the default HPAScalingRules for scale up and scale down are used.
        displayName: Behavior
        path: replicas.dynamic.behavior
      - description: metrics contains the specifications for which to use to calculate
          the desired replica count (the maximum replica count across all metrics
          will be used).  The desired replica count is calculated multiplying the
          ratio between the target value and the current value by the current number
          of pods.  Ergo, metrics used must decrease as the pod count is increased,
          and vice-versa.  See the individual metric source types for more information
          about how each type of metric must respond. If not set, the default metric
          will be set to 80% average CPU utilization.
        displayName: Metrics
        path: replicas.dynamic.metrics
      - description: minReplicas is the lower limit for the number of replicas to
          which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
          is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and
          at least one Object or External metric is configured.  Scaling is active
          as long as at least one metric value is available.
        displayName: Min Replicas
        path: replicas.dynamic.minReplicas
      - description: Configure a static number of replicas. Defaults to 1.
        displayName: Static
        path: replicas.static
      - description: Resources holds the resource requirements to use for the Envoy
          Deployment. Defaults to no resource requests nor limits.
        displayName: Resources
        path: resources
      - description: ShutdownManager defines configuration for Envoy's shutdown manager,
          which handles graceful termination of Envoy pods
        displayName: Shutdown Manager
        path: shutdownManager
      - description: The drain strategy for the graceful shutdown. It also affects
          drain when listeners are modified or removed via LDS.
        displayName: Drain Strategy
        path: shutdownManager.drainStrategy
      - description: The time in seconds that Envoy will drain connections during
          shutdown. It also affects drain behaviour when listeners are modified or
          removed via LDS.
        displayName: Drain Time
        path: shutdownManager.drainTime
      - description: Image is the shutdown manager image and tag to use
        displayName: Image
        path: shutdownManager.image
      - description: Configures the sutdown manager's server port. Defaults to 8090.
        displayName: Server Port
        path: shutdownManager.serverPort
      version: v1alpha1
  description: |
    MARIN3R implements a control plane to deploy, configure and operate a fleet of envoy instances within a Kubernetes cluster.
    It operates a group of gateways and Pod sidecar containers to provide general purpose functionality required to operate production systems.

    Features:

    * Deploy and manage an Envoy xDS server using the DiscoveryService custom resource.
    * Inject Envoy sidecar containers based on Pod annotations.
    * Deploy Envoy as a Kubernetes Deployment using the EnvoyDeployment custom resource.
    * Dynamic Envoy configuration and re-configuration using the EnvoyConfig custom resource.
    * Use Kubernetes Secrets as certificate sources.
    * Syntactic validation of Envoy configurations.
    * Lifecycle management of Envoy containers (graceful shutdown and connection draining).
    * Self-healing.

    Check the [docs](https://github.com/3scale-ops/marin3r#readme) for more information.

    ## License
    MARIN3R is licensed under the [Apache 2.0 license](https://github.com/3scale/prometheus-exporter-operator/blob/master/LICENSE)
  displayName: MARIN3R
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: marin3r-controller-manager
      deployments:
      - name: marin3r-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - operator
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/3scale/marin3r:v0.10.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 300m
                    memory: 300Mi
                  requests:
                    cpu: 50m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: marin3r-controller-manager
              terminationGracePeriodSeconds: 10
      - name: marin3r-controller-webhook
        spec:
          replicas: 2
          selector:
            matchLabels:
              control-plane: controller-webhook
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-webhook
            spec:
              containers:
              - args:
                - webhook
                - --tls-dir=/apiserver.local.config/certificates
                - --tls-cert-name=apiserver.crt
                - --tls-key-name=apiserver.key
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/3scale/marin3r:v0.10.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: webhook
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 100Mi
                  requests:
                    cpu: 50m
                    memory: 30Mi
                securityContext:
                  allowPrivilegeEscalation: false
              serviceAccountName: marin3r-controller-manager
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigrevisions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigrevisions/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - discoveryservicecertificates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - discoveryservicecertificates/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - discoveryservices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - envoydeployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - envoydeployments/finalizers
          verbs:
          - update
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - envoydeployments/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: marin3r-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - envoy
  - discovery
  - controlplane
  - proxy
  - sidecar
  - xds
  - network
  - gateway
  links:
  - name: GitHub
    url: https://github.com/3scale-ops/marin3r
  maintainers:
  - email: 3scale-operations+marin3r@redhat.com
    name: 3scale Operations Team
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.10.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: marin3r-controller-webhook
    failurePolicy: Fail
    generateName: envoyconfig.marin3r.3scale.net
    rules:
    - apiGroups:
      - marin3r.3scale.net
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - envoyconfigs
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-marin3r-3scale-net-v1alpha1-envoyconfig
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: marin3r-controller-webhook
    failurePolicy: Fail
    generateName: envoydeployment.operator.marin3r.3scale.net
    rules:
    - apiGroups:
      - operator.marin3r.3scale.net
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - envoydeployments
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-operator-marin3r-3scale-net-v1alpha1-envoydeployment
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: marin3r-controller-webhook
    failurePolicy: Fail
    generateName: sidecar-injector.marin3r.3scale.net
    matchPolicy: Equivalent
    objectSelector:
      matchLabels:
        marin3r.3scale.net/status: enabled
    reinvocationPolicy: Never
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /pod-v1-mutate
