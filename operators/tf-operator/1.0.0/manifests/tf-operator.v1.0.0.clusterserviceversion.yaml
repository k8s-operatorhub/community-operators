apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    # Setting operatorhub.io/ui-metadata-max-k8s-version annotation automatically
    # The following is an informative annotation to let its users know that this distribution
    # uses removed APIs in 1.22 and will not work on K8S clusters 1.22+.
    # Following the findings for this distribution:
    # this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["analytics.tf.tungsten.io" "analyticsalarm.tf.tungsten.io" "analyticssnmp.tf.tungsten.io" "cassandras.tf.tungsten.io" "configs.tf.tungsten.io" "controls.tf.tungsten.io" "kubemanagers.tf.tungsten.io" "managers.tf.tungsten.io" "queryengine.tf.tungsten.io" "rabbitmqs.tf.tungsten.io" "redis.tf.tungsten.io" "vrouters.tf.tungsten.io" "webuis.tf.tungsten.io" "zookeepers.tf.tungsten.io"])
    operatorhub.io/ui-metadata-max-k8s-version: "1.21"
    operatorframework.io/suggested-namespace: tf
    alm-examples: |-
      [
        {
          "apiVersion": "tf.tungsten.io/v1alpha1",
          "kind": "Manager",
          "metadata": {
            "name": "cluster1",
            "namespace": "tf"
          },
          "spec": {
            "commonConfiguration": {
              "authParameters": {
                "authMode": "noauth"
              },
              "hostNetwork": true,
              "replicas": 3,
              "useKubeadmConfig": true
            },
            "services": {
              "analytics": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "analytics1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-api:latest",
                        "name": "analyticsapi"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-collector:latest",
                        "name": "collector"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                        "name": "nodemanager"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                        "name": "provisioner"
                      }
                    ],
                  }
                }
              },
              "analyticsAlarm": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "analyticsalarm1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "analyticsInstance": "analytics1",
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                        "name": "nodemanager"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                        "name": "provisioner"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-alarm-gen:latest",
                        "name": "analytics-alarm-gen"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-external-kafka:latest",
                        "name": "kafka"
                      }
                    ],
                  }
                }
              },
              "analyticsSnmp": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "analyticssnmp1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "analyticsInstance": "analytics1",
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                        "name": "nodemanager"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                        "name": "provisioner"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-snmp-collector:latest",
                        "name": "analytics-snmp-collector"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-snmp-topology:latest",
                        "name": "analytics-snmp-topology"
                      }
                    ],
                  }
                }
              },
              "queryengine": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "queryengine1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "analyticsInstance": "analytics1",
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-analytics-query-engine:latest",
                        "name": "queryengine"
                      },
                    ],
                  }
                }
              },
              "cassandras": [
                {
                  "metadata": {
                    "labels": {
                      "tf_cluster": "cluster1"
                    },
                    "name": "configdb1"
                  },
                  "spec": {
                    "commonConfiguration": {
                      "nodeSelector": {
                        "node-role.kubernetes.io/master": ""
                      }
                    },
                    "serviceConfiguration": {
                      "analyticsInstance": "analytics1",
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-external-cassandra:latest",
                          "name": "cassandra"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                          "name": "nodemanager"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                          "name": "provisioner"
                        }
                      ]
                    }
                  }
                }
              ],
              "config": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "config1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "analyticsInstance": "analytics1",
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-config-api:latest",
                        "name": "api"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-config-devicemgr:latest",
                        "name": "devicemanager"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-config-dnsmasq:latest",
                        "name": "dnsmasq"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-config-schema:latest",
                        "name": "schematransformer"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-config-svcmonitor:latest",
                        "name": "servicemonitor"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                        "name": "nodemanager"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                        "name": "provisioner"
                      }
                    ],
                  }
                }
              },
              "controls": [
                {
                  "metadata": {
                    "labels": {
                      "control_role": "master",
                      "tf_cluster": "cluster1"
                    },
                    "name": "control1"
                  },
                  "spec": {
                    "commonConfiguration": {
                      "nodeSelector": {
                        "node-role.kubernetes.io/master": ""
                      }
                    },
                    "serviceConfiguration": {
                      "analyticsInstance": "analytics1",
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-controller-control-control:latest",
                          "name": "control"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-controller-control-dns:latest",
                          "name": "dns"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-controller-control-named:latest",
                          "name": "named"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                          "name": "nodemanager"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                          "name": "provisioner"
                        }
                      ],
                    }
                  }
                }
              ],
              "kubemanagers": [
                {
                  "metadata": {
                    "labels": {
                      "tf_cluster": "cluster1"
                    },
                    "name": "kubemanager1"
                  },
                  "spec": {
                    "commonConfiguration": {
                      "nodeSelector": {
                        "node-role.kubernetes.io/master": ""
                      }
                    },
                    "serviceConfiguration": {
                      "analyticsInstance": "analytics1",
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-kubernetes-kube-manager:latest",
                          "name": "kubemanager"
                        }
                      ],
                      "hostNetworkService": true,
                      "ipFabricForwarding": false,
                      "ipFabricSnat": true,
                      "kubernetesTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                    }
                  }
                }
              ],
              "rabbitmq": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "rabbitmq1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-external-rabbitmq:latest",
                        "name": "rabbitmq"
                      }
                    ]
                  }
                }
              },
              "redis": [
                {
                  "metadata": {
                    "labels": {
                      "tf_cluster": "cluster1"
                    },
                    "name": "redis1"
                  },
                  "spec": {
                    "commonConfiguration": {
                      "nodeSelector": {
                        "node-role.kubernetes.io/master": ""
                      }
                    },
                    "serviceConfiguration": {
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-external-redis:latest",
                          "name": "redis"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-external-stunnel:latest",
                          "name": "stunnel"
                        }
                      ],
                    }
                  }
                }
              ],
              "vrouters": [
                {
                  "metadata": {
                    "labels": {
                      "tf_cluster": "cluster1"
                    },
                    "name": "vrouter1"
                  },
                  "spec": {
                    "serviceConfiguration": {
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-node-init:latest",
                          "name": "nodeinit"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-vrouter-kernel-init:latest",
                          "name": "vrouterkernelinit"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-vrouter-kernel-build-init:latest",
                          "name": "vrouterkernelbuildinit"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-provisioner:latest",
                          "name": "provisioner"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-nodemgr:latest",
                          "name": "nodemanager"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-vrouter-agent:latest",
                          "name": "vrouteragent"
                        },
                        {
                          "image": "docker.io/tungstenfabric/contrail-kubernetes-cni-init:latest",
                          "name": "vroutercni"
                        }
                      ],
                      "controlInstance": "control1",
                    }
                  }
                }
              ],
              "webui": {
                "metadata": {
                  "labels": {
                    "tf_cluster": "cluster1"
                  },
                  "name": "webui1"
                },
                "spec": {
                  "commonConfiguration": {
                    "nodeSelector": {
                      "node-role.kubernetes.io/master": ""
                    }
                  },
                  "serviceConfiguration": {
                    "analyticsInstance": "analytics1",
                    "containers": [
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-webui-job:latest",
                        "name": "webuijob"
                      },
                      {
                        "image": "docker.io/tungstenfabric/contrail-controller-webui-web:latest",
                        "name": "webuiweb"
                      }
                    ],
                    "controlInstance": "control1"
                  }
                }
              },
              "zookeepers": [
                {
                  "metadata": {
                    "labels": {
                      "tf_cluster": "cluster1"
                    },
                    "name": "zookeeper1"
                  },
                  "spec": {
                    "commonConfiguration": {
                      "nodeSelector": {
                        "node-role.kubernetes.io/master": ""
                      }
                    },
                    "serviceConfiguration": {
                      "containers": [
                        {
                          "image": "docker.io/tungstenfabric/contrail-external-zookeeper:latest",
                          "name": "zookeeper"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Networking
    containerImage: 'docker.io/tungstenfabric/tf-operator:latest'
    certified: 'false'
    createdAt: 2021-07-19T15:33:06Z
    description: Manages Tungsten Fabric, secure software defined networking project designed for the cloud native, multicloud environment.
    repository: https://github.com/tungstenfabric/tf-operator
    support: TF deployment team
  name: tf-operator.latest
  namespace: placeholder
spec:
  description: |
      ### Tungsten fabric SDN operator.
      Tungsten Fabric (formerly known as OpenContrail) is a secure software defined networking project designed for the cloud native, multicloud environment. Placing it on top of any IP network allows you to have a single portal for defining, monitoring, and analyzing your entire multicloud network, its security, and its performance.

      Using Tungsten Fabric, you can write and deploy network and security policies that are portable to any cloud environment. All of your clouds can have a consistent and easily maintainable configuration. Standardized policies will make your security team happy, too.

      This operator installs as well as configures the following Tungsten Fabric components:
      - TF Analytics
      - TF Config
      - TF Controls
      - All databases required (Cassandra, Zookeeper, RabbitMQ, Redis)
      - TF Kubemanager
      - TF Vrouters + CNI Plugins

      ### How to install
      Follow the instractions here: https://github.com/tungstenfabric/tf-operator for first time tf-operator and Tungsten Fabric installation as a cluster network provider BEFORE you start a k8s cluster.
      OLM can operate tf-operator on the cluster started with Tungsten Fabric as a network provider.
      Use Manager manifest to start and tune Tungsten Fabric. See an example of the Manager manifest below at Manager CRD.
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - displayName: Analytics
      description: Analytics manages Analytics service. This CR creates and manages automatically.
      kind: Analytics
      name: analytics.tf.tungsten.io
      version: v1alpha1
    - displayName: AnalyticsAlarm
      description: AnalyticsAlarm manages Analytics Alarm service. This CR creates and manages automatically.
      kind: AnalyticsAlarm
      name: analyticsalarm.tf.tungsten.io
      version: v1alpha1
    - displayName: QueryEngine
      description: QueryEngine manages Analytics QueryEngine service. This CR creates and manages automatically.
      kind: QueryEngine
      name: queryengine.tf.tungsten.io
      version: v1alpha1
    - displayName: AnalyticsSnmp
      description: AnalyticsSnmp manages Analytics SNMP service. This CR creates and manages automatically.
      kind: AnalyticsSnmp
      name: analyticssnmp.tf.tungsten.io
      version: v1alpha1
    - displayName: Cassandra
      description: Cassandra manages analycics and config cassandras.  This CR creates and manages automatically.
      kind: Cassandra
      name: cassandras.tf.tungsten.io
      version: v1alpha1
    - displayName: Config
      description: Config manages Config API service.  This CR creates and manages automatically.
      kind: Config
      name: configs.tf.tungsten.io
      version: v1alpha1
    - displayName: Control
      description: Control manages Control service.  This CR creates and manages automatically.
      kind: Control
      name: controls.tf.tungsten.io
      version: v1alpha1
    - displayName: Kubemanager
      description: Kubemanager manages Kubemanager service. This CR creates and manages automatically.
      kind: Kubemanager
      name: kubemanagers.tf.tungsten.io
      version: v1alpha1
    - displayName: Manager
      description: Manager is the main operator controller that operate all the others. Use it for provade any params to TF.
      kind: Manager
      name: managers.tf.tungsten.io
      version: v1alpha1
    - displayName: Rabbitmq
      description: Rabbitmq manages Rabbitmq database. This CR creates and manages automatically.
      kind: Rabbitmq
      name: rabbitmqs.tf.tungsten.io
      version: v1alpha1
    - displayName: Redis
      description: Redis manages Redis database. This CR creates and manages automatically.
      kind: Redis
      name: redis.tf.tungsten.io
      version: v1alpha1
    - displayName: Vrouter
      description: Vrouter is main network provider for nodes. This CR creates and manages automatically.
      kind: Vrouter
      name: vrouters.tf.tungsten.io
      version: v1alpha1
    - displayName: Webui
      description: Provide WebUI for manage Tungsten Fabric. This CR creates and manages automatically.
      kind: Webui
      name: webuis.tf.tungsten.io
      version: v1alpha1
    - displayName: Zookeeper
      description: Zookeeper database. This CR creates and manages automatically.
      kind: Zookeeper
      name: zookeepers.tf.tungsten.io
      version: v1alpha1
  displayName: Tf Operator
  icon:
  - base64data: "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAABKVBMVEX////8/Pz6+vv19fbu7/Hd3uP4z8v1tZ+4uMWsrLvugm7qcD2KjJ+Kip/raSXraCXqZyXqZSXqZCbqYybqYSbpYCbpYCXpXibpXSboXSbpXCboWifoWSfoWCfoVifnVSbnVCbnUSbnUCfnTijmTSjmTCjmSijmSSjmSChvcIjlRifgSCjlRSflRCjcSCnlQijkQSlrbIbkQCm5VS3lPynlPinlPSnjPinjOynjOijiOijjOSnjNinfOCnjNSnRMiuuQDDKMi1XWXZUVnNSVXKRPTKJQDJLTWxGSGlFR2hER2d5MzRwJjZxJDY3OVw1N1peJDhIJTpAJjs5IztEHDshJEszHTwaHUYmGD0aHEUjGD0jFzwbFz4bFj0VF0EWFT4VFD8UFD8SFD/raCQVAAABYUlEQVR42u3W1XLDMBCFYZWZmZmZuSmlzIxpq/d/iI6PKY426a560wt/d4qz/0hje8ZK/5GKA3EgDvwWuK2GyG/5yjHHC9TAQvqfA6xALYTrYyUM1EGwHCPncwQO68FfPtHzOQINcGeeXzHvQiP4qyJ39sqYoAJNBHc+xXsOmk0VxOazBt5bTO78Hi/Q1mrKugEq0E4QBTpMJaJA0tEJSY87/yB5G7sg+hRJXuebbvBWKXmgB868VSHmCySBXmCcIFugD+wDO/3grS7lgQF4jGygTBIYBM4J6MD3ENgHJoYd096qSh4Ygc/IBo4kgVFgnYAMvI6DfWASypWJGZgCZR+YAWI+jxe4ngUi8MILzEMx7wRUYBGUVeBZa70EK7ybmBFYDvk/nUoCq6Hz6AYqWYG10LrmniAtsBHa0haB3c3ARXi5VLCDr21XQhvfZSfc78SP+7eMywf7jvhjOw78/8APvQc9Er8dzFEAAAAASUVORK5CYII="
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: tf-operator
      deployments:
      - name: tf-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: tf-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: tf-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: tf-operator
                image: docker.io/tungstenfabric/tf-operator:latest
                name: tf-operator
                resources: {}
              dnsPolicy: ClusterFirstWithHostNet
              hostNetwork: true
              nodeSelector:
                node-role.kubernetes.io/master: ""
              restartPolicy: Always
              serviceAccountName: tf-operator
              tolerations:
              - effect: NoExecute
                operator: Exists
              - effect: NoSchedule
                operator: Exists
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - tf-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - tf.tungsten.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - storage
          resources:
          - storageclasses
          verbs:
          - '*'
        serviceAccountName: tf-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - "tf"
  - "tungsten"
  - "tungstenfabric"
  maintainers:
  - name: Tungsten Fabric
    email: dev@lists.tungsten.io
  maturity: alpha
  provider:
    name: Tungsten Fabric
  version: 1.0.0

