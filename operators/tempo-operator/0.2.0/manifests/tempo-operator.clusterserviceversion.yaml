apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "tempo.grafana.com/v1alpha1",
          "kind": "TempoStack",
          "metadata": {
            "name": "sample"
          },
          "spec": {
            "resources": {
              "total": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "2Gi"
                }
              }
            },
            "storageSize": "1Gi",
            "template": {
              "queryFrontend": {
                "jaegerQuery": {
                  "enabled": true
                }
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Logging & Tracing
    containerImage: ghcr.io/grafana/tempo-operator/tempo-operator
    createdAt: "2023-06-05T16:46:44Z"
    operators.operatorframework.io/builder: operator-sdk-v1.27.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/grafana/tempo-operator
    support: Tempo Operator SIG
  name: tempo-operator.v0.2.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: TempoStack is the Schema for the tempostacks API.
      displayName: TempoStack
      kind: TempoStack
      name: tempostacks.tempo.grafana.com
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: Images defines the image for each container.
        displayName: Container Images
        path: images
      - description: LimitSpec is used to limit ingestion and querying rates.
        displayName: Ingestion and Querying Ratelimiting
        path: limits
      - description: Global is used to define global rate limits.
        displayName: Global Limit
        path: limits.global
      - description: Ingestion is used to define ingestion rate limits.
        displayName: Ingestion Limit
        path: limits.global.ingestion
      - description: IngestionBurstSizeBytes defines the burst size (bytes) used in
          ingestion.
        displayName: Ingestion Burst Size in Bytes
        path: limits.global.ingestion.ingestionBurstSizeBytes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: IngestionRateLimitBytes defines the Per-user ingestion rate limit
          (bytes) used in ingestion.
        displayName: Ingestion Rate Limit in Bytes
        path: limits.global.ingestion.ingestionRateLimitBytes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MaxBytesPerTrace defines the maximum number of bytes of an acceptable
          trace.
        displayName: Max Bytes per Trace
        path: limits.global.ingestion.maxBytesPerTrace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MaxTracesPerUser defines the maximum number of traces a user
          can send.
        displayName: Max Traces per User
        path: limits.global.ingestion.maxTracesPerUser
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Query is used to define query rate limits.
        displayName: Query Limit
        path: limits.global.query
      - description: MaxBytesPerTagValues defines the maximum size in bytes of a tag-values
          query.
        displayName: Max Tags per User
        path: limits.global.query.maxBytesPerTagValues
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: 'MaxSearchBytesPerTrace defines the maximum size of search data
          for a single trace in bytes. default: `0` to disable.'
        displayName: Max Traces per User
        path: limits.global.query.maxSearchBytesPerTrace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: PerTenant is used to define rate limits per tenant.
        displayName: Tenant Limits
        path: limits.perTenant
      - description: Ingestion is used to define ingestion rate limits.
        displayName: Ingestion Limit
        path: limits.perTenant.ingestion
      - description: IngestionBurstSizeBytes defines the burst size (bytes) used in
          ingestion.
        displayName: Ingestion Burst Size in Bytes
        path: limits.perTenant.ingestion.ingestionBurstSizeBytes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: IngestionRateLimitBytes defines the Per-user ingestion rate limit
          (bytes) used in ingestion.
        displayName: Ingestion Rate Limit in Bytes
        path: limits.perTenant.ingestion.ingestionRateLimitBytes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MaxBytesPerTrace defines the maximum number of bytes of an acceptable
          trace.
        displayName: Max Bytes per Trace
        path: limits.perTenant.ingestion.maxBytesPerTrace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MaxTracesPerUser defines the maximum number of traces a user
          can send.
        displayName: Max Traces per User
        path: limits.perTenant.ingestion.maxTracesPerUser
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Query is used to define query rate limits.
        displayName: Query Limit
        path: limits.perTenant.query
      - description: MaxBytesPerTagValues defines the maximum size in bytes of a tag-values
          query.
        displayName: Max Tags per User
        path: limits.perTenant.query.maxBytesPerTagValues
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: 'MaxSearchBytesPerTrace defines the maximum size of search data
          for a single trace in bytes. default: `0` to disable.'
        displayName: Max Traces per User
        path: limits.perTenant.query.maxSearchBytesPerTrace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ObservabilitySpec defines how telemetry data gets handled.
        displayName: Observability
        path: observability
      - description: Metrics defines the metrics configuration for operands.
        displayName: Metrics Config
        path: observability.metrics
      - description: CreatePrometheusRules specifies if Prometheus rules for alerts
          should be created for Tempo components.
        displayName: Create PrometheusRules for Tempo components
        path: observability.metrics.createPrometheusRules
      - description: CreateServiceMonitors specifies if ServiceMonitors should be
          created for Tempo components.
        displayName: Create ServiceMonitors for Tempo components
        path: observability.metrics.createServiceMonitors
      - description: Tracing defines a config for operands.
        displayName: Tracing Config
        path: observability.tracing
      - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
          to.
        displayName: Jaeger-Agent-Endpoint
        path: observability.tracing.jaeger_agent_endpoint
      - description: SamplingFraction defines the sampling ratio. Valid values are
          0 to 1.
        displayName: Sampling Fraction
        path: observability.tracing.sampling_fraction
      - description: 'NOTE: currently this field is not considered. ReplicationFactor
          is used to define how many component replicas should exist.'
        displayName: Replication Factor
        path: replicationFactor
      - description: Resources defines resources configuration.
        displayName: Resources
        path: resources
      - description: The total amount of resources for Tempo instance. The operator
          autonomously splits resources between deployed Tempo components. Only limits
          are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540.
        displayName: Resource Requirements
        path: resources.total
      - description: 'NOTE: currently this field is not considered. Retention period
          defined by dataset. User can specify how long data should be stored.'
        displayName: Retention Period
        path: retention
      - description: Global is used to configure global retention.
        displayName: Global Retention
        path: retention.global
      - description: 'Traces defines retention period. Supported parameter suffixes
          are “s”, “m” and “h”. example: 336h default: value is 48h.'
        displayName: Trace Retention Period
        path: retention.global.traces
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: PerTenant is used to configure retention per tenant.
        displayName: PerTenant Retention
        path: retention.perTenant
      - description: 'Traces defines retention period. Supported parameter suffixes
          are “s”, “m” and “h”. example: 336h default: value is 48h.'
        displayName: Trace Retention Period
        path: retention.perTenant.traces
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: SearchSpec control the configuration for the search capabilities.
        displayName: Search configuration options
        path: search
      - description: 'Limit used for search requests if none is set by the caller
          (default: 20)'
        displayName: Limit used for search requests if none is set by the caller,
          this limit the number of traces returned by the query
        path: search.defaultResultLimit
      - description: 'The maximum allowed time range for a search, default: 0s which
          means unlimited.'
        displayName: Max search time range allowed
        path: search.maxDuration
      - description: The maximum allowed value of the limit parameter on search requests.
          If the search request limit parameter exceeds the value configured here
          it will be set to the value configured here. The default value of 0 disables
          this limit.
        displayName: The maximum allowed value of the limit parameter on search requests,
          this determine the max number of traces allowed to be returned
        path: search.maxResultLimit
      - description: ServiceAccount defines the service account to use for all tempo
          components.
        displayName: Service Account
        path: serviceAccount
      - description: Storage defines the spec for the object storage endpoint to store
          traces. User is required to create secret and supply it.
        displayName: Object Storage
        path: storage
      - description: Secret for object storage authentication. Name of a secret in
          the same namespace as the tempo TempoStack custom resource.
        displayName: Object Storage Secret
        path: storage.secret
      - description: Name of a secret in the namespace configured for object storage
          secrets.
        displayName: Object Storage Secret Name
        path: storage.secret.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Type of object storage that should be used
        displayName: Object Storage Secret Type
        path: storage.secret.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:azure
        - urn:alm:descriptor:com.tectonic.ui:select:gcs
        - urn:alm:descriptor:com.tectonic.ui:select:s3
      - description: TLS configuration for reaching the object storage endpoint.
        displayName: TLS Config
        path: storage.tls
      - description: CA is the name of a ConfigMap containing a CA certificate. It
          needs to be in the same namespace as the Tempo custom resource.
        displayName: CA ConfigMap Name
        path: storage.tls.caName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
      - description: StorageClassName for PVCs used by ingester. Defaults to nil (default
          storage class in the cluster).
        displayName: StorageClassName for PVCs
        path: storageClassName
      - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
        displayName: Storage size for PVCs
        path: storageSize
      - description: Template defines requirements for a set of tempo components.
        displayName: Tempo Component Templates
        path: template
      - description: Compactor defines the tempo compactor component spec.
        displayName: Compactor pods
        path: template.compactor
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.compactor.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.compactor.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.compactor.tolerations
      - description: Distributor defines the distributor component spec.
        displayName: Distributor pods
        path: template.distributor
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.distributor.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.distributor.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.distributor.tolerations
      - description: Gateway defines the tempo gateway spec.
        displayName: Gateway pods
        path: template.gateway
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.gateway.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.gateway.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.gateway.tolerations
      - description: Ingester defines the ingester component spec.
        displayName: Ingester pods
        path: template.ingester
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.ingester.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.ingester.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.ingester.tolerations
      - description: Querier defines the querier component spec.
        displayName: Querier pods
        path: template.querier
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.querier.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.querier.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.querier.tolerations
      - description: TempoQueryFrontendSpec defines the query frontend spec.
        displayName: Query Frontend pods
        path: template.queryFrontend
      - description: JaegerQuerySpec defines Jaeger Query specific options.
        displayName: Jaeger Query Settings
        path: template.queryFrontend.jaegerQuery
      - description: Enabled is used to define if Jaeger Query component should be
          created.
        displayName: Enable Jaeger Query UI
        path: template.queryFrontend.jaegerQuery.enabled
      - description: Ingress defines Jaeger Query Ingress options.
        displayName: Jaeger Query UI Ingress Settings
        path: template.queryFrontend.jaegerQuery.ingress
      - description: Annotations defines the annotations of the Ingress object.
        displayName: Annotations
        path: template.queryFrontend.jaegerQuery.ingress.annotations
      - description: Host defines the hostname of the Ingress object.
        displayName: Host
        path: template.queryFrontend.jaegerQuery.ingress.host
      - description: Route defines OpenShift Route specific options.
        displayName: Route Configuration
        path: template.queryFrontend.jaegerQuery.ingress.route
      - description: Termination specifies the termination type. By default "edge"
          is used.
        displayName: TLS Termination Policy
        path: template.queryFrontend.jaegerQuery.ingress.route.termination
      - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
          ingress, route and none are supported.
        displayName: Type
        path: template.queryFrontend.jaegerQuery.ingress.type
      - description: NodeSelector is the simplest recommended form of node selection
          constraint.
        displayName: Node Selector
        path: template.queryFrontend.nodeSelector
      - description: Replicas represents the number of replicas to create for this
          component.
        displayName: Component Replicas
        path: template.queryFrontend.replicas
      - description: Tolerations defines component specific pod tolerations.
        displayName: Tolerations
        path: template.queryFrontend.tolerations
      - description: Tenants defines the per-tenant authentication and authorization
          spec.
        displayName: Tenants Configuration
        path: tenants
      - description: Authentication defines the tempo-gateway component authentication
          configuration spec per tenant.
        displayName: Authentication
        path: tenants.authentication
      - description: OIDC defines the spec for the OIDC tenant's authentication.
        displayName: OIDC Configuration
        path: tenants.authentication[0].oidc
      - description: IssuerURL defines the URL for issuer.
        displayName: Issuer URL
        path: tenants.authentication[0].oidc.issuerURL
      - description: RedirectURL defines the URL for redirect.
        displayName: Redirect URL
        path: tenants.authentication[0].oidc.redirectURL
      - description: Secret defines the spec for the clientID, clientSecret and issuerCAPath
          for tenant's authentication.
        displayName: Tenant Secret
        path: tenants.authentication[0].oidc.secret
      - description: Name of a secret in the namespace configured for tenant secrets.
        displayName: Tenant Secret Name
        path: tenants.authentication[0].oidc.secret.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TenantID defines the id of the tenant.
        displayName: Tenant ID
        path: tenants.authentication[0].tenantId
      - description: TenantName defines the name of the tenant. The value of this
          field should be sent in X-Scope-OrgID header to identify the tenant.
        displayName: Tenant Name
        path: tenants.authentication[0].tenantName
      - description: Authorization defines the tempo-gateway component authorization
          configuration spec per tenant.
        displayName: Authorization
        path: tenants.authorization
      - description: RoleBindings defines configuration to bind a set of roles to
          a set of subjects.
        displayName: Static Role Bindings
        path: tenants.authorization.roleBindings
      - description: Roles defines a set of permissions to interact with a tenant.
        displayName: Static Roles
        path: tenants.authorization.roles
      - description: Mode defines the multitenancy mode.
        displayName: Mode
        path: tenants.mode
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:static
        - urn:alm:descriptor:com.tectonic.ui:select:dynamic
      statusDescriptors:
      - description: Distributor is a map to the per pod status of the distributor
          deployment
        displayName: Distributor
        path: components.distributor
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Ingester is a map to the per pod status of the ingester statefulset
        displayName: Ingester
        path: components.ingester
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Querier is a map to the per pod status of the querier deployment
        displayName: Querier
        path: components.querier
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Gateway is a map to the per pod status of the query frontend
          deployment
        displayName: Query Frontend
        path: components.gateway
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: QueryFrontend is a map to the per pod status of the query frontend
          deployment
        displayName: Query Frontend
        path: components.queryFrontend
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Compactor is a map to the pod status of the compactor pod.
        displayName: Compactor
        path: components.compactor
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Conditions of the Tempo deployment health.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
  description: |
    Tempo is an open source, easy-to-use, and high-scale distributed tracing backend, requiring only object storage to operate, and is deeply integrated with Grafana, Prometheus, and Loki.
    It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry.

    The Community Tempo Operator manages Tempo deployments in Microservices mode.
  displayName: Community Tempo Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTIxLjg1cHgiIGhlaWdodD0iOTkuMTdweCIgdmlld0JveD0iMCAwIDEyMS44NSA5OS4xNyI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOnVybCgjbGluZWFyLWdyYWRpZW50KTt9PC9zdHlsZT48bGluZWFyR3JhZGllbnQgaWQ9ImxpbmVhci1ncmFkaWVudCIgeDE9IjE2OC41NSIgeTE9IjEzLjQiIHgyPSIyNy4yIiB5Mj0iNTciIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBvZmZzZXQ9IjAiIHN0b3AtY29sb3I9IiNmZmYxMDAiLz48c3RvcCBvZmZzZXQ9IjEiIHN0b3AtY29sb3I9IiNmMDVhMjgiLz48L2xpbmVhckdyYWRpZW50PjwvZGVmcz48ZyBpZD0iTGF5ZXJfNiIgZGF0YS1uYW1lPSJMYXllciA2Ij48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik00LjY2LDI1SDIuMzdhMi4zNywyLjM3LDAsMCwwLDAsNC43NEg0LjY2YTIuMzcsMi4zNywwLDEsMCwwLTQuNzRaTTQ4LjQ4LDU5LjU3SDQ2LjE5YTIuMzcsMi4zNywwLDEsMCwwLDQuNzRoMi4yOWEyLjM3LDIuMzcsMCwxLDAsMC00Ljc0Wk00Ni41NiwzN2EyLjM3LDIuMzcsMCwwLDAtMi4zNy0yLjM3SDM2LjI3YTIuMzcsMi4zNywwLDAsMCwwLDQuNzRoNy45MkEyLjM3LDIuMzcsMCwwLDAsNDYuNTYsMzdaTTEyMS43MywyMi4xLDExOS4zMiw4LjU2QTkuODgsOS44OCwwLDAsMCwxMDkuMDcsMEgxNi4yNEE2LjI4LDYuMjgsMCwwLDAsOS45LDcuN2wyLjU0LDE0LjRhMy4zOCwzLjM4LDAsMCwwLC4wOC4zNHYwYy4zLDEuNzYtLjU5LDIuNDctMS4zOSwyLjczaDBhMi4zNywyLjM3LDAsMCwwLC43OSw0LjZIMTE1LjM5QTYuMjgsNi4yOCwwLDAsMCwxMjEuNzMsMjIuMVpNOTAuMTUsNzYuNDJjLTEtNS4yNS00LTcuMi03LjM5LTcuMkg1OC4yNGEyLjM5LDIuMzksMCwwLDAtMi4zNywyLjRBMi4zNywyLjM3LDAsMCwwLDU4LDc0aDBjLjc4LjE0LDEuNjIsMS4xNiwyLjE1LDMuNjhsMi41MiwxNGE5LjU5LDkuNTksMCwwLDAsOS4xOSw3LjU0bDE0LjYzLS4wN2E2LjI4LDYuMjgsMCwwLDAsNi40NC03LjYxWk01Ny43Myw2NC40OEg4NC4zNGEyLjI3LDIuMjcsMCwwLDAsLjU5LS4wOWMyLjQ2LS41MiwyLjU4LTIuNTIsMi4yNi00LjUxTDgzLjgsNDEuMjdjLS45My00Ljg0LTMuNzQtNi43NS03LjQzLTYuNzVINTJhMi4zNywyLjM3LDAsMCwwLS4yOCw0LjcyaDBjLjgxLjE1LDEuNywxLjI0LDIuMjIsNGwyLjU3LDE0LjI0djBBMS45MiwxLjkyLDAsMCwxLDU1LDU5Ljg3aDBhMi4zNiwyLjM2LDAsMCwwLC43OSw0LjU5aDEuOVoiLz48L2c+PC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - pods
          - secrets
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - config.openshift.io
          resources:
          - dnses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - prometheusrules
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operator.openshift.io
          resources:
          - ingresscontrollers
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - tempo.grafana.com
          resources:
          - tempostacks
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tempo.grafana.com
          resources:
          - tempostacks/finalizers
          verbs:
          - update
        - apiGroups:
          - tempo.grafana.com
          resources:
          - tempostacks/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: tempo-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/managed-by: operator-lifecycle-manager
          app.kubernetes.io/name: tempo-operator
          app.kubernetes.io/part-of: tempo-operator
          control-plane: controller-manager
        name: tempo-operator-controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/managed-by: operator-lifecycle-manager
              app.kubernetes.io/name: tempo-operator
              app.kubernetes.io/part-of: tempo-operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/managed-by: operator-lifecycle-manager
                app.kubernetes.io/name: tempo-operator
                app.kubernetes.io/part-of: tempo-operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - start
                - --config=controller_manager_config.yaml
                command:
                - /manager
                image: ghcr.io/grafana/tempo-operator/tempo-operator:v0.2.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  requests:
                    cpu: 100m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
                - mountPath: /controller_manager_config.yaml
                  name: manager-config
                  subPath: controller_manager_config.yaml
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: tempo-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
              - configMap:
                  name: tempo-operator-manager-config
                name: manager-config
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: tempo-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - tempo
  - tracing
  - database
  links:
  - name: Tempo Operator
    url: https://github.com/grafana/tempo-operator
  maintainers:
  - email: ruben.vp8510@gmail.com
    name: Ruben Vargas
  - email: p.loffay@gmail.com
    name: Pavol Loffay
  - email: bongartz@klimlive.de
    name: Benedikt Bongartz
  - email: andreas@gerstmayr.me
    name: Andreas Gerstmayr
  - email: iblancas@redhat.com
    name: Israel Blancas Alvarez
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.2.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: tempo-operator-controller
    failurePolicy: Fail
    generateName: mtempostack.tempo.grafana.com
    rules:
    - apiGroups:
      - tempo.grafana.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - tempostacks
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-tempo-grafana-com-v1alpha1-tempostack
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: tempo-operator-controller
    failurePolicy: Fail
    generateName: vtempostack.tempo.grafana.com
    rules:
    - apiGroups:
      - tempo.grafana.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - tempostacks
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-tempo-grafana-com-v1alpha1-tempostack
