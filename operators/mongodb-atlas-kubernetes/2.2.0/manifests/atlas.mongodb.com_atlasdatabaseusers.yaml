apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasdatabaseusers.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasDatabaseUser
    listKind: AtlasDatabaseUserList
    plural: atlasdatabaseusers
    singular: atlasdatabaseuser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasDatabaseUser is the Schema for the Atlas Database User API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasDatabaseUserSpec defines the desired state of Database
              User in Atlas
            properties:
              awsIamType:
                default: NONE
                description: Human-readable label that indicates whether the new database
                  user authenticates with the Amazon Web Services (AWS) Identity and
                  Access Management (IAM) credentials associated with the user or
                  the user's role
                enum:
                - NONE
                - USER
                - ROLE
                type: string
              databaseName:
                default: admin
                description: DatabaseName is a Database against which Atlas authenticates
                  the user. Default value is 'admin'.
                type: string
              deleteAfterDate:
                description: DeleteAfterDate is a timestamp in ISO 8601 date and time
                  format in UTC after which Atlas deletes the user. The specified
                  date must be in the future and within one week.
                type: string
              labels:
                description: Labels is an array containing key-value pairs that tag
                  and categorize the database user. Each key and value has a maximum
                  length of 255 characters.
                items:
                  description: LabelSpec contains key-value pairs that tag and categorize
                    the Cluster/DBUser
                  properties:
                    key:
                      maxLength: 255
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              oidcAuthType:
                default: NONE
                description: Human-readable label that indicates whether the new database
                  Username with OIDC federated authentication. To create a federated
                  authentication user, specify the value of IDP_GROUP for this field
                enum:
                - NONE
                - IDP_GROUP
                type: string
              passwordSecretRef:
                description: PasswordSecret is a reference to the Secret keeping the
                  user password.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              projectRef:
                description: Project is a reference to AtlasProject resource the user
                  belongs to
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              roles:
                description: Roles is an array of this user's roles and the databases
                  / collections on which the roles apply. A role allows the user to
                  perform particular actions on the specified database.
                items:
                  description: RoleSpec allows the user to perform particular actions
                    on the specified database. A role on the admin database can include
                    privileges that apply to the other databases as well.
                  properties:
                    collectionName:
                      description: CollectionName is a collection for which the role
                        applies.
                      type: string
                    databaseName:
                      description: DatabaseName is a database on which the user has
                        the specified role. A role on the admin database can include
                        privileges that apply to the other databases.
                      type: string
                    roleName:
                      description: RoleName is a name of the role. This value can
                        either be a built-in role or a custom role.
                      type: string
                  required:
                  - databaseName
                  - roleName
                  type: object
                minItems: 1
                type: array
              scopes:
                description: Scopes is an array of clusters and Atlas Data Lakes that
                  this user has access to.
                items:
                  description: ScopeSpec if present a database user only have access
                    to the indicated resource (Cluster or Atlas Data Lake) if none
                    is given then it has access to all. It's highly recommended to
                    restrict the access of the database users only to a limited set
                    of resources.
                  properties:
                    name:
                      description: Name is a name of the cluster or Atlas Data Lake
                        that the user has access to.
                      type: string
                    type:
                      description: Type is a type of resource that the user has access
                        to.
                      enum:
                      - CLUSTER
                      - DATA_LAKE
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              username:
                description: 'Username is a username for authenticating to MongoDB
                  Human-readable label that represents the user that authenticates
                  to MongoDB. The format of this label depends on the method of authentication:
                  In case of AWS IAM: the value should be AWS ARN for the IAM User/Role;
                  In case of OIDC: the value should be the Identity Provider ID; In
                  case of Plain text auth: the value can be anything'
                maxLength: 1024
                type: string
              x509Type:
                description: X509Type is X.509 method by which the database authenticates
                  the provided username
                type: string
            required:
            - projectRef
            - roles
            - username
            type: object
          status:
            description: AtlasDatabaseUserStatus defines the observed state of AtlasProject
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              name:
                description: UserName is the current name of database user.
                type: string
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
              passwordVersion:
                description: PasswordVersion is the 'ResourceVersion' of the password
                  Secret that the Atlas Operator is aware of
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
