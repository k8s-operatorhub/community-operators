apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "auth.ops42.org/v1alpha1",
          "kind": "AwsAuthSyncConfig",
          "metadata": {
            "name": "default",
            "namespace": "kube-system"
          },
          "spec": {
            "syncIamGroups": [
              {
                "dest": "dev-operator-k8s-admins",
                "source": "dev-operator-k8s-admins"
              },
              {
                "dest": "dev-operator-k8s-users",
                "source": "dev-operator-k8s-users"
              }
            ]
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: 'Integration & Delivery'
    containerImage: 'docker.io/gp42/aws-auth-operator:0.1.0'
    createdAt: '2021-09-10T08:00:00Z'
    support: Gennady Potapov
    description: Automates AWS auth-cm ConfigMap management
    repository: https://github.com/gp42/aws-auth-operator
    operators.operatorframework.io/builder: operator-sdk-v1.8.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: aws-auth-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: AwsAuthSyncConfig is the Schema for the awsauthsyncconfigs API
      displayName: Aws Auth Sync Config
      kind: AwsAuthSyncConfig
      name: awsauthsyncconfigs.auth.ops42.org
      version: v1alpha1
  description: |-
    AWS Auth Operator helps to manage
    ['aws-auth'](https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html) ConfigMap for AWS
    EKS.

    The challenge with *aws-auth* ConfigMap this operator is trying to solve is manual effort to
    maintain the ConfigMap. The ConfigMap allows to let specific AWS IAM Roles and Users to use the EKS
    cluster, but both approaches are not ideal because: 

    * Using MapRoles does not show which user was executing cluster actions in Kubernetes Audit logs
    * Using MapUsers resolves the Kubernetes Audit log issue, but there are no good tools to manage the
    users

    This operator is supposed to solve these problems by providing a tool for automated IAM Group
    synchronization and *aws-auth* ConfigMap management.

    ## Instructions
   
    Please check the [installation](https://ops42.org/aws-auth-operator/installation/) documentation

  displayName: AWS Auth Operator
  icon:
  - mediatype: "image/png"
    base64data: |-
      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
      CnbeAAAAAElFTkSuQmCC

  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: aws-auth-operator-controller-manager
      deployments:
      - name: aws-auth-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: docker.io/gp42/aws-auth-operator:0.1.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: aws-auth-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - auth.ops42.org
          resources:
          - awsauthsyncconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - auth.ops42.org
          resources:
          - awsauthsyncconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - auth.ops42.org
          resources:
          - awsauthsyncconfigs/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: aws-auth-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - aws
  - eks
  - aws-auth
  - iam
  - rbac
  - access
  - user
  - management
  links:
  - name: GitHub
    url: https://github.com/gp42/aws-auth-operator
  - name: Documentation
    url: https://ops42.org/aws-auth-operator
  - name: Blog
    url: https://ops42.org
  maintainers:
  - email: gennadiy.potapov@gmail.com
    name: Gennady Potapov
  maturity: alpha
  minKubeVersion: 1.20.0
  provider:
    name: Gennady Potapov
    url: https://ops42.org
  version: 0.1.0
