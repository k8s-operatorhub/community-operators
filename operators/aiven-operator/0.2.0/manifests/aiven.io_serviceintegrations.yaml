apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: aiven-operator-system/aiven-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: serviceintegrations.aiven.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: aiven.io
  names:
    kind: ServiceIntegration
    listKind: ServiceIntegrationList
    plural: serviceintegrations
    singular: serviceintegration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.project
      name: Project
      type: string
    - jsonPath: .spec.integrationType
      name: Type
      type: string
    - jsonPath: .spec.sourceServiceName
      name: Source Service Name
      type: string
    - jsonPath: .spec.destinationServiceName
      name: Destination Service Name
      type: string
    - jsonPath: .spec.sourceEndpointId
      name: Source Endpoint ID
      type: string
    - jsonPath: .spec.destinationEndpointId
      name: Destination Endpoint ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceIntegration is the Schema for the serviceintegrations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceIntegrationSpec defines the desired state of ServiceIntegration
            properties:
              authSecretRef:
                description: Authentication reference to Aiven token in a secret
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - key
                - name
                type: object
              datadog:
                description: Datadog specific user configuration options
                properties:
                  exclude_consumer_groups:
                    description: Consumer groups to exclude
                    items:
                      type: string
                    type: array
                  exclude_topics:
                    description: List of topics to exclude
                    items:
                      type: string
                    type: array
                  include_consumer_groups:
                    description: Consumer groups to include
                    items:
                      type: string
                    type: array
                  include_topics:
                    description: Topics to include
                    items:
                      type: string
                    type: array
                  kafka_custom_metrics:
                    description: List of custom metrics
                    items:
                      type: string
                    type: array
                type: object
              destinationEndpointId:
                description: Destination endpoint for the integration (if any)
                type: string
              destinationServiceName:
                description: Destination service for the integration (if any)
                type: string
              integrationType:
                description: Type of the service integration
                enum:
                - datadog
                - kafka_logs
                - kafka_connect
                - metrics
                - dashboard
                - rsyslog
                - read_replica
                - schema_registry_proxy
                - signalfx
                - jolokia
                - internal_connectivity
                - external_google_cloud_logging
                - datasource
                type: string
              kafkaConnect:
                description: Kafka Connect service configuration values
                properties:
                  kafka_connect:
                    properties:
                      config_storage_topic:
                        description: The name of the topic where connector and task
                          configuration data are stored. This must be the same for
                          all workers with the same group_id.
                        maxLength: 249
                        type: string
                      group_id:
                        description: A unique string that identifies the Connect cluster
                          group this worker belongs to.
                        maxLength: 249
                        type: string
                      offset_storage_topic:
                        description: The name of the topic where connector and task
                          configuration offsets are stored. This must be the same
                          for all workers with the same group_id.
                        maxLength: 249
                        type: string
                      status_storage_topic:
                        description: The name of the topic where connector and task
                          configuration status updates are stored.This must be the
                          same for all workers with the same group_id.
                        maxLength: 249
                        type: string
                    type: object
                type: object
              kafkaLogs:
                description: Kafka logs configuration values
                properties:
                  kafka_topic:
                    description: Topic name
                    maxLength: 63
                    minLength: 1
                    type: string
                type: object
              metrics:
                description: Metrics configuration values
                properties:
                  database:
                    description: Name of the database where to store metric datapoints.
                      Only affects PostgreSQL destinations
                    format: ^[_A-Za-z0-9][-_A-Za-z0-9]{0,39}$
                    maxLength: 40
                    type: string
                  retention_days:
                    description: Number of days to keep old metrics. Only affects
                      PostgreSQL destinations. Set to 0 for no automatic cleanup.
                      Defaults to 30 days.
                    type: integer
                  ro_username:
                    description: Name of a user that can be used to read metrics.
                      This will be used for Grafana integration (if enabled) to prevent
                      Grafana users from making undesired changes. Only affects PostgreSQL
                      destinations. Defaults to 'metrics_reader'. Note that this must
                      be the same for all metrics integrations that write data to
                      the same PostgreSQL service.
                    format: ^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$
                    maxLength: 40
                    type: string
                  username:
                    description: Name of the user used to write metrics. Only affects
                      PostgreSQL destinations. Defaults to 'metrics_writer'. Note
                      that this must be the same for all metrics integrations that
                      write data to the same PostgreSQL service.
                    format: ^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$
                    maxLength: 40
                    type: string
                type: object
              project:
                description: Project the integration belongs to
                format: ^[a-zA-Z0-9_-]*$
                maxLength: 63
                type: string
              sourceEndpointID:
                description: Source endpoint for the integration (if any)
                type: string
              sourceServiceName:
                description: Source service for the integration (if any)
                type: string
            required:
            - authSecretRef
            - integrationType
            - project
            type: object
          status:
            description: ServiceIntegrationStatus defines the observed state of ServiceIntegration
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an ServiceIntegration state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: Service integration ID
                type: string
            required:
            - conditions
            - id
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
