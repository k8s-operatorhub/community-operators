apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "flows.netobserv.io/v1alpha1",
          "kind": "FlowCollector",
          "metadata": {
            "name": "cluster"
          },
          "spec": {
            "cno": {
              "namespace": "openshift-network-operator"
            },
            "consolePlugin": {
              "image": "quay.io/netobserv/network-observability-console-plugin:v0.1.1",
              "imagePullPolicy": "IfNotPresent",
              "port": 9001
            },
            "goflowkube": {
              "healthPort": 8080,
              "image": "quay.io/netobserv/goflow2-kube:v0.1.1",
              "imagePullPolicy": "IfNotPresent",
              "kind": "Deployment",
              "logLevel": "info",
              "port": 2055,
              "printOutput": false,
              "replicas": 1
            },
            "ipfix": {
              "cacheActiveTimeout": "60s",
              "cacheMaxFlows": 400,
              "sampling": 100
            },
            "loki": {
              "batchSize": 102400,
              "batchWait": "1s",
              "maxBackoff": "300s",
              "maxRetries": 10,
              "minBackoff": "1s",
              "staticLabels": {
                "app": "netobserv-flowcollector"
              },
              "timestampLabel": "TimeFlowEnd",
              "url": "http://loki:3100/"
            },
            "namespace": "network-observability"
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring
    containerImage: quay.io/netobserv/network-observability-operator:0.1.1
    createdAt: "2022-03-07T09:18:29Z"
    description: A network observability operator based on netflows (IPFIX) for OVN
    operators.operatorframework.io/builder: operator-sdk-v1.16.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/netobserv/network-observability-operator
  name: netobserv-operator.v0.1.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: FlowCollector is the Schema for the flowcollectors API, which pilots
        and configures netflow collection.
      displayName: Flow Collector
      kind: FlowCollector
      name: flowcollectors.flows.netobserv.io
      version: v1alpha1
  description: |-
    This is an OpenShift / Kubernetes operator for network observability. It deploys
    a netflow (IPFIX) collector, a console plugin, and configures OVS for netflow exports. This is an early release ("dev preview") and is not considered production-ready yet.

    ## Pre-requisite

    - Your CNI should be [ovn-kubernetes](https://github.com/ovn-org/ovn-kubernetes/). Other [OvS](https://www.openvswitch.org/)-based CNIs might work if they can export IPFIX flows, but would necessitate manual configuration and they haven't been tested. Future releases will include CNI independent features.

    - [Loki](https://grafana.com/oss/loki/) installed: all collected flows are stored via Loki. Several installation options are [available here](https://grafana.com/docs/loki/latest/installation/). For a quick install, you can simply run:

    ```
    kubectl apply -f <(curl -L https://raw.githubusercontent.com/netobserv/documents/main/examples/zero-click-loki/1-storage.yaml) -n network-observability
    kubectl apply -f <(curl -L https://raw.githubusercontent.com/netobserv/documents/main/examples/zero-click-loki/2-loki.yaml) -n network-observability
    ```

    - [Grafana](https://grafana.com/oss/grafana/) installed (optional): [a dashboard](https://github.com/netobserv/network-observability-operator/blob/main/config/samples/dashboards/Network%20Observability.json) can be imported to show flow logs and metrics.

    ## Post-installation
    Because the installed workloads operate cluster-wide, there is only one `FlowCollector` that can be installed, named `cluster`. The custom resource is [documented here](https://github.com/netobserv/network-observability-operator/blob/main/docs/FlowCollector.md). Make sure that Loki is reachable and its URL is properly configured in the operand resource.

    ### Enabling IPFIX export

    #### Generic Kubernetes with ovn-kubernetes
    You need to explicitly turn on IPFIX export in ovn-kubernetes:

    ```
    GF_IP=`kubectl get svc goflow-kube -n network-observability -ojsonpath='{.spec.clusterIP}'` && echo $GF_IP
    kubectl set env daemonset/ovnkube-node -c ovnkube-node -n ovn-kubernetes OVN_IPFIX_TARGETS="$GF_IP:2055"
    ```

    To turn it off, remove the `OVN_IPFIX_TARGETS` env from `daemonset/ovnkube-node`.

    #### OpenShift 4.10 and above
    No further action is required to enable IPFIX exports. Do not configure manually the goflow-kube IP in OVS, as it would conflict with the operator action (you can, however, set an additional target IP if you run another flow collector). If you want to turn off the exports, remove the `FlowCollector` cluster resource.

    #### OpenShift 4.8 or 4.9
    You need to explicitly turn on IPFIX export for the `ClusterNetworkOperator`:

    ```
    GF_IP=`oc get svc goflow-kube -n network-observability -ojsonpath='{.spec.clusterIP}'` && echo $GF_IP
    oc patch networks.operator.openshift.io cluster --type='json' -p "[{'op': 'add', 'path': '/spec', 'value': {'exportNetworkFlows': {'ipfix': { 'collectors': ['$GF_IP:2055']}}}}]"
    ```
    To turn it off, remove the `exportNetworkFlows` from `networks.operator.openshift.io/cluster`.

    ### OpenShift Console
    OpenShift 4.10 or above is required to use the Console plugin. It needs to be enabled explicitly, either via the Console itself, or via this command:

    ```
    oc patch console.operator.openshift.io cluster --type='json' -p '[{"op": "add", "path": "/spec/plugins", "value": ["network-observability-plugin"]}]'
    ```
  displayName: Netobserv Operator
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI2LjAuMiwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxMDAgMTAwIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAxMDAgMTAwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MXtmaWxsOiNGRkZGRkY7fQoJLnN0MntvcGFjaXR5OjAuNjt9Cgkuc3Qze29wYWNpdHk6MC41O30KCS5zdDR7b3BhY2l0eTowLjQ7fQo8L3N0eWxlPgo8Zz4KCTxnPgoJCTxnPgoJCQk8cmFkaWFsR3JhZGllbnQgaWQ9IlNWR0lEXzFfIiBjeD0iMTQuNzc1OCIgY3k9Ii0yLjk3NzEiIHI9IjkxLjYyNyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiPgoJCQkJPHN0b3AgIG9mZnNldD0iMCIgc3R5bGU9InN0b3AtY29sb3I6IzNDM0ZBNiIvPgoJCQkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzNCMDM0MCIvPgoJCQk8L3JhZGlhbEdyYWRpZW50PgoJCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNTAsOTljLTEzLjMsMC0yNS40LTUuMy0zNC4yLTEzLjlDNi43LDc2LjIsMSw2My43LDEsNTBDMSwyMi45LDIyLjksMSw1MCwxYzEzLjcsMCwyNi4yLDUuNywzNS4xLDE0LjgKCQkJCUM5My43LDI0LjYsOTksMzYuNyw5OSw1MEM5OSw3Ny4xLDc3LjEsOTksNTAsOTl6Ii8+CgkJPC9nPgoJCTxnPgoJCQk8Y2lyY2xlIGNsYXNzPSJzdDEiIGN4PSIzNy41IiBjeT0iODEuOSIgcj0iNSIvPgoJCTwvZz4KCQk8cGF0aCBjbGFzcz0ic3QxIiBkPSJNNDguNiw5MS45bDE4LjgtNDMuM2MtMi41LTAuMS01LTAuNy03LjItMkwzMy4yLDY4LjJsMS40LTEuOGwyMC0yNS4xYy0xLjUtMi40LTIuMy01LjEtMi4zLTcuOUw5LDUyLjIKCQkJbDQ3LjYtMjkuOWwwLDBjMC4xLTAuMSwwLjItMC4yLDAuMi0wLjJjNi4xLTYuMSwxNS45LTYuMSwyMiwwbDAuMSwwLjFjNiw2LjEsNiwxNS45LTAuMSwyMS45Yy0wLjEsMC4xLTAuMiwwLjItMC4yLDAuMmwwLDAKCQkJTDQ4LjYsOTEuOXoiLz4KCQk8ZyBjbGFzcz0ic3QyIj4KCQkJPGNpcmNsZSBjbGFzcz0ic3QxIiBjeD0iNTAuMyIgY3k9IjE0LjciIHI9IjMuMSIvPgoJCTwvZz4KCQk8ZyBjbGFzcz0ic3QzIj4KCQkJPGNpcmNsZSBjbGFzcz0ic3QxIiBjeD0iMjcuNyIgY3k9IjU4IiByPSIxLjciLz4KCQk8L2c+CgkJPGc+CgkJCTxjaXJjbGUgY2xhc3M9InN0MSIgY3g9Ijc3LjQiIGN5PSI2OS4zIiByPSIxLjciLz4KCQk8L2c+CgkJPGc+CgkJCTxjaXJjbGUgY2xhc3M9InN0MSIgY3g9IjE2LjMiIGN5PSIzNi42IiByPSIxLjciLz4KCQk8L2c+CgkJPGcgY2xhc3M9InN0NCI+CgkJCTxjaXJjbGUgY2xhc3M9InN0MSIgY3g9IjYzLjciIGN5PSI4NS45IiByPSIyLjIiLz4KCQk8L2c+CgkJPGc+CgkJCTxjaXJjbGUgY2xhc3M9InN0MSIgY3g9IjI5LjQiIGN5PSIxOS42IiByPSI0LjgiLz4KCQk8L2c+CgkJPGcgY2xhc3M9InN0MyI+CgkJCTxjaXJjbGUgY2xhc3M9InN0MSIgY3g9Ijg4IiBjeT0iNTAiIHI9IjQuOCIvPgoJCTwvZz4KCTwvZz4KPC9nPgo8L3N2Zz4K
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - console.openshift.io
          resources:
          - consoleplugins
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          - namespaces
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - flows.netobserv.io
          resources:
          - flowcollectors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - flows.netobserv.io
          resources:
          - flowcollectors/finalizers
          verbs:
          - update
        - apiGroups:
          - flows.netobserv.io
          resources:
          - flowcollectors/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - hostnetwork
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: netobserv-controller-manager
      deployments:
      - name: netobserv-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: network-observability-operator
              control-plane: controller-manager
              version: 0.1.1
          strategy: {}
          template:
            metadata:
              labels:
                app: network-observability-operator
                control-plane: controller-manager
                version: 0.1.1
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/netobserv/network-observability-operator:0.1.1
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: netobserv-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: netobserv-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - network observability
  - ipfix
  - flow tracing
  - flows
  - network
  - observability
  links:
  - name: Project page
    url: https://github.com/netobserv/network-observability-operator
  - name: Issue tracker
    url: https://github.com/netobserv/network-observability-operator/issues
  - name: Discussion board
    url: https://github.com/netobserv/network-observability-operator/discussions
  maintainers:
  - email: jtakvori@redhat.com
    name: Joel Takvorian
  - email: jpinsonn@redhat.com
    name: Julien Pinsonneau
  - email: mmaciasl@redhat.com
    name: Mario Macias
  - email: ocazade@redhat.com
    name: Olivier Cazade
  maturity: alpha
  provider:
    name: Red Hat
    url: https://www.redhat.com
  version: 0.1.1
  replaces: netobserv-operator.v0.1.0
