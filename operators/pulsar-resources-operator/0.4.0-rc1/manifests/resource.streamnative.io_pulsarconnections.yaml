apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: pulsarconnections.resource.streamnative.io
spec:
  group: resource.streamnative.io
  names:
    categories:
    - pulsar
    - pulsarres
    kind: PulsarConnection
    listKind: PulsarConnectionList
    plural: pulsarconnections
    shortNames:
    - pconn
    singular: pulsarconnection
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.adminServiceURL
      name: ADMIN_SERVICE_URL
      type: string
    - jsonPath: .spec.adminServiceSecureURL
      name: ADMIN_SERVICE_SECURE_URL
      priority: 1
      type: string
    - jsonPath: .spec.brokerServiceURL
      name: BROKER_SERVICE_URL
      type: string
    - jsonPath: .spec.brokerServiceSecureURL
      name: BROKER_SERVICE_SECURE_URL
      priority: 1
      type: string
    - jsonPath: .metadata.generation
      name: GENERATION
      priority: 1
      type: string
    - jsonPath: .status.observedGeneration
      name: OBSERVED_GENERATION
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PulsarConnection is the Schema for the pulsarconnections API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PulsarConnectionSpec defines the desired state of PulsarConnection
            properties:
              adminServiceSecureURL:
                description: AdminServiceSecureURL is the admin service url for secure
                  connection.
                pattern: ^https://.+$
                type: string
              adminServiceURL:
                description: AdminServiceURL is the admin service url of the pulsar
                  cluster
                pattern: ^https?://.+$
                type: string
              authentication:
                description: Authentication defines authentication configurations
                properties:
                  oauth2:
                    description: PulsarAuthenticationOAuth2 indicates the parameters
                      which are need by pulsar OAuth2
                    properties:
                      audience:
                        type: string
                      clientID:
                        type: string
                      issuerEndpoint:
                        type: string
                      key:
                        description: ValueOrSecretRef is a string or a secret reference
                          of the authentication
                        properties:
                          secretRef:
                            description: SecretKeyRef indicates a secret name and
                              key
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          value:
                            type: string
                        type: object
                    required:
                    - audience
                    - clientID
                    - issuerEndpoint
                    - key
                    type: object
                  token:
                    description: ValueOrSecretRef is a string or a secret reference
                      of the authentication
                    properties:
                      secretRef:
                        description: SecretKeyRef indicates a secret name and key
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        type: string
                    type: object
                type: object
              brokerClientTrustCertsFilePath:
                description: BrokerClientTrustCertsFilePath Path for the trusted TLS
                  certificate file for outgoing connection to a server (broker)
                type: string
              brokerServiceSecureURL:
                description: BrokerServiceSecureURL is the broker service url for
                  secure connection.
                pattern: ^pulsar\+ssl://.+$
                type: string
              brokerServiceURL:
                description: BrokerServiceURL is the broker service url of the pulsar
                  cluster
                pattern: ^pulsar?://.+$
                type: string
              clusterName:
                description: ClusterName indicates the local cluster name of the pulsar
                  cluster. It should set when enabling the Geo Replication
                type: string
            type: object
          status:
            description: PulsarConnectionStatus defines the observed state of PulsarConnection
            properties:
              conditions:
                description: Represents the observations of a connection's current
                  state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this resource. It corresponds to the metadata generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
