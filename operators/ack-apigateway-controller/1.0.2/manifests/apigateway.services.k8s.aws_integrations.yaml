apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: integrations.apigateway.services.k8s.aws
spec:
  group: apigateway.services.k8s.aws
  names:
    kind: Integration
    listKind: IntegrationList
    plural: integrations
    singular: integration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Integration is the Schema for the Integrations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              IntegrationSpec defines the desired state of Integration.

              Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
            properties:
              cacheKeyParameters:
                description: |-
                  A list of request parameters whose values API Gateway caches. To be valid
                  values for cacheKeyParameters, these parameters must also be specified for
                  Method requestParameters.
                items:
                  type: string
                type: array
              cacheNamespace:
                description: |-
                  Specifies a group of related cached parameters. By default, API Gateway uses
                  the resource ID as the cacheNamespace. You can specify the same cacheNamespace
                  across resources to return the same cached data for requests to different
                  resources.
                type: string
              connectionID:
                description: |-
                  The ID of the VpcLink used for the integration. Specify this value only if
                  you specify VPC_LINK as the connection type.
                type: string
              connectionRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              connectionType:
                description: |-
                  The type of the network connection to the integration endpoint. The valid
                  value is INTERNET for connections through the public routable internet or
                  VPC_LINK for private connections between API Gateway and a network load balancer
                  in a VPC. The default value is INTERNET.
                type: string
              contentHandling:
                description: |-
                  Specifies how to handle request payload content type conversions. Supported
                  values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:

                  If this property is not defined, the request payload will be passed through
                  from the method request to integration request without modification, provided
                  that the passthroughBehavior is configured to support payload pass-through.
                type: string
              credentials:
                description: Specifies whether credentials are required for a put
                  integration.
                type: string
              httpMethod:
                description: Specifies the HTTP method for the integration.
                type: string
              integrationHTTPMethod:
                description: The HTTP method for the integration.
                type: string
              passthroughBehavior:
                description: |-
                  Specifies the pass-through behavior for incoming requests based on the Content-Type
                  header in the request, and the available mapping templates specified as the
                  requestTemplates property on the Integration resource. There are three valid
                  values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
                type: string
              requestParameters:
                additionalProperties:
                  type: string
                description: |-
                  A key-value map specifying request parameters that are passed from the method
                  request to the back end. The key is an integration request parameter name
                  and the associated value is a method request parameter value or static value
                  that must be enclosed within single quotes and pre-encoded as required by
                  the back end. The method request parameter value must match the pattern of
                  method.request.{location}.{name}, where location is querystring, path, or
                  header and name must be a valid and unique method request parameter name.
                type: object
              requestTemplates:
                additionalProperties:
                  type: string
                description: |-
                  Represents a map of Velocity templates that are applied on the request payload
                  based on the value of the Content-Type header sent by the client. The content
                  type value is the key in this map, and the template (as a String) is the
                  value.
                type: object
              resourceID:
                description: Specifies a put integration request's resource ID.
                type: string
              resourceRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              restAPIID:
                description: The string identifier of the associated RestApi.
                type: string
              restAPIRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              timeoutInMillis:
                description: |-
                  Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000
                  milliseconds or 29 seconds.
                format: int64
                type: integer
              tlsConfig:
                description: Specifies the TLS configuration for an integration.
                properties:
                  insecureSkipVerification:
                    type: boolean
                type: object
              type:
                description: Specifies a put integration input's type.
                type: string
              uri:
                description: |-
                  Specifies Uniform Resource Identifier (URI) of the integration endpoint.
                  For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded
                  HTTP(S) URL according to the RFC-3986 specification, for either standard
                  integration, where connectionType is not VPC_LINK, or private integration,
                  where connectionType is VPC_LINK. For a private HTTP integration, the URI
                  is not used for routing. For AWS or AWS_PROXY integrations, the URI is of
                  the form arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}.
                  Here, {Region} is the API Gateway region (e.g., us-east-1); {service} is
                  the name of the integrated Amazon Web Services service (e.g., s3); and {subdomain}
                  is a designated subdomain supported by certain Amazon Web Services service
                  for fast host-name lookup. action can be used for an Amazon Web Services
                  service action-based API, using an Action={name}&{p1}={v1}&p2={v2}... query
                  string. The ensuing {service_api} refers to a supported action {name} plus
                  any required input parameters. Alternatively, path can be used for an Amazon
                  Web Services service path-based API. The ensuing service_api refers to the
                  path to an Amazon Web Services service resource, including the region of
                  the integrated Amazon Web Services service, if applicable. For example, for
                  integration with the S3 API of GetObject, the uri can be either arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key}
                  or arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.
                type: string
            required:
            - httpMethod
            - type
            type: object
          status:
            description: IntegrationStatus defines the observed state of Integration
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              integrationResponses:
                additionalProperties:
                  description: |-
                    Represents an integration response. The status code must map to an existing
                    MethodResponse, and parameters and templates can be used to transform the
                    back-end response.
                  properties:
                    contentHandling:
                      type: string
                    responseParameters:
                      additionalProperties:
                        type: string
                      type: object
                    responseTemplates:
                      additionalProperties:
                        type: string
                      type: object
                    selectionPattern:
                      type: string
                    statusCode:
                      description: The status code.
                      type: string
                  type: object
                description: Specifies the integration's responses.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
