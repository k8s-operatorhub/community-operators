apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: routetables.ec2.services.k8s.aws
spec:
  group: ec2.services.k8s.aws
  names:
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    singular: routetable
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RouteTable is the Schema for the RouteTables API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "RouteTableSpec defines the desired state of RouteTable.
              \n Describes a route table."
            properties:
              routes:
                items:
                  properties:
                    carrierGatewayID:
                      type: string
                    destinationCIDRBlock:
                      type: string
                    destinationIPv6CIDRBlock:
                      type: string
                    destinationPrefixListID:
                      type: string
                    egressOnlyInternetGatewayID:
                      type: string
                    gatewayID:
                      type: string
                    instanceID:
                      type: string
                    localGatewayID:
                      type: string
                    natGatewayID:
                      type: string
                    networkInterfaceID:
                      type: string
                    transitGatewayID:
                      type: string
                    vpcEndpointID:
                      type: string
                    vpcPeeringConnectionID:
                      type: string
                  type: object
                type: array
              tagSpecifications:
                description: The tags to assign to the route table.
                items:
                  description: The tags to apply to a resource when the resource is
                    being created.
                  properties:
                    resourceType:
                      type: string
                    tags:
                      items:
                        description: Describes a tag.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              vpcID:
                description: The ID of the VPC.
                type: string
            required:
            - vpcID
            type: object
          status:
            description: RouteTableStatus defines the observed state of RouteTable
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              associations:
                description: The associations between the route table and one or more
                  subnets or a gateway.
                items:
                  description: Describes an association between a route table and
                    a subnet or gateway.
                  properties:
                    associationState:
                      description: Describes the state of an association between a
                        route table and a subnet or gateway.
                      properties:
                        state:
                          type: string
                        statusMessage:
                          type: string
                      type: object
                    gatewayID:
                      type: string
                    main:
                      type: boolean
                    routeTableAssociationID:
                      type: string
                    routeTableID:
                      type: string
                    subnetID:
                      type: string
                  type: object
                type: array
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ownerID:
                description: The ID of the AWS account that owns the route table.
                type: string
              propagatingVGWs:
                description: Any virtual private gateway (VGW) propagating routes.
                items:
                  description: Describes a virtual private gateway propagating route.
                  properties:
                    gatewayID:
                      type: string
                  type: object
                type: array
              routeStatuses:
                description: The routes in the route table.
                items:
                  description: Describes a route in a route table.
                  properties:
                    carrierGatewayID:
                      type: string
                    destinationCIDRBlock:
                      type: string
                    destinationIPv6CIDRBlock:
                      type: string
                    destinationPrefixListID:
                      type: string
                    egressOnlyInternetGatewayID:
                      type: string
                    gatewayID:
                      type: string
                    instanceID:
                      type: string
                    instanceOwnerID:
                      type: string
                    localGatewayID:
                      type: string
                    natGatewayID:
                      type: string
                    networkInterfaceID:
                      type: string
                    origin:
                      type: string
                    state:
                      type: string
                    transitGatewayID:
                      type: string
                    vpcPeeringConnectionID:
                      type: string
                  type: object
                type: array
              routeTableID:
                description: The ID of the route table.
                type: string
              tags:
                description: Any tags assigned to the route table.
                items:
                  description: Describes a tag.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
