apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: customkeystores.kms.services.k8s.aws
spec:
  group: kms.services.k8s.aws
  names:
    kind: CustomKeyStore
    listKind: CustomKeyStoreList
    plural: customkeystores
    singular: customkeystore
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CustomKeyStore is the Schema for the CustomKeyStores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CustomKeyStoreSpec defines the desired state of CustomKeyStore.
            properties:
              cloudHsmClusterID:
                description: Identifies the CloudHSM cluster for the custom key store.
                  Enter the cluster ID of any active CloudHSM cluster that is not
                  already associated with a custom key store. To find the cluster
                  ID, use the DescribeClusters (https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html)
                  operation.
                type: string
              keyStorePassword:
                description: "Enter the password of the kmsuser crypto user (CU) account
                  (https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser)
                  in the specified CloudHSM cluster. KMS logs into the cluster as
                  this user to manage key material on your behalf. \n The password
                  must be a string of 7 to 32 characters. Its value is case sensitive.
                  \n This parameter tells KMS the kmsuser account password; it does
                  not change the password in the CloudHSM cluster."
                type: string
              name:
                description: Specifies a friendly name for the custom key store. The
                  name must be unique in your Amazon Web Services account.
                type: string
              trustAnchorCertificate:
                description: Enter the content of the trust anchor certificate for
                  the cluster. This is the content of the customerCA.crt file that
                  you created when you initialized the cluster (https://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html).
                type: string
            required:
            - cloudHsmClusterID
            - keyStorePassword
            - name
            - trustAnchorCertificate
            type: object
          status:
            description: CustomKeyStoreStatus defines the observed state of CustomKeyStore
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              customKeyStoreID:
                description: A unique identifier for the new custom key store.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
