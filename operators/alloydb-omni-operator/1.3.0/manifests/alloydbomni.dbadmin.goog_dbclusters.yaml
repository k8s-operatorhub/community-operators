apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  labels:
    alloydb-omni: "true"
  name: dbclusters.alloydbomni.dbadmin.goog
spec:
  group: alloydbomni.dbadmin.goog
  names:
    kind: DBCluster
    listKind: DBClusterList
    plural: dbclusters
    shortNames:
    - aood
    singular: dbcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.primary.endpoint
      name: PrimaryEndpoint
      type: string
    - jsonPath: .status.primary.phase
      name: PrimaryPhase
      type: string
    - jsonPath: .status.phase
      name: DBClusterPhase
      type: string
    - jsonPath: .status.conditions[?(@.type=="HAReady")].status
      name: HAReadyStatus
      type: string
    - jsonPath: .status.conditions[?(@.type=="HAReady")].reason
      name: HAReadyReason
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DBCluster is the Schema for the dbclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DBClusterSpec defines the desired state of DBCluster
            properties:
              allowExternalIncomingTraffic:
                default: false
                type: boolean
              availability:
                description: Availability contains adjustable settings for DBCluster
                  HA features
                properties:
                  autoFailoverTriggerThreshold:
                    default: 3
                    description: AutoFailoverTriggerThreshold is the number of consecutive
                      healthcheck failures on the primary instance that will trigger
                      an automatic failover. If set to 0, then it will use the system
                      default value. Use the EnableAutoFailover flag to completely
                      disable automatic failover.
                    minimum: 0
                    type: integer
                  autoHealTriggerThreshold:
                    default: 3
                    description: AutoHealTriggerThreshold is the number of consecutive
                      healthcheck failures on the standby instance that will trigger
                      automatic healing. Use the EnableAutoHeal flag to completely
                      disable automatic healing.
                    minimum: 2
                    type: integer
                  enableAutoFailover:
                    default: true
                    description: EnableAutoFailover means this DBCluster will trigger
                      a failover if it detects the primary instance is unhealthy and
                      standby instance is healthy. If set to `true`, then automatic
                      failover is enabled. If set to `false`, then autofailover will
                      not be triggered even if the system detects that the primary
                      instance is unhealthy. The default value is `true`. When it
                      is enabled, if the system detects that the primary instance
                      is unhealthy for the given threshold, it will trigger a failover.
                      This feature is only applicable if this is a HA DBCluster and
                      if the standby is healthy.
                    type: boolean
                  enableAutoHeal:
                    default: true
                    description: EnableAutoHeal means this DBCluster will trigger
                      an autoheal if it detects the standby instance is unhealthy.
                      If set to `true`, then autoheal is enabled. If set to `false`,
                      then autoheal will not be triggered even if the system detects
                      that the standby instance is unhealthy. The default value is
                      `true`. When it is enabled, if the system detects that the standby
                      instance is unhealthy for the given threshold, it will trigger
                      an autoheal. This feature is only applicable if this is a HA
                      DBCluster.
                    type: boolean
                  enableStandbyAsReadReplica:
                    description: EnableStandbyAsReadReplica determine whether the
                      standbys can accept user queries or not. If set to true, a new
                      endpoint will be created to enable read-only access to the standby(s).
                    type: boolean
                  healthcheckPeriodSeconds:
                    default: 30
                    description: HealthcheckPeriodSeconds is the number of seconds
                      the healthcheck prober will wait before checking the health
                      of the primary and standby instances again and updating the
                      status accordingly.
                    maximum: 86400
                    minimum: 1
                    type: integer
                  numberOfStandbys:
                    default: 0
                    description: "NumberOfStandbys is the number of standbys that
                      should be created for this DBCluster. If set to any value greater
                      than `0`, then HA is enabled on the cluster and the system will
                      create the indicated number of standby instances. The maximum
                      allowed standby instances is 5. To check the current status
                      of HA on this DBCluster, look at the HAReady condition under
                      the DBCluster status. If HAReady is `true`, then setup has been
                      complete and ready. If set to `0`, then HA is disabled on the
                      cluster, and deletes any existing standby instances. Any number
                      between `0` and `5` inclusive is supported. The default value
                      is `0`. \n Additional Documentation: https://cloud.google.com/alloydb/docs/omni/kubernetes-ha"
                    maximum: 5
                    minimum: 0
                    type: integer
                required:
                - enableStandbyAsReadReplica
                type: object
              connectedModeSpec:
                properties:
                  apiKeySecret:
                    type: string
                  clusterId:
                    type: string
                  displayLocation:
                    type: string
                  gcpProjectId:
                    type: string
                  gcpZone:
                    type: string
                type: object
              controlPlaneAgentsVersion:
                description: "ControlPlaneAgentsVersion is the desired control plane
                  agents version for the cluster for example, \"0.5.2\". This field
                  is required. \n The `controlPlaneAgentsVersion` must be compatible
                  with the chosen `databaseVersion`. To know what versions are compatible,
                  check the list of available versions in {link}. \n This version
                  is applied to all instances of the database cluster. In the case
                  of a new database cluster, the instance is be created using the
                  specified version. In the case of an existing database cluster,
                  the operator will aptempt to upgrade or downgrade to the specified
                  `controlPlaneAgentsVersion`. The field `status.currentControlPlaneAgentsVersion`
                  indicates the current version for control plane agents."
                type: string
              databaseImage:
                description: "DatabaseImage is the URI of a customized database image
                  within the container registry, for example, \"gcr.io/foo/bar/alloydbomni:15-7-2-customized\".
                  This field is optional. \n If `databaseImage` is specified, then
                  the operator uses this container image for the database instead
                  of the  default database container image of the specified `databaseVersion`.
                  We recommend that the `databaseImage` container will be based on
                  the default database image used of the chosen `databaseVersion`.
                  \n For more information about using a customized database image
                  visit {link}."
                type: string
              databaseVersion:
                description: "DatabaseVersion is the desired database version for
                  the cluster for example, \"15.4.5\". This field is required. \n
                  This version is applied to all instances of the database cluster.
                  In the case of a new database cluster, the instance is created using
                  the specified version. In the case of an existing database cluster,
                  the operator aptempts to upgrade or downgrade to the specified `databaseVersion`.
                  The field `status.currentDatabaseVersion` indicates the current
                  database version. \n See the list of available versions in {link}."
                type: string
              isDeleted:
                default: false
                description: "IsDeleted indicates a request to delete the DBCluster.
                  This field is optional, and by default it is false. \n This fields
                  applies to all instances of the database cluster. When set this
                  to true, the control plane will attempt to release the related resources,
                  including network endpoints. See the status fields for indication
                  of success or failures, if any."
                type: boolean
              mode:
                description: Indicate the mode of this DBCluster.
                enum:
                - ""
                - disasterRecovery
                - maintenance
                type: string
              primarySpec:
                description: PrimarySpec contains the specifications of the Primary
                  instance of the database cluster. The primary instance contains
                  the compute and storage resources serving the read-write endpoint(s)
                  of the database cluster. This field is required.
                properties:
                  adminUser:
                    description: "AdminUser represents the admin user specification.
                      This field is required. \n This is the initial database user
                      that the control plane creates. Additional database users are
                      managed by the end-user directly. This field can also be used
                      to reset the password of the initial user."
                    properties:
                      passwordRef:
                        description: PasswordRef is the name of the secret containing
                          the admin user's password. This value will be used during
                          initial provisioning or password reset to set the admin
                          user to that password. The secret must be under the same
                          project as the Database cluster. The name of the secret
                          must follow this pattern `db-pw-<dbc name>`. Additionally,
                          the key of the password (inside the secret) must be the
                          same as the database cluster name.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  allowExternalIncomingTrafficToInstance:
                    default: false
                    description: AllowExternalIncomingTrafficToInstance will be used
                      to configure the external LB creation.
                    type: boolean
                  auditLogTarget:
                    description: AuditLogTarget configures the sink for the database
                      audit logs
                    properties:
                      syslog:
                        properties:
                          certsSecretRef:
                            description: CertsSecretRef contains the certificates
                              to be used for the TLS connection to syslog server
                            properties:
                              name:
                                description: name is unique within a namespace to
                                  reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which
                                  the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          host:
                            description: Host is the syslog server FQDN or IP address
                            type: string
                        required:
                        - certsSecretRef
                        - host
                        type: object
                    type: object
                  availabilityOptions:
                    description: AvailabilityOptions contains adjustable settings
                      for HA features
                    properties:
                      healthcheckPeriodSeconds:
                        default: 30
                        description: HealthcheckPeriodSeconds is the number of seconds
                          the healthcheck prober will wait before checking the health
                          of the primary and standby instances again and updating
                          the status accordingly. This field is propagated down from
                          the DBCluster's spec
                        maximum: 86400
                        minimum: 1
                        type: integer
                      livenessProbe:
                        default: Enabled
                        description: LivenessProbe enables or disables the liveness
                          probe which is used to trigger a container restart. When
                          set to `Enabled`, the liveness probe runs periodic health
                          checks on the database. It restarts the container if it
                          fails three consecutive health checks. LivenessProbe is
                          automatically disabled for HA instances. When set to `Disabled`,
                          the liveness probe is not running health checks on the database.
                          The default value is Enabled.
                        enum:
                        - Enabled
                        - Disabled
                        - OpDisabled
                        type: string
                    type: object
                  dbLoadBalancerOptions:
                    description: DBNetworkServiceOptions allows to override some details
                      of kubernetes Service created to expose a connection to database.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotation provided by the customer will be added
                          to the service object of type loadbalancer.
                        type: object
                      gcp:
                        description: GCP contains Google Cloud specific attributes
                          for the Kubernetes LoadBalancer.
                        properties:
                          loadBalancerIP:
                            description: LoadBalancerIP is a static IP address, see
                              https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address
                            type: string
                          loadBalancerType:
                            description: A LoadBalancer can be internal or external.
                              See https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
                            enum:
                            - ""
                            - Internal
                            - External
                            type: string
                        type: object
                    type: object
                  features:
                    description: Feature Spec
                    properties:
                      columnarSpillToDisk:
                        description: columnarSpillToDisk specifies settings for spilling
                          columnarized data to a specified volume. This feature must
                          be enabled together with UltraFastCache feature. Columnarized
                          data and ultra fast cache buffer share the same volume.
                        properties:
                          cacheSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: The maximum size reserved by Alloydb Omni
                              to cache columnarized data at the ultra fast cache volume.
                              If unset, the size defaults to 5% of ultraFastCache.spec.cacheSize.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      googleMLExtension:
                        description: Google ML Extension Spec
                        properties:
                          config:
                            description: Google ML Extension Config
                            properties:
                              vertexAIKeyRef:
                                type: string
                              vertexAIRegion:
                                type: string
                            type: object
                          enabled:
                            default: false
                            type: boolean
                        required:
                        - enabled
                        type: object
                      memoryAgent:
                        properties:
                          enabled:
                            default: true
                            description: Indicate interest to enable/disable memory
                              agent for database. The default is true.
                            type: boolean
                        required:
                        - enabled
                        type: object
                      ultraFastCache:
                        description: ultraFastCache specifies settings for disk cache.
                        properties:
                          cacheSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: The maximum ultra fast cache buffer size
                              reserved by Alloydb Omni. If this field is unset and
                              if the volume is local or hostpath volume, all remaining
                              disk space at the local volume is used. If the volume
                              is dynamically provisioned, and this field is unset,
                              the PersistentVolumeClaim size for cache disk defaults
                              to be the same as memory size
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          genericVolume:
                            description: genericVolume accepts only storage class.
                              This volume source works for local static volume or
                              dynamic provisioned volume. You must ensure that PersistentVolume
                              with provided storage class is available.
                            properties:
                              storageClass:
                                description: the storage class of disk cache volume
                                type: string
                            required:
                            - storageClass
                            type: object
                          localVolume:
                            description: localVolume provides optimization. If the
                              volume behind disk cache is a local disk, you don't
                              need to manage the cache disk PersistentVolume. The
                              PersistentVolume will be menaged by alloydb omni operator
                            properties:
                              nodeAffinity:
                                description: nodeAffinity defines constraints that
                                  limit which nodes the disk cache volume can be accessed
                                  from. This field influences the scheduling of the
                                  database pod.
                                properties:
                                  required:
                                    description: required specifies hard node constraints
                                      that must be met.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              path:
                                description: Path of the full path to the volume on
                                  the node.
                                type: string
                            required:
                            - nodeAffinity
                            - path
                            type: object
                        type: object
                    type: object
                  isStopped:
                    description: "IsStopped stops the instance when set to true. This
                      field is optional and default to false. \n When stopped, the
                      compute resources (CPU, memory) of the instance are released.
                      However, the instance still keeps the storage resource and network
                      endpoints so that restarting is transparent to the downstream
                      services. See the status field for success or failures, if any."
                    type: boolean
                  mode:
                    description: Mode specifies how this instance will be managed
                      by the operator.
                    enum:
                    - ManuallySetUpStandby
                    - Pause
                    - Recovery
                    - Maintenance
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    description: "Parameters allows to set database parameters for
                      the database cluster. This field is optional. \n Parameters
                      will take a key/value pair corresponding to the parameter name/value
                      as defined by the database engine."
                    type: object
                  resources:
                    description: "Resource specification for the database container.
                      \n When any of the fields inside the resource changes, the operator
                      restarts the database instance with the new resource specification."
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: The amount of CPU allocated to the database container.
                          This field is required.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      disks:
                        description: The specifications of the disks allocated to
                          the database container. This field is required.
                        items:
                          description: DiskSpec defines the desired state of a disk.
                          properties:
                            accessModes:
                              description: "AccessModes contains the desired access
                                modes for the volume. \n Refer to https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
                                for more information."
                              items:
                                type: string
                              type: array
                            annotations:
                              additionalProperties:
                                type: string
                              description: "Additional annotations added to the Persistent
                                Volume Claim. This field is optional. \n This allows
                                to integrate with other tools."
                              type: object
                            name:
                              description: "Name of the disk. This field is required.
                                \n The allowed values are: \"DataDisk\", \"LogDisk\"
                                , \"BackupDisk\" and \"ObsDisk\"."
                              enum:
                              - DataDisk
                              - LogDisk
                              - BackupDisk
                              - ObsDisk
                              - BackupRepoDisk
                              type: string
                            selector:
                              description: "A label query over volumes to consider
                                for binding. This field is optional. \n If this field
                                is set, then the volume with matching labels is used
                                as the backing volume for the disk. \n Refer to https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec
                                for more information."
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            size:
                              description: "Disk size in bytes for example, \"10Gi\"
                                for 10 Gibibytes. This field is required. \n The allowed
                                size unit prefixes are: \"Ki\", \"Mi\", \"Gi\", \"Ti,
                                \"Pi\" and \"Ei\" for 2-base. Also \"K\", \"M\", \"G\",
                                \"T, \"P\" and \"E\" for 10-base. See https://en.wikipedia.org/wiki/Unit_prefix."
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              type: string
                            storageClass:
                              description: "StorageClass points to a particular CSI
                                storage class. This field is optional. \n If the field
                                is not set, then the default CSI storage class for
                                the Kubernetes cluster is used. If there is no default
                                for the Kubernetes cluster,  then the Persistence
                                Volume Claim will fail and the database cluster will
                                fail to provision. \n You can read more about storage
                                classes in https://kubernetes.io/docs/concepts/storage/storage-classes."
                              type: string
                            volumeName:
                              description: "VolumeName is the binding reference to
                                the Persistent Volume tied to this disk. This field
                                is optional. \n This allows to reuse an existing volume.
                                \n Note that if this field is specified, the value
                                \"storageClass\" will not take effect. You can learn
                                more about this in https://kubernetes.io/docs/concepts/storage/persistent-volumes/#binding."
                              type: string
                          required:
                          - name
                          - size
                          type: object
                        type: array
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: The amount of memory allocated to the database
                          container. This field is required.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  schedulingconfig:
                    description: "SchedulingConfig specifies how the instance should
                      be scheduled on Kubernetes nodes. \n When any field inside the
                      scheduling config changes, it can lead to rescheduling of the
                      k8s pod onto a different node based on the config."
                    properties:
                      nodeaffinity:
                        description: NodeAffinity describes node affinity scheduling
                          rules for the instance.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: PodAffinity describes pod affinity scheduling
                          rules for the instance.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods. If it's null, this PodAffinityTerm
                                        matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: MatchLabelKeys is a set of pod
                                        label keys to select which pods will be taken
                                        into consideration. The keys are used to lookup
                                        values from the incoming pod labels, those
                                        key-value labels are merged with `LabelSelector`
                                        as `key in (value)` to select the group of
                                        existing pods which pods will be taken into
                                        consideration for the incoming pod's pod (anti)
                                        affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value
                                        is empty. The same key is forbidden to exist
                                        in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector
                                        isn't set. This is an alpha field and requires
                                        enabling MatchLabelKeysInPodAffinity feature
                                        gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: MismatchLabelKeys is a set of pod
                                        label keys to select which pods will be taken
                                        into consideration. The keys are used to lookup
                                        values from the incoming pod labels, those
                                        key-value labels are merged with `LabelSelector`
                                        as `key notin (value)` to select the group
                                        of existing pods which pods will be taken
                                        into consideration for the incoming pod's
                                        pod (anti) affinity. Keys that don't exist
                                        in the incoming pod labels will be ignored.
                                        The default value is empty. The same key is
                                        forbidden to exist in both MismatchLabelKeys
                                        and LabelSelector. Also, MismatchLabelKeys
                                        cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling
                                        MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods. If it's null, this PodAffinityTerm
                                    matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: MatchLabelKeys is a set of pod label
                                    keys to select which pods will be taken into consideration.
                                    The keys are used to lookup values from the incoming
                                    pod labels, those key-value labels are merged
                                    with `LabelSelector` as `key in (value)` to select
                                    the group of existing pods which pods will be
                                    taken into consideration for the incoming pod's
                                    pod (anti) affinity. Keys that don't exist in
                                    the incoming pod labels will be ignored. The default
                                    value is empty. The same key is forbidden to exist
                                    in both MatchLabelKeys and LabelSelector. Also,
                                    MatchLabelKeys cannot be set when LabelSelector
                                    isn't set. This is an alpha field and requires
                                    enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: MismatchLabelKeys is a set of pod label
                                    keys to select which pods will be taken into consideration.
                                    The keys are used to lookup values from the incoming
                                    pod labels, those key-value labels are merged
                                    with `LabelSelector` as `key notin (value)` to
                                    select the group of existing pods which pods will
                                    be taken into consideration for the incoming pod's
                                    pod (anti) affinity. Keys that don't exist in
                                    the incoming pod labels will be ignored. The default
                                    value is empty. The same key is forbidden to exist
                                    in both MismatchLabelKeys and LabelSelector. Also,
                                    MismatchLabelKeys cannot be set when LabelSelector
                                    isn't set. This is an alpha field and requires
                                    enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: PodAntiAffinity describes pod anti-affinity scheduling
                          rules for the instance.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods. If it's null, this PodAffinityTerm
                                        matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: MatchLabelKeys is a set of pod
                                        label keys to select which pods will be taken
                                        into consideration. The keys are used to lookup
                                        values from the incoming pod labels, those
                                        key-value labels are merged with `LabelSelector`
                                        as `key in (value)` to select the group of
                                        existing pods which pods will be taken into
                                        consideration for the incoming pod's pod (anti)
                                        affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value
                                        is empty. The same key is forbidden to exist
                                        in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector
                                        isn't set. This is an alpha field and requires
                                        enabling MatchLabelKeysInPodAffinity feature
                                        gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: MismatchLabelKeys is a set of pod
                                        label keys to select which pods will be taken
                                        into consideration. The keys are used to lookup
                                        values from the incoming pod labels, those
                                        key-value labels are merged with `LabelSelector`
                                        as `key notin (value)` to select the group
                                        of existing pods which pods will be taken
                                        into consideration for the incoming pod's
                                        pod (anti) affinity. Keys that don't exist
                                        in the incoming pod labels will be ignored.
                                        The default value is empty. The same key is
                                        forbidden to exist in both MismatchLabelKeys
                                        and LabelSelector. Also, MismatchLabelKeys
                                        cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling
                                        MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods. If it's null, this PodAffinityTerm
                                    matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: MatchLabelKeys is a set of pod label
                                    keys to select which pods will be taken into consideration.
                                    The keys are used to lookup values from the incoming
                                    pod labels, those key-value labels are merged
                                    with `LabelSelector` as `key in (value)` to select
                                    the group of existing pods which pods will be
                                    taken into consideration for the incoming pod's
                                    pod (anti) affinity. Keys that don't exist in
                                    the incoming pod labels will be ignored. The default
                                    value is empty. The same key is forbidden to exist
                                    in both MatchLabelKeys and LabelSelector. Also,
                                    MatchLabelKeys cannot be set when LabelSelector
                                    isn't set. This is an alpha field and requires
                                    enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: MismatchLabelKeys is a set of pod label
                                    keys to select which pods will be taken into consideration.
                                    The keys are used to lookup values from the incoming
                                    pod labels, those key-value labels are merged
                                    with `LabelSelector` as `key notin (value)` to
                                    select the group of existing pods which pods will
                                    be taken into consideration for the incoming pod's
                                    pod (anti) affinity. Keys that don't exist in
                                    the incoming pod labels will be ignored. The default
                                    value is empty. The same key is forbidden to exist
                                    in both MismatchLabelKeys and LabelSelector. Also,
                                    MismatchLabelKeys cannot be set when LabelSelector
                                    isn't set. This is an alpha field and requires
                                    enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      tolerations:
                        description: Tolerations to enable the management of whether
                          to allow or disallow scheduling an instance on a Kubernetes
                          node that has a specific taint applied.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  services:
                    additionalProperties:
                      type: boolean
                    description: Services list the optional semi-managed services
                      that the customers can choose from.
                    type: object
                  sidecarRef:
                    description: SidecarRef is a reference to a sidecar Custom Resource.
                      If set, sidecar containers included in the sidecar Custom Resource
                      will be injected into the database pod.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sourceCidrRanges:
                    description: Source IP CIDR ranges allowed for a client.
                    items:
                      type: string
                    type: array
                  tls:
                    description: TLS is the desired server certificate configuration
                      for the instance. This field is optional. When this field is
                      changed, the instance pods will restart to load the specified
                      certificate
                    properties:
                      certSecret:
                        description: CertSecret contains the name of a certificate
                          secret within the same namespace. The secret must contain
                          entries ca.crt (CA certificate), tls.key (server private
                          key), and tls.crt (server leaf certificate). This secret
                          is used to set the TLS config for the database instance.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  walArchiveSetting:
                    description: WalArchiveSetting specifies wal archive settings.
                      If set, archive_mode is enabled to archive wal logs to specified
                      location. Ref to https://www.postgresql.org/docs/15/continuous-archiving.html
                      for more information.
                    properties:
                      archiveMode:
                        default: "on"
                        description: ArchiveMode specifies archive_mode, see https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-ARCHIVE-MODE
                          for details.
                        enum:
                        - "on"
                        - always
                        type: string
                      location:
                        description: Location is the location where archived wal logs
                          are stored.
                        type: string
                    type: object
                required:
                - resources
                type: object
              tls:
                description: TLS is the desired server certificate configuration for
                  the cluster. This field is optional. By default, this field is empty
                  and a new self-signed CA and leaf certificate are generated for
                  the cluster. When this field is changed, the database cluster pods
                  will restart to load the specified certificate. The field `status.certificateReference`
                  indicates the current CA certificate secret and key.
                properties:
                  certSecret:
                    description: CertSecret references the certificate secret within
                      the same namespace. The secret must contain entries ca.crt (CA
                      certificate), tls.key (server private key), and tls.crt (server
                      leaf certificate). This secret is used to set the TLS config
                      for the database instances that a part of the database cluster.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
            type: object
          status:
            description: DBClusterStatus defines the observed state of DBCluster
            properties:
              HealthCheck:
                description: HealthStatus represents the health check.
                properties:
                  IsRegistered:
                    type: boolean
                  LastHealthCheckTime:
                    type: string
                type: object
              certificateReference:
                description: "CertificateReference refers to a secret and a key of
                  the server CA certificate that can be used to connect to the database.
                  \n If `spec.TLS` is provided, this value should refer to the same
                  secret after the database has been configured to use the provided
                  server certificate."
                properties:
                  certificateKey:
                    description: CertificateKey is the key used to search the secret
                      for the Certificate
                    type: string
                  secretRef:
                    description: SecretRef is a reference to the secret that contains
                      the Certificate
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              conditions:
                description: Conditions represents the latest available observations
                  of the Entity's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              criticalIncidents:
                description: CriticalIncidents is a flat list of all active Critical
                  Incidents.
                items:
                  description: CriticalIncident contains all information about an
                    ongoing critical incident.
                  properties:
                    code:
                      description: Code is the error code of this particular error.
                        Error codes are DBSE+numeric strings, like "DBSE1012".
                      type: string
                    createTime:
                      description: CreateTime is the timestamp when this Incident
                        was created at the origin.
                      format: date-time
                      type: string
                    message:
                      description: Message describes the incident/error that occurred.
                      type: string
                    messageTemplateParams:
                      additionalProperties:
                        type: string
                      description: MessageTemplateParams contains key-value pairs
                        necessary for generating a user-friendly data-driven version
                        of Message in the UI.
                      type: object
                    resource:
                      description: Resource contains information about the Database
                        Service component that reported the incident as well as about
                        the K8s resource.
                      properties:
                        component:
                          description: Component is an internal identifier of the
                            Database Service subsystem that reported the incident.
                          type: string
                        location:
                          description: Location
                          properties:
                            cluster:
                              description: Cluster is the name of the cluster of the
                                affected K8S resource.
                              type: string
                            group:
                              description: Group is the Group name of the k8s resource.
                              type: string
                            kind:
                              description: Kind is the Kind of the k8s resource.
                              type: string
                            name:
                              description: Name is the name of the affected K8S resource.
                              type: string
                            namespace:
                              description: Namespace is the namespace of the affected
                                K8S resource.
                              type: string
                            version:
                              description: Group is the Version of the k8s resource.
                              type: string
                          type: object
                      required:
                      - component
                      type: object
                    stackTrace:
                      description: StackTrace contains an unstructured list of messages
                        from the stack trace.
                      items:
                        description: CriticalIncidentStackTraceMessage contains stack
                          trace information available for the incident.
                        properties:
                          component:
                            description: Component is the name of a Database Service
                              component that logged the message.
                            type: string
                          message:
                            description: Logged message.
                            type: string
                        type: object
                      type: array
                    transientUntil:
                      description: TransientUntil if present indicates that the issue
                        should be considered transient until the specified time.
                      format: date-time
                      type: string
                  required:
                  - code
                  - createTime
                  - resource
                  type: object
                type: array
              latestFailoverStatus:
                description: LatestFailoverStatus is the status of the most recently
                  updated failover for the database cluster This status is a copy
                  of the status of the current or most recently updated failover operation
                  for the database cluster. This can be used to conveniently monitor
                  the status of a currently running failover operation.
                properties:
                  failoverName:
                    description: FailoverName is the Name of the latest failover
                    type: string
                  status:
                    description: Status represents status of the latest failover for
                      the database cluster
                    properties:
                      conditions:
                        description: Conditions represents the latest available observations
                          of the Entity's current state.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      createTime:
                        description: CreateTime is the time that the internal failover
                          workflow mechanism was created.
                        format: date-time
                        type: string
                      criticalIncidents:
                        description: CriticalIncidents is a flat list of all active
                          Critical Incidents.
                        items:
                          description: CriticalIncident contains all information about
                            an ongoing critical incident.
                          properties:
                            code:
                              description: Code is the error code of this particular
                                error. Error codes are DBSE+numeric strings, like
                                "DBSE1012".
                              type: string
                            createTime:
                              description: CreateTime is the timestamp when this Incident
                                was created at the origin.
                              format: date-time
                              type: string
                            message:
                              description: Message describes the incident/error that
                                occurred.
                              type: string
                            messageTemplateParams:
                              additionalProperties:
                                type: string
                              description: MessageTemplateParams contains key-value
                                pairs necessary for generating a user-friendly data-driven
                                version of Message in the UI.
                              type: object
                            resource:
                              description: Resource contains information about the
                                Database Service component that reported the incident
                                as well as about the K8s resource.
                              properties:
                                component:
                                  description: Component is an internal identifier
                                    of the Database Service subsystem that reported
                                    the incident.
                                  type: string
                                location:
                                  description: Location
                                  properties:
                                    cluster:
                                      description: Cluster is the name of the cluster
                                        of the affected K8S resource.
                                      type: string
                                    group:
                                      description: Group is the Group name of the
                                        k8s resource.
                                      type: string
                                    kind:
                                      description: Kind is the Kind of the k8s resource.
                                      type: string
                                    name:
                                      description: Name is the name of the affected
                                        K8S resource.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace of the
                                        affected K8S resource.
                                      type: string
                                    version:
                                      description: Group is the Version of the k8s
                                        resource.
                                      type: string
                                  type: object
                              required:
                              - component
                              type: object
                            stackTrace:
                              description: StackTrace contains an unstructured list
                                of messages from the stack trace.
                              items:
                                description: CriticalIncidentStackTraceMessage contains
                                  stack trace information available for the incident.
                                properties:
                                  component:
                                    description: Component is the name of a Database
                                      Service component that logged the message.
                                    type: string
                                  message:
                                    description: Logged message.
                                    type: string
                                type: object
                              type: array
                            transientUntil:
                              description: TransientUntil if present indicates that
                                the issue should be considered transient until the
                                specified time.
                              format: date-time
                              type: string
                          required:
                          - code
                          - createTime
                          - resource
                          type: object
                        type: array
                      endTime:
                        description: EndTime is the time failover reached its final
                          state.
                        format: date-time
                        type: string
                      internal:
                        description: Internal is used by the system controllers. You
                          should not directly depend on the information in this section.
                        properties:
                          attempt:
                            default: 0
                            description: Attempt is used for retry logic
                            type: integer
                          newPrimary:
                            description: NewPrimary is the instance that we are attempting
                              to failover to.
                            type: string
                          oldPrimary:
                            description: OldPrimary is the instance that was the primary
                              at the start of the failover.
                            type: string
                          phase:
                            description: Phase is used to keep track of the current
                              state of the failover
                            enum:
                            - StopPrimary
                            - PromoteStandby
                            - ValidateNewPrimary
                            - UpdateOldPrimaryResources
                            - UpdateNewPrimaryResources
                            - Cleanup
                            - Complete
                            - UpdateStandbys
                            - Recreate
                            type: string
                        required:
                        - attempt
                        - newPrimary
                        - oldPrimary
                        type: object
                      observedGeneration:
                        description: 'Internal: The generation observed by the controller.'
                        format: int64
                        type: integer
                      reconciled:
                        description: 'Internal: Whether the resource was reconciled
                          by the controller.'
                        type: boolean
                      startTime:
                        description: StartTime is the time that the failover operation
                          started.
                        format: date-time
                        type: string
                      state:
                        description: State is the current state of the failover operation.
                          The values are `InProgress`, `Success`, `Failed_RollbackInProgress`,
                          `Failed_RollbackSuccess`, `Failed_RollbackFailed` `InProgress`
                          means the failover is still in progress. `Success` means
                          that the failover has completed. It is complete when the
                          new primary instance is successfully promoted. `Failed_RollbackInProgress`
                          means that the operator was unable to promote the new primary
                          instance, and is attempting to restart the old primary instance.
                          `Failed_RollbackSuccess` means that the operator was unable
                          to promote the new primary instance, and successfully restarted
                          the old primary instance. `Failed_RollbackFailed` means
                          that  the operator was unable to promote the new primary
                          instance, and were not able to restart the old primary instance.
                          The DBCluster might need to be manually repaired.
                        enum:
                        - InProgress
                        - Success
                        - Failed_RollbackInProgress
                        - Failed_RollbackSuccess
                        - Failed_RollbackFailed
                        type: string
                    type: object
                type: object
              observedGeneration:
                description: 'Internal: The generation observed by the controller.'
                format: int64
                type: integer
              phase:
                type: string
              primary:
                description: Primary contains the status of the primary Instance.
                properties:
                  allocatedResources:
                    description: AllocatedResources represents the current configuration
                      of memory/CPU/disks
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: The amount of CPU allocated to the database container.
                          This field is required.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      disks:
                        description: The specifications of the disks allocated to
                          the database container. This field is required.
                        items:
                          description: DiskSpec defines the desired state of a disk.
                          properties:
                            accessModes:
                              description: "AccessModes contains the desired access
                                modes for the volume. \n Refer to https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
                                for more information."
                              items:
                                type: string
                              type: array
                            annotations:
                              additionalProperties:
                                type: string
                              description: "Additional annotations added to the Persistent
                                Volume Claim. This field is optional. \n This allows
                                to integrate with other tools."
                              type: object
                            name:
                              description: "Name of the disk. This field is required.
                                \n The allowed values are: \"DataDisk\", \"LogDisk\"
                                , \"BackupDisk\" and \"ObsDisk\"."
                              enum:
                              - DataDisk
                              - LogDisk
                              - BackupDisk
                              - ObsDisk
                              - BackupRepoDisk
                              type: string
                            selector:
                              description: "A label query over volumes to consider
                                for binding. This field is optional. \n If this field
                                is set, then the volume with matching labels is used
                                as the backing volume for the disk. \n Refer to https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec
                                for more information."
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            size:
                              description: "Disk size in bytes for example, \"10Gi\"
                                for 10 Gibibytes. This field is required. \n The allowed
                                size unit prefixes are: \"Ki\", \"Mi\", \"Gi\", \"Ti,
                                \"Pi\" and \"Ei\" for 2-base. Also \"K\", \"M\", \"G\",
                                \"T, \"P\" and \"E\" for 10-base. See https://en.wikipedia.org/wiki/Unit_prefix."
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              type: string
                            storageClass:
                              description: "StorageClass points to a particular CSI
                                storage class. This field is optional. \n If the field
                                is not set, then the default CSI storage class for
                                the Kubernetes cluster is used. If there is no default
                                for the Kubernetes cluster,  then the Persistence
                                Volume Claim will fail and the database cluster will
                                fail to provision. \n You can read more about storage
                                classes in https://kubernetes.io/docs/concepts/storage/storage-classes."
                              type: string
                            volumeName:
                              description: "VolumeName is the binding reference to
                                the Persistent Volume tied to this disk. This field
                                is optional. \n This allows to reuse an existing volume.
                                \n Note that if this field is specified, the value
                                \"storageClass\" will not take effect. You can learn
                                more about this in https://kubernetes.io/docs/concepts/storage/persistent-volumes/#binding."
                              type: string
                          required:
                          - name
                          - size
                          type: object
                        type: array
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: The amount of memory allocated to the database
                          container. This field is required.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  conditions:
                    description: Conditions represents the latest available observations
                      of the Instance's current state.
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, \n type FooStatus struct{ // Represents the
                        observations of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  currentControlPlaneAgentsVersion:
                    description: "CurrentControlPlaneAgentsVersion is the control
                      plane agents version that the primary instance is running. \n
                      This value should match the value of `spec.controlPlaneAgentsVersion`
                      after the primary instance is provisioned or the upgrade or
                      downgrade has concluded successfully."
                    type: string
                  currentDatabaseImage:
                    description: "CurrentDatabaseImage is the customized database
                      image that the primary instance is using. \n This value should
                      match the value of `spec.databaseImage` after the primary instance
                      is provisioned or the upgrade or downgrade has concluded successfully."
                    type: string
                  currentDatabaseVersion:
                    description: "CurrentDatabaseVersion is the current database version
                      that the primary instance is running. \n This value should match
                      the value of `spec.databaseVersion` after the primary instance
                      is provisioned or the upgrade or downgrade has concluded successfully."
                    type: string
                  currentParameters:
                    additionalProperties:
                      type: string
                    description: "CurrentParameters indicates the current values of
                      the parameters. \n CurrentParameters allows to verify that the
                      `spec.primarySpec.parameters` field has been applied to the
                      database. Only the parameters names in `spec.primarySpec.parameters`
                      will be included in this field."
                    type: object
                  endpoint:
                    description: 'Endpoint is the address that can be used to establish
                      database connections. Deprecated: use the Endpoints field instead.'
                    type: string
                  endpoints:
                    description: Endpoints contains all the endpoint through which
                      the users can access this instance.
                    items:
                      description: Endpoint represents a access point through which
                        user can access the database.
                      properties:
                        name:
                          description: Name contains the name of the endpoint
                          type: string
                        value:
                          description: Value contains the endpoint information.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  latestExport:
                    description: LatestExport represents the latest export for the
                      database instance
                    properties:
                      creationTimeStamp:
                        description: CreationTimeStamp represents the creation time
                          of the export for the database instance
                        format: date-time
                        type: string
                      exportName:
                        description: ExportName is the Name of the latest export
                        type: string
                      spec:
                        description: Spec represents the spec of the export for the
                          database instance
                        properties:
                          dbclusterRef:
                            description: DBClusterRef is the dbcluster name within
                              the same namespace to export from.
                            type: string
                          exportLocation:
                            description: ExportLocation specifies a storage location
                              for the export files. A user is to ensure proper write
                              access to the storage bucket from within the Operator.
                            properties:
                              gcsOptions:
                                description: GCSOptions is a reference to GCS dependent
                                  options.
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores GCS access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              s3Options:
                                description: 'S3Options is a reference to S3 dependent
                                  options (Ex: S3 Access Secret, End Point, Region).'
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  certRef:
                                    description: CertRef is a reference to the secret
                                      that stores CA certs used to assess the S3 endpoint.
                                      The value of key 'ca.crt' inside this secret
                                      will be used. Default to skip SSL verification
                                      if not specified.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  endpoint:
                                    description: Endpoint is S3 end point.
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  region:
                                    description: Region is S3 region the bucket resides
                                      in.
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores bucket access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              type:
                                description: 'Type of Repository (ex: S3, GCS), which
                                  tells the agent which storage system/API to use.'
                                enum:
                                - GCS
                                - S3
                                type: string
                            required:
                            - type
                            type: object
                        required:
                        - exportLocation
                        type: object
                      status:
                        description: Status represents the of the latest import for
                          the database instance
                        properties:
                          completeTime:
                            description: CompleteTime is the time export completed.
                            format: date-time
                            type: string
                          conditions:
                            description: Conditions represents the latest available
                              observations of the Entity's current state.
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          criticalIncidents:
                            description: CriticalIncidents is a flat list of all active
                              Critical Incidents.
                            items:
                              description: CriticalIncident contains all information
                                about an ongoing critical incident.
                              properties:
                                code:
                                  description: Code is the error code of this particular
                                    error. Error codes are DBSE+numeric strings, like
                                    "DBSE1012".
                                  type: string
                                createTime:
                                  description: CreateTime is the timestamp when this
                                    Incident was created at the origin.
                                  format: date-time
                                  type: string
                                message:
                                  description: Message describes the incident/error
                                    that occurred.
                                  type: string
                                messageTemplateParams:
                                  additionalProperties:
                                    type: string
                                  description: MessageTemplateParams contains key-value
                                    pairs necessary for generating a user-friendly
                                    data-driven version of Message in the UI.
                                  type: object
                                resource:
                                  description: Resource contains information about
                                    the Database Service component that reported the
                                    incident as well as about the K8s resource.
                                  properties:
                                    component:
                                      description: Component is an internal identifier
                                        of the Database Service subsystem that reported
                                        the incident.
                                      type: string
                                    location:
                                      description: Location
                                      properties:
                                        cluster:
                                          description: Cluster is the name of the
                                            cluster of the affected K8S resource.
                                          type: string
                                        group:
                                          description: Group is the Group name of
                                            the k8s resource.
                                          type: string
                                        kind:
                                          description: Kind is the Kind of the k8s
                                            resource.
                                          type: string
                                        name:
                                          description: Name is the name of the affected
                                            K8S resource.
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of the affected K8S resource.
                                          type: string
                                        version:
                                          description: Group is the Version of the
                                            k8s resource.
                                          type: string
                                      type: object
                                  required:
                                  - component
                                  type: object
                                stackTrace:
                                  description: StackTrace contains an unstructured
                                    list of messages from the stack trace.
                                  items:
                                    description: CriticalIncidentStackTraceMessage
                                      contains stack trace information available for
                                      the incident.
                                    properties:
                                      component:
                                        description: Component is the name of a Database
                                          Service component that logged the message.
                                        type: string
                                      message:
                                        description: Logged message.
                                        type: string
                                    type: object
                                  type: array
                                transientUntil:
                                  description: TransientUntil if present indicates
                                    that the issue should be considered transient
                                    until the specified time.
                                  format: date-time
                                  type: string
                              required:
                              - code
                              - createTime
                              - resource
                              type: object
                            type: array
                          exportSubDirectory:
                            description: ExportSubDirectory is the subdirectory appended
                              to ExportLocation to store exported files.
                            type: string
                          observedGeneration:
                            description: 'Internal: The generation observed by the
                              controller.'
                            format: int64
                            type: integer
                          phase:
                            description: Phase is a summary of current state of the
                              export.
                            type: string
                          reconciled:
                            description: 'Internal: Whether the resource was reconciled
                              by the controller.'
                            type: boolean
                          startTime:
                            description: StartTime is the time export started.
                            format: date-time
                            type: string
                        type: object
                    type: object
                  latestImport:
                    description: LatestImport represents the latest import for the
                      database instance
                    properties:
                      creationTimeStamp:
                        description: CreationTimeStamp represents the creation time
                          of the import for the database instance
                        format: date-time
                        type: string
                      importName:
                        description: ImportName is the Name of the latest import
                        type: string
                      spec:
                        description: Spec represents the spec of the import for the
                          database instance
                        properties:
                          databaseName:
                            description: DatabaseName is the database resource name
                              within Instance to import into.
                            type: string
                          dbclusterRef:
                            description: DBClusterRef is the dbcluster name within
                              the same namespace to import into.
                            type: string
                          downloadOnly:
                            default: false
                            description: DownloadOnly when set to true means dump
                              file will be downloaded but not imported into DB. Default
                              is false.
                            type: boolean
                          dumpStorage:
                            description: DumpStorage specifies a storage location
                              for the import dump files. A user is to ensure proper
                              read access to the storage bucket from within the Operator.
                            properties:
                              gcsOptions:
                                description: GCSOptions is a reference to GCS dependent
                                  options.
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores GCS access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              s3Options:
                                description: 'S3Options is a reference to S3 dependent
                                  options (Ex: S3 Access Secret, End Point, Region).'
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  certRef:
                                    description: CertRef is a reference to the secret
                                      that stores CA certs used to assess the S3 endpoint.
                                      The value of key 'ca.crt' inside this secret
                                      will be used. Default to skip SSL verification
                                      if not specified.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  endpoint:
                                    description: Endpoint is S3 end point.
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  region:
                                    description: Region is S3 region the bucket resides
                                      in.
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores bucket access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              type:
                                description: 'Type of Repository (ex: S3, GCS), which
                                  tells the agent which storage system/API to use.'
                                enum:
                                - GCS
                                - S3
                                type: string
                            required:
                            - type
                            type: object
                          logStorage:
                            description: LogStorage optionally specifies a storage
                              location to copy import log to. A user is to ensure
                              proper write access to the storage bucket from within
                              the Operator.
                            properties:
                              gcsOptions:
                                description: GCSOptions is a reference to GCS dependent
                                  options.
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores GCS access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              s3Options:
                                description: 'S3Options is a reference to S3 dependent
                                  options (Ex: S3 Access Secret, End Point, Region).'
                                properties:
                                  bucket:
                                    description: 'Bucket is a required field, (ex:
                                      dbs-dump-bucket) A user is to ensure proper
                                      write access to the storage bucket from within
                                      the Operator.'
                                    type: string
                                  certRef:
                                    description: CertRef is a reference to the secret
                                      that stores CA certs used to assess the S3 endpoint.
                                      The value of key 'ca.crt' inside this secret
                                      will be used. Default to skip SSL verification
                                      if not specified.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  endpoint:
                                    description: Endpoint is S3 end point.
                                    type: string
                                  key:
                                    description: 'Object key for the dump files. (ex:
                                      ods-dump/scottschema.dmp).'
                                    type: string
                                  region:
                                    description: Region is S3 region the bucket resides
                                      in.
                                    type: string
                                  secretRef:
                                    description: SecretRef is a reference to the secret
                                      that stores bucket access information.
                                    properties:
                                      name:
                                        description: name is unique within a namespace
                                          to reference a secret resource.
                                        type: string
                                      namespace:
                                        description: namespace defines the space within
                                          which the secret name must be unique.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - bucket
                                - key
                                type: object
                              type:
                                description: 'Type of Repository (ex: S3, GCS), which
                                  tells the agent which storage system/API to use.'
                                enum:
                                - GCS
                                - S3
                                type: string
                            required:
                            - type
                            type: object
                        required:
                        - dumpStorage
                        type: object
                      status:
                        description: Status represents the of the latest import for
                          the database instance
                        properties:
                          completeTime:
                            description: CompleteTime is the time import completed.
                            format: date-time
                            type: string
                          conditions:
                            description: Conditions represents the latest available
                              observations of the Entity's current state.
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          criticalIncidents:
                            description: CriticalIncidents is a flat list of all active
                              Critical Incidents.
                            items:
                              description: CriticalIncident contains all information
                                about an ongoing critical incident.
                              properties:
                                code:
                                  description: Code is the error code of this particular
                                    error. Error codes are DBSE+numeric strings, like
                                    "DBSE1012".
                                  type: string
                                createTime:
                                  description: CreateTime is the timestamp when this
                                    Incident was created at the origin.
                                  format: date-time
                                  type: string
                                message:
                                  description: Message describes the incident/error
                                    that occurred.
                                  type: string
                                messageTemplateParams:
                                  additionalProperties:
                                    type: string
                                  description: MessageTemplateParams contains key-value
                                    pairs necessary for generating a user-friendly
                                    data-driven version of Message in the UI.
                                  type: object
                                resource:
                                  description: Resource contains information about
                                    the Database Service component that reported the
                                    incident as well as about the K8s resource.
                                  properties:
                                    component:
                                      description: Component is an internal identifier
                                        of the Database Service subsystem that reported
                                        the incident.
                                      type: string
                                    location:
                                      description: Location
                                      properties:
                                        cluster:
                                          description: Cluster is the name of the
                                            cluster of the affected K8S resource.
                                          type: string
                                        group:
                                          description: Group is the Group name of
                                            the k8s resource.
                                          type: string
                                        kind:
                                          description: Kind is the Kind of the k8s
                                            resource.
                                          type: string
                                        name:
                                          description: Name is the name of the affected
                                            K8S resource.
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of the affected K8S resource.
                                          type: string
                                        version:
                                          description: Group is the Version of the
                                            k8s resource.
                                          type: string
                                      type: object
                                  required:
                                  - component
                                  type: object
                                stackTrace:
                                  description: StackTrace contains an unstructured
                                    list of messages from the stack trace.
                                  items:
                                    description: CriticalIncidentStackTraceMessage
                                      contains stack trace information available for
                                      the incident.
                                    properties:
                                      component:
                                        description: Component is the name of a Database
                                          Service component that logged the message.
                                        type: string
                                      message:
                                        description: Logged message.
                                        type: string
                                    type: object
                                  type: array
                                transientUntil:
                                  description: TransientUntil if present indicates
                                    that the issue should be considered transient
                                    until the specified time.
                                  format: date-time
                                  type: string
                              required:
                              - code
                              - createTime
                              - resource
                              type: object
                            type: array
                          dumpPath:
                            description: DumpPath is the path of the downloaded dump
                              file for download only import.
                            type: string
                          observedGeneration:
                            description: 'Internal: The generation observed by the
                              controller.'
                            format: int64
                            type: integer
                          phase:
                            description: Phase is a summary of current state of the
                              import.
                            type: string
                          reconciled:
                            description: 'Internal: Whether the resource was reconciled
                              by the controller.'
                            type: boolean
                          startTime:
                            description: StartTime is the time import started.
                            format: date-time
                            type: string
                        type: object
                    type: object
                  phase:
                    description: Phase is a summary of current state of the Instance.
                    type: string
                  url:
                    description: "URL consists of the address and port number that
                      can be used to establish a client connection to the database.
                      \n This value is expressed in the following format: <address>:<port>.
                      Deprecated: use the Endpoints field instead."
                    type: string
                  walArchiveSetting:
                    description: WalArchiveSetting represents the current wal archive
                      settings.
                    properties:
                      location:
                        type: string
                    type: object
                type: object
              reconciled:
                description: 'Internal: Whether the resource was reconciled by the
                  controller.'
                type: boolean
              registrationStatus:
                description: RegistrationStatus represents the status of migration
                  for the database cluster.
                properties:
                  IsHA:
                    description: IsHA is set to true when DBClusterSpec HA Availability
                      setting has at least 1 numberOfStandbys setup.
                    type: boolean
                  IsRegistered:
                    type: boolean
                  RegistrationTime:
                    description: RegistrationTime represents the time the on-prem
                      dbcluster was registered with the Cloud.
                    type: string
                type: object
              restoredFrom:
                description: RestoredFrom is the status showing the most recent restore
                  source for current DBCluster.
                properties:
                  restoredTime:
                    description: Time point of the source DBCluster this DBCluster
                      restores from.
                    format: date-time
                    type: string
                  sourceDBCluster:
                    description: Source DBCluster this DBCluster restores from.
                    type: string
                type: object
              serviceAccounts:
                additionalProperties:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                description: ServiceAccounts contains the service accounts created
                  by the control plane to be used by different operations. By granting
                  permissions to these service accounts, the database can interact
                  with other services within the kubernetes ecosystem. For further
                  information, including what permissions is required, refer to the
                  documentation of each operation.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
