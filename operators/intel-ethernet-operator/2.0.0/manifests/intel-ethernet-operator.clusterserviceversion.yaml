# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2023 Intel Corporation

apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "ethernet.intel.com/v1",
          "kind": "EthernetClusterConfig",
          "metadata": {
            "name": "ethernetclusterconfig-sample",
            "namespace": "intel-ethernet-operator"
          },
          "spec": {
            "deviceConfig": {
              "ddpChecksum": "071704f0659a4640f6f00aedbe458a14c15c74e9",
              "ddpURL": "http://ice-cache.default.svc.cluster.local/ice_comms-1.3.45.0.zip",
              "fwChecksum": "7ee4eb3761af27dfd1fe032e7a23cfde49eaf4b0",
              "fwURL": "http://ice-cache.default.svc.cluster.local/E810_NVMUpdatePackage_v4_40_Linux.tar.gz"
            },
            "deviceSelector": {
              "pciAddress": "0000:18:00.0"
            },
            "nodeSelectors": {
              "kubernetes.io/hostname": "sample-node-name"
            }
          }
        },
        {
          "apiVersion": "ethernet.intel.com/v1",
          "kind": "EthernetNodeConfig",
          "metadata": {
            "name": "sample-node",
            "namespace": "intel-ethernet-operator"
          },
          "spec": {},
          "status": {
            "conditions": [
              {
                "lastTransitionTime": "2023-11-14T13:57:06Z",
                "message": "Inventory up to date",
                "observedGeneration": 1,
                "reason": "NotRequested",
                "status": "True",
                "type": "Updated"
              }
            ],
            "devices": [
              {
                "DDP": {
                  "packageName": "ICE COMMS Package",
                  "trackId": "0xc0000002",
                  "version": "1.3.37.0"
                },
                "PCIAddress": "0000:5e:00.0",
                "deviceID": "1592",
                "driver": "ice",
                "driverVersion": "1.9.11",
                "firmware": {
                  "MAC": "b4:96:91:af:70:3c",
                  "version": "4.00 0x800117ee 1.3236.0"
                },
                "name": "Ethernet Controller E810-C for QSFP",
                "vendorID": "8086"
              }
            ]
          }
        },
        {
          "apiVersion": "flowconfig.intel.com/v1",
          "kind": "ClusterFlowConfig",
          "metadata": {
            "name": "pppoesLCP",
            "namespace": "intel-ethernet-operator"
          },
          "spec": {
            "podSelector": {
              "matchLabels": {
                "app": "vagf",
                "role": "controlplane",
                "serverProvider": "vodafone"
              }
            },
            "rules": [
              {
                "action": [
                  {
                    "interface": "net0",
                    "type": "to-pod-interface"
                  }
                ],
                "attr": {
                  "ingress": 1
                },
                "pattern": [
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_ETH"
                  },
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_VLAN"
                  },
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_VLAN"
                  },
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_PPPOES"
                  },
                  {
                    "mask": {
                      "protoId": 65535
                    },
                    "spec": {
                      "protoId": 49187
                    },
                    "type": "RTE_FLOW_ITEM_TYPE_PPPOE_PROTO_ID"
                  },
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_END"
                  }
                ],
                "priority": 0
              }
            ]
          }
        },
        {
          "apiVersion": "flowconfig.intel.com/v1",
          "kind": "FlowConfigNodeAgentDeployment",
          "metadata": {
            "labels": {
              "control-plane": "flowconfig-daemon"
            },
            "name": "flowconfignodeagentdeployment-sample",
            "namespace": "intel-ethernet-operator"
          },
          "spec": {
            "DCFVfPoolName": "intel.com/cvl_uft_admin",
            "NADAnnotation": "flowconfig-daemon-sriov-cvl0-admin"
          }
        },
        {
          "apiVersion": "flowconfig.intel.com/v1",
          "kind": "NodeFlowConfig",
          "metadata": {
            "name": "sample-node",
            "namespace": "intel-ethernet-operator"
          },
          "spec": {
            "rules": [
              {
                "action": [
                  {
                    "type": "RTE_FLOW_ACTION_TYPE_DROP"
                  },
                  {
                    "type": "RTE_FLOW_ACTION_TYPE_END"
                  }
                ],
                "attr": {
                  "ingress": 1
                },
                "pattern": [
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_ETH"
                  },
                  {
                    "mask": {
                      "hdr": {
                        "src_addr": "255.255.255.255"
                      }
                    },
                    "spec": {
                      "hdr": {
                        "src_addr": "10.56.217.9"
                      }
                    },
                    "type": "RTE_FLOW_ITEM_TYPE_IPV4"
                  },
                  {
                    "type": "RTE_FLOW_ITEM_TYPE_END"
                  }
                ],
                "portId": 0
              }
            ]
          }
        }
      ]
    capabilities: Basic Install
    categories: Networking
    containerImage: "docker.io/intel/intel-ethernet-operator-manager:2.0.0"
    createdAt: "2023-11-15 14:44:23"
    description: The role of the Intel Ethernet Operator is to orchestrate and manage
      the configuration of the capabilities exposed by the Intel E810 Series network
      interface cards (NICs).
    operators.operatorframework.io/builder: operator-sdk-v1.25.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/intel/intel-ethernet-operator/tree/v23.08-operatorhub
    support: Intel Corporation
  name: intel-ethernet-operator.v2.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ClusterFlowConfig is the Schema for the clusterflowconfigs API
      displayName: Cluster Flow Config
      kind: ClusterFlowConfig
      name: clusterflowconfigs.flowconfig.intel.com
      resources:
      - kind: Pod
        name: flowconfig-daemon
        version: v1
      specDescriptors:
      - description: This is a label selector which selects Pods. This field follows
          standard label selector semantics; if present but empty, it selects all
          pods.
        displayName: Pod Selector
        path: podSelector
      - description: Rules is a list of FlowCreate rules
        displayName: Rules
        path: rules
      version: v1
    - description: EthernetClusterConfig is the Schema for the ethernetclusterconfigs
        API
      displayName: Ethernet Cluster Config
      kind: EthernetClusterConfig
      name: ethernetclusterconfigs.ethernet.intel.com
      resources:
      - kind: DaemonSet
        name: fwddp-daemon
        version: v1
      specDescriptors:
      - description: Contains configuration which will be applied to selected devices
        displayName: Device Config
        path: deviceConfig
      - description: Selector for devices on nodes. If value is not set, then configuration
          is applied to all CLV cards on selected nodes
        displayName: Device Selector
        path: deviceSelector
      - description: Selector for nodes. If value is not set, then configuration is
          applied to all nodes with CLV cards in cluster
        displayName: Node Selector
        path: nodeSelectors
      version: v1
    - description: EthernetNodeConfig is the Schema for the ethernetnodeconfigs API
      displayName: Ethernet Node Config
      kind: EthernetNodeConfig
      name: ethernetnodeconfigs.ethernet.intel.com
      resources:
      - kind: DaemonSet
        name: fwddp-daemon
        version: v1
      specDescriptors:
      - description: Contains mapping of PciAddress to Configuration which will be
          applied to device on particular PciAddress
        displayName: Config
        path: config
      - description: Skips drain process when true; default false. Should be true
          if operator is running on SNO
        displayName: Drain Skip
        path: drainSkip
      statusDescriptors:
      - description: Provides information about device update status
        displayName: Conditions
        path: conditions
      - description: Contains list of supported CLV cards and details about them
        displayName: Devices
        path: devices
      version: v1
    - description: FlowConfigNodeAgentDeployment is the Schema for the flowconfignodeagentdeployments
        API
      displayName: Flow Config Node Agent Deployment
      kind: FlowConfigNodeAgentDeployment
      name: flowconfignodeagentdeployments.flowconfig.intel.com
      resources:
      - kind: Pod
        name: flowconfig-daemon
        version: v1
      specDescriptors:
      - description: DCFVfPoolName is the name reference to CVL admin VF pool
        displayName: DCFVf Pool Name
        path: DCFVfPoolName
      - description: NADAnnotation is the name reference to Network Attachement Definition
          required by UFT container
        displayName: NADAnnotation
        path: NADAnnotation
      version: v1
    - description: NodeFlowConfig is the Schema for the nodeflowconfigs API
      displayName: Node Flow Config
      kind: NodeFlowConfig
      name: nodeflowconfigs.flowconfig.intel.com
      resources:
      - kind: Pod
        name: flowconfig-daemon
        version: v1
      specDescriptors:
      - description: Rules is a list of FlowCreate rules
        displayName: Rules
        path: rules
      statusDescriptors:
      - displayName: Port Info
        path: portInfo
      - description: Last applied rules
        displayName: Rules
        path: rules
      - displayName: Sync Msg
        path: syncMsg
      - displayName: Sync Status
        path: syncStatus
      version: v1
  description: The role of the Intel Ethernet Operator is to orchestrate and manage
    the configuration of the capabilities exposed by the Intel E810 Series network
    interface cards (NICs). The operator is a state machine which will configure certain
    functions of the card and then monitor the status and act autonomously based on
    the user interaction.


    OperatorHub submission is based on 23.08 source code release without!
    Flow Configuration functionality. If you need Flow Configuration, you
    can build images and deploy Intel Ethernet Operator from source code. Refer
    to provided product documentation.
    
    
    Firmware and DDP updates are supported on K8s clusters that are running on
    top of supported Linux distributions described in
    [Feature Support Matrix](https://cdrdv2-public.intel.com/630155/630155_E810%20Feature%20Summary_Rev4_1.pdf)
    (Chapter 2.0 - Operating Systems Supported). Check product release notes and
    documentation for more information. 
    

    If you have any questions regarding Intel Ethernet Operator, please reach out
    to one of the provided contacts.

  displayName: Intel Ethernet Operator
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI0LjMuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA3MiAzMCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNzIgMzA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojMDA2OEI1O30KPC9zdHlsZT4KPGc+Cgk8cmVjdCB4PSIxLjgiIHk9IjIuMSIgY2xhc3M9InN0MCIgd2lkdGg9IjQuOTYiIGhlaWdodD0iNC45NiIvPgoJPHBhdGggY2xhc3M9InN0MCIgZD0iTTYuNjMsMjcuOVYxMC4wNmgtNC43VjI3LjlINi42M3ogTTM3Ljc4LDI4LjA4di00LjM3Yy0wLjY5LDAtMS4yNi0wLjA0LTEuNy0wLjExCgkJYy0wLjQ4LTAuMDgtMC44Ni0wLjI0LTEuMS0wLjQ5Yy0wLjI1LTAuMjUtMC40MS0wLjYxLTAuNDktMS4wN2MtMC4wNy0wLjQ0LTAuMTEtMS4wMi0wLjExLTEuNzJ2LTYuMjRoMy40di00LjAyaC0zLjRWMy4xMWgtNC43CgkJdjE3LjI0YzAsMS40NSwwLjEzLDIuNjksMC4zOCwzLjY4YzAuMjUsMC45NywwLjY3LDEuNzcsMS4yNSwyLjM3YzAuNTgsMC42LDEuMzYsMS4wMywyLjI5LDEuMjljMC45NSwwLjI2LDIuMTUsMC4zOSwzLjU4LDAuMzkKCQlIMzcuNzh6IE02NC43MSwyNy45VjEuNzRoLTQuN1YyNy45SDY0LjcxeiBNMjUuMTUsMTEuODJDMjMuODQsMTAuNDEsMjIsOS43LDE5LjY4LDkuN2MtMS4xMiwwLTIuMTYsMC4yMy0zLjA4LDAuNjkKCQljLTAuOTIsMC40Ni0xLjcxLDEuMS0yLjMzLDEuOWwtMC4yNiwwLjMzbDAtMC4zdi0yLjI2SDkuMzdWMjcuOWg0LjY3di05LjVsMCwwLjY2YzAtMC4xMSwwLTAuMjIsMC0wLjMyCgkJYzAuMDUtMS42NywwLjQ2LTIuOTEsMS4yNC0zLjdjMC44My0wLjg0LDEuODMtMS4yNywyLjk4LTEuMjdjMS4zNiwwLDIuMzksMC40MiwzLjA4LDEuMjNjMC42NywwLjgsMS4wMSwxLjk1LDEuMDIsMy40MmwwLDB2MC4wNAoJCWMwLDAsMCwwLjAxLDAsMC4wMWgwbDAsOS40M2g0Ljc0VjE3Ljc3QzI3LjExLDE1LjIzLDI2LjQ1LDEzLjIzLDI1LjE1LDExLjgyeiBNNTcuNTYsMTguOTRjMC0xLjI4LTAuMjMtMi40OS0wLjY4LTMuNjEKCQljLTAuNDUtMS4xMS0xLjA5LTIuMS0xLjg5LTIuOTVjLTAuOC0wLjg0LTEuNzgtMS41MS0yLjkxLTEuOThDNTAuOTYsOS45NCw0OS43LDkuNyw0OC4zNSw5LjdjLTEuMjgsMC0yLjUsMC4yNS0zLjYyLDAuNzMKCQljLTEuMTMsMC40OS0yLjEyLDEuMTUtMi45NSwxLjk4Yy0wLjgzLDAuODMtMS41LDEuODItMS45OCwyLjk1Yy0wLjQ5LDEuMTItMC43MywyLjM0LTAuNzMsMy42MmMwLDEuMjgsMC4yMywyLjUsMC43LDMuNjIKCQljMC40NiwxLjEzLDEuMTEsMi4xMiwxLjkzLDIuOTRjMC44MiwwLjgzLDEuODIsMS41LDIuOTgsMS45OGMxLjE2LDAuNDksMi40NSwwLjczLDMuODIsMC43M2MzLjk4LDAsNi40Ni0xLjgxLDcuOTQtMy41bC0zLjM4LTIuNTgKCQljLTAuNzEsMC44NS0yLjQsMS45OS00LjUyLDEuOTljLTEuMzMsMC0yLjQyLTAuMzEtMy4yNC0wLjkxYy0wLjgzLTAuNjEtMS40LTEuNDQtMS43LTIuNDhsLTAuMDUtMC4xN2gxNC4wMVYxOC45NHogTTQzLjU5LDE3LjMxCgkJYzAtMS4zMSwxLjUtMy41OSw0LjczLTMuNTljMy4yMywwLDQuNzMsMi4yOCw0LjczLDMuNThMNDMuNTksMTcuMzF6Ii8+Cgk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNzAuMDYsMjUuNjVjLTAuMDktMC4yMS0wLjIyLTAuMzktMC4zNy0wLjU1Yy0wLjE2LTAuMTYtMC4zNC0wLjI4LTAuNTUtMC4zN2MtMC4yMS0wLjA5LTAuNDQtMC4xNC0wLjY4LTAuMTQKCQljLTAuMjQsMC0wLjQ3LDAuMDUtMC42OCwwLjE0Yy0wLjIxLDAuMDktMC4zOSwwLjIyLTAuNTUsMC4zN2MtMC4xNiwwLjE2LTAuMjgsMC4zNC0wLjM3LDAuNTVjLTAuMDksMC4yMS0wLjE0LDAuNDQtMC4xNCwwLjY4CgkJYzAsMC4yNCwwLjA1LDAuNDcsMC4xNCwwLjY4YzAuMDksMC4yMSwwLjIyLDAuMzksMC4zNywwLjU1YzAuMTYsMC4xNiwwLjM0LDAuMjgsMC41NSwwLjM3YzAuMjEsMC4wOSwwLjQ0LDAuMTQsMC42OCwwLjE0CgkJYzAuMjQsMCwwLjQ3LTAuMDUsMC42OC0wLjE0YzAuMjEtMC4wOSwwLjM5LTAuMjIsMC41NS0wLjM3YzAuMTYtMC4xNiwwLjI4LTAuMzQsMC4zNy0wLjU1YzAuMDktMC4yMSwwLjE0LTAuNDQsMC4xNC0wLjY4CgkJQzcwLjIsMjYuMDksNzAuMTUsMjUuODYsNzAuMDYsMjUuNjV6IE02OS43OCwyNi44OGMtMC4wNywwLjE3LTAuMTgsMC4zMy0wLjMxLDAuNDZjLTAuMTMsMC4xMy0wLjI4LDAuMjMtMC40NiwwLjMxCgkJYy0wLjE3LDAuMDctMC4zNiwwLjExLTAuNTYsMC4xMWMtMC4yLDAtMC4zOC0wLjA0LTAuNTYtMC4xMWMtMC4xNy0wLjA3LTAuMzMtMC4xOC0wLjQ2LTAuMzFjLTAuMTMtMC4xMy0wLjIzLTAuMjgtMC4zMS0wLjQ2CgkJYy0wLjA3LTAuMTctMC4xMS0wLjM2LTAuMTEtMC41NmMwLTAuMiwwLjA0LTAuMzgsMC4xMS0wLjU2YzAuMDctMC4xNywwLjE4LTAuMzMsMC4zMS0wLjQ2YzAuMTMtMC4xMywwLjI4LTAuMjMsMC40Ni0wLjMxCgkJYzAuMTctMC4wNywwLjM2LTAuMTEsMC41Ni0wLjExYzAuMiwwLDAuMzgsMC4wNCwwLjU2LDAuMTFjMC4xNywwLjA3LDAuMzMsMC4xOCwwLjQ2LDAuMzFjMC4xMywwLjEzLDAuMjMsMC4yOCwwLjMxLDAuNDYKCQljMC4wNywwLjE3LDAuMTEsMC4zNiwwLjExLDAuNTZDNjkuODksMjYuNTIsNjkuODUsMjYuNzEsNjkuNzgsMjYuODh6IE02OC43OSwyNi40N2MwLjE0LTAuMDIsMC4yNS0wLjA3LDAuMzQtMC4xNQoJCWMwLjA5LTAuMDksMC4xMy0wLjIyLDAuMTMtMC4zOWMwLTAuMTktMC4wNi0wLjM0LTAuMTctMC40NGMtMC4xMS0wLjEtMC4yOS0wLjE1LTAuNTMtMC4xNWgtMC43N3YxLjk5aDAuMzZ2LTAuODFoMC4yN2wwLjUsMC44MQoJCWgwLjM4TDY4Ljc5LDI2LjQ3eiBNNjguNTksMjYuMThjLTAuMDYsMC0wLjExLDAuMDEtMC4xNywwLjAxaC0wLjI3di0wLjU2aDAuMjdjMC4wNiwwLDAuMTEsMCwwLjE3LDBjMC4wNiwwLDAuMTEsMC4wMSwwLjE1LDAuMDMKCQljMC4wNSwwLjAyLDAuMDgsMC4wNSwwLjExLDAuMDhjMC4wMywwLjA0LDAuMDQsMC4wOSwwLjA0LDAuMTVzLTAuMDEsMC4xMi0wLjA0LDAuMTVjLTAuMDMsMC4wNC0wLjA2LDAuMDctMC4xMSwwLjA4CgkJQzY4LjcsMjYuMTYsNjguNjUsMjYuMTcsNjguNTksMjYuMTh6Ii8+CjwvZz4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - namespaces
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - deployments/finalizers
          verbs:
          - '*'
        - apiGroups:
          - config.openshift.io
          resources:
          - infrastructures
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ethernet.intel.com
          resources:
          - ethernetclusterconfigs
          - ethernetnodeconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ethernet.intel.com
          resources:
          - ethernetclusterconfigs/finalizers
          - ethernetnodeconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - ethernet.intel.com
          resources:
          - ethernetclusterconfigs/status
          - ethernetnodeconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - clusterflowconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - clusterflowconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - clusterflowconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - flowconfignodeagentdeployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - flowconfignodeagentdeployments/finalizers
          verbs:
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - flowconfignodeagentdeployments/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - nodeflowconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - nodeflowconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - nodeflowconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - flowconfig.intel.com
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - machineconfiguration.openshift.io
          resources:
          - machineconfigs
          verbs:
          - create
          - get
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: intel-ethernet-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: intel-ethernet-operator-controller-manager
        spec:
          replicas: 2
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                env:
                - name: ETHERNET_NODE_LABEL
                  value: ethernet.intel.com/intel-ethernet-present
                - name: ETHERNET_NODE_LABELER_IMAGE
                  value: docker.io/intel/intel-ethernet-operator-labeler:2.0.0
                - name: ETHERNET_DAEMON_IMAGE
                  value: docker.io/intel/intel-ethernet-operator-daemon:2.0.0
                - name: ETHERNET_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ENABLE_WEBHOOK_MTLS
                  valueFrom:
                    configMapKeyRef:
                      key: enable-webhook-mtls
                      name: webhook-config
                      optional: true
                image: docker.io/intel/intel-ethernet-operator-manager:2.0.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 200Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - all
                  readOnlyRootFilesystem: true
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
                - mountPath: /etc/ieo-webhook/pki/
                  name: webhook-ca
              serviceAccountName: intel-ethernet-operator-controller-manager
              terminationGracePeriodSeconds: 10
              topologySpreadConstraints:
              - labelSelector:
                  matchLabels:
                    control-plane: controller-manager
                maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: ScheduleAnyway
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
              - name: webhook-ca
                secret:
                  optional: true
                  secretName: webhook-client-ca
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: intel-ethernet-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - CLV
  - E810
  - DDP
  - Firmware
  - Update
  links:
    - name: Documentation
      url: https://github.com/intel/intel-ethernet-operator/blob/v23.08-operatorhub/docs/intel-ethernet-operator.md
    - name: Release Notes
      url: https://github.com/intel/intel-ethernet-operator/blob/v23.08-operatorhub/docs/intel-ethernet-operator-release-notes.md
  maintainers:
    - email: gershon.schatzberg@intel.com
      name: Gershon Schatzberg
    - email: rafalx.lal@intel.com
      name: Rafal Lal
    - email: emma.kenny@intel.com
      name: Emma Kenny
    - email: kevin.clarke@intel.com
      name: Kevin Clarke
  maturity: stable
  minKubeVersion: 1.21.0
  provider:
    name: Intel Corporation
    url: https://www.intel.com/content/www/us/en/products/details/ethernet/800-controllers/e810-controllers/docs.html
  version: 2.0.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: intel-ethernet-operator-controller-manager
    failurePolicy: Fail
    generateName: vclusterflowconfig.kb.io
    rules:
    - apiGroups:
      - flowconfig.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - clusterflowconfigs
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-flowconfig-intel-com-v1-clusterflowconfig
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: intel-ethernet-operator-controller-manager
    failurePolicy: Fail
    generateName: vnodeflowconfig.kb.io
    rules:
    - apiGroups:
      - flowconfig.intel.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - nodeflowconfigs
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-flowconfig-intel-com-v1-nodeflowconfig
