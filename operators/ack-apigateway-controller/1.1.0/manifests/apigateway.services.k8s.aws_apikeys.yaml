apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: apikeys.apigateway.services.k8s.aws
spec:
  group: apigateway.services.k8s.aws
  names:
    kind: APIKey
    listKind: APIKeyList
    plural: apikeys
    singular: apikey
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: APIKey is the Schema for the APIKeys API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ApiKeySpec defines the desired state of ApiKey.

              A resource that can be distributed to callers for executing Method resources
              that require an API key. API keys can be mapped to any Stage on any RestApi,
              which indicates that the callers with the API key can make requests to that
              stage.
            properties:
              customerID:
                description: |-
                  An Amazon Web Services Marketplace customer identifier, when integrating
                  with the Amazon Web Services SaaS Marketplace.
                type: string
              description:
                description: The description of the ApiKey.
                type: string
              enabled:
                description: Specifies whether the ApiKey can be used by callers.
                type: boolean
              generateDistinctID:
                description: |-
                  Specifies whether (true) or not (false) the key identifier is distinct from
                  the created API key value. This parameter is deprecated and should not be
                  used.
                type: boolean
              name:
                description: The name of the ApiKey.
                type: string
              stageKeys:
                description: DEPRECATED FOR USAGE PLANS - Specifies stages associated
                  with the API key.
                items:
                  description: A reference to a unique stage identified in the format
                    {restApiId}/{stage}.
                  properties:
                    restAPIID:
                      type: string
                    stageName:
                      type: string
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                description: |-
                  The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
                  The tag key can be up to 128 characters and must not start with aws:. The
                  tag value can be up to 256 characters.
                type: object
              value:
                description: Specifies a value of the API key.
                properties:
                  key:
                    description: Key is the key within the secret
                    type: string
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
            required:
            - name
            type: object
          status:
            description: APIKeyStatus defines the observed state of APIKey
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdDate:
                description: The timestamp when the API Key was created.
                format: date-time
                type: string
              id:
                description: The identifier of the API Key.
                type: string
              lastUpdatedDate:
                description: The timestamp when the API Key was last updated.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
