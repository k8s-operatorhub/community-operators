apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    capabilities: Basic Install
    categories: "Security"
    description: Trivy Operator for scheduled image scans and an Admission Control.
    repository: https://github.com/devopstales/trivy-operator
    certified: "false"
    createdAt: '2022-02-04T16:00:00Z'
    containerImage: devopstales/trivy-operator:2.3
    alm-examples: |-
      [
        {
          "apiVersion": "trivy-operator.devopstales.io/v1",
          "kind": "NamespaceScanner",
          "metadata": {
            "name": "trivy-operator-main-config"
          },
          "spec": {
            "crontab": "*/5 * * * *",
            "namespace_selector": "trivy-scan",
            "clusterWide": "False",
            "registry": [
              {
                "name": "docker.io",
                "user": "",
                "password": ""
              }
            ]
          }
        }
      ]
  name: community-trivy-operator.v2.3.0
  namespace: trivy-operator
spec:
  customresourcedefinitions:
    owned:
    - description: Confifuration for trivy-operator.
      displayName: NamespaceScanner
      kind: NamespaceScanner
      name: namespace-scanners.trivy-operator.devopstales.io
      resources:
      - kind: Service
        version: v1
      - kind: Deployment
        version: apps/v1
      specDescriptors:
      - description: Schedule scans of namespaces.
        displayName: Crontab
        path: crontab
      - description: Name of the label to select scannable namespaces.
        displayName: Namespace Selector
        path: namespace_selector
      - description: Specifies how to authenticate to specific registries.
        displayName: Registry
        path: registry
      version: v1
  description: |
    Trivy Operator for scheduled image scans and an Admission Control.

    ### Add Github token to extend your Github API Rate Limit
    The Operator use Github to download Trivy database. If your Github API Rate Limit Exceeded add your Github token to the operator deployment as GITHUB_TOKEN variable.

    ```yaml
    ...
    env:
    - name: GITHUB_TOKEN
      value: "githubToken"
    ```

    ### Scheduled Image scans
    Default every 5 minutes execute a scan script. It will get image list from all namespaces with the label `trivy-scan=true`, and then scan this images with trivy, finally we will get metrics on `http://[pod-ip]:9115/metrics`

    ### Trivy Image Validator
    The admission controller function can be configured as a ValidatingWebhook in a k8s cluster. Kubernetes will send requests to the admission server when a Pod creation is initiated. The admission controller checks the image using trivy if it is in a namespace with the label `trivy-operator-validation=true`.

    ### Persist Trivy database cache
    To Persist Trivy cache you need to create a pvc and mount to the Deployment under `/home/trivy-operator/trivy-cache`

    ```yaml
    ...
      volumeMounts:
      - name: cache
        mountPath: "/home/trivy-operator/trivy-cache"
    volumes:
    - name: cache
      persistentVolumeClaim:
        claimName: trivy-cache
    ```

    ### Usage
    ```bash
    kubectl label namespaces test-apps trivy-scan=true
    # or
    kubectl label namespaces test-apps trivy-operator-validation=true
    ```

    You can define policy to the Admission Controller, by adding annotation to the pod trough the deployment:

    ```bash
    spec:
      ...
      template:
        metadata:
          annotations:
            trivy.security.devopstales.io/medium: "5"
            trivy.security.devopstales.io/low: "10"
            trivy.security.devopstales.io/critical: "2"
    ...
    ```

    ```bash
    curl -s http://10.43.179.39:9115/metrics | grep so_vulnerabilities

    # HELP so_vulnerabilities Container vulnerabilities
    # TYPE so_vulnerabilities gauge
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:1.18",severity="UNKNOWN"} 0
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:1.18",severity="LOW"} 23
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:1.18",severity="MEDIUM"} 93
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:1.18",severity="HIGH"} 76
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:1.18",severity="CRITICAL"} 25
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:latest",severity="UNKNOWN"} 0
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:latest",severity="LOW"} 23
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:latest",severity="MEDIUM"} 88
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:latest",severity="HIGH"} 60
    so_vulnerabilities{exported_namespace="trivytest",image="docker.io/library/nginx:latest",severity="CRITICAL"} 8
    ```

    ```bash
    curl -s http://10.43.179.39:9115/metrics | grep ac_vulnerabilities

    # HELP ac_vulnerabilities Admission Controller vulnerabilities
    # TYPE ac_vulnerabilities gauge
    ac_vulnerabilities{exported_namespace="trivytest",image="nginxinc/nginx-unprivileged:latest",severity="UNKNOWN"} 0.0
    ac_vulnerabilities{exported_namespace="trivytest",image="nginxinc/nginx-unprivileged:latest",severity="LOW"} 83.0
    ac_vulnerabilities{exported_namespace="trivytest",image="nginxinc/nginx-unprivileged:latest",severity="MEDIUM"} 6.0
    ac_vulnerabilities{exported_namespace="trivytest",image="nginxinc/nginx-unprivileged:latest",severity="HIGH"} 6.0
    ac_vulnerabilities{exported_namespace="trivytest",image="nginxinc/nginx-unprivileged:latest",severity="CRITICAL"} 4.0
    ```
  displayName: Community Trivy Operator
  minKubeVersion: "1.19.0"
  icon:
  - base64data: ""
    mediatype: image/png
  keywords:
  - trivy
  - security
  links:
  - name: Documentation
    url: https://github.com/devopstales/trivy-operator
  - name: Blog
    url: https://devopstales.github.io
  maintainers:
  - email: devopstales@protonmail.com
    name: devopstales
  maturity: stable
  provider:
    name: devopstales
    url: devopstales.github.io
  version: 2.3.0
  replaces: community-trivy-operator.v2.2.0
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
            - "apiextensions.k8s.io"
          resources:
            - "customresourcedefinitions"
          verbs: 
            - "create"
        - apiGroups:
          - "trivy-operator.devopstales.io"
          resources:
          - namespace-scanners
          - namespace-scanners/status
          verbs:
          - get
          - watch
          - list
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - get
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - pods
          - namespaces
          verbs:
          - get
          - watch
          - list
        - apiGroups:
          - "admissionregistration.k8s.io"
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - create
          - patch
          - get
          - watch
          - list
        serviceAccountName: trivy-operator
      services:
      - name: trivy-operator
        spec:
          selector:
            app: trivy-operator
          ports:
            - name: metric
              port: 9115
              protocol: TCP
              targetPort: 9115
      - name: trivy-image-validator
        spec:
          selector:
            app: trivy-operator
          ports:
            - name: webhook
              targetPort: 8443
              protocol: TCP
              port: 443
      deployments:
      - name: trivy-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: trivy-operator
          template:
            metadata:
              labels:
                app: trivy-operator
              annotations:
                prometheus.io/port: "9115"
                prometheus.io/scrape: "true"
            spec:
              imagePullSecrets:
              securityContext:
                fsGroup: 10001
                fsGroupChangePolicy: "OnRootMismatch"
              serviceAccountName: trivy-operator
              containers:
              - name: trivy-operator
                image: "devopstales/trivy-operator:2.3"
                imagePullPolicy: Always
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                ports:
                  - name: metric
                    containerPort: 9115
                    protocol: TCP
                  - name: https
                    containerPort: 8443
                    protocol: TCP
