apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: authorizers.apigateway.services.k8s.aws
spec:
  group: apigateway.services.k8s.aws
  names:
    kind: Authorizer
    listKind: AuthorizerList
    plural: authorizers
    singular: authorizer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Authorizer is the Schema for the Authorizers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AuthorizerSpec defines the desired state of Authorizer.

              Represents an authorization layer for methods. If enabled on a method, API
              Gateway will activate the authorizer when a client calls the method.
            properties:
              authType:
                description: |-
                  Optional customer-defined field, used in OpenAPI imports and exports without
                  functional impact.
                type: string
              authorizerCredentials:
                description: |-
                  Specifies the required credentials as an IAM role for API Gateway to invoke
                  the authorizer. To specify an IAM role for API Gateway to assume, use the
                  role's Amazon Resource Name (ARN). To use resource-based permissions on the
                  Lambda function, specify null.
                type: string
              authorizerResultTTLInSeconds:
                description: |-
                  The TTL in seconds of cached authorizer results. If it equals 0, authorization
                  caching is disabled. If it is greater than 0, API Gateway will cache authorizer
                  responses. If this field is not set, the default value is 300. The maximum
                  value is 3600, or 1 hour.
                format: int64
                type: integer
              authorizerURI:
                description: |-
                  Specifies the authorizer's Uniform Resource Identifier (URI). For TOKEN or
                  REQUEST authorizers, this must be a well-formed Lambda function URI, for
                  example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
                  In general, the URI has this form arn:aws:apigateway:{region}:lambda:path/{service_api},
                  where {region} is the same as the region hosting the Lambda function, path
                  indicates that the remaining substring in the URI should be treated as the
                  path to the resource, including the initial /. For Lambda functions, this
                  is usually of the form /2015-03-31/functions/[FunctionARN]/invocations.
                type: string
              identitySource:
                description: |-
                  The identity source for which authorization is requested. For a TOKEN or
                  COGNITO_USER_POOLS authorizer, this is required and specifies the request
                  header mapping expression for the custom header holding the authorization
                  token submitted by the client. For example, if the token header name is Auth,
                  the header mapping expression is method.request.header.Auth. For the REQUEST
                  authorizer, this is required when authorization caching is enabled. The value
                  is a comma-separated string of one or more mapping expressions of the specified
                  request parameters. For example, if an Auth header, a Name query string parameter
                  are defined as identity sources, this value is method.request.header.Auth,
                  method.request.querystring.Name. These parameters will be used to derive
                  the authorization caching key and to perform runtime validation of the REQUEST
                  authorizer by verifying all of the identity-related request parameters are
                  present, not null and non-empty. Only when this is true does the authorizer
                  invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized
                  response without calling the Lambda function. The valid value is a string
                  of comma-separated mapping expressions of the specified request parameters.
                  When the authorization caching is not enabled, this property is optional.
                type: string
              identityValidationExpression:
                description: |-
                  A validation expression for the incoming identity token. For TOKEN authorizers,
                  this value is a regular expression. For COGNITO_USER_POOLS authorizers, API
                  Gateway will match the aud field of the incoming token from the client against
                  the specified regular expression. It will invoke the authorizer's Lambda
                  function when there is a match. Otherwise, it will return a 401 Unauthorized
                  response without calling the Lambda function. The validation expression does
                  not apply to the REQUEST authorizer.
                type: string
              name:
                description: The name of the authorizer.
                type: string
              providerARNs:
                description: |-
                  A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
                  Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.
                  For a TOKEN or REQUEST authorizer, this is not defined.
                items:
                  type: string
                type: array
              restAPIID:
                description: The string identifier of the associated RestApi.
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              restAPIRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              type:
                description: |-
                  The authorizer type. Valid values are TOKEN for a Lambda function using a
                  single authorization token submitted in a custom header, REQUEST for a Lambda
                  function using incoming request parameters, and COGNITO_USER_POOLS for using
                  an Amazon Cognito user pool.
                type: string
            required:
            - name
            - type
            type: object
          status:
            description: AuthorizerStatus defines the observed state of Authorizer
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              id:
                description: The identifier for the authorizer resource.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
