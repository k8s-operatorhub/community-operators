apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "config.nri/v1alpha1",
          "kind": "BalloonsPolicy",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "allocatorTopologyBalancing": true,
            "balloonTypes": [
              {
                "allocatorPriority": "normal",
                "minCPUs": 1,
                "name": "default",
                "namespaces": [
                  "default"
                ],
                "shareIdleCPUsInSame": "system"
              }
            ],
            "idleCPUClass": "normal",
            "log": {
              "debug": [
                "policy"
              ]
            },
            "pinCPU": true,
            "pinMemory": true,
            "reservedPoolNamespaces": [
              "kube-system"
            ],
            "reservedResources": {
              "cpu": "750m"
            }
          }
        },
        {
          "apiVersion": "config.nri/v1alpha1",
          "kind": "NriPluginDeployment",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "nri-plugins-operator",
              "app.kubernetes.io/instance": "nriplugindeployment-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "nriplugindeployment",
              "app.kubernetes.io/part-of": "nri-plugins-operator"
            },
            "name": "nriplugindeployment-sample",
            "namespace": "kube-system"
          },
          "spec": {
            "pluginName": "topology-aware",
            "pluginVersion": "v0.2.3",
            "state": "present",
            "values": {
              "nri": {
                "runtime": {
                  "patchConfig": true
                }
              }
            }
          }
        },
        {
          "apiVersion": "config.nri/v1alpha1",
          "kind": "TemplatePolicy",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "instrumentation": {
              "reportPeriod": "60s",
              "samplingRatePerMillion": 1000000
            },
            "log": {
              "klog": {
                "skip_headers": true
              },
              "source": true
            },
            "reservedResources": {
              "cpu": "750m"
            }
          }
        },
        {
          "apiVersion": "config.nri/v1alpha1",
          "kind": "TopologyAwarePolicy",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "colocateNamespaces": false,
            "colocatePods": true,
            "instrumentation": {
              "reportPeriod": "60s",
              "samplingRatePerMillion": 1000000
            },
            "log": {
              "klog": {
                "skip_headers": true
              },
              "source": true
            },
            "pinCPU": true,
            "pinMemory": true,
            "preferIsolatedCPUs": true,
            "preferSharedCPUs": false,
            "reservedPoolNamespaces": [
              "special-namespace",
              "extra-reserved-namespace"
            ],
            "reservedResources": {
              "cpu": "750m"
            }
          }
        },
        {
          "apiVersion": "topology.node.k8s.io/v1alpha1",
          "kind": "NodeResourceTopology",
          "metadata": {
            "name": "node1"
          },
          "topologyPolicies": [
            "SingleNUMANode"
          ],
          "zones": [
            {
              "name": "node-0",
              "resources": [
                {
                  "allocatable": 15,
                  "available": 10,
                  "capacity": 20,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-1",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 6,
                  "available": 6,
                  "capacity": 6,
                  "name": "vendor/nic2"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-2",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-3",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            }
          ]
        },
        {
          "apiVersion": "topology.node.k8s.io/v1alpha2",
          "kind": "NodeResourceTopology",
          "metadata": {
            "name": "node1"
          },
          "topologyPolicies": [
            "SingleNUMANode"
          ],
          "zones": [
            {
              "name": "node-0",
              "resources": [
                {
                  "allocatable": 15,
                  "available": 10,
                  "capacity": 20,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-1",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 6,
                  "available": 6,
                  "capacity": 6,
                  "name": "vendor/nic2"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-2",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            },
            {
              "name": "node-3",
              "resources": [
                {
                  "allocatable": 25,
                  "available": 15,
                  "capacity": 30,
                  "name": "cpu"
                },
                {
                  "allocatable": 3,
                  "available": 3,
                  "capacity": 3,
                  "name": "vendor/nic1"
                }
              ],
              "type": "Node"
            }
          ]
        }
      ]
    capabilities: Basic Install
    categories: OpenShift Optional
    certified: "false"
    containerImage: ghcr.io/containers/nri-plugins/nri-plugins-operator:v0.7.0
    createdAt: "2024-07-03T09:07:20Z"
    description: An operator that installs Node Resource Interface reference plugins.
    operators.operatorframework.io/builder: operator-sdk-v1.32.0
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
    repository: https://github.com/containers/nri-plugins-operator
    support: "false"
  name: nri-plugins-operator.v0.7.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: BalloonsPolicy represents the configuration for the balloons policy
      displayName: Balloons Policy
      kind: BalloonsPolicy
      name: balloonspolicies.config.nri
      version: v1alpha1
    - description: Describes node resources and their topology
      displayName: Node Resource Topology (v1alpha1)
      kind: NodeResourceTopology
      name: noderesourcetopologies.topology.node.k8s.io
      version: v1alpha1
    - description: Describes node resources and their topology
      displayName: Node Resource Topology (v1alpha2)
      kind: NodeResourceTopology
      name: noderesourcetopologies.topology.node.k8s.io
      version: v1alpha2
    - description: Represents the deployment of NRI plugin
      displayName: NRI Plugin Deployment
      kind: NriPluginDeployment
      name: nriplugindeployments.config.nri
      version: v1alpha1
    - description: TemplatePolicy represents the configuration for the template policy.
      displayName: Template Policy
      kind: TemplatePolicy
      name: templatepolicies.config.nri
      version: v1alpha1
    - description: TopologyAwarePolicy represents the configuration for the topology-aware
        policy.
      displayName: Topology Aware Policy
      kind: TopologyAwarePolicy
      name: topologyawarepolicies.config.nri
      version: v1alpha1
  description: |-
    The **nri-plugins-operator** deploys community maintained [nri-plugins](https://github.com/containers/nri-plugins) into a Kubernetes cluster.

    # Node Resource Interface
    NRI allows plugging domain- or vendor-specific custom logic into OCI- compatible runtimes. This logic can make controlled changes to containers or perform extra actions outside the scope of OCI at certain points in a containers lifecycle. This can be used, for instance, for improved allocation and management of devices and other container resources.

    For more info, visit [https://github.com/containerd/nri](https://github.com/containerd/nri)

    # Node Resource Interface reference plugins

    The NRI plugins is a collection of Node Resource Interface based plugins to manage various aspects of pod and container life cycle. For example the resource policy plugins can be used to modify the container resource allocation depending on available system resources.

    For more info, visit [https://github.com/containers/nri-plugins](https://github.com/containers/nri-plugins)

    # License

    nri-plugins-operator is distributed under the
    [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt).
  displayName: NRI-Plugins-Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNTguNTEgMjU4LjUxIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2QxZDFkMTt9LmNscy0ye2ZpbGw6IzhkOGQ4Zjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPkFzc2V0IDQ8L3RpdGxlPjxnIGlkPSJMYXllcl8yIiBkYXRhLW5hbWU9IkxheWVyIDIiPjxnIGlkPSJMYXllcl8xLTIiIGRhdGEtbmFtZT0iTGF5ZXIgMSI+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTI5LjI1LDIwQTEwOS4xLDEwOS4xLDAsMCwxLDIwNi40LDIwNi40LDEwOS4xLDEwOS4xLDAsMSwxLDUyLjExLDUyLjExLDEwOC40NSwxMDguNDUsMCwwLDEsMTI5LjI1LDIwbTAtMjBoMEM1OC4xNiwwLDAsNTguMTYsMCwxMjkuMjVIMGMwLDcxLjA5LDU4LjE2LDEyOS4yNiwxMjkuMjUsMTI5LjI2aDBjNzEuMDksMCwxMjkuMjYtNTguMTcsMTI5LjI2LTEyOS4yNmgwQzI1OC41MSw1OC4xNiwyMDAuMzQsMCwxMjkuMjUsMFoiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0xNzcuNTQsMTAzLjQxSDE0MS42NkwxNTQuOSw2NS43NmMxLjI1LTQuNC0yLjMzLTguNzYtNy4yMS04Ljc2SDEwMi45M2E3LjMyLDcuMzIsMCwwLDAtNy40LDZsLTEwLDY5LjYxYy0uNTksNC4xNywyLjg5LDcuODksNy40LDcuODloMzYuOUwxMTUuNTUsMTk3Yy0xLjEyLDQuNDEsMi40OCw4LjU1LDcuMjQsOC41NWE3LjU4LDcuNTgsMCwwLDAsNi40Ny0zLjQ4TDE4NCwxMTMuODVDMTg2Ljg2LDEwOS4yNCwxODMuMjksMTAzLjQxLDE3Ny41NCwxMDMuNDFaIi8+PC9nPjwvZz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - config.nri
          resources:
          - nriplugindeployments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - config.nri
          resources:
          - nriplugindeployments/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - topology.node.k8s.io
          resources:
          - noderesourcetopologies
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          - apps
          - ""
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          - daemonsets
          - configmaps
          - serviceaccounts
          - namespaces
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: nri-plugins-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: nri-plugins-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: nri-plugins-operator
          control-plane: controller-manager
        name: nri-plugins-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:6789
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=nri-plugins-operator
                env:
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: ghcr.io/containers/nri-plugins/nri-plugins-operator:v0.7.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 6789
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 6789
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 768Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: nri-plugins-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: nri-plugins-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - nri-plugins
  - nri
  - cri-o
  - containerd
  - kubernetes
  - performance
  links:
  - name: NRI-Plugins
    url: https://github.com/containers/nri-plugins
  - name: NRI
    url: https://github.com/containers/nri
  maintainers:
  - email: feruzjon.muyassarov@intel.com
    name: nri-plugins project maintainers
  maturity: alpha
  minKubeVersion: 1.27.0
  provider:
    name: nri-plugins project owners
    url: https://github.com/containers/nri-plugins
  version: 0.7.0
