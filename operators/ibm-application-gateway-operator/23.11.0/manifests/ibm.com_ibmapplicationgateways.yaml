apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: ibm-application-gateway-operator-system/ibm-application-gateway-operator-iag-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: ibmapplicationgateways.ibm.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: ibm-application-gateway-operator-webhook-service
          namespace: ibm-application-gateway-operator-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: ibm.com
  names:
    kind: IBMApplicationGateway
    listKind: IBMApplicationGatewayList
    plural: ibmapplicationgateways
    singular: ibmapplicationgateway
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: IBMApplicationGateway is the Schema for the ibmapplicationgateways
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMApplicationGatewaySpec defines the desired state of IBMApplicationGateway
            properties:
              configuration:
                description: The configuration information associated with the deployed
                  container.
                items:
                  properties:
                    dataKey:
                      description: The name of the ConfigMap key which contains the
                        configuration data. Used when the type is configmap.
                      type: string
                    discoveryEndpoint:
                      description: The OIDC discovery endpoint.  Used when type is
                        oidc_registration.
                      type: string
                    headers:
                      description: Any headers which are associated with the request
                        which is sent to retrieve configuration data.  Used when type
                        is web.
                      items:
                        properties:
                          name:
                            description: The name of the header which is being generated.
                            type: string
                          secretKey:
                            description: The name of the field within the secret which
                              contains the value of the header.
                            type: string
                          type:
                            description: The type of data which is provided for the
                              header.  Valid values are either secret or literal.
                            type: string
                          value:
                            description: The value of the header which is being added.  If
                              a literal header type is provided this field contains
                              the actual value of the header.  If a secret header
                              type is provided this field contains the name of the
                              secret.
                            type: string
                        required:
                        - name
                        - type
                        - value
                        type: object
                      type: array
                    name:
                      description: The name of the configuration map to be used, when
                        the type is configmap.
                      type: string
                    postData:
                      description: The POST data which is submitted as a part of the
                        OIDC registration flow.  Used when type is oidc_registration.
                      items:
                        properties:
                          name:
                            description: The name of the post data.
                            type: string
                          value:
                            description: The value of the post data.
                            type: string
                          values:
                            description: An array of strings which will be used as
                              the value of the post data.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                    secret:
                      description: The name of the secret which contains the credential
                        information.  Used when type is oidc_registration.
                      type: string
                    type:
                      description: 'The type of configuration data which is being
                        provided.  Valid types include: configmap, oidc_registration,
                        web, literal.'
                      type: string
                    url:
                      description: The URL which is used to retrieve the configuration
                        data.  Used when the type is web.
                      type: string
                    value:
                      description: The literal configuration data.  Used when type
                        is literal.
                      type: string
                  required:
                  - type
                  type: object
                type: array
              deployment:
                description: Specification of the desired behavior of the Deployment.
                properties:
                  generatedConfigmapSuffix:
                    description: A suffix which will be appended to the ConfigMap's
                      which are created by the operator.
                    type: string
                  image:
                    description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                    type: string
                  imagePullPolicy:
                    description: 'Image pull policy. One of Always, Never, IfNotPresent.
                      Defaults to Always if :latest tag is specified, or IfNotPresent
                      otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                    type: string
                  imagePullSecrets:
                    description: 'ImagePullSecrets is an optional list of references
                      to secrets in the same namespace to use for pulling any of the
                      images used by this PodSpec. If specified, these secrets will
                      be passed to individual puller implementations for them to use.
                      For example, in the case of docker, only DockerConfig type secrets
                      are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  lang:
                    default: C
                    description: The language in which log messages from the container
                      will be generated.
                    type: string
                  livenessProbe:
                    description: Periodic probe of container liveness. Container will
                      be restarted if the probe fails. Cannot be updated.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        type: string
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1.
                        format: int32
                        type: integer
                    type: object
                  readinessProbe:
                    description: Periodic probe of container service readiness. Container
                      will be removed from service endpoints if the probe fails. Cannot
                      be updated.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        type: string
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1.
                        format: int32
                        type: integer
                    type: object
                  serviceAccountName:
                    description: 'ServiceAccountName is the name of the ServiceAccount
                      to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                    type: string
                required:
                - image
                type: object
              replicas:
                description: Replicas is the number of desired replicas. This is a
                  pointer to distinguish between explicit zero and unspecified. Defaults
                  to 1.
                format: int32
                type: integer
            required:
            - configuration
            - deployment
            type: object
          status:
            description: IBMApplicationGatewayStatus defines the observed state of
              IBMApplicationGateway
            properties:
              status:
                default: true
                description: A boolean which is used to signify whether the resource
                  has been successfully created.
                type: boolean
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
