apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Cache",
          "metadata": {
            "name": "cache-sample"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "CronHotBackup",
          "metadata": {
            "name": "cronhotbackup-sample"
          },
          "spec": {
            "hotBackupTemplate": {
              "metadata": {
                "labels": {
                  "cron-hotbackup": "true"
                }
              },
              "spec": {
                "hazelcastResourceName": "hazelcast"
              }
            },
            "schedule": "*/30 * * * *"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecretName": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast-sample"
          },
          "spec": {
            "clusterSize": 3,
            "jet": {
              "bucketConfig": {
                "bucketURI": "gs://operator-user-code/jetJobs",
                "secretName": "br-secret-gcp"
              },
              "enabled": true,
              "resourceUploadEnabled": true
            },
            "licenseKeySecretName": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.3.5"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "JetJob",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "hazelcast-platform-operator",
              "app.kubernetes.io/instance": "jetjob-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "jetjob",
              "app.kubernetes.io/part-of": "hazelcast-platform-operator"
            },
            "name": "jet-job-longrun"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast",
            "jarName": "jet-pipeline-longrun-2.0.0.jar",
            "name": "jet-job-longrun",
            "state": "Running"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "JetJob",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "hazelcast-platform-operator",
              "app.kubernetes.io/instance": "jetjob-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "jetjob",
              "app.kubernetes.io/part-of": "hazelcast-platform-operator"
            },
            "name": "jet-job-sample"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast",
            "jarName": "jet-pipeline-1.0.2.jar",
            "name": "my-test-jet-job",
            "state": "Running"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "JetJobSnapshot",
          "metadata": {
            "name": "jetjobsnapshot-sample"
          },
          "spec": {
            "cancelJob": false,
            "jetJobResourceName": "jet-job",
            "name": "snapshot"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecretName": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "MultiMap",
          "metadata": {
            "name": "multimap-sample"
          },
          "spec": {
            "backupCount": 3,
            "binary": true,
            "collectionType": "LIST",
            "hazelcastResourceName": "hazelcast",
            "name": "multi-map"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Queue",
          "metadata": {
            "name": "queue-sample"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "ReplicatedMap",
          "metadata": {
            "name": "replicatedmap-sample"
          },
          "spec": {
            "asyncFillup": true,
            "hazelcastResourceName": "hazelcast",
            "inMemoryFormat": "OBJECT",
            "name": "replicated-map"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "Topic",
          "metadata": {
            "name": "topic-sample"
          },
          "spec": {
            "globalOrderingEnabled": true,
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "apiVersion": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "resources": [
              {
                "kind": "Map",
                "name": "map-sample"
              },
              {
                "kind": "Hazelcast",
                "name": "hz-sample"
              }
            ],
            "targetClusterName": "dev"
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Database
    containerImage: docker.io/hazelcast/hazelcast-platform-operator@sha256:919776c1f82eff76a2407896a1b8603a002e90641de58751d26e15862f36e55a
    createdAt: "2023-11-06T11:59:59Z"
    description: Install Hazelcast clusters in Kubernetes environments.
    operators.operatorframework.io/builder: operator-sdk-v1.25.2
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    support: Hazelcast, Inc
  name: hazelcast-platform-operator.v5.10.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Cache is the Schema for the caches API
        displayName: Cache
        kind: Cache
        name: caches.hazelcast.com
        version: v1alpha1
      - description: CronHotBackup is the Schema for the cronhotbackups API
        displayName: Cron Hot Backup
        kind: CronHotBackup
        name: cronhotbackups.hazelcast.com
        version: v1alpha1
      - description: HazelcastEndpoint is the Schema for the hazelcastendpoints API
        displayName: Hazelcast Endpoint
        kind: HazelcastEndpoint
        name: hazelcastendpoints.hazelcast.com
        version: v1alpha1
      - description: Hazelcast is the Schema for the hazelcasts API
        displayName: Hazelcast
        kind: Hazelcast
        name: hazelcasts.hazelcast.com
        version: v1alpha1
      - description: HotBackup is the Schema for the hot backup API
        displayName: Hot Backup
        kind: HotBackup
        name: hotbackups.hazelcast.com
        version: v1alpha1
      - description: JetJob is the Schema for the jetjobs API
        displayName: Jet Job
        kind: JetJob
        name: jetjobs.hazelcast.com
        version: v1alpha1
      - description: JetJobSnapshot is the Schema for the jetjobsnapshots API
        displayName: Jet Job Snapshot
        kind: JetJobSnapshot
        name: jetjobsnapshots.hazelcast.com
        version: v1alpha1
      - description: ManagementCenter is the Schema for the managementcenters API
        displayName: Management Center
        kind: ManagementCenter
        name: managementcenters.hazelcast.com
        version: v1alpha1
      - description: Map is the Schema for the maps API
        displayName: Map
        kind: Map
        name: maps.hazelcast.com
        version: v1alpha1
      - description: MultiMap is the Schema for the multimaps API
        displayName: Multi Map
        kind: MultiMap
        name: multimaps.hazelcast.com
        version: v1alpha1
      - description: Queue is the Schema for the queues API
        displayName: Queue
        kind: Queue
        name: queues.hazelcast.com
        version: v1alpha1
      - description: ReplicatedMap is the Schema for the replicatedmaps API
        displayName: Replicated Map
        kind: ReplicatedMap
        name: replicatedmaps.hazelcast.com
        version: v1alpha1
      - description: Topic is the Schema for the topics API
        displayName: Topic
        kind: Topic
        name: topics.hazelcast.com
        version: v1alpha1
      - description: WanReplication is the Schema for the wanreplications API
        displayName: Wan Replication
        kind: WanReplication
        name: wanreplications.hazelcast.com
        version: v1alpha1
  description: |
    # Hazelcast Platform Operator #

    Easily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.

    ## Before You Start

    If you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).

    For Hazelcast Platform clusters, you can simply continue.

    ## Documentation

    1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator
    2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally)
    3. [Restore a Cluster from Cloud Storage with Hazelcast Platform Operator](https://docs.hazelcast.com/tutorials/hazelcast-platform-operator-external-backup-restore)
    4. [Replicate Data between Two Hazelcast Clusters with Hazelcast Platform Operator](https://docs.hazelcast.com/tutorials/hazelcast-platform-operator-wan-replication)

    ## Features

    Hazelcast Platform Operator supports the features below:

    * Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center
    * Observe status of Hazelcast clusters and Management Center instances
    * High Availability Mode configuration to create clusters that are resilient to node and zone failures
    * Support for TLS connections between members using self-signed certificates
    * Scale up and down Hazelcast clusters
    * Expose Hazelcast cluster to external clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))
    * Backup Hazelcast persistence data to cloud storage with the possibility of scheduling it and restoring the data accordingly
    * WAN Replication feature when you need to synchronize multiple Hazelcast clusters, which are connected by WANs
    * User Code Deployment feature, which allows you to deploy custom and domain classes from cloud storages and URLs to Hazelcast members
    * Support the configuration of advanced networking options
    * Support Multi-namespace configuration
    * ExecutorService and EntryProcessor support
    * Support several data structures like Map, Topic, MultiMap, ReplicatedMap, Queue and Cache which can be created dynamically via specific Custom Resources
    * MapStore, Near Cache and off-heap memory (HD memory and native memory) support for the Map CR
    * Native Memory support for the Cache CR
    * Support Jet configuration and Jet Job submission using the JetJob CR
    * Support for exporting the snapshots of JetJob CRs using JetJobSnapshot CR
    * Support for custom configurations using ConfigMap
  displayName: Hazelcast Platform Operator
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - nodes
              verbs:
                - get
            - apiGroups:
                - admissionregistration.k8s.io
              resources:
                - validatingwebhookconfigurations
              verbs:
                - get
                - list
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - clusterroles
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: hazelcast-platform-controller-manager
      deployments:
        - label:
            control-plane: controller-manager
          name: hazelcast-platform-controller-manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: controller-manager
            strategy: {}
            template:
              metadata:
                labels:
                  control-plane: controller-manager
              spec:
                containers:
                  - args:
                      - --leader-elect=false
                    command:
                      - /manager
                    env:
                      - name: WATCHED_NAMESPACES
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    image: docker.io/hazelcast/hazelcast-platform-operator@sha256:919776c1f82eff76a2407896a1b8603a002e90641de58751d26e15862f36e55a
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    ports:
                      - containerPort: 9443
                        name: webhook-server
                        protocol: TCP
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 200m
                        memory: 300Mi
                      requests:
                        cpu: 100m
                        memory: 100Mi
                    volumeMounts:
                      - mountPath: /tmp/k8s-webhook-server/serving-certs
                        name: cert
                serviceAccountName: hazelcast-platform-controller-manager
                terminationGracePeriodSeconds: 10
                volumes:
                  - emptyDir: {}
                    name: cert
      permissions:
        - rules:
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - get
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - configmaps
                - events
                - pods
                - secrets
                - serviceaccounts
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - endpoints
                - pods
                - services
              verbs:
                - get
                - list
            - apiGroups:
                - ""
              resources:
                - events
                - pods
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - caches
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - caches/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - caches/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - cronhotbackups
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - cronhotbackups/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - cronhotbackups/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcastendpoints
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcastendpoints/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcastendpoints/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcasts
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcasts/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hazelcasts/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hotbackups
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - hotbackups/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - hotbackups/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobs
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobs/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobs/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobsnapshots
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobsnapshots/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - jetjobsnapshots/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - managementcenters
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - managementcenters/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - managementcenters/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - maps
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - maps/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - maps/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - multimaps
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - multimaps/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - multimaps/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - queues
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - queues/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - queues/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - replicatedmaps
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - replicatedmaps/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - replicatedmaps/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - topics
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - topics/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - topics/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - wanreplications
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - hazelcast.com
              resources:
                - wanreplications/finalizers
              verbs:
                - update
            - apiGroups:
                - hazelcast.com
              resources:
                - wanreplications/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
                - roles
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes/custom-host
              verbs:
                - create
            - apiGroups:
                - route.openshift.io
              resources:
                - routes/status
              verbs:
                - get
          serviceAccountName: hazelcast-platform-controller-manager
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - hazelcast
    - keyvalue
    - in-memory
    - database
    - caching
  links:
    - name: Documentation
      url: https://docs.hazelcast.com/operator/latest/
    - name: Source Code
      url: https://github.com/hazelcast/hazelcast-platform-operator
  maintainers:
    - email: cloudnative@hazelcast.com
      name: Hazelcast Cloud Native Team
  maturity: alpha
  minKubeVersion: 1.21.0
  provider:
    name: Hazelcast, Inc
  relatedImages:
    - image: docker.io/hazelcast/hazelcast-platform-operator@sha256:919776c1f82eff76a2407896a1b8603a002e90641de58751d26e15862f36e55a
      name: manager
  version: 5.10.0
  webhookdefinitions:
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Fail
      generateName: vcache.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - caches
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-cache
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vcronhotbackup.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - cronhotbackups
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-cronhotbackup
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vhazelcast.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - hazelcasts
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-hazelcast
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Fail
      generateName: vhazelcastendpoint.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - hazelcastendpoints
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-hazelcastendpoint
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vhotbackup.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - hotbackups
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-hotbackup
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Fail
      generateName: vjetjob.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - jetjobs
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-jetjob
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Fail
      generateName: vjetjobsnapshot.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - jetjobsnapshots
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-jetjobsnapshot
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vmanagementcenter.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - managementcenters
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-managementcenter
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vmap.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - maps
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-map
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vmultimap.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - multimaps
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-multimap
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vqueue.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - queues
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-queue
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Fail
      generateName: vreplicatedmap.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - replicatedmaps
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-replicatedmap
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vtopic.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - topics
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-topic
    - admissionReviewVersions:
        - v1
      containerPort: 443
      deploymentName: hazelcast-platform-controller-manager
      failurePolicy: Ignore
      generateName: vwanreplication.kb.io
      rules:
        - apiGroups:
            - hazelcast.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - wanreplications
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-hazelcast-com-v1alpha1-wanreplication
