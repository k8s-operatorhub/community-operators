apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "repo-manager.pulpproject.org/v1alpha1",
          "kind": "Pulp",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "api": {
              "replicas": 1
            },
            "cache_enabled": true,
            "content": {
              "replicas": 2,
              "resource_requirements": {
                "limits": {
                  "cpu": "800m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "256Mi"
                }
              }
            },
            "file_storage_access_mode": "ReadWriteMany",
            "file_storage_size": "10Gi",
            "ingress_type": "Route",
            "pulp_settings": {
              "allowed_export_paths": [
                "/tmp"
              ],
              "allowed_import_paths": [
                "/tmp"
              ],
              "api_root": "/api/galaxy/pulp/"
            },
            "storage_type": "File",
            "worker": {
              "replicas": 2,
              "resource_requirements": {
                "limits": {
                  "cpu": "800m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "256Mi"
                }
              }
            }
          }
        },
        {
          "apiVersion": "repo-manager.pulpproject.org/v1alpha1",
          "kind": "Pulp",
          "metadata": {
            "name": "galaxy-example"
          },
          "spec": {
            "admin_password_secret": "example-pulp-admin-password",
            "api": {
              "replicas": 1
            },
            "content": {
              "replicas": 1,
              "resource_requirements": {
                "limits": {
                  "cpu": "800m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "256Mi"
                }
              }
            },
            "database": {
              "postgres_storage_class": "standard"
            },
            "deployment_type": "galaxy",
            "file_storage_access_mode": "ReadWriteMany",
            "file_storage_size": "10Gi",
            "file_storage_storage_class": "standard",
            "image": "quay.io/pulp/galaxy-minimal",
            "image_version": "nightly",
            "image_web": "quay.io/pulp/galaxy-web",
            "image_web_version": "nightly",
            "ingress_type": "nodeport",
            "pulp_settings": {
              "allowed_export_paths": [
                "/tmp"
              ],
              "allowed_import_paths": [
                "/tmp"
              ],
              "api_root": "/api/galaxy/pulp/",
              "telemetry": false
            },
            "signing_scripts_configmap": "signing-scripts",
            "signing_secret": "signing-galaxy",
            "storage_type": "File",
            "web": {
              "replicas": 1,
              "resource_requirements": {
                "limits": {
                  "cpu": "800m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                }
              }
            },
            "worker": {
              "replicas": 1,
              "resource_requirements": {
                "limits": {
                  "cpu": "800m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "256Mi"
                }
              }
            }
          }
        },
        {
          "apiVersion": "repo-manager.pulpproject.org/v1alpha1",
          "kind": "PulpBackup",
          "metadata": {
            "name": "galaxybackup-sample"
          },
          "spec": {
            "admin_password_secret": "example-pulp-admin-password",
            "backup_storage_class": "standard",
            "deployment_name": "galaxy-example",
            "deployment_type": "galaxy",
            "instance_name": "pulp",
            "postgres_configuration_secret": "galaxy-example-postgres-configuration"
          }
        },
        {
          "apiVersion": "repo-manager.pulpproject.org/v1alpha1",
          "kind": "PulpRestore",
          "metadata": {
            "name": "ci-pulprestore"
          },
          "spec": {
            "backup_name": "galaxybackup-sample",
            "deployment_name": "galaxy-example"
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Integration & Delivery
    containerImage: quay.io/pulp/pulp-operator:v1.0.0-alpha.4
    createdAt: "2021-03-26 16:57:40"
    description: Ansible Galaxy is Ansible's official hub for sharing Ansible content.
    operators.operatorframework.io/builder: operator-sdk-v1.25.2
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/pulp/pulp-operator
  name: galaxy-operator.v1.0.0-alpha.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: PulpBackup is the Schema for the pulpbackups API
      displayName: Pulp Backup
      kind: PulpBackup
      name: pulpbackups.repo-manager.pulpproject.org
      specDescriptors:
      - description: Secret where the administrator password can be found
        displayName: Admin Password Secret
        path: admin_password_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Name of the PVC to be used for storing the backup
        displayName: Backup PVC
        path: backup_pvc
      - description: Namespace PVC is in
        displayName: Backup PVCNamespace
        path: backup_pvc_namespace
      - description: Storage class to use when creating PVC for backup
        displayName: Backup SC
        path: backup_storage_class
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:StorageClass
      - description: Storage requirements for the backup
        displayName: Backup Storage Req
        path: backup_storage_requirements
      - description: Name of the deployment to be backed up
        displayName: Deployment Name
        path: deployment_name
      - displayName: Deployment Type
        path: deployment_type
      - displayName: Instance Name
        path: instance_name
      - description: Secret where the database configuration can be found
        displayName: Database configuration
        path: postgres_configuration_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Label selector used to identify postgres pod for executing migration
        displayName: Postgres Label Selector
        path: postgres_label_selector
      statusDescriptors:
      - description: Administrator password secret used by the deployed instance
        displayName: Admin Password Secret
        path: adminPasswordSecret
      - description: The PVC name used for the backup
        displayName: Backup Claim
        path: backupClaim
      - description: The directory data is backed up to on the PVC
        displayName: Backup Directory
        path: backupDirectory
      - description: The namespace used for the backup claim
        displayName: Backup Namespace
        path: backupNamespace
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: Container token configuration secret used by the deployed instance
        displayName: Container Token Secret
        path: containerTokenSecret
      - description: Database configuration secret used by the deployed instance
        displayName: Database Config Secret
        path: databaseConfigurationSecret
      - description: DB fields encryption configuration secret used by deployed instance
        displayName: DBFields Encryption Secret
        path: dbFieldsEncryptionSecret
      - description: Name of the deployment backed up
        displayName: Deployment Name
        path: deploymentName
      - description: The deployment storage type
        displayName: Deployment Storage Type
        path: deploymentStorageType
      - description: Objectstorage configuration secret used by the deployed instance
        displayName: Storage Secret
        path: storageSecret
      version: v1alpha1
    - description: PulpRestore is the Schema for the pulprestores API
      displayName: Pulp Restore
      kind: PulpRestore
      name: pulprestores.repo-manager.pulpproject.org
      specDescriptors:
      - description: Backup directory name, set as a status found on the backup object
          (backupDirectory)
        displayName: Backup Dir
        path: backup_dir
      - description: Name of the backup custom resource
        displayName: Backup Name
        path: backup_name
      - description: Name of the PVC to be restored from, set as a status found on
          the backup object (backupClaim)
        displayName: Backup PVC
        path: backup_pvc
      - description: Namespace the PVC is in
        displayName: Backup PVCNamespace
        path: backup_pvc_namespace
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Namespace
      - description: backup source
        displayName: Backup Source
        path: backup_source
      - description: Name of the deployment to be restored to
        displayName: Deployment Name
        path: deployment_name
      - displayName: Deployment Type
        path: deployment_type
      - description: KeepBackupReplicasCount allows to define if the restore controller
          should restore the components with the same number of replicas from backup
          or restore only a single replica each.
        displayName: Keep Backup Replicas Count
        path: keep_replicas
      - description: Label selector used to identify postgres pod for executing migration
        displayName: Postgres Label Selector
        path: postgres_label_selector
      - description: Configuration for the storage type utilized in the backup
        displayName: Storage Type
        path: storage_type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:File
        - urn:alm:descriptor:com.tectonic.ui:select:S3
        - urn:alm:descriptor:com.tectonic.ui:select:Azure
      statusDescriptors:
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - displayName: Postgres Secret
        path: postgres_secret
      version: v1alpha1
    - description: Pulp is the Schema for the pulps API
      displayName: Pulp
      kind: Pulp
      name: pulps.repo-manager.pulpproject.org
      specDescriptors:
      - description: 'Secret where the administrator password can be found. Default:
          <operator''s name> + "-admin-password"'
        displayName: Admin Password Secret
        path: admin_password_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Api defines desired state of pulpcore-api resources
        displayName: Api
        path: api
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: api.affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The timeout for the gunicorn process. Default: 90'
        displayName: Gunicorn Timeout
        path: api.gunicorn_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The number of gunicorn workers to use for the api. Default:
          2'
        displayName: Gunicorn Workers
        path: api.gunicorn_workers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: api.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the Pulp pods.
        displayName: Node Selector
        path: api.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PodDisruptionBudget is an object to define the max disruption
          that can be caused to a collection of pods
        displayName: PDB
        path: api.pdb
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: api.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Size is the size of number of pulp-api replicas. Default: 1'
        displayName: Replicas
        path: api.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Resource requirements for the pulp api container.
        displayName: Resource Requirements
        path: api.resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: The deployment strategy to use to replace existing pods with
          new ones.
        displayName: Strategy
        path: api.strategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Node tolerations for the Pulp pods.
        displayName: Tolerations
        path: api.tolerations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Topology rule(s) for the pods.
        displayName: Topology Spread Constraints
        path: api.topology_spread_constraints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Cache defines desired state of redis resources
        displayName: Cache
        path: cache
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: cache.affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Defines if cache should be enabled. Default: true'
        displayName: Enabled
        path: cache.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Name of the secret with the parameters to connect to an external
          Redis cluster
        displayName: External Cache Secret
        path: cache.external_cache_secret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: cache.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the Pulp pods.
        displayName: Node Selector
        path: cache.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PersistenVolumeClaim name that will be used by Redis pods If
          defined, the PVC must be provisioned by the user and the operator will only
          configure the deployment to use it
        displayName: PVC
        path: cache.pvc
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: cache.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The image name for the redis image. Default: "redis:latest"'
        displayName: Redis Image
        path: cache.redis_image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The port that will be exposed by Redis Service. [default: 6379]'
        displayName: Redis Port
        path: cache.redis_port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Resource requirements for the Redis container
        displayName: Redis Resource Requirements
        path: cache.redis_resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Storage class to use for the Redis PVC
        displayName: Redis Storage Class
        path: cache.redis_storage_class
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:StorageClass
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: The deployment strategy to use to replace existing pods with
          new ones.
        displayName: Strategy
        path: cache.strategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Node tolerations for the Pulp pods.
        displayName: Tolerations
        path: cache.tolerations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Private Key name from `<operator''s name> + "-container-auth-certs"`
          Secret. Default: "container_auth_private_key.pem"'
        displayName: Container Auth Private Key
        path: container_auth_private_key_name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Public Key name from `<operator''s name> + "-container-auth-certs"`
          Secret. Default: "container_auth_public_key.pem"'
        displayName: Container Auth Public Key
        path: container_auth_public_key_name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Secret where the container token certificates are stored. Default:
          <operator''s name> + "-container-auth"'
        displayName: Container Token Secret
        path: container_token_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Content defines desired state of pulpcore-content resources
        displayName: Content
        path: content
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: content.affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The timeout for the gunicorn process. Default: 90'
        displayName: Gunicorn Timeout
        path: content.gunicorn_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The number of gunicorn workers to use for the api. Default:
          2'
        displayName: Gunicorn Workers
        path: content.gunicorn_workers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: content.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the Pulp pods.
        displayName: Node Selector
        path: content.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PodDisruptionBudget is an object to define the max disruption
          that can be caused to a collection of pods
        displayName: PDB
        path: content.pdb
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: content.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Size is the size of number of pulp-content replicas. Default:
          2'
        displayName: Replicas
        path: content.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Resource requirements for the pulp-content container
        displayName: Resource Requirements
        path: content.resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: The deployment strategy to use to replace existing pods with
          new ones.
        displayName: Strategy
        path: content.strategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Node tolerations for the Pulp pods.
        displayName: Tolerations
        path: content.tolerations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Topology rule(s) for the pods.
        displayName: Topology Spread Constraints
        path: content.topology_spread_constraints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Database defines desired state of postgres resources
        displayName: Database
        path: database
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: database.affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Secret name with the configuration to use an external database
        displayName: External DBSecret
        path: database.external_db_secret
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: database.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the database pod.
        displayName: Node Selector
        path: database.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Registry path to the PostgreSQL container to use. Default: "/var/lib/postgresql/data/pgdata"'
        displayName: Postgres Data Path
        path: database.postgres_data_path
      - description: Arguments to pass to postgres process
        displayName: Postgres Extra Args
        path: database.postgres_extra_args
      - description: 'PostgreSQL host authentication method. Default: "scram-sha-256"'
        displayName: Postgres Host Auth Method
        path: database.postgres_host_auth_method
      - description: 'PostgreSQL container image. Default: "postgres:13"'
        displayName: Postgres Image
        path: database.postgres_image
      - description: 'Arguments to pass to PostgreSQL initdb command when creating
          a new cluster. Default: "--auth-host=scram-sha-256"'
        displayName: Postgres Initdb Args
        path: database.postgres_initdb_args
      - description: 'PostgreSQL port. Default: 5432'
        displayName: Postgres Port
        path: database.postgres_port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resource requirements for the database container.
        displayName: Resource Requirements
        path: database.postgres_resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Configure PostgreSQL connection sslmode option. Default: "prefer"'
        displayName: Postgres SSLMode
        path: database.postgres_ssl_mode
      - description: Name of the StorageClass required by the claim.
        displayName: Postgres Storage Class
        path: database.postgres_storage_class
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:StorageClass
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Temporarily modifying it as a string to avoid an issue with backup
          and json.Unmarshal when set as resource.Quantity and no value passed on
          pulp CR, during backup steps json.Unmarshal is settings it with "0"
        displayName: Postgres Storage Requirements
        path: database.postgres_storage_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PersistenVolumeClaim name that will be used by database pods
          If defined, the PVC must be provisioned by the user and the operator will
          only configure the deployment to use it
        displayName: PVC
        path: database.pvc
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: database.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Node tolerations for the database pod.
        displayName: Tolerations
        path: database.tolerations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'PostgreSQL version [default: "13"]'
        displayName: Postgres Version
        path: database.version
      - description: 'Secret where the Fernet symmetric encryption key is stored.
          Default: <operators''s name>-"-db-fields-encryption"'
        displayName: Database encryption
        path: db_fields_encryption_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Name of the deployment type. Default: "pulp"'
        displayName: Deployment Type
        path: deployment_type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: The file storage access mode. This field should be used only
          if file_storage_storage_class is provided
        displayName: File Storage Access Mode
        path: file_storage_access_mode
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:storage_type:File
        - urn:alm:descriptor:com.tectonic.ui:select:ReadWriteMany
      - description: The size of the file storage; for example 100Gi. This field should
          be used only if file_storage_storage_class is provided
        displayName: File Storage Size
        path: file_storage_size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:storage_type:File
      - description: Storage class to use for the file persistentVolumeClaim
        displayName: File Storage Class
        path: file_storage_storage_class
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:storage_type:File
        - urn:alm:descriptor:io.kubernetes:StorageClass
      - description: 'The timeout for HAProxy. Default: "180s"'
        displayName: HAProxy Timeout
        path: haproxy_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The image name (repo name) for the pulp/galaxy image. Default: "quay.io/pulp/galaxy-minimal:4.6.2"'
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Image pull policy for container image. Default: "IfNotPresent"'
        displayName: Image Pull Policy
        path: image_pull_policy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: 'Image pull secrets for container images. Default: []'
        displayName: Image Pull Secrets
        path: image_pull_secrets
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The image version for the pulp/galaxy image. Default: "4.6.2"'
        displayName: Image Version
        path: image_version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'The image name (repo name) for the pulp/galaxy webserver image. Default:
          "quay.io/pulp/galaxy-web"'
        displayName: Image Web
        path: image_web
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: 'The image version for the pulp/galaxy webserver image. Default: "4.6.2"'
        displayName: Image Web Version
        path: image_web_version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Annotations for the Ingress
        displayName: Ingress Annotations
        path: ingress_annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'IngressClassName is used to inform the operator which ingressclass
          should be used to provision the ingress. Default: "" (will use the default
          ingress class)'
        displayName: Ingress Class Name
        path: ingress_class_name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: Ingress DNS host
        displayName: Ingress Host
        path: ingress_host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: Ingress TLS secret
        displayName: Ingress TLSSecret
        path: ingress_tls_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'The ingress type to use to reach the deployed instance. Default:
          none (will not expose the service)'
        displayName: Ingress Type
        path: ingress_type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:Route
        - urn:alm:descriptor:com.tectonic.ui:select:Ingress
        - urn:alm:descriptor:com.tectonic.ui:select:LoadBalancer
        - urn:alm:descriptor:com.tectonic.ui:select:NodePort
      - description: 'Define if the operator should or should not mount the custom
          CA certificates added to the cluster via cluster-wide proxy config. Default:
          false'
        displayName: Trusted Ca
        path: mount_trusted_ca
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: 'The client max body size for Nginx Ingress. Default: "10m"'
        displayName: Nginx Max Body Size
        path: nginx_client_max_body_size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'The proxy body size for Nginx Ingress. Default: "0"'
        displayName: Nginx Proxy Body Size
        path: nginx_proxy_body_size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'The proxy connect timeout for Nginx Ingress. Default: "120s"'
        displayName: Nginx Proxy Connect Timeout
        path: nginx_proxy_connect_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'The proxy read timeout for Nginx Ingress. Default: "120s"'
        displayName: Nginx Proxy Read Timeout
        path: nginx_proxy_read_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: 'The proxy send timeout for Nginx Ingress. Default: "120s"'
        displayName: Nginx Proxy Send Timeout
        path: nginx_proxy_send_timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Ingress
      - description: Provide requested port value
        displayName: Node Port
        path: nodeport_port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:NodePort
      - description: The secret for Azure compliant object storage configuration.
        displayName: Azure secret
        path: object_storage_azure_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:storage_type:Azure
      - description: The secret for S3 compliant object storage configuration.
        displayName: S3 secret
        path: object_storage_s3_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:storage_type:S3
      - description: Definition of /etc/pulp/settings.py config file.
        displayName: Pulp Settings
        path: pulp_settings
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PersistenVolumeClaim name that will be used by Pulp pods. If
          defined, the PVC must be provisioned by the user and the operator will only
          configure the deployment to use it
        displayName: PVC
        path: pvc
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: RouteAnnotations will append custom annotation(s) into routes
          (used by router shard routeSelector).
        displayName: Route Annotations
        path: route_annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Route
      - description: 'Route DNS host. Default: <operator''s name> + "." + ingress.Spec.Domain'
        displayName: Route Host
        path: route_host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Route
      - description: 'RouteLabels will append custom label(s) into routes (used by
          router shard routeSelector). Default: {"pulp_cr": "<operator''s name>",
          "owner": "pulp-dev" }'
        displayName: Route Labels
        path: route_labels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Route
      - description: Name of the secret with the certificates/keys used by route encryption
        displayName: Route TLSSecret
        path: route_tls_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:ingress_type:Route
      - description: 'ConfigMap where the signing scripts are stored. Default: <operators''s
          name>-"-signing-scripts"'
        displayName: Signing Scripts Configmap
        path: signing_scripts_configmap
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Secret where the signing certificates are stored. Default: <operators''s
          name>-"-signing-scripts"'
        displayName: Signing Secret
        path: signing_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Secret where Single Sign-on configuration can be found
        displayName: SSOSecret
        path: sso_secret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Configuration for the storage type utilized in the backup
        displayName: Storage Type
        path: storage_type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:File
        - urn:alm:descriptor:com.tectonic.ui:select:S3
        - urn:alm:descriptor:com.tectonic.ui:select:Azure
      - description: 'Define if the operator should stop managing Pulp resources.
          If set to true, the operator will not execute any task (it will be "disabled").
          Default: false'
        displayName: Unmanaged
        path: unmanaged
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Web defines desired state of pulpcore-web (reverse-proxy) resources
        displayName: Web
        path: web
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: web.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the Web pods.
        displayName: Node Selector
        path: web.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PodDisruptionBudget is an object to define the max disruption
          that can be caused to a collection of pods
        displayName: PDB
        path: web.pdb
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: web.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Size is the size of number of pulp-web replicas. Default: 1'
        displayName: Replicas
        path: web.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Resource requirements for the pulp-web container
        displayName: Resource Requirements
        path: web.resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Worker defines desired state of pulpcore-worker resources
        displayName: Worker
        path: worker
      - description: Affinity is a group of affinity scheduling rules.
        displayName: Affinity
        path: worker.affinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: worker.livenessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: NodeSelector for the Pulp pods.
        displayName: Node Selector
        path: worker.node_selector
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PodDisruptionBudget is an object to define the max disruption
          that can be caused to a collection of pods
        displayName: PDB
        path: worker.pdb
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: worker.readinessProbe
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Probe
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Size is the size of number of pulp-worker replicas. Default:
          2'
        displayName: Replicas
        path: worker.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Resource requirements for the pulp-api container
        displayName: Resource Requirements
        path: worker.resource_requirements
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: The deployment strategy to use to replace existing pods with
          new ones.
        displayName: Strategy
        path: worker.strategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Node tolerations for the Pulp pods.
        displayName: Tolerations
        path: worker.tolerations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Topology rule(s) for the pods.
        displayName: Topology Spread Constraints
        path: worker.topology_spread_constraints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      statusDescriptors:
      - displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
  description: |-
    [Ansible Galaxy](https://galaxy.ansible.com/) is Ansible's official hub for sharing Ansible content.

    Galaxy NG is a [Pulp](https://pulpproject.org/) plugin to support hosting your very own Ansible Galaxy server, this is a brand new take on Ansible Galaxy, so it will look and feel a bit different than the current [galaxy.ansible.com](https://galaxy.ansible.com).

    **Please refer to [Pulp Operator](https://operatorhub.io/operator/pulp-operator)**

    ## Pulp Operator

    Pulp Operator is under active development, with the goal to provide a scalable and robust cluster for Pulp 3.

    Note that Pulp operator works with three different types of service containers (the operator itself, the main service and the web service):

    |           | Operator | Main | Web |
    | --------- | -------- | ---- | --- |
    | **Image** | [pulp-operator](https://quay.io/repository/pulp/pulp-operator?tab=tags) |[pulp-minimal](https://quay.io/repository/pulp/pulp-minimal?tab=tags) | [pulp-web](https://quay.io/repository/pulp/pulp-web?tab=tags) |
    | **Image** | [pulp-operator](https://quay.io/repository/pulp/pulp-operator?tab=tags) |[galaxy-minimal](https://quay.io/repository/pulp/galaxy-minimal?tab=tags) | [galaxy-web](https://quay.io/repository/pulp/galaxy-web?tab=tags) |

    <br>Pulp operator is manually built and [hosted on quay.io](https://quay.io/repository/pulp/pulp-operator). Read more about the container images [here](https://docs.pulpproject.org/pulp_operator/container/).

    <br><br> **Make sure to specify the galaxy images in your CR.**

    ## Custom Resource Definitions
    Pulp Operator currently provides three different kinds of [Custom Resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#custom-resources): Pulp, Pulp Backup and Pulp Restore.
    ### Pulp
    Manages the Pulp application and its deployments, services, etc.
    ### Pulp Backup
    Manages pulp backup.

    ### Pulp Restore
    Manages the restoration of a pulp backup.

    ## Get Help

    Documentation: [https://docs.pulpproject.org/pulp_operator/](https://docs.pulpproject.org/pulp_operator/)

    Issue Tracker: [https://github.com/pulp/pulp-operator/issues](https://github.com/pulp/pulp-operator/issues)

    Forum: [https://discourse.pulpproject.org/](https://discourse.pulpproject.org/)

    Join [**#pulp** on Matrix](https://matrix.to/#/#pulp:matrix.org)

    Join [**#pulp-dev** on Matrix](https://matrix.to/#/#pulp-dev:matrix.org) for Developer discussion.
  displayName: Ansible Galaxy
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAyMi4wLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4KCjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgdmVyc2lvbj0iMS4xIgogICBpZD0iTGF5ZXJfMSIKICAgeD0iMHB4IgogICB5PSIwcHgiCiAgIHZpZXdCb3g9IjAgMCA4NSAyNSIKICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6YmxhY2siCiAgIHhtbDpzcGFjZT0icHJlc2VydmUiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuOTEgcjEzNzI1IgogICBzb2RpcG9kaTpkb2NuYW1lPSJnYWxheHktbG9nby0wMy5zdmciPjxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTI5Ij48cmRmOlJERj48Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+PGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+PGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPjwvY2M6V29yaz48L3JkZjpSREY+PC9tZXRhZGF0YT48ZGVmcwogICAgIGlkPSJkZWZzMjciIC8+PHNvZGlwb2RpOm5hbWVkdmlldwogICAgIHBhZ2Vjb2xvcj0iIzAwMDAwMCIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxIgogICAgIG9iamVjdHRvbGVyYW5jZT0iMTAiCiAgICAgZ3JpZHRvbGVyYW5jZT0iMTAiCiAgICAgZ3VpZGV0b2xlcmFuY2U9IjEwIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIxMTkwIgogICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjY4OCIKICAgICBpZD0ibmFtZWR2aWV3MjUiCiAgICAgc2hvd2dyaWQ9ImZhbHNlIgogICAgIGlua3NjYXBlOnpvb209IjcuMjk0MTE3NiIKICAgICBpbmtzY2FwZTpjeD0iMi4zNzEzOTgxIgogICAgIGlua3NjYXBlOmN5PSI4Ljg2MjIxNzgiCiAgICAgaW5rc2NhcGU6d2luZG93LXg9IjExMCIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iNDYiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMCIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJnNSIgLz48c3R5bGUKICAgICB0eXBlPSJ0ZXh0L2NzcyIKICAgICBpZD0ic3R5bGUzIj4KCS5zdDB7ZmlsbDojNUZCREJFO30KCS5zdDF7ZmlsbDojRkZGRkZGO30KCS5zdDJ7ZmlsbDojNUZCREJFO30KPC9zdHlsZT48ZwogICAgIGlkPSJnNSIgY2xhc3M9InN0MCIgLz48ZwogICAgIGlkPSJnOSI+PHBhdGgKICAgICAgIGNsYXNzPSJzdDEiCiAgICAgICBkPSJNNDUuNCwyMWw0LjktMTMuNmgxLjhMNTcuMywyMWgtMmwtMS41LTQuMmgtNS40TDQ3LjEsMjFINDUuNHogTTQ5LDE1LjRoNC4zTDUyLDExLjZjLTAuNC0xLjItMC43LTIuMS0wLjktMi44ICAgYy0wLjIsMC45LTAuNCwxLjctMC43LDIuNkw0OSwxNS40eiIKICAgICAgIGlkPSJwYXRoMTEiIC8+PHBhdGgKICAgICAgIGNsYXNzPSJzdDEiCiAgICAgICBkPSJNNTguMywyMWw0LjktNy4xbC00LjMtNi41aDJsMi4zLDMuNWMwLjUsMC43LDAuOCwxLjMsMSwxLjZjMC4zLTAuNSwwLjYtMSwxLTEuNWwyLjUtMy42aDEuOWwtNC41LDYuNGw0LjgsNy4yICAgaC0yLjFsLTMuMi00LjljLTAuMi0wLjMtMC4zLTAuNS0wLjYtMC45Yy0wLjMsMC41LTAuNSwwLjgtMC42LDFsLTMsNC44SDU4LjN6IgogICAgICAgaWQ9InBhdGgxMyIgLz48cGF0aAogICAgICAgY2xhc3M9InN0MSIKICAgICAgIGQ9Ik03Ni4yLDIxdi01LjhsLTQuOS03LjloMmwyLjUsNC4xYzAuNCwwLjcsMC45LDEuNSwxLjMsMi4zYzAuNC0wLjcsMC44LTEuNSwxLjQtMi40bDIuNS00aDJsLTUuMSw3LjlWMjFINzYuMiAgIEw3Ni4yLDIxeiIKICAgICAgIGlkPSJwYXRoMTUiIC8+PHBhdGgKICAgICAgIGNsYXNzPSJzdDIiCiAgICAgICBkPSJNOC43LDEzLjFjLTMuMywyLjEtNy4xLDUtNi41LDYuN2MxLjEsMi45LDkuOCwzLjQsMjUuNC0yLjJTNDkuNSw1LjksNDguNCwzcy0xNC0wLjEtMTQtMC4xUzQ0LDAuNiw0NS4zLDQuMSAgIEM0Ni42LDcuNywzMy44LDEzLjUsMjcsMTZTNi4yLDIxLjMsNS4yLDE4LjdjLTAuNS0xLjMsMS40LTMuMywzLjQtNSIKICAgICAgIGlkPSJwYXRoMTciIC8+PHBhdGgKICAgICAgIGNsYXNzPSJzdDEiCiAgICAgICBkPSJNMTQuMSwxNS42VjE0aDUuNHY1LjFjLTAuOCwwLjctMS43LDEuMy0yLjUsMS42Yy0wLjgsMC40LTEuOCwwLjUtMi43LDAuNWMtMS4zLDAtMi40LTAuMy0zLjQtMC44ICAgUzkuMSwxOSw4LjYsMThzLTAuOC0yLjMtMC44LTMuNmMwLTEuNCwwLjMtMi41LDAuOC0zLjdzMS4zLTIsMi4yLTIuNXMyLjEtMC44LDMuNC0wLjhjMC45LDAsMS44LDAuMiwyLjUsMC41ICAgYzAuOCwwLjQsMS40LDAuNywxLjgsMS40YzAuNCwwLjYsMC44LDEuMywwLjksMi4zbC0xLjUsMC41Yy0wLjItMC43LTAuNC0xLjMtMC43LTEuNmMtMC4zLTAuNC0wLjctMC43LTEuMi0xcy0xLjEtMC40LTEuOC0wLjQgICBjLTAuOCwwLTEuNCwwLjEtMiwwLjRzLTEsMC41LTEuNCwxUzEwLjIsMTEsMTAsMTEuNmMtMC4zLDAuOC0wLjUsMS43LTAuNSwyLjdjMCwxLjIsMC4yLDIuMywwLjYsMy4xYzAuNCwwLjgsMC45LDEuNSwxLjcsMS44ICAgczEuNSwwLjYsMi40LDAuNmMwLjgsMCwxLjQtMC4yLDIuMS0wLjVjMC43LTAuMywxLjItMC42LDEuNi0xdi0yLjVoLTMuOFYxNS42eiIKICAgICAgIGlkPSJwYXRoMTkiIC8+PHBhdGgKICAgICAgIGNsYXNzPSJzdDEiCiAgICAgICBkPSJNMzUuOCwyMVY3LjRoMS43djEyLjFoNi4zdjEuNkwzNS44LDIxTDM1LjgsMjF6IgogICAgICAgaWQ9InBhdGgyMSIgLz48cGF0aAogICAgICAgY2xhc3M9InN0MSIKICAgICAgIGQ9Ik0yMS41LDIxbDQuOS0xMy42aDEuOEwzMy41LDIxaC0yTDMwLDE2LjhoLTUuNEwyMy4yLDIxSDIxLjV6IE0yNC42LDE2LjhIMzBsLTEuOS01LjIgICBjLTAuNC0xLjItMC43LTIuMS0wLjktMi44Yy0wLjIsMC45LTAuNCwxLjctMC43LDIuNkwyNC42LDE2Ljh6IgogICAgICAgaWQ9InBhdGgyMyIgLz48L2c+PC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - config.openshift.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: pulp-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: pulp-operator
          control-plane: controller-manager
          owner: pulp-dev
        name: pulp-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy:
            type: RollingUpdate
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/component: operator
                app.kubernetes.io/name: pulp-operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --zap-log-level=info
                - --zap-stacktrace-level=panic
                command:
                - /manager
                env:
                - name: RELATED_IMAGE_PULP
                  value: quay.io/pulp/galaxy-minimal:4.6.2
                - name: RELATED_IMAGE_PULP_WEB
                  value: quay.io/pulp/galaxy-web:4.6.2
                - name: RELATED_IMAGE_PULP_REDIS
                  value: docker.io/library/redis:latest
                - name: RELATED_IMAGE_PULP_POSTGRES
                  value: docker.io/library/postgres:13
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/pulp/pulp-operator:v1.0.0-alpha.4
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              imagePullSecrets:
              - name: redhat-operators-pull-secret
              securityContext:
                runAsNonRoot: true
              serviceAccountName: pulp-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          - networking.k8s.io
          resources:
          - deployments
          - ingresses
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          - persistentvolumes
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/log
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulpbackups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulpbackups
          - pulps
          verbs:
          - get
          - list
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulpbackups/finalizers
          verbs:
          - update
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulpbackups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulprestores
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulprestores/finalizers
          verbs:
          - update
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulprestores/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulps/finalizers
          verbs:
          - update
        - apiGroups:
          - repo-manager.pulpproject.org
          resources:
          - pulps/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: pulp-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - pulp
  - pulpcore
  - content
  - repositories
  - lifecycle
  links:
  - name: Pulp Operator
    url: https://github.com/pulp/pulp-operator
  - name: Galaxy NG
    url: https://github.com/ansible/galaxy_ng
  - name: Galaxy Docs
    url: https://galaxyng.netlify.app/
  - name: Operator Docs
    url: https://docs.pulpproject.org/pulp_operator/
  maintainers:
  - email: galaxy-ng@redhat.com
    name: Galaxy Community
  maturity: beta
  provider:
    name: Galaxy Community
    url: https://github.com/ansible/galaxy_ng
  relatedImages:
  - image: quay.io/pulp/galaxy-minimal:4.6.2
    name: pulp
  - image: quay.io/pulp/galaxy-web:4.6.2
    name: pulp-web
  - image: docker.io/library/redis:latest
    name: pulp-redis
  - image: docker.io/library/postgres:13
    name: pulp-postgres
  version: 1.0.0-alpha.4
