apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "certmonitor.nachoperator.io/v1alpha1",
          "kind": "CertificateMonitor",
          "metadata": {
            "name": "certificatemonitor-sample",
            "namespace": "default"
          },
          "spec": {
            "secretName": "my-tls-secret",
            "renewalThresholdDays": 30,
            "notificationChannels": [
              {
                "type": "slack",
                "webhook": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
              }
            ]
          }
        }
      ]
    capabilities: Basic Install
    categories: Security
    containerImage: ghcr.io/nachoperator/cert-monitor-operator:v0.1.0
    createdAt: "2025-09-07T16:47:51Z"
    description: Monitor SSL/TLS certificate expiration in Kubernetes clusters
    operatorframework.io/suggested-namespace: cert-monitor-system
    repository: https://github.com/nachoperator/nacho-operators
    support: NachoOperator Community
  name: cert-monitor-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  minKubeVersion: "1.21.0"  
  customresourcedefinitions:
    owned:
    - description: CertificateMonitor monitors SSL/TLS certificate expiration
      displayName: Certificate Monitor
      kind: CertificateMonitor
      name: certificatemonitors.certmonitor.nachoperator.io
      version: v1alpha1
  description: |
    ## About this Operator
    
    The Certificate Monitor Operator helps you monitor SSL/TLS certificate expiration 
    in your Kubernetes clusters. It automatically detects certificates that are 
    approaching expiration and sends notifications through multiple channels.
    
    ## Features
    
    * Monitor certificates in Kubernetes secrets
    * Configurable expiration thresholds  
    * Multiple notification channels (Slack, OpsGenie)
    * Namespace-scoped monitoring
    * Rich alerting with certificate details
    
    ## Usage
    
    Create a CertificateMonitor resource to start monitoring:
    
    ```yaml
    apiVersion: certmonitor.nachoperator.io/v1alpha1
    kind: CertificateMonitor
    metadata:
      name: my-cert-monitor
    spec:
      secretName: my-tls-secret
      renewalThresholdDays: 30
      notificationChannels:
        - type: slack
          webhook: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
    ```
  displayName: Certificate Monitor Operator
  icon:
  - base64data: PHN2ZyB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cmVjdCB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iIzAwN2NmZiIvPgogIDx0ZXh0IHg9IjUwIiB5PSI1MCIgZm9udC1mYW1pbHk9IkFyaWFsIiBmb250LXNpemU9IjE0IiBmaWxsPSJ3aGl0ZSIgdGV4dC1hbmNob3I9Im1pZGRsZSIgZHk9Ii4zZW0iPkNNPC90ZXh0Pgo8L3N2Zz4K
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
      - name: cert-monitor-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: cert-monitor-operator
              app.kubernetes.io/instance: cert-monitor-operator
          template:
            metadata:
              labels:
                app.kubernetes.io/name: cert-monitor-operator
                app.kubernetes.io/instance: cert-monitor-operator
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                image: ghcr.io/nachoperator/cert-monitor-operator:v0.1.0
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - "ALL"
              securityContext:
                runAsNonRoot: true
              serviceAccountName: cert-monitor-operator-controller-manager
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - certmonitor.nachoperator.io
          resources:
          - certificatemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - certmonitor.nachoperator.io
          resources:
          - certificatemonitors/finalizers
          verbs:
          - update
        - apiGroups:
          - certmonitor.nachoperator.io
          resources:
          - certificatemonitors/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: cert-monitor-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - certificates
  - ssl
  - tls
  - monitoring
  - security
  - expiration
  links:
  - name: Cert Monitor Operator
    url: https://github.com/nachoperator/nacho-operators
  maintainers:
  - email: nachoperator@example.com
    name: NachoOperator
  maturity: alpha
  provider:
    name: NachoOperator Community
  version: 0.1.0
