apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: sginstanceprofiles.stackgres.io
spec:
  group: stackgres.io
  names:
    kind: SGInstanceProfile
    listKind: SGInstanceProfileList
    plural: sginstanceprofiles
    shortNames:
    - sginp
    singular: sginstanceprofile
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.cpu
      name: cpu
      type: string
    - jsonPath: .spec.memory
      name: memory
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          metadata:
            properties:
              name:
                description: |
                  Name of the Instance Profile. An instance profile represents a "kind" of
                   server (CPU and RAM) where you may run StackGres Pods, classified by a given name.
                   The profile may be referenced by zero or more SGClusters, and if so it would
                   be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                  The name must be unique across all instance profiles in the same namespace.
                type: string
            type: object
          spec:
            properties:
              containers:
                additionalProperties:
                  properties:
                    cpu:
                      description: |
                        CPU(s) (cores) used for the specified Pod container. The suffix `m`
                         specifies millicpus (where 1000m is equals to 1).
                      pattern: ^[1-9][0-9]*[m]?$
                      type: string
                    hugePages:
                      description: |
                        RAM allocated for huge pages
                      properties:
                        hugepages-1Gi:
                          description: |
                            RAM allocated for huge pages with a size of 1Gi. The suffix `Mi`
                             or `Gi` specifies Mebibytes or Gibibytes, respectively.

                            The amount of RAM is assigned to the specified container.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                        hugepages-2Mi:
                          description: |
                            RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
                             or `Gi` specifies Mebibytes or Gibibytes, respectively.

                            The amount of RAM is assigned to the specified container.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                      type: object
                    memory:
                      description: |
                        RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
                         specifies Mebibytes or Gibibytes, respectively.
                      pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                      type: string
                  required:
                  - cpu
                  - memory
                  type: object
                description: |
                  The CPU(s) (cores) and RAM assigned to containers other than patroni container.

                  This section, if left empty, will be filled automatically by the operator with
                   some defaults that can be proportional to the resources assigned to patroni
                   container (except for the huge pages that are always left empty).
                type: object
              cpu:
                description: |
                  CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
                   specifies millicpus (where 1000m is equals to 1).

                  The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

                  A minimum of 2 cores is recommended.
                pattern: ^[1-9][0-9]*[m]?$
                type: string
              hugePages:
                description: |
                  RAM allocated for huge pages
                properties:
                  hugepages-1Gi:
                    description: |
                      RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
                       specifies Mebibytes or Gibibytes, respectively.

                      By default the amount of RAM set is assigned to patroni container
                       (that runs both Patroni and PostgreSQL).
                    pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                    type: string
                  hugepages-2Mi:
                    description: |
                      RAM allocated for huge pages with a size of 2Mi. The suffix `Mi` or `Gi`
                       specifies Mebibytes or Gibibytes, respectively.

                      By default the amount of RAM set is assigned to patroni container
                       (that runs both Patroni and PostgreSQL).
                    pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                    type: string
                type: object
              initContainers:
                additionalProperties:
                  properties:
                    cpu:
                      description: |
                        CPU(s) (cores) used for the specified Pod init container. The suffix
                         `m` specifies millicpus (where 1000m is equals to 1).
                      pattern: ^[1-9][0-9]*[m]?$
                      type: string
                    hugePages:
                      description: |
                        RAM allocated for huge pages
                      properties:
                        hugepages-1Gi:
                          description: |
                            RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
                             specifies Mebibytes or Gibibytes, respectively.

                            The amount of RAM is assigned to the specified init container.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                        hugepages-2Mi:
                          description: |
                            RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
                             or `Gi` specifies Mebibytes or Gibibytes, respectively.

                            The amount of RAM is assigned to the specified init container.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                      type: object
                    memory:
                      description: |
                        RAM allocated to the specified Pod init container. The suffix `Mi`
                         or `Gi` specifies Mebibytes or Gibibytes, respectively.
                      pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                      type: string
                  required:
                  - cpu
                  - memory
                  type: object
                description: The CPU(s) (cores) and RAM assigned to init containers.
                type: object
              memory:
                description: |
                  RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
                   specifies Mebibytes or Gibibytes, respectively.

                  The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

                  A minimum of 2-4Gi is recommended.
                pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                type: string
              requests:
                description: |
                  On containerized environments, when running production workloads, enforcing container's resources requirements request to be equals to the limits allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                   the workload with less resources than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                  There are cases where you may need to set resource requirement request to a different value than limit. This section allow to do so but requires to enable such feature in the `SGCluster` and `SGDistributedLogs` (see `.spec.nonProductionOptions` section for each of those custom resources).
                properties:
                  containers:
                    additionalProperties:
                      properties:
                        cpu:
                          description: |
                            CPU(s) (cores) used for the specified Pod container. The suffix `m`
                             specifies millicpus (where 1000m is equals to 1).
                          pattern: ^[1-9][0-9]*[m]?$
                          type: string
                        memory:
                          description: |
                            RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
                             specifies Mebibytes or Gibibytes, respectively.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                      type: object
                    description: |
                      The CPU(s) (cores) and RAM assigned to containers other than patroni container.
                    type: object
                  cpu:
                    description: |
                      CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
                       specifies millicpus (where 1000m is equals to 1).

                      The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
                    pattern: ^[1-9][0-9]*[m]?$
                    type: string
                  initContainers:
                    additionalProperties:
                      properties:
                        cpu:
                          description: |
                            CPU(s) (cores) used for the specified Pod init container. The suffix
                             `m` specifies millicpus (where 1000m is equals to 1).
                          pattern: ^[1-9][0-9]*[m]?$
                          type: string
                        memory:
                          description: |
                            RAM allocated to the specified Pod init container. The suffix `Mi`
                             or `Gi` specifies Mebibytes or Gibibytes, respectively.
                          pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                          type: string
                      type: object
                    description: The CPU(s) (cores) and RAM assigned to init containers.
                    type: object
                  memory:
                    description: |
                      RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
                       specifies Mebibytes or Gibibytes, respectively.

                      The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
                    pattern: ^[0-9]+(\.[0-9]+)?(Mi|Gi)$
                    type: string
                type: object
            required:
            - cpu
            - memory
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
