apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "confidentialcontainers.org/v1beta1",
          "kind": "CcRuntime",
          "metadata": {
            "name": "ccruntime-sample"
          },
          "spec": {
            "ccNodeSelector": {
              "matchLabels": {
                "node.kubernetes.io/worker": ""
              }
            },
            "config": {
              "cleanupCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "reset"
              ],
              "debug": false,
              "defaultRuntimeClassName": "kata-qemu",
              "environmentVariables": [
                {
                  "name": "INSTALL_OFFICIAL_CONTAINERD",
                  "value": "false"
                }
              ],
              "installCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "install"
              ],
              "installDoneLabel": {
                "katacontainers.io/kata-runtime": "true"
              },
              "installType": "bundle",
              "installerVolumeMounts": [
                {
                  "mountPath": "/etc/crio/",
                  "name": "crio-conf"
                },
                {
                  "mountPath": "/etc/containerd/",
                  "name": "containerd-conf"
                },
                {
                  "mountPath": "/opt/kata/",
                  "name": "kata-artifacts"
                },
                {
                  "mountPath": "/usr/local/bin/",
                  "name": "local-bin"
                },
                {
                  "mountPath": "/host/",
                  "name": "host"
                }
              ],
              "installerVolumes": [
                {
                  "hostPath": {
                    "path": "/etc/crio/",
                    "type": ""
                  },
                  "name": "crio-conf"
                },
                {
                  "hostPath": {
                    "path": "/etc/containerd/",
                    "type": ""
                  },
                  "name": "containerd-conf"
                },
                {
                  "hostPath": {
                    "path": "/opt/kata/",
                    "type": "DirectoryOrCreate"
                  },
                  "name": "kata-artifacts"
                },
                {
                  "hostPath": {
                    "path": "/usr/local/bin/",
                    "type": ""
                  },
                  "name": "local-bin"
                },
                {
                  "hostPath": {
                    "path": "/",
                    "type": ""
                  },
                  "name": "host"
                }
              ],
              "payloadImage": "quay.io/kata-containers/kata-deploy:3.7.0",
              "postUninstall": {
                "image": "quay.io/confidential-containers/reqs-payload:6bba65f96532fa280b3996dcad2aad10bed777e6",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/confidential-containers/",
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "mountPath": "/etc/systemd/system/",
                    "name": "etc-systemd-system"
                  },
                  {
                    "mountPath": "/etc/containerd/",
                    "name": "containerd-conf"
                  },
                  {
                    "mountPath": "/usr/local/bin/",
                    "name": "local-bin"
                  },
                  {
                    "mountPath": "/var/lib/containerd-nydus/",
                    "name": "containerd-nydus"
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/opt/confidential-containers/",
                      "type": "DirectoryOrCreate"
                    },
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/systemd/system/",
                      "type": ""
                    },
                    "name": "etc-systemd-system"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/containerd/",
                      "type": ""
                    },
                    "name": "containerd-conf"
                  },
                  {
                    "hostPath": {
                      "path": "/usr/local/bin/",
                      "type": ""
                    },
                    "name": "local-bin"
                  },
                  {
                    "hostPath": {
                      "path": "/var/lib/containerd-nydus/",
                      "type": ""
                    },
                    "name": "containerd-nydus"
                  }
                ]
              },
              "preInstall": {
                "image": "quay.io/confidential-containers/reqs-payload:6bba65f96532fa280b3996dcad2aad10bed777e6",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/confidential-containers/",
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "mountPath": "/etc/systemd/system/",
                    "name": "etc-systemd-system"
                  },
                  {
                    "mountPath": "/etc/containerd/",
                    "name": "containerd-conf"
                  },
                  {
                    "mountPath": "/usr/local/bin/",
                    "name": "local-bin"
                  },
                  {
                    "mountPath": "/var/lib/containerd-nydus/",
                    "name": "containerd-nydus"
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/opt/confidential-containers/",
                      "type": "DirectoryOrCreate"
                    },
                    "name": "confidential-containers-artifacts"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/systemd/system/",
                      "type": ""
                    },
                    "name": "etc-systemd-system"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/containerd/",
                      "type": ""
                    },
                    "name": "containerd-conf"
                  },
                  {
                    "hostPath": {
                      "path": "/usr/local/bin/",
                      "type": ""
                    },
                    "name": "local-bin"
                  },
                  {
                    "hostPath": {
                      "path": "/var/lib/containerd-nydus/",
                      "type": ""
                    },
                    "name": "containerd-nydus"
                  }
                ]
              },
              "runtimeClasses": [
                {
                  "name": "kata-clh",
                  "pulltype": "",
                  "snapshotter": "nydus"
                },
                {
                  "name": "kata-qemu",
                  "pulltype": "",
                  "snapshotter": "nydus"
                },
                {
                  "name": "kata-qemu-tdx",
                  "pulltype": "",
                  "snapshotter": "nydus"
                },
                {
                  "name": "kata-qemu-sev",
                  "pulltype": "",
                  "snapshotter": "nydus"
                },
                {
                  "name": "kata-qemu-snp",
                  "pulltype": "",
                  "snapshotter": "nydus"
                }
              ],
              "uninstallCmd": [
                "/opt/kata-artifacts/scripts/kata-deploy.sh",
                "cleanup"
              ],
              "uninstallDoneLabel": {
                "katacontainers.io/kata-runtime": "cleanup"
              }
            },
            "runtimeName": "kata"
          }
        }
      ]
    capabilities: Basic Install
    categories: Security
    containerImage: quay.io/confidential-containers/operator:v0.9.0
    createdAt: "2024-08-06T14:14:00Z"
    operators.operatorframework.io/builder: operator-sdk-v1.30.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: cc-operator.v0.9.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: CcRuntime is the Schema for the ccruntimes API
      displayName: Cc Runtime
      kind: CcRuntime
      name: ccruntimes.confidentialcontainers.org
      version: v1beta1
  description: An operator to deploy and configure confidential containers runtime
    on Kubernetes cluster
  displayName: Confidential Containers Runtime Operator
  icon:
  - base64data: 
    mediatype: image/jpeg
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - update
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes/finalizers
          verbs:
          - update
        - apiGroups:
          - confidentialcontainers.org
          resources:
          - ccruntimes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - node.k8s.io
          resources:
          - runtimeclasses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: cc-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: cc-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: CCRUNTIME_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/confidential-containers/operator:v0.9.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: cc-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: cc-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - confidential containers
  - ccruntime
  - kata
  - vm tee
  links:
  - name: Confidential Containers
    url: https://github.com/confidential-containers
  maintainers:
  - email: cncf-ccontainers-maintainers@lists.cncf.io
    name: Fabiano Fidencio
  - email: cncf-ccontainers-maintainers@lists.cncf.io
    name: Jens Freimann
  - email: cncf-ccontainers-maintainers@lists.cncf.io
    name: Pradipta Banerjee
  maturity: alpha
  minKubeVersion: 1.24.0
  provider:
    name: Confidential Containers Community
    url: https://github.com/confidential-containers
  replaces: cc-operator.v0.8.0
  version: 0.9.0
