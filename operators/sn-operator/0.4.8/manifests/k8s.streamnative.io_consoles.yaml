apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: consoles.k8s.streamnative.io
spec:
  group: k8s.streamnative.io
  names:
    kind: Console
    listKind: ConsoleList
    plural: consoles
    singular: console
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Console is the Schema for the consoles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConsoleSpec defines the desired state of Console
            properties:
              config:
                description: Config defines the config of console,
                properties:
                  authentication:
                    description: Authentication defines console authentication
                    properties:
                      apiKey:
                        description: ApiKeys authentication configuration
                        properties:
                          secretName:
                            description: SecretName The secret that provides the super
                              token
                            type: string
                          serviceUrl:
                            description: ServiceUrl The service url of API Keys service
                            type: string
                          subjectClaim:
                            default: sub
                            description: SubjectClaim JWT claim to use as the user
                              name, by default sub.
                            type: string
                          superRole:
                            default: admin
                            description: SuperRole The default value is `sub`
                            type: string
                        type: object
                    type: object
                type: object
              customization:
                description: Customization allows the desired manifests of operator
                  managed resources to be customized.
                items:
                  properties:
                    manifest:
                      description: Manifest defines the patch to apply to customize
                        the desired resource
                      type: string
                    match:
                      description: Match defines what resource should be customized
                        by this customization layer
                      nullable: true
                      properties:
                        groupVersionKinds:
                          description: Matches the group, version, and kind of the
                            resource.
                          items:
                            properties:
                              group:
                                description: Group is the group of the resource. Matches
                                  all groups if it's empty or `*`.
                                type: string
                              kind:
                                description: Kind is the kind of the resource. Matches
                                  all kinds if it's `*`.
                                type: string
                              version:
                                description: Version is the version of the resource.
                                  Matches all versions if it's empty or `*`.
                                type: string
                            required:
                            - kind
                            type: object
                          nullable: true
                          type: array
                        name:
                          description: Name matches the resource name defined in the
                            metadata. It could be defined as a Regex pattern, like
                            `^.*-bk$`.
                          type: string
                      type: object
                  required:
                  - manifest
                  type: object
                nullable: true
                type: array
              image:
                description: Image is the container image used to run sn console pods.
                type: string
              imagePullPolicy:
                description: Image pull policy, one of Always, Never, IfNotPresent,
                  default to Always.
                type: string
              kopServiceUrl:
                description: KopServiceUrl defines the kop service url of pulsar cluster,
                type: string
              webServiceUrl:
                description: WebServiceUrl defines the web service url of pulsar cluster,
                type: string
            required:
            - webServiceUrl
            type: object
          status:
            description: ConsoleStatus defines the observed state of Console
            properties:
              conditions:
                description: Conditions is an array of current observed conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this api keys service.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
