apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: hyperparametertuningjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: HyperParameterTuningJob
    listKind: HyperParameterTuningJobList
    plural: hyperparametertuningjobs
    singular: hyperparametertuningjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.hyperParameterTuningJobStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HyperParameterTuningJob is the Schema for the HyperParameterTuningJobs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HyperParameterTuningJobSpec defines the desired state of
              HyperParameterTuningJob.
            properties:
              autotune:
                description: |-
                  Configures SageMaker Automatic model tuning (AMT) to automatically find optimal
                  parameters for the following fields:


                     * ParameterRanges (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-ParameterRanges):
                     The names and ranges of parameters that a hyperparameter tuning job can
                     optimize.


                     * ResourceLimits (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html):
                     The maximum resources that can be used for a training job. These resources
                     include the maximum number of training jobs, the maximum runtime of a
                     tuning job, and the maximum number of training jobs to run at the same
                     time.


                     * TrainingJobEarlyStoppingType (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-TrainingJobEarlyStoppingType):
                     A flag that specifies whether or not to use early stopping for training
                     jobs launched by a hyperparameter tuning job.


                     * RetryStrategy (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-RetryStrategy):
                     The number of times to retry a training job.


                     * Strategy (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html):
                     Specifies how hyperparameter tuning chooses the combinations of hyperparameter
                     values to use for the training jobs that it launches.


                     * ConvergenceDetected (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ConvergenceDetected.html):
                     A flag to indicate that Automatic model tuning (AMT) has detected model
                     convergence.
                properties:
                  mode:
                    type: string
                type: object
              hyperParameterTuningJobConfig:
                description: |-
                  The HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html)
                  object that describes the tuning job, including the search strategy, the
                  objective metric used to evaluate training jobs, ranges of parameters to
                  search, and resource limits for the tuning job. For more information, see
                  How Hyperparameter Tuning Works (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html).
                properties:
                  hyperParameterTuningJobObjective:
                    description: |-
                      Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                      tuning uses the value of this metric to evaluate the training jobs it launches,
                      and returns the training job that results in either the highest or lowest
                      value for this metric, depending on the value you specify for the Type parameter.
                      If you want to define a custom objective metric, see Define metrics and environment
                      variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                    type: object
                  parameterRanges:
                    description: |-
                      Specifies ranges of integer, continuous, and categorical hyperparameters
                      that a hyperparameter tuning job searches. The hyperparameter tuning job
                      launches training jobs with hyperparameter values within these ranges to
                      find the combination of values that result in the training job with the best
                      performance as measured by the objective metric of the hyperparameter tuning
                      job.


                      The maximum number of items specified for Array Members refers to the maximum
                      number of hyperparameters for each range and also the maximum for the hyperparameter
                      tuning job itself. That is, the sum of the number of hyperparameters for
                      all the ranges can't exceed the maximum number specified.
                    properties:
                      autoParameters:
                        items:
                          description: |-
                            The name and an example value of the hyperparameter that you want to use
                            in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                            is eligible for Autotune, an optimal hyperparameter range is selected for
                            you.
                          properties:
                            name:
                              type: string
                            valueHint:
                              type: string
                          type: object
                        type: array
                      categoricalParameterRanges:
                        items:
                          description: A list of categorical hyperparameters to tune.
                          properties:
                            name:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      continuousParameterRanges:
                        items:
                          description: A list of continuous hyperparameters to tune.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                      integerParameterRanges:
                        items:
                          description: |-
                            For a hyperparameter of the integer type, specifies the range that a hyperparameter
                            tuning job searches.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                    type: object
                  resourceLimits:
                    description: |-
                      Specifies the maximum number of training jobs and parallel training jobs
                      that a hyperparameter tuning job can launch.
                    properties:
                      maxNumberOfTrainingJobs:
                        format: int64
                        type: integer
                      maxParallelTrainingJobs:
                        format: int64
                        type: integer
                    type: object
                  strategy:
                    description: |-
                      The strategy hyperparameter tuning uses to find the best combination of hyperparameters
                      for your model.
                    type: string
                  trainingJobEarlyStoppingType:
                    type: string
                  tuningJobCompletionCriteria:
                    description: The job completion criteria.
                    properties:
                      targetObjectiveMetricValue:
                        type: number
                    type: object
                type: object
              hyperParameterTuningJobName:
                description: |-
                  The name of the tuning job. This name is the prefix for the names of all
                  training jobs that this tuning job launches. The name must be unique within
                  the same Amazon Web Services account and Amazon Web Services Region. The
                  name must have 1 to 32 characters. Valid characters are a-z, A-Z, 0-9, and
                  : + = @ _ % - (hyphen). The name is not case sensitive.
                type: string
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).


                  Tags that you specify for the tuning job are also added to all training jobs
                  that the tuning job launches.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.


                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).


                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              trainingJobDefinition:
                description: |-
                  The HyperParameterTrainingJobDefinition (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html)
                  object that describes the training jobs that this tuning job launches, including
                  static hyperparameters, input data configuration, output data configuration,
                  resource configuration, and stopping condition.
                properties:
                  algorithmSpecification:
                    description: |-
                      Specifies which training algorithm to use for training jobs that a hyperparameter
                      tuning job launches and the metrics to monitor.
                    properties:
                      algorithmName:
                        type: string
                      metricDefinitions:
                        items:
                          description: |-
                            Specifies a metric that the training algorithm writes to stderr or stdout.
                            You can view these logs to understand how your training job performs and
                            check for any errors encountered during training. SageMaker hyperparameter
                            tuning captures all defined metrics. Specify one of the defined metrics to
                            use as an objective metric using the TuningObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective)
                            parameter in the HyperParameterTrainingJobDefinition API to evaluate job
                            performance during hyperparameter tuning.
                          properties:
                            name:
                              type: string
                            regex:
                              type: string
                          type: object
                        type: array
                      trainingImage:
                        type: string
                      trainingInputMode:
                        description: |-
                          The training input mode that the algorithm supports. For more information
                          about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).


                          Pipe mode


                          If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                          from Amazon S3 to the container.


                          File mode


                          If an algorithm supports File mode, SageMaker downloads the training data
                          from S3 to the provisioned ML storage volume, and mounts the directory to
                          the Docker volume for the training container.


                          You must provision the ML storage volume with sufficient capacity to accommodate
                          the data downloaded from S3. In addition to the training data, the ML storage
                          volume also stores the output model. The algorithm container uses the ML
                          storage volume to also store intermediate information, if any.


                          For distributed algorithms, training data is distributed uniformly. Your
                          training duration is predictable if the input data objects sizes are approximately
                          the same. SageMaker does not split the files any further for model training.
                          If the object sizes are skewed, training won't be optimal as the data distribution
                          is also skewed when one host in a training cluster is overloaded, thus becoming
                          a bottleneck in training.


                          FastFile mode


                          If an algorithm supports FastFile mode, SageMaker streams data directly from
                          S3 to the container with no code changes, and provides file system access
                          to the data. Users can author their training script to interact with these
                          files as if they were stored on disk.


                          FastFile mode works best when the data is read sequentially. Augmented manifest
                          files aren't supported. The startup time is lower when there are fewer files
                          in the S3 bucket provided.
                        type: string
                    type: object
                  checkpointConfig:
                    description: |-
                      Contains information about the output location for managed spot training
                      checkpoint data.
                    properties:
                      localPath:
                        type: string
                      s3URI:
                        type: string
                    type: object
                  definitionName:
                    type: string
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableManagedSpotTraining:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  hyperParameterRanges:
                    description: |-
                      Specifies ranges of integer, continuous, and categorical hyperparameters
                      that a hyperparameter tuning job searches. The hyperparameter tuning job
                      launches training jobs with hyperparameter values within these ranges to
                      find the combination of values that result in the training job with the best
                      performance as measured by the objective metric of the hyperparameter tuning
                      job.


                      The maximum number of items specified for Array Members refers to the maximum
                      number of hyperparameters for each range and also the maximum for the hyperparameter
                      tuning job itself. That is, the sum of the number of hyperparameters for
                      all the ranges can't exceed the maximum number specified.
                    properties:
                      autoParameters:
                        items:
                          description: |-
                            The name and an example value of the hyperparameter that you want to use
                            in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                            is eligible for Autotune, an optimal hyperparameter range is selected for
                            you.
                          properties:
                            name:
                              type: string
                            valueHint:
                              type: string
                          type: object
                        type: array
                      categoricalParameterRanges:
                        items:
                          description: A list of categorical hyperparameters to tune.
                          properties:
                            name:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      continuousParameterRanges:
                        items:
                          description: A list of continuous hyperparameters to tune.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                      integerParameterRanges:
                        items:
                          description: |-
                            For a hyperparameter of the integer type, specifies the range that a hyperparameter
                            tuning job searches.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                    type: object
                  inputDataConfig:
                    items:
                      description: A channel is a named input source that training
                        algorithms can consume.
                      properties:
                        channelName:
                          type: string
                        compressionType:
                          type: string
                        contentType:
                          type: string
                        dataSource:
                          description: Describes the location of the channel data.
                          properties:
                            fileSystemDataSource:
                              description: Specifies a file system data source for
                                a channel.
                              properties:
                                directoryPath:
                                  type: string
                                fileSystemAccessMode:
                                  type: string
                                fileSystemID:
                                  type: string
                                fileSystemType:
                                  type: string
                              type: object
                            s3DataSource:
                              description: |-
                                Describes the S3 data source.


                                Your input bucket must be in the same Amazon Web Services region as your
                                training job.
                              properties:
                                attributeNames:
                                  items:
                                    type: string
                                  type: array
                                instanceGroupNames:
                                  items:
                                    type: string
                                  type: array
                                s3DataDistributionType:
                                  type: string
                                s3DataType:
                                  type: string
                                s3URI:
                                  type: string
                              type: object
                          type: object
                        inputMode:
                          description: |-
                            The training input mode that the algorithm supports. For more information
                            about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).


                            Pipe mode


                            If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                            from Amazon S3 to the container.


                            File mode


                            If an algorithm supports File mode, SageMaker downloads the training data
                            from S3 to the provisioned ML storage volume, and mounts the directory to
                            the Docker volume for the training container.


                            You must provision the ML storage volume with sufficient capacity to accommodate
                            the data downloaded from S3. In addition to the training data, the ML storage
                            volume also stores the output model. The algorithm container uses the ML
                            storage volume to also store intermediate information, if any.


                            For distributed algorithms, training data is distributed uniformly. Your
                            training duration is predictable if the input data objects sizes are approximately
                            the same. SageMaker does not split the files any further for model training.
                            If the object sizes are skewed, training won't be optimal as the data distribution
                            is also skewed when one host in a training cluster is overloaded, thus becoming
                            a bottleneck in training.


                            FastFile mode


                            If an algorithm supports FastFile mode, SageMaker streams data directly from
                            S3 to the container with no code changes, and provides file system access
                            to the data. Users can author their training script to interact with these
                            files as if they were stored on disk.


                            FastFile mode works best when the data is read sequentially. Augmented manifest
                            files aren't supported. The startup time is lower when there are fewer files
                            in the S3 bucket provided.
                          type: string
                        recordWrapperType:
                          type: string
                        shuffleConfig:
                          description: |-
                            A configuration for a shuffle option for input data in a channel. If you
                            use S3Prefix for S3DataType, the results of the S3 key prefix matches are
                            shuffled. If you use ManifestFile, the order of the S3 object references
                            in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order
                            of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling
                            order is determined using the Seed value.


                            For Pipe input mode, when ShuffleConfig is specified shuffling is done at
                            the start of every epoch. With large datasets, this ensures that the order
                            of the training data is different for each epoch, and it helps reduce bias
                            and possible overfitting. In a multi-node training job when ShuffleConfig
                            is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled
                            across nodes so that the content sent to a particular node on the first epoch
                            might be sent to a different node on the second epoch.
                          properties:
                            seed:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    type: array
                  outputDataConfig:
                    description: Provides information about how to store model training
                      results (model artifacts).
                    properties:
                      compressionType:
                        type: string
                      kmsKeyID:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                  resourceConfig:
                    description: |-
                      Describes the resources, including machine learning (ML) compute instances
                      and ML storage volumes, to use for model training.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceGroups:
                        items:
                          description: |-
                            Defines an instance group for heterogeneous cluster training. When requesting
                            a training job using the CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
                            API, you can configure multiple instance groups .
                          properties:
                            instanceCount:
                              format: int64
                              type: integer
                            instanceGroupName:
                              type: string
                            instanceType:
                              type: string
                          type: object
                        type: array
                      instanceType:
                        type: string
                      keepAlivePeriodInSeconds:
                        description: |-
                          Optional. Customer requested period in seconds for which the Training cluster
                          is kept alive after the job is finished.
                        format: int64
                        type: integer
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                  retryStrategy:
                    description: |-
                      The retry strategy to use when a training job fails due to an InternalServerError.
                      RetryStrategy is specified as part of the CreateTrainingJob and CreateHyperParameterTuningJob
                      requests. You can add the StoppingCondition parameter to the request to limit
                      the training time for the complete job.
                    properties:
                      maximumRetryAttempts:
                        format: int64
                        type: integer
                    type: object
                  roleARN:
                    type: string
                  staticHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  stoppingCondition:
                    description: |-
                      Specifies a limit to how long a model training job or model compilation job
                      can run. It also specifies how long a managed spot training job has to complete.
                      When the job reaches the time limit, SageMaker ends the training or compilation
                      job. Use this API to cap model training costs.


                      To stop a training job, SageMaker sends the algorithm the SIGTERM signal,
                      which delays job termination for 120 seconds. Algorithms can use this 120-second
                      window to save the model artifacts, so the results of training are not lost.


                      The training algorithms provided by SageMaker automatically save the intermediate
                      results of a model training job when possible. This attempt to save artifacts
                      is only a best effort case as model might not be in a state from which it
                      can be saved. For example, if training has just started, the model might
                      not be ready to save. When saved, this intermediate data is a valid model
                      artifact. You can use it to create a model with CreateModel.


                      The Neural Topic Model (NTM) currently does not support saving intermediate
                      model artifacts. When training NTMs, make sure that the maximum runtime is
                      sufficient for the training job to complete.
                    properties:
                      maxPendingTimeInSeconds:
                        description: Maximum job scheduler pending time in seconds.
                        format: int64
                        type: integer
                      maxRuntimeInSeconds:
                        format: int64
                        type: integer
                      maxWaitTimeInSeconds:
                        format: int64
                        type: integer
                    type: object
                  tuningObjective:
                    description: |-
                      Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                      tuning uses the value of this metric to evaluate the training jobs it launches,
                      and returns the training job that results in either the highest or lowest
                      value for this metric, depending on the value you specify for the Type parameter.
                      If you want to define a custom objective metric, see Define metrics and environment
                      variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                    type: object
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              trainingJobDefinitions:
                description: |-
                  A list of the HyperParameterTrainingJobDefinition (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html)
                  objects launched for this tuning job.
                items:
                  description: Defines the training jobs launched by a hyperparameter
                    tuning job.
                  properties:
                    algorithmSpecification:
                      description: |-
                        Specifies which training algorithm to use for training jobs that a hyperparameter
                        tuning job launches and the metrics to monitor.
                      properties:
                        algorithmName:
                          type: string
                        metricDefinitions:
                          items:
                            description: |-
                              Specifies a metric that the training algorithm writes to stderr or stdout.
                              You can view these logs to understand how your training job performs and
                              check for any errors encountered during training. SageMaker hyperparameter
                              tuning captures all defined metrics. Specify one of the defined metrics to
                              use as an objective metric using the TuningObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective)
                              parameter in the HyperParameterTrainingJobDefinition API to evaluate job
                              performance during hyperparameter tuning.
                            properties:
                              name:
                                type: string
                              regex:
                                type: string
                            type: object
                          type: array
                        trainingImage:
                          type: string
                        trainingInputMode:
                          description: |-
                            The training input mode that the algorithm supports. For more information
                            about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).


                            Pipe mode


                            If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                            from Amazon S3 to the container.


                            File mode


                            If an algorithm supports File mode, SageMaker downloads the training data
                            from S3 to the provisioned ML storage volume, and mounts the directory to
                            the Docker volume for the training container.


                            You must provision the ML storage volume with sufficient capacity to accommodate
                            the data downloaded from S3. In addition to the training data, the ML storage
                            volume also stores the output model. The algorithm container uses the ML
                            storage volume to also store intermediate information, if any.


                            For distributed algorithms, training data is distributed uniformly. Your
                            training duration is predictable if the input data objects sizes are approximately
                            the same. SageMaker does not split the files any further for model training.
                            If the object sizes are skewed, training won't be optimal as the data distribution
                            is also skewed when one host in a training cluster is overloaded, thus becoming
                            a bottleneck in training.


                            FastFile mode


                            If an algorithm supports FastFile mode, SageMaker streams data directly from
                            S3 to the container with no code changes, and provides file system access
                            to the data. Users can author their training script to interact with these
                            files as if they were stored on disk.


                            FastFile mode works best when the data is read sequentially. Augmented manifest
                            files aren't supported. The startup time is lower when there are fewer files
                            in the S3 bucket provided.
                          type: string
                      type: object
                    checkpointConfig:
                      description: |-
                        Contains information about the output location for managed spot training
                        checkpoint data.
                      properties:
                        localPath:
                          type: string
                        s3URI:
                          type: string
                      type: object
                    definitionName:
                      type: string
                    enableInterContainerTrafficEncryption:
                      type: boolean
                    enableManagedSpotTraining:
                      type: boolean
                    enableNetworkIsolation:
                      type: boolean
                    hyperParameterRanges:
                      description: |-
                        Specifies ranges of integer, continuous, and categorical hyperparameters
                        that a hyperparameter tuning job searches. The hyperparameter tuning job
                        launches training jobs with hyperparameter values within these ranges to
                        find the combination of values that result in the training job with the best
                        performance as measured by the objective metric of the hyperparameter tuning
                        job.


                        The maximum number of items specified for Array Members refers to the maximum
                        number of hyperparameters for each range and also the maximum for the hyperparameter
                        tuning job itself. That is, the sum of the number of hyperparameters for
                        all the ranges can't exceed the maximum number specified.
                      properties:
                        autoParameters:
                          items:
                            description: |-
                              The name and an example value of the hyperparameter that you want to use
                              in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                              is eligible for Autotune, an optimal hyperparameter range is selected for
                              you.
                            properties:
                              name:
                                type: string
                              valueHint:
                                type: string
                            type: object
                          type: array
                        categoricalParameterRanges:
                          items:
                            description: A list of categorical hyperparameters to
                              tune.
                            properties:
                              name:
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        continuousParameterRanges:
                          items:
                            description: A list of continuous hyperparameters to tune.
                            properties:
                              maxValue:
                                type: string
                              minValue:
                                type: string
                              name:
                                type: string
                              scalingType:
                                type: string
                            type: object
                          type: array
                        integerParameterRanges:
                          items:
                            description: |-
                              For a hyperparameter of the integer type, specifies the range that a hyperparameter
                              tuning job searches.
                            properties:
                              maxValue:
                                type: string
                              minValue:
                                type: string
                              name:
                                type: string
                              scalingType:
                                type: string
                            type: object
                          type: array
                      type: object
                    inputDataConfig:
                      items:
                        description: A channel is a named input source that training
                          algorithms can consume.
                        properties:
                          channelName:
                            type: string
                          compressionType:
                            type: string
                          contentType:
                            type: string
                          dataSource:
                            description: Describes the location of the channel data.
                            properties:
                              fileSystemDataSource:
                                description: Specifies a file system data source for
                                  a channel.
                                properties:
                                  directoryPath:
                                    type: string
                                  fileSystemAccessMode:
                                    type: string
                                  fileSystemID:
                                    type: string
                                  fileSystemType:
                                    type: string
                                type: object
                              s3DataSource:
                                description: |-
                                  Describes the S3 data source.


                                  Your input bucket must be in the same Amazon Web Services region as your
                                  training job.
                                properties:
                                  attributeNames:
                                    items:
                                      type: string
                                    type: array
                                  instanceGroupNames:
                                    items:
                                      type: string
                                    type: array
                                  s3DataDistributionType:
                                    type: string
                                  s3DataType:
                                    type: string
                                  s3URI:
                                    type: string
                                type: object
                            type: object
                          inputMode:
                            description: |-
                              The training input mode that the algorithm supports. For more information
                              about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).


                              Pipe mode


                              If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                              from Amazon S3 to the container.


                              File mode


                              If an algorithm supports File mode, SageMaker downloads the training data
                              from S3 to the provisioned ML storage volume, and mounts the directory to
                              the Docker volume for the training container.


                              You must provision the ML storage volume with sufficient capacity to accommodate
                              the data downloaded from S3. In addition to the training data, the ML storage
                              volume also stores the output model. The algorithm container uses the ML
                              storage volume to also store intermediate information, if any.


                              For distributed algorithms, training data is distributed uniformly. Your
                              training duration is predictable if the input data objects sizes are approximately
                              the same. SageMaker does not split the files any further for model training.
                              If the object sizes are skewed, training won't be optimal as the data distribution
                              is also skewed when one host in a training cluster is overloaded, thus becoming
                              a bottleneck in training.


                              FastFile mode


                              If an algorithm supports FastFile mode, SageMaker streams data directly from
                              S3 to the container with no code changes, and provides file system access
                              to the data. Users can author their training script to interact with these
                              files as if they were stored on disk.


                              FastFile mode works best when the data is read sequentially. Augmented manifest
                              files aren't supported. The startup time is lower when there are fewer files
                              in the S3 bucket provided.
                            type: string
                          recordWrapperType:
                            type: string
                          shuffleConfig:
                            description: |-
                              A configuration for a shuffle option for input data in a channel. If you
                              use S3Prefix for S3DataType, the results of the S3 key prefix matches are
                              shuffled. If you use ManifestFile, the order of the S3 object references
                              in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order
                              of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling
                              order is determined using the Seed value.


                              For Pipe input mode, when ShuffleConfig is specified shuffling is done at
                              the start of every epoch. With large datasets, this ensures that the order
                              of the training data is different for each epoch, and it helps reduce bias
                              and possible overfitting. In a multi-node training job when ShuffleConfig
                              is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled
                              across nodes so that the content sent to a particular node on the first epoch
                              might be sent to a different node on the second epoch.
                            properties:
                              seed:
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                    outputDataConfig:
                      description: Provides information about how to store model training
                        results (model artifacts).
                      properties:
                        compressionType:
                          type: string
                        kmsKeyID:
                          type: string
                        s3OutputPath:
                          type: string
                      type: object
                    resourceConfig:
                      description: |-
                        Describes the resources, including machine learning (ML) compute instances
                        and ML storage volumes, to use for model training.
                      properties:
                        instanceCount:
                          format: int64
                          type: integer
                        instanceGroups:
                          items:
                            description: |-
                              Defines an instance group for heterogeneous cluster training. When requesting
                              a training job using the CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
                              API, you can configure multiple instance groups .
                            properties:
                              instanceCount:
                                format: int64
                                type: integer
                              instanceGroupName:
                                type: string
                              instanceType:
                                type: string
                            type: object
                          type: array
                        instanceType:
                          type: string
                        keepAlivePeriodInSeconds:
                          description: |-
                            Optional. Customer requested period in seconds for which the Training cluster
                            is kept alive after the job is finished.
                          format: int64
                          type: integer
                        volumeKMSKeyID:
                          type: string
                        volumeSizeInGB:
                          format: int64
                          type: integer
                      type: object
                    retryStrategy:
                      description: |-
                        The retry strategy to use when a training job fails due to an InternalServerError.
                        RetryStrategy is specified as part of the CreateTrainingJob and CreateHyperParameterTuningJob
                        requests. You can add the StoppingCondition parameter to the request to limit
                        the training time for the complete job.
                      properties:
                        maximumRetryAttempts:
                          format: int64
                          type: integer
                      type: object
                    roleARN:
                      type: string
                    staticHyperParameters:
                      additionalProperties:
                        type: string
                      type: object
                    stoppingCondition:
                      description: |-
                        Specifies a limit to how long a model training job or model compilation job
                        can run. It also specifies how long a managed spot training job has to complete.
                        When the job reaches the time limit, SageMaker ends the training or compilation
                        job. Use this API to cap model training costs.


                        To stop a training job, SageMaker sends the algorithm the SIGTERM signal,
                        which delays job termination for 120 seconds. Algorithms can use this 120-second
                        window to save the model artifacts, so the results of training are not lost.


                        The training algorithms provided by SageMaker automatically save the intermediate
                        results of a model training job when possible. This attempt to save artifacts
                        is only a best effort case as model might not be in a state from which it
                        can be saved. For example, if training has just started, the model might
                        not be ready to save. When saved, this intermediate data is a valid model
                        artifact. You can use it to create a model with CreateModel.


                        The Neural Topic Model (NTM) currently does not support saving intermediate
                        model artifacts. When training NTMs, make sure that the maximum runtime is
                        sufficient for the training job to complete.
                      properties:
                        maxPendingTimeInSeconds:
                          description: Maximum job scheduler pending time in seconds.
                          format: int64
                          type: integer
                        maxRuntimeInSeconds:
                          format: int64
                          type: integer
                        maxWaitTimeInSeconds:
                          format: int64
                          type: integer
                      type: object
                    tuningObjective:
                      description: |-
                        Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                        tuning uses the value of this metric to evaluate the training jobs it launches,
                        and returns the training job that results in either the highest or lowest
                        value for this metric, depending on the value you specify for the Type parameter.
                        If you want to define a custom objective metric, see Define metrics and environment
                        variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                      properties:
                        metricName:
                          type: string
                        type_:
                          type: string
                      type: object
                    vpcConfig:
                      description: |-
                        Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                        hosted models, and compute resources have access to. You can control access
                        to and from your resources by configuring a VPC. For more information, see
                        Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                      properties:
                        securityGroupIDs:
                          items:
                            type: string
                          type: array
                        subnets:
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                type: array
              warmStartConfig:
                description: |-
                  Specifies the configuration for starting the hyperparameter tuning job using
                  one or more previous tuning jobs as a starting point. The results of previous
                  tuning jobs are used to inform which combinations of hyperparameters to search
                  over in the new tuning job.


                  All training jobs launched by the new hyperparameter tuning job are evaluated
                  by using the objective metric. If you specify IDENTICAL_DATA_AND_ALGORITHM
                  as the WarmStartType value for the warm start configuration, the training
                  job that performs the best in the new tuning job is compared to the best
                  training jobs from the parent tuning jobs. From these, the training job that
                  performs the best as measured by the objective metric is returned as the
                  overall best training job.


                  All training jobs launched by parent hyperparameter tuning jobs and the new
                  hyperparameter tuning jobs count against the limit of training jobs for the
                  tuning job.
                properties:
                  parentHyperParameterTuningJobs:
                    items:
                      description: |-
                        A previously completed or stopped hyperparameter tuning job to be used as
                        a starting point for a new hyperparameter tuning job.
                      properties:
                        hyperParameterTuningJobName:
                          type: string
                      type: object
                    type: array
                  warmStartType:
                    type: string
                type: object
            required:
            - hyperParameterTuningJobConfig
            - hyperParameterTuningJobName
            type: object
          status:
            description: HyperParameterTuningJobStatus defines the observed state
              of HyperParameterTuningJob
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              bestTrainingJob:
                description: |-
                  A TrainingJobSummary (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TrainingJobSummary.html)
                  object that describes the training job that completed with the best current
                  HyperParameterTuningJobObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobObjective.html).
                properties:
                  creationTime:
                    format: date-time
                    type: string
                  failureReason:
                    type: string
                  finalHyperParameterTuningJobObjectiveMetric:
                    description: |-
                      Shows the latest objective metric emitted by a training job that was launched
                      by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective
                      parameter of HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                      value:
                        type: number
                    type: object
                  objectiveStatus:
                    type: string
                  trainingEndTime:
                    format: date-time
                    type: string
                  trainingJobARN:
                    type: string
                  trainingJobDefinitionName:
                    type: string
                  trainingJobName:
                    type: string
                  trainingJobStatus:
                    type: string
                  trainingStartTime:
                    format: date-time
                    type: string
                  tunedHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  tuningJobName:
                    type: string
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: If the tuning job failed, the reason it failed.
                type: string
              hyperParameterTuningJobStatus:
                description: The status of the tuning job.
                type: string
              overallBestTrainingJob:
                description: |-
                  If the hyperparameter tuning job is an warm start tuning job with a WarmStartType
                  of IDENTICAL_DATA_AND_ALGORITHM, this is the TrainingJobSummary (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TrainingJobSummary.html)
                  for the training job with the best objective metric value of all training
                  jobs launched by this tuning job and all parent jobs specified for the warm
                  start tuning job.
                properties:
                  creationTime:
                    format: date-time
                    type: string
                  failureReason:
                    type: string
                  finalHyperParameterTuningJobObjectiveMetric:
                    description: |-
                      Shows the latest objective metric emitted by a training job that was launched
                      by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective
                      parameter of HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                      value:
                        type: number
                    type: object
                  objectiveStatus:
                    type: string
                  trainingEndTime:
                    format: date-time
                    type: string
                  trainingJobARN:
                    type: string
                  trainingJobDefinitionName:
                    type: string
                  trainingJobName:
                    type: string
                  trainingJobStatus:
                    type: string
                  trainingStartTime:
                    format: date-time
                    type: string
                  tunedHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  tuningJobName:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
