apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: aiven-operator-system/aiven-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: kafkatopics.aiven.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: aiven.io
  names:
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    singular: kafkatopic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.serviceName
      name: Service Name
      type: string
    - jsonPath: .spec.project
      name: Project
      type: string
    - jsonPath: .spec.partitions
      name: Partitions
      type: string
    - jsonPath: .spec.replication
      name: Replication
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaTopic is the Schema for the kafkatopics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaTopicSpec defines the desired state of KafkaTopic
            properties:
              authSecretRef:
                description: Authentication reference to Aiven token in a secret
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - key
                - name
                type: object
              config:
                description: Kafka topic configuration
                properties:
                  cleanup_policy:
                    description: cleanup.policy value
                    type: string
                  compression_type:
                    description: compression.type value
                    type: string
                  delete_retention_ms:
                    description: delete.retention.ms value
                    format: int64
                    type: integer
                  file_delete_delay_ms:
                    description: file.delete.delay.ms value
                    format: int64
                    type: integer
                  flush_messages:
                    description: flush.messages value
                    format: int64
                    type: integer
                  flush_ms:
                    description: flush.ms value
                    format: int64
                    type: integer
                  index_interval_bytes:
                    description: index.interval.bytes value
                    format: int64
                    type: integer
                  max_compaction_lag_ms:
                    description: max.compaction.lag.ms value
                    format: int64
                    type: integer
                  max_message_bytes:
                    description: max.message.bytes value
                    format: int64
                    type: integer
                  message_downconversion_enable:
                    description: message.downconversion.enable value
                    type: boolean
                  message_format_version:
                    description: message.format.version value
                    type: string
                  message_timestamp_difference_max_ms:
                    description: message.timestamp.difference.max.ms value
                    format: int64
                    type: integer
                  message_timestamp_type:
                    description: message.timestamp.type value
                    type: string
                  min_compaction_lag_ms:
                    description: min.compaction.lag.ms value
                    format: int64
                    type: integer
                  min_insync_replicas:
                    description: min.insync.replicas value
                    format: int64
                    type: integer
                  preallocate:
                    description: preallocate value
                    type: boolean
                  retention_bytes:
                    description: retention.bytes value
                    format: int64
                    type: integer
                  retention_ms:
                    description: retention.ms value
                    format: int64
                    type: integer
                  segment_bytes:
                    description: segment.bytes value
                    format: int64
                    type: integer
                  segment_index_bytes:
                    description: segment.index.bytes value
                    format: int64
                    type: integer
                  segment_jitter_ms:
                    description: segment.jitter.ms value
                    format: int64
                    type: integer
                  segment_ms:
                    description: segment.ms value
                    format: int64
                    type: integer
                  unclean_leader_election_enable:
                    description: unclean.leader.election.enable value
                    type: boolean
                type: object
              partitions:
                description: Number of partitions to create in the topic
                maximum: 1000000
                minimum: 1
                type: integer
              project:
                description: Target project.
                format: ^[a-zA-Z0-9_-]*$
                maxLength: 63
                type: string
              replication:
                description: Replication factor for the topic
                minimum: 2
                type: integer
              serviceName:
                description: Service name.
                maxLength: 63
                type: string
              tags:
                description: Kafka topic tags
                items:
                  properties:
                    key:
                      format: ^[a-zA-Z0-9_-]*$
                      maxLength: 64
                      minLength: 1
                      type: string
                    value:
                      format: ^[a-zA-Z0-9_-]*$
                      maxLength: 256
                      type: string
                  required:
                  - key
                  type: object
                type: array
              termination_protection:
                description: It is a Kubernetes side deletion protections, which prevents
                  the kafka topic from being deleted by Kubernetes. It is recommended
                  to enable this for any production databases containing critical
                  data.
                type: boolean
            required:
            - authSecretRef
            - partitions
            - project
            - replication
            - serviceName
            type: object
          status:
            description: KafkaTopicStatus defines the observed state of KafkaTopic
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an KafkaTopic state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State represents the state of the kafka topic
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
