apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: endpoints.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.endpointStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Endpoint is the Schema for the Endpoints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "EndpointSpec defines the desired state of Endpoint. \n A
              hosted endpoint for real-time inference."
            properties:
              endpointConfigName:
                description: The name of an endpoint configuration. For more information,
                  see CreateEndpointConfig.
                type: string
              endpointName:
                description: The name of the endpoint.The name must be unique within
                  an Amazon Web Services Region in your Amazon Web Services account.
                  The name is case-insensitive in CreateEndpoint, but the case is
                  preserved and must be matched in .
                type: string
              tags:
                description: An array of key-value pairs. You can use tags to categorize
                  your Amazon Web Services resources in different ways, for example,
                  by purpose, owner, or environment. For more information, see Tagging
                  Amazon Web Services Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: "A tag object that consists of a key and an optional
                    value, used to manage metadata for SageMaker Amazon Web Services
                    resources. \n You can add tags to notebook instances, training
                    jobs, hyperparameter tuning jobs, batch transform jobs, models,
                    labeling jobs, work teams, endpoint configurations, and endpoints.
                    For more information on adding tags to SageMaker resources, see
                    AddTags. \n For more information on adding metadata to your Amazon
                    Web Services resources with tagging, see Tagging Amazon Web Services
                    resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services
                    resources with tagging, see Tagging Best Practices: Implement
                    an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf)."
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - endpointConfigName
            - endpointName
            type: object
          status:
            description: EndpointStatus defines the observed state of Endpoint
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: A timestamp that shows when the endpoint was created.
                format: date-time
                type: string
              endpointStatus:
                description: "The status of the endpoint. \n * OutOfService: Endpoint
                  is not available to take incoming requests. \n * Creating: CreateEndpoint
                  is executing. \n * Updating: UpdateEndpoint or UpdateEndpointWeightsAndCapacities
                  is executing. \n * SystemUpdating: Endpoint is undergoing maintenance
                  and cannot be updated or deleted or re-scaled until it has completed.
                  This maintenance operation does not change any customer-specified
                  values such as VPC config, KMS encryption, model, instance type,
                  or instance count. \n * RollingBack: Endpoint fails to scale up
                  or down or change its variant weight and is in the process of rolling
                  back to its previous configuration. Once the rollback completes,
                  endpoint returns to an InService status. This transitional status
                  only applies to an endpoint that has autoscaling enabled and is
                  undergoing variant weight or capacity changes as part of an UpdateEndpointWeightsAndCapacities
                  call or when the UpdateEndpointWeightsAndCapacities operation is
                  called explicitly. \n * InService: Endpoint is available to process
                  incoming requests. \n * Deleting: DeleteEndpoint is executing. \n
                  * Failed: Endpoint could not be created, updated, or re-scaled.
                  Use DescribeEndpointOutput$FailureReason for information about the
                  failure. DeleteEndpoint is the only operation that can be performed
                  on a failed endpoint."
                type: string
              failureReason:
                description: If the status of the endpoint is Failed, the reason why
                  it failed.
                type: string
              lastModifiedTime:
                description: A timestamp that shows when the endpoint was last modified.
                format: date-time
                type: string
              productionVariants:
                description: An array of ProductionVariantSummary objects, one for
                  each model hosted behind this endpoint.
                items:
                  description: Describes weight and capacities for a production variant
                    associated with an endpoint. If you sent a request to the UpdateEndpointWeightsAndCapacities
                    API and the endpoint status is Updating, you get different desired
                    and current values.
                  properties:
                    currentInstanceCount:
                      format: int64
                      type: integer
                    currentWeight:
                      type: number
                    deployedImages:
                      items:
                        description: "Gets the Amazon EC2 Container Registry path
                          of the docker image of the model that is hosted in this
                          ProductionVariant. \n If you used the registry/repository[:tag]
                          form to specify the image path of the primary container
                          when you created the model hosted in this ProductionVariant,
                          the path resolves to a path of the form registry/repository[@digest].
                          A digest is a hash value that identifies a specific version
                          of an image. For information about Amazon ECR paths, see
                          Pulling an Image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html)
                          in the Amazon ECR User Guide."
                        properties:
                          resolutionTime:
                            format: date-time
                            type: string
                          resolvedImage:
                            type: string
                          specifiedImage:
                            type: string
                        type: object
                      type: array
                    desiredInstanceCount:
                      format: int64
                      type: integer
                    desiredWeight:
                      type: number
                    variantName:
                      type: string
                    variantStatus:
                      items:
                        description: Describes the status of the production variant.
                        properties:
                          startTime:
                            format: date-time
                            type: string
                          status:
                            type: string
                          statusMessage:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
