apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  creationTimestamp: null
  name: integrations.apigatewayv2.services.k8s.aws
spec:
  group: apigatewayv2.services.k8s.aws
  names:
    kind: Integration
    listKind: IntegrationList
    plural: integrations
    singular: integration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Integration is the Schema for the Integrations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              IntegrationSpec defines the desired state of Integration.

              Represents an integration.
            properties:
              apiID:
                description: The API identifier.
                type: string
              apiRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              connectionID:
                description: |-
                  The ID of the VPC link for a private integration. Supported only for HTTP
                  APIs.
                type: string
              connectionRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              connectionType:
                description: |-
                  The type of the network connection to the integration endpoint. Specify INTERNET
                  for connections through the public routable internet or VPC_LINK for private
                  connections between API Gateway and resources in a VPC. The default value
                  is INTERNET.
                type: string
              contentHandlingStrategy:
                description: |-
                  Supported only for WebSocket APIs. Specifies how to handle response payload
                  content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT,
                  with the following behaviors:

                  CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string
                  to the corresponding binary blob.

                  CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded
                  string.

                  If this property is not defined, the response payload will be passed through
                  from the integration response to the route response or method response without
                  modification.
                type: string
              credentialsARN:
                description: |-
                  Specifies the credentials required for the integration, if any. For AWS integrations,
                  three options are available. To specify an IAM Role for API Gateway to assume,
                  use the role's Amazon Resource Name (ARN). To require that the caller's identity
                  be passed through from the request, specify the string arn:aws:iam::*:user/*.
                  To use resource-based permissions on supported AWS services, specify null.
                type: string
              description:
                description: The description of the integration.
                type: string
              integrationMethod:
                description: Specifies the integration's HTTP method type.
                type: string
              integrationSubtype:
                description: |-
                  Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service
                  action to invoke. To learn more, see Integration subtype reference (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html).
                type: string
              integrationType:
                description: |-
                  The integration type of an integration. One of the following:

                  AWS: for integrating the route or method request with an AWS service action,
                  including the Lambda function-invoking action. With the Lambda function-invoking
                  action, this is referred to as the Lambda custom integration. With any other
                  AWS service action, this is known as AWS integration. Supported only for
                  WebSocket APIs.

                  AWS_PROXY: for integrating the route or method request with a Lambda function
                  or other AWS service action. This integration is also referred to as a Lambda
                  proxy integration.

                  HTTP: for integrating the route or method request with an HTTP endpoint.
                  This integration is also referred to as the HTTP custom integration. Supported
                  only for WebSocket APIs.

                  HTTP_PROXY: for integrating the route or method request with an HTTP endpoint,
                  with the client request passed through as-is. This is also referred to as
                  HTTP proxy integration. For HTTP API private integrations, use an HTTP_PROXY
                  integration.

                  MOCK: for integrating the route or method request with API Gateway as a "loopback"
                  endpoint without invoking any backend. Supported only for WebSocket APIs.
                type: string
              integrationURI:
                description: |-
                  For a Lambda integration, specify the URI of a Lambda function.

                  For an HTTP integration, specify a fully-qualified URL.

                  For an HTTP API private integration, specify the ARN of an Application Load
                  Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
                  If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances
                  to identify resources. You can use query parameters to target specific resources.
                  To learn more, see DiscoverInstances (https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html).
                  For private integrations, all resources must be owned by the same AWS account.
                type: string
              passthroughBehavior:
                description: |-
                  Specifies the pass-through behavior for incoming requests based on the Content-Type
                  header in the request, and the available mapping templates specified as the
                  requestTemplates property on the Integration resource. There are three valid
                  values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket
                  APIs.

                  WHEN_NO_MATCH passes the request body for unmapped content types through
                  to the integration backend without transformation.

                  NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type
                  response.

                  WHEN_NO_TEMPLATES allows pass-through when the integration has no content
                  types mapped to templates. However, if there is at least one content type
                  defined, unmapped content types will be rejected with the same HTTP 415 Unsupported
                  Media Type response.
                type: string
              payloadFormatVersion:
                description: |-
                  Specifies the format of the payload sent to an integration. Required for
                  HTTP APIs.
                type: string
              requestParameters:
                additionalProperties:
                  type: string
                description: |-
                  For WebSocket APIs, a key-value map specifying request parameters that are
                  passed from the method request to the backend. The key is an integration
                  request parameter name and the associated value is a method request parameter
                  value or static value that must be enclosed within single quotes and pre-encoded
                  as required by the backend. The method request parameter value must match
                  the pattern of method.request.{location}.{name} , where {location} is querystring,
                  path, or header; and {name} must be a valid and unique method request parameter
                  name.

                  For HTTP API integrations with a specified integrationSubtype, request parameters
                  are a key-value map specifying parameters that are passed to AWS_PROXY integrations.
                  You can provide static values, or map request data, stage variables, or context
                  variables that are evaluated at runtime. To learn more, see Working with
                  AWS service integrations for HTTP APIs (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services.html).

                  For HTTP API integrations without a specified integrationSubtype request
                  parameters are a key-value map specifying how to transform HTTP requests
                  before sending them to the backend. The key should follow the pattern <action>:<header|querystring|path>.<location>
                  where action can be append, overwrite or remove. For values, you can provide
                  static values, or map request data, stage variables, or context variables
                  that are evaluated at runtime. To learn more, see Transforming API requests
                  and responses (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html).
                type: object
              requestTemplates:
                additionalProperties:
                  type: string
                description: |-
                  Represents a map of Velocity templates that are applied on the request payload
                  based on the value of the Content-Type header sent by the client. The content
                  type value is the key in this map, and the template (as a String) is the
                  value. Supported only for WebSocket APIs.
                type: object
              responseParameters:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: |-
                  Supported only for HTTP APIs. You use response parameters to transform the
                  HTTP response from a backend integration before returning the response to
                  clients. Specify a key-value map from a selection key to response parameters.
                  The selection key must be a valid HTTP status code within the range of 200-599.
                  Response parameters are a key-value map. The key must match pattern <action>:<header>.<location>
                  or overwrite.statuscode. The action can be append, overwrite or remove. The
                  value can be a static value, or map to response data, stage variables, or
                  context variables that are evaluated at runtime. To learn more, see Transforming
                  API requests and responses (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html).
                type: object
              templateSelectionExpression:
                description: The template selection expression for the integration.
                type: string
              timeoutInMillis:
                description: |-
                  Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and
                  between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is
                  29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
                format: int64
                type: integer
              tlsConfig:
                description: |-
                  The TLS configuration for a private integration. If you specify a TLS configuration,
                  private integration traffic uses the HTTPS protocol. Supported only for HTTP
                  APIs.
                properties:
                  serverNameToVerify:
                    description: A string with a length between [1-512].
                    type: string
                type: object
            required:
            - integrationType
            type: object
          status:
            description: IntegrationStatus defines the observed state of Integration
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              apiGatewayManaged:
                description: |-
                  Specifies whether an integration is managed by API Gateway. If you created
                  an API using using quick create, the resulting integration is managed by
                  API Gateway. You can update a managed integration, but you can't delete it.
                type: boolean
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              integrationID:
                description: Represents the identifier of an integration.
                type: string
              integrationResponseSelectionExpression:
                description: |-
                  The integration response selection expression for the integration. Supported
                  only for WebSocket APIs. See Integration Response Selection Expressions (https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-integration-response-selection-expressions).
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
