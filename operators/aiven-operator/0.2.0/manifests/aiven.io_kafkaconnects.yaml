apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: aiven-operator-system/aiven-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: kafkaconnects.aiven.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: aiven.io
  names:
    kind: KafkaConnect
    listKind: KafkaConnectList
    plural: kafkaconnects
    singular: kafkaconnect
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaConnect is the Schema for the kafkaconnects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaConnectSpec defines the desired state of KafkaConnect
            properties:
              authSecretRef:
                description: Authentication reference to Aiven token in a secret
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - key
                - name
                type: object
              cloudName:
                description: Cloud the service runs in.
                maxLength: 256
                type: string
              maintenanceWindowDow:
                description: Day of week when maintenance operations should be performed.
                  One monday, tuesday, wednesday, etc.
                enum:
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
                - sunday
                - never
                type: string
              maintenanceWindowTime:
                description: Time of day when maintenance operations should be performed.
                  UTC time in HH:mm:ss format.
                maxLength: 8
                type: string
              plan:
                description: Subscription plan.
                maxLength: 128
                type: string
              project:
                description: Target project.
                format: ^[a-zA-Z0-9_-]*$
                maxLength: 63
                type: string
              projectVpcId:
                description: Identifier of the VPC the service should be in, if any.
                maxLength: 36
                type: string
              terminationProtection:
                description: Prevent service from being deleted. It is recommended
                  to have this enabled for all services.
                type: boolean
              userConfig:
                description: PostgreSQL specific user configuration options
                properties:
                  connector_client_config_override_policy:
                    description: Defines what client configurations can be overridden
                      by the connector. Default is None
                    type: string
                  consumer_auto_offset_reset:
                    description: What to do when there is no initial offset in Kafka
                      or if the current offset does not exist any more on the server.
                      Default is earliest
                    type: string
                  consumer_fetch_max_bytes:
                    description: Records are fetched in batches by the consumer, and
                      if the first record batch in the first non-empty partition of
                      the fetch is larger than this value, the record batch will still
                      be returned to ensure that the consumer can make progress. As
                      such, this is not a absolute maximum.
                    format: int64
                    type: integer
                  consumer_isolation_level:
                    description: Transaction read isolation level. read_uncommitted
                      is the default, but read_committed can be used if consume-exactly-once
                      behavior is desired.
                    type: string
                  consumer_max_partition_fetch_bytes:
                    description: Records are fetched in batches by the consumer.If
                      the first record batch in the first non-empty partition of the
                      fetch is larger than this limit, the batch will still be returned
                      to ensure that the consumer can make progress.
                    format: int64
                    type: integer
                  consumer_max_poll_interval_ms:
                    description: The maximum delay in milliseconds between invocations
                      of poll() when using consumer group management (defaults to
                      300000).
                    format: int64
                    type: integer
                  consumer_max_poll_records:
                    description: The maximum number of records returned in a single
                      call to poll() (defaults to 500).
                    format: int64
                    type: integer
                  offset_flush_interval_ms:
                    description: The interval at which to try committing offsets for
                      tasks (defaults to 60000).
                    format: int64
                    type: integer
                  private_access:
                    description: Allow access to selected service ports from private
                      networks
                    properties:
                      kafka_connect:
                        description: Allow clients to connect to kafka_connect with
                          a DNS name that always resolves to the service's private
                          IP addresses. Only available in certain network locations
                        type: boolean
                      prometheus:
                        description: Allow clients to connect to prometheus with a
                          DNS name that always resolves to the service's private IP
                          addresses. Only available in certain network locations
                        type: boolean
                    type: object
                  producer_max_request_size:
                    description: This setting will limit the number of record batches
                      the producer will send in a single request to avoid sending
                      huge requests.
                    format: int64
                    type: integer
                  public_access:
                    description: Allow access to selected service ports from the public
                      Internet
                    properties:
                      kafka_connect:
                        description: Allow clients to connect to kafka_connect from
                          the public internet for service nodes that are in a project
                          VPC or another type of private network
                        type: boolean
                      prometheus:
                        description: Allow clients to connect to prometheus from the
                          public internet for service nodes that are in a project
                          VPC or another type of private network
                        type: boolean
                    type: object
                  session_timeout_ms:
                    description: The timeout in milliseconds used to detect failures
                      when using Kafkaâ€™s group management facilities (defaults to
                      10000).
                    format: int64
                    type: integer
                type: object
            required:
            - authSecretRef
            - project
            type: object
          status:
            description: ServiceStatus defines the observed state of service
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of a service state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: Service state
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
