apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  labels:
    alloydb-omni: "true"
  name: switchovers.alloydbomni.dbadmin.goog
spec:
  group: alloydbomni.dbadmin.goog
  names:
    kind: Switchover
    listKind: SwitchoverList
    plural: switchovers
    singular: switchover
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: state
      type: string
    - jsonPath: .status.internal.phase
      name: phase
      type: string
    - jsonPath: .status.internal.newPrimary
      name: newPrimary
      type: string
    - jsonPath: .status.internal.oldPrimary
      name: oldPrimary
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Switchover represents the parameters and status of a single switchover
          operation.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SwitchoverSpec defines the desired state of Switchover.
            properties:
              dbclusterRef:
                description: DBClusterRef is the DBCluster name to initiate a switchover.
                  The `Switchover` object must be created in the same namespace as
                  the DBCluster that it references. This field is required for Switchover.
                type: string
              newPrimary:
                description: NewPrimary is the standby instance to switch with the
                  current primary.
                type: string
              newPrimaryInstance:
                description: 'NewPrimaryInstance is the standby instance to switch
                  with the current primary. Deprecated: Please use NewPrimary field
                  instead'
                type: string
              primaryHost:
                description: PrimaryHost is the IP always point to the primary instance.
                type: string
            type: object
          status:
            description: SwitchoverStatus defines the observed state of Switchover.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the Entity's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              createTime:
                description: CreateTime is the time that the internal switchover workflow
                  mechanism was created.
                format: date-time
                type: string
              criticalIncidents:
                description: CriticalIncidents is a flat list of all active Critical
                  Incidents.
                items:
                  description: CriticalIncident contains all information about an
                    ongoing critical incident.
                  properties:
                    code:
                      description: Code is the error code of this particular error.
                        Error codes are DBSE+numeric strings, like "DBSE1012".
                      type: string
                    createTime:
                      description: CreateTime is the timestamp when this Incident
                        was created at the origin.
                      format: date-time
                      type: string
                    message:
                      description: Message describes the incident/error that occurred.
                      type: string
                    messageTemplateParams:
                      additionalProperties:
                        type: string
                      description: MessageTemplateParams contains key-value pairs
                        necessary for generating a user-friendly data-driven version
                        of Message in the UI.
                      type: object
                    resource:
                      description: Resource contains information about the Database
                        Service component that reported the incident as well as about
                        the K8s resource.
                      properties:
                        component:
                          description: Component is an internal identifier of the
                            Database Service subsystem that reported the incident.
                          type: string
                        location:
                          description: Location
                          properties:
                            cluster:
                              description: Cluster is the name of the cluster of the
                                affected K8S resource.
                              type: string
                            group:
                              description: Group is the Group name of the k8s resource.
                              type: string
                            kind:
                              description: Kind is the Kind of the k8s resource.
                              type: string
                            name:
                              description: Name is the name of the affected K8S resource.
                              type: string
                            namespace:
                              description: Namespace is the namespace of the affected
                                K8S resource.
                              type: string
                            version:
                              description: Group is the Version of the k8s resource.
                              type: string
                          type: object
                      required:
                      - component
                      type: object
                    stackTrace:
                      description: StackTrace contains an unstructured list of messages
                        from the stack trace.
                      items:
                        description: CriticalIncidentStackTraceMessage contains stack
                          trace information available for the incident.
                        properties:
                          component:
                            description: Component is the name of a Database Service
                              component that logged the message.
                            type: string
                          message:
                            description: Logged message.
                            type: string
                        type: object
                      type: array
                    transientUntil:
                      description: TransientUntil if present indicates that the issue
                        should be considered transient until the specified time.
                      format: date-time
                      type: string
                  required:
                  - code
                  - createTime
                  - resource
                  type: object
                type: array
              endTime:
                description: EndTime is the time switchover reached its final state.
                format: date-time
                type: string
              internal:
                description: Internal is used by the system controllers. You should
                  not directly depend on the information in this section.
                properties:
                  newPrimary:
                    description: NewPrimary is the instance that we are attempting
                      to switchover to.
                    type: string
                  oldPrimary:
                    description: OldPrimary is the instance that was the primary at
                      the start of the switchover.
                    type: string
                  phase:
                    description: Phase is used to keep track of the current state
                      of the switchover
                    enum:
                    - UpdateDbcluster
                    - StopPrimary
                    - PromoteStandby
                    - ValidateNewPrimary
                    - UpdateOldPrimaryResources
                    - UpdateNewPrimaryResources
                    - UpdateOldPrimaryConfigs
                    - Complete
                    - SyncOldPrimary
                    - StartOldPrimary
                    - PreSuccess
                    - RepointStandbys
                    - RollbackPrimary
                    - RollbackStandbys
                    type: string
                required:
                - newPrimary
                - oldPrimary
                type: object
              observedGeneration:
                description: 'Internal: The generation observed by the controller.'
                format: int64
                type: integer
              reconciled:
                description: 'Internal: Whether the resource was reconciled by the
                  controller.'
                type: boolean
              startTime:
                description: StartTime is the time that the switchover operation started.
                format: date-time
                type: string
              state:
                description: State is the current state of the switchover operation.
                  The values are `InProgress`, `Success`, `Failed_RollbackInProgress`,
                  `Failed_RollbackSuccess`, `Failed_RollbackFailed` `InProgress` means
                  the switchover is still in progress. `Success` means that the switchover
                  has completed. `Failed_RollbackInProgress` means that the operator
                  was unable to promote the new primary instance, and is attempting
                  to restart the old primary instance. `Failed_RollbackSuccess` means
                  that the operator was unable to promote the new primary instance,
                  and successfully restarted the old primary instance. `Failed_RollbackFailed`
                  means that  the operator was unable to promote the new primary instance,
                  and were not able to restart the old primary instance. The DBCluster
                  might need to be manually repaired.
                enum:
                - InProgress
                - Success
                - Failed_RollbackInProgress
                - Failed_RollbackSuccess
                - Failed_RollbackFailed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
