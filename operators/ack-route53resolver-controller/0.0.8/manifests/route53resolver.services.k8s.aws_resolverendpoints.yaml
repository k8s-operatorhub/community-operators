apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: resolverendpoints.route53resolver.services.k8s.aws
spec:
  group: route53resolver.services.k8s.aws
  names:
    kind: ResolverEndpoint
    listKind: ResolverEndpointList
    plural: resolverendpoints
    singular: resolverendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResolverEndpoint is the Schema for the ResolverEndpoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ResolverEndpointSpec defines the desired state of ResolverEndpoint.


              In the response to a CreateResolverEndpoint (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html),
              DeleteResolverEndpoint (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverEndpoint.html),
              GetResolverEndpoint (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html),
              Updates the name, or ResolverEndpointType for an endpoint, or UpdateResolverEndpoint
              (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html)
              request, a complex type that contains settings for an existing inbound or
              outbound Resolver endpoint.
            properties:
              direction:
                description: |-
                  Specify the applicable value:


                     * INBOUND: Resolver forwards DNS queries to the DNS service for a VPC
                     from your network


                     * OUTBOUND: Resolver forwards DNS queries from the DNS service for a VPC
                     to your network
                type: string
              ipAddresses:
                description: |-
                  The subnets and IP addresses in your VPC that DNS queries originate from
                  (for outbound endpoints) or that you forward DNS queries to (for inbound
                  endpoints). The subnet ID uniquely identifies a VPC.
                items:
                  description: |-
                    In a CreateResolverEndpoint (https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html)
                    request, the IP address that DNS queries originate from (for outbound endpoints)
                    or that you forward DNS queries to (for inbound endpoints). IpAddressRequest
                    also includes the ID of the subnet that contains the IP address.
                  properties:
                    ip:
                      type: string
                    ipv6:
                      type: string
                    subnetID:
                      type: string
                    subnetRef:
                      description: Reference field for SubnetID
                      properties:
                        from:
                          description: |-
                            AWSResourceReference provides all the values necessary to reference another
                            k8s resource for finding the identifier(Id/ARN/Name)
                          properties:
                            name:
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              name:
                description: |-
                  A friendly name that lets you easily find a configuration in the Resolver
                  dashboard in the Route 53 console.
                type: string
              resolverEndpointType:
                description: |-
                  For the endpoint type you can choose either IPv4, IPv6. or dual-stack. A
                  dual-stack endpoint means that it will resolve via both IPv4 and IPv6. This
                  endpoint type is applied to all IP addresses.
                type: string
              securityGroupIDs:
                description: |-
                  The ID of one or more security groups that you want to use to control access
                  to this VPC. The security group that you specify must include one or more
                  inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound
                  Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access.
                  For inbound access, open port 53. For outbound access, open the port that
                  you're using for DNS queries on your network.
                items:
                  type: string
                type: array
              securityGroupRefs:
                items:
                  description: "AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference\ntype to provide more user friendly syntax
                    for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                    \ name: my-api"
                  properties:
                    from:
                      description: |-
                        AWSResourceReference provides all the values necessary to reference another
                        k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                      type: object
                  type: object
                type: array
              tags:
                description: A list of the tag keys and values that you want to associate
                  with the endpoint.
                items:
                  description: |-
                    One tag that you want to add to the specified resource. A tag consists of
                    a Key (a name for the tag) and a Value.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - direction
            - ipAddresses
            type: object
          status:
            description: ResolverEndpointStatus defines the observed state of ResolverEndpoint
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: |-
                  The date and time that the endpoint was created, in Unix time format and
                  Coordinated Universal Time (UTC).
                type: string
              creatorRequestID:
                description: |-
                  A unique string that identifies the request that created the Resolver endpoint.
                  The CreatorRequestId allows failed requests to be retried without the risk
                  of running the operation twice.
                type: string
              hostVPCID:
                description: The ID of the VPC that you want to create the Resolver
                  endpoint in.
                type: string
              id:
                description: The ID of the Resolver endpoint.
                type: string
              ipAddressCount:
                description: The number of IP addresses that the Resolver endpoint
                  can use for DNS queries.
                format: int64
                type: integer
              modificationTime:
                description: |-
                  The date and time that the endpoint was last modified, in Unix time format
                  and Coordinated Universal Time (UTC).
                type: string
              status:
                description: |-
                  A code that specifies the current status of the Resolver endpoint. Valid
                  values include the following:


                     * CREATING: Resolver is creating and configuring one or more Amazon VPC
                     network interfaces for this endpoint.


                     * OPERATIONAL: The Amazon VPC network interfaces for this endpoint are
                     correctly configured and able to pass inbound or outbound DNS queries
                     between your network and Resolver.


                     * UPDATING: Resolver is associating or disassociating one or more network
                     interfaces with this endpoint.


                     * AUTO_RECOVERING: Resolver is trying to recover one or more of the network
                     interfaces that are associated with this endpoint. During the recovery
                     process, the endpoint functions with limited capacity because of the limit
                     on the number of DNS queries per IP address (per network interface). For
                     the current limit, see Limits on Route 53 Resolver (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver).


                     * ACTION_NEEDED: This endpoint is unhealthy, and Resolver can't automatically
                     recover it. To resolve the problem, we recommend that you check each IP
                     address that you associated with the endpoint. For each IP address that
                     isn't available, add another IP address and then delete the IP address
                     that isn't available. (An endpoint must always include at least two IP
                     addresses.) A status of ACTION_NEEDED can have a variety of causes. Here
                     are two common causes: One or more of the network interfaces that are
                     associated with the endpoint were deleted using Amazon VPC. The network
                     interface couldn't be created for some reason that's outside the control
                     of Resolver.


                     * DELETING: Resolver is deleting this endpoint and the associated network
                     interfaces.
                type: string
              statusMessage:
                description: A detailed description of the status of the Resolver
                  endpoint.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
