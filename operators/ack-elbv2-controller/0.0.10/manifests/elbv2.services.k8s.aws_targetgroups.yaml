apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: targetgroups.elbv2.services.k8s.aws
spec:
  group: elbv2.services.k8s.aws
  names:
    kind: TargetGroup
    listKind: TargetGroupList
    plural: targetgroups
    singular: targetgroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TargetGroup is the Schema for the TargetGroups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              TargetGroupSpec defines the desired state of TargetGroup.


              Information about a target group.
            properties:
              healthCheckEnabled:
                description: |-
                  Indicates whether health checks are enabled. If the target type is lambda,
                  health checks are disabled by default but can be enabled. If the target type
                  is instance, ip, or alb, health checks are always enabled and cannot be disabled.
                type: boolean
              healthCheckIntervalSeconds:
                description: |-
                  The approximate amount of time, in seconds, between health checks of an individual
                  target. The range is 5-300. If the target group protocol is TCP, TLS, UDP,
                  TCP_UDP, HTTP or HTTPS, the default is 30 seconds. If the target group protocol
                  is GENEVE, the default is 10 seconds. If the target type is lambda, the default
                  is 35 seconds.
                format: int64
                type: integer
              healthCheckPath:
                description: |-
                  [HTTP/HTTPS health checks] The destination for health checks on the targets.


                  [HTTP1 or HTTP2 protocol version] The ping path. The default is /.


                  [GRPC protocol version] The path of a custom health check method with the
                  format /package.service/method. The default is /Amazon Web Services.ALB/healthcheck.
                type: string
              healthCheckPort:
                description: |-
                  The port the load balancer uses when performing health checks on targets.
                  If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is
                  traffic-port, which is the port on which each target receives traffic from
                  the load balancer. If the protocol is GENEVE, the default is port 80.
                type: string
              healthCheckProtocol:
                description: |-
                  The protocol the load balancer uses when performing health checks on targets.
                  For Application Load Balancers, the default is HTTP. For Network Load Balancers
                  and Gateway Load Balancers, the default is TCP. The TCP protocol is not supported
                  for health checks if the protocol of the target group is HTTP or HTTPS. The
                  GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health checks.
                type: string
              healthCheckTimeoutSeconds:
                description: |-
                  The amount of time, in seconds, during which no response from a target means
                  a failed health check. The range is 2â€“120 seconds. For target groups with
                  a protocol of HTTP, the default is 6 seconds. For target groups with a protocol
                  of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a
                  protocol of GENEVE, the default is 5 seconds. If the target type is lambda,
                  the default is 30 seconds.
                format: int64
                type: integer
              healthyThresholdCount:
                description: |-
                  The number of consecutive health check successes required before considering
                  a target healthy. The range is 2-10. If the target group protocol is TCP,
                  TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 5. For target groups with
                  a protocol of GENEVE, the default is 5. If the target type is lambda, the
                  default is 5.
                format: int64
                type: integer
              ipAddressType:
                description: |-
                  The type of IP address used for this target group. The possible values are
                  ipv4 and ipv6. This is an optional parameter. If not specified, the IP address
                  type defaults to ipv4.
                type: string
              matcher:
                description: |-
                  [HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for
                  a successful response from a target. For target groups with a protocol of
                  TCP, TCP_UDP, UDP or TLS the range is 200-599. For target groups with a protocol
                  of HTTP or HTTPS, the range is 200-499. For target groups with a protocol
                  of GENEVE, the range is 200-399.
                properties:
                  grpcCode:
                    type: string
                  httpCode:
                    type: string
                type: object
              name:
                description: |-
                  The name of the target group.


                  This name must be unique per region per account, can have a maximum of 32
                  characters, must contain only alphanumeric characters or hyphens, and must
                  not begin or end with a hyphen.
                type: string
              port:
                description: |-
                  The port on which the targets receive traffic. This port is used unless you
                  specify a port override when registering the target. If the target is a Lambda
                  function, this parameter does not apply. If the protocol is GENEVE, the supported
                  port is 6081.
                format: int64
                type: integer
              protocol:
                description: |-
                  The protocol to use for routing traffic to the targets. For Application Load
                  Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers,
                  the supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load Balancers,
                  the supported protocol is GENEVE. A TCP_UDP listener must be associated with
                  a TCP_UDP target group. If the target is a Lambda function, this parameter
                  does not apply.
                type: string
              protocolVersion:
                description: |-
                  [HTTP/HTTPS protocol] The protocol version. Specify GRPC to send requests
                  to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2.
                  The default is HTTP1, which sends requests to targets using HTTP/1.1.
                type: string
              tags:
                description: The tags to assign to the target group.
                items:
                  description: Information about a tag.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              targetType:
                description: |-
                  The type of target that you must specify when registering targets with this
                  target group. You can't specify targets for a target group using more than
                  one target type.


                     * instance - Register targets by instance ID. This is the default value.


                     * ip - Register targets by IP address. You can specify IP addresses from
                     the subnets of the virtual private cloud (VPC) for the target group, the
                     RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the
                     RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP
                     addresses.


                     * lambda - Register a single Lambda function as a target.


                     * alb - Register a single Application Load Balancer as a target.
                type: string
              unhealthyThresholdCount:
                description: |-
                  The number of consecutive health check failures required before considering
                  a target unhealthy. The range is 2-10. If the target group protocol is TCP,
                  TCP_UDP, UDP, TLS, HTTP or HTTPS, the default is 2. For target groups with
                  a protocol of GENEVE, the default is 2. If the target type is lambda, the
                  default is 5.
                format: int64
                type: integer
              vpcID:
                description: |-
                  The identifier of the virtual private cloud (VPC). If the target is a Lambda
                  function, this parameter does not apply. Otherwise, this parameter is required.
                type: string
              vpcRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
            required:
            - name
            type: object
          status:
            description: TargetGroupStatus defines the observed state of TargetGroup
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              loadBalancerARNs:
                description: |-
                  The Amazon Resource Name (ARN) of the load balancer that routes traffic to
                  this target group. You can use each target group with only one load balancer.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
