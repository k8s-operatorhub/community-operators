apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: aiven-operator-system/aiven-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: connectionpools.aiven.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: aiven.io
  names:
    kind: ConnectionPool
    listKind: ConnectionPoolList
    plural: connectionpools
    singular: connectionpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.serviceName
      name: Service Name
      type: string
    - jsonPath: .spec.project
      name: Project
      type: string
    - jsonPath: .spec.databaseName
      name: Database
      type: string
    - jsonPath: .spec.username
      name: Username
      type: string
    - jsonPath: .spec.poolSize
      name: Pool Size
      type: string
    - jsonPath: .spec.poolMode
      name: Pool Mode
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConnectionPool is the Schema for the connectionpools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConnectionPoolSpec defines the desired state of ConnectionPool
            properties:
              authSecretRef:
                description: Authentication reference to Aiven token in a secret
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - key
                - name
                type: object
              connInfoSecretTarget:
                description: Information regarding secret creation
                properties:
                  name:
                    description: Name of the Secret resource to be created
                    type: string
                required:
                - name
                type: object
              databaseName:
                description: Name of the database the pool connects to
                maxLength: 40
                type: string
              poolMode:
                description: Mode the pool operates in (session, transaction, statement)
                enum:
                - session
                - transaction
                - statement
                type: string
              poolSize:
                description: Number of connections the pool may create towards the
                  backend server
                type: integer
              project:
                description: Target project.
                format: ^[a-zA-Z0-9_-]*$
                maxLength: 63
                type: string
              serviceName:
                description: Service name.
                maxLength: 63
                type: string
              username:
                description: Name of the service user used to connect to the database
                maxLength: 64
                type: string
            required:
            - authSecretRef
            - databaseName
            - project
            - serviceName
            - username
            type: object
          status:
            description: ConnectionPoolStatus defines the observed state of ConnectionPool
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an ConnectionPool state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
