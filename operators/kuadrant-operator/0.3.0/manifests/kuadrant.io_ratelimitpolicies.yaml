apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    app: kuadrant
  name: ratelimitpolicies.kuadrant.io
spec:
  group: kuadrant.io
  names:
    kind: RateLimitPolicy
    listKind: RateLimitPolicyList
    plural: ratelimitpolicies
    singular: ratelimitpolicy
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: RateLimitPolicy is the Schema for the ratelimitpolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RateLimitPolicySpec defines the desired state of RateLimitPolicy
            properties:
              rateLimits:
                description: RateLimits holds the list of rate limit configurations
                items:
                  description: RateLimit represents a complete rate limit configuration
                  properties:
                    configurations:
                      description: Configurations holds list of (action) configuration.
                      items:
                        description: Configuration represents an action configuration.
                          The equivalent of [config.route.v3.RateLimit](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit)
                          envoy object. Each action configuration produces, at most,
                          one descriptor. Depending on the incoming request, one configuration
                          may or may not produce a rate limit descriptor.
                        properties:
                          actions:
                            description: Actions holds list of action specifiers.
                              Each action specifier can only define one action type.
                            items:
                              description: Action_Specifier defines one envoy rate
                                limit action
                              oneOf:
                              - required:
                                - generic_key
                              - required:
                                - metadata
                              - required:
                                - remote_address
                              - required:
                                - request_headers
                              properties:
                                generic_key:
                                  properties:
                                    descriptor_key:
                                      type: string
                                    descriptor_value:
                                      type: string
                                  required:
                                  - descriptor_value
                                  type: object
                                metadata:
                                  properties:
                                    default_value:
                                      type: string
                                    descriptor_key:
                                      type: string
                                    metadata_key:
                                      properties:
                                        key:
                                          type: string
                                        path:
                                          items:
                                            properties:
                                              segment:
                                                properties:
                                                  key:
                                                    type: string
                                                required:
                                                - key
                                                type: object
                                            required:
                                            - segment
                                            type: object
                                          type: array
                                      required:
                                      - key
                                      - path
                                      type: object
                                    source:
                                      default: DYNAMIC
                                      enum:
                                      - DYNAMIC
                                      - ROUTE_ENTRY
                                      type: string
                                  required:
                                  - descriptor_key
                                  - metadata_key
                                  type: object
                                remote_address:
                                  description: RemoteAddressSpec no need to specify
                                    descriptor entry is populated using the trusted
                                    address from [x-forwarded-for](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#config-http-conn-man-headers-x-forwarded-for)
                                  type: object
                                request_headers:
                                  description: RequestHeadersSpec Rate limit on request
                                    headers.
                                  properties:
                                    descriptor_key:
                                      type: string
                                    header_name:
                                      type: string
                                    skip_if_absent:
                                      type: boolean
                                  required:
                                  - descriptor_key
                                  - header_name
                                  type: object
                              type: object
                            type: array
                        required:
                        - actions
                        type: object
                      type: array
                    limits:
                      description: Limits holds a list of Limitador limits
                      items:
                        description: Limit represents partially a Limitador limit.
                        properties:
                          conditions:
                            items:
                              type: string
                            type: array
                          maxValue:
                            type: integer
                          seconds:
                            type: integer
                          variables:
                            items:
                              type: string
                            type: array
                        required:
                        - maxValue
                        - seconds
                        type: object
                      type: array
                    rules:
                      description: Rules represents the definition of the scope of
                        the rate limit object Defines a list of conditions for which
                        rate limit configuration will apply Matching occurs when at
                        least one rule applies against the incoming request. If rules
                        are not set, or empty, it is equivalent to matching all the
                        requests.
                      items:
                        description: Rule defines a single condition for the rate
                          limit configuration All defined fields within the rule must
                          be met to have a rule match
                        properties:
                          hosts:
                            items:
                              type: string
                            type: array
                          methods:
                            items:
                              type: string
                            type: array
                          paths:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
                type: array
              targetRef:
                description: TargetRef identifies an API object to apply policy to.
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - targetRef
            type: object
          status:
            description: RateLimitPolicyStatus defines the observed state of RateLimitPolicy
            properties:
              conditions:
                description: 'Represents the observations of a foo''s current state.
                  Known .status.conditions.type are: "Available"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              gatewaysRateLimits:
                description: GatewaysRateLimits shows the rate limit configuration
                  applied by policies at the gateway level this field is only meant
                  for rate limit policies targeting a route
                items:
                  properties:
                    gatewayName:
                      type: string
                    rateLimits:
                      description: RateLimits holds the list of rate limit configurations
                      items:
                        description: RateLimit represents a complete rate limit configuration
                        properties:
                          configurations:
                            description: Configurations holds list of (action) configuration.
                            items:
                              description: Configuration represents an action configuration.
                                The equivalent of [config.route.v3.RateLimit](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit)
                                envoy object. Each action configuration produces,
                                at most, one descriptor. Depending on the incoming
                                request, one configuration may or may not produce
                                a rate limit descriptor.
                              properties:
                                actions:
                                  description: Actions holds list of action specifiers.
                                    Each action specifier can only define one action
                                    type.
                                  items:
                                    description: Action_Specifier defines one envoy
                                      rate limit action
                                    properties:
                                      generic_key:
                                        properties:
                                          descriptor_key:
                                            type: string
                                          descriptor_value:
                                            type: string
                                        required:
                                        - descriptor_value
                                        type: object
                                      metadata:
                                        properties:
                                          default_value:
                                            type: string
                                          descriptor_key:
                                            type: string
                                          metadata_key:
                                            properties:
                                              key:
                                                type: string
                                              path:
                                                items:
                                                  properties:
                                                    segment:
                                                      properties:
                                                        key:
                                                          type: string
                                                      required:
                                                      - key
                                                      type: object
                                                  required:
                                                  - segment
                                                  type: object
                                                type: array
                                            required:
                                            - key
                                            - path
                                            type: object
                                          source:
                                            default: DYNAMIC
                                            enum:
                                            - DYNAMIC
                                            - ROUTE_ENTRY
                                            type: string
                                        required:
                                        - descriptor_key
                                        - metadata_key
                                        type: object
                                      remote_address:
                                        description: RemoteAddressSpec no need to
                                          specify descriptor entry is populated using
                                          the trusted address from [x-forwarded-for](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#config-http-conn-man-headers-x-forwarded-for)
                                        type: object
                                      request_headers:
                                        description: RequestHeadersSpec Rate limit
                                          on request headers.
                                        properties:
                                          descriptor_key:
                                            type: string
                                          header_name:
                                            type: string
                                          skip_if_absent:
                                            type: boolean
                                        required:
                                        - descriptor_key
                                        - header_name
                                        type: object
                                    type: object
                                  type: array
                              required:
                              - actions
                              type: object
                            type: array
                          limits:
                            description: Limits holds a list of Limitador limits
                            items:
                              description: Limit represents partially a Limitador
                                limit.
                              properties:
                                conditions:
                                  items:
                                    type: string
                                  type: array
                                maxValue:
                                  type: integer
                                seconds:
                                  type: integer
                                variables:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - maxValue
                              - seconds
                              type: object
                            type: array
                          rules:
                            description: Rules represents the definition of the scope
                              of the rate limit object Defines a list of conditions
                              for which rate limit configuration will apply Matching
                              occurs when at least one rule applies against the incoming
                              request. If rules are not set, or empty, it is equivalent
                              to matching all the requests.
                            items:
                              description: Rule defines a single condition for the
                                rate limit configuration All defined fields within
                                the rule must be met to have a rule match
                              properties:
                                hosts:
                                  items:
                                    type: string
                                  type: array
                                methods:
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                        type: object
                      type: array
                  required:
                  - gatewayName
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration reflects the generation of the most
                  recently observed spec.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
