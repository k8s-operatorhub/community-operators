apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "installer.krateo.io/v1alpha1",
          "kind": "Installer",
          "metadata": {
            "name": "installer-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "env": {
              "INSTALLER_DEBUG": "true"
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "ghcr.io/krateoplatformops/installer",
              "tag": ""
            },
            "imagePullSecrets": [],
            "krateoplatformops": {
              "authn": {
                "KUBECONFIG_SERVER_URL": "https://127.0.0.1:6443",
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/authn",
                  "tag": ""
                }
              },
              "backend": {
                "etcd": {
                  "auth": {
                    "rbac": {
                      "create": false
                    }
                  },
                  "global": {
                    "compatibility": {
                      "openshift": {
                        "adaptSecurityContext": "auto"
                      }
                    },
                    "imageRegistry": "",
                    "storageClass": ""
                  },
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "registry": "docker.io",
                    "repository": "bitnami/etcd",
                    "tag": "3.5.14-debian-12-r0"
                  }
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/backend",
                  "tag": ""
                }
              },
              "bff": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/bff",
                  "tag": ""
                }
              },
              "core-provider": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/core-provider",
                  "tag": ""
                }
              },
              "custom": {
                "enabled": false
              },
              "eventrouter": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/eventrouter",
                  "tag": ""
                }
              },
              "frontend": {
                "env": {
                  "AUTHN_API_BASE_URL": "",
                  "BFF_API_BASE_URL": ""
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/krateo-frontend",
                  "tag": ""
                },
                "overrideconf": false
              },
              "ingress": {
                "authn": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "bff": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "enabled": false,
                "frontend": {
                  "annotations": {},
                  "className": "",
                  "hosts": [
                    {
                      "host": "chart-example.local",
                      "paths": [
                        {
                          "path": "/",
                          "pathType": "ImplementationSpecific"
                        }
                      ]
                    }
                  ],
                  "tls": []
                },
                "vcluster": {
                  "annotations": {
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS",
                    "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
                    "nginx.ingress.kubernetes.io/ssl-redirect": "true"
                  },
                  "host": "vcluster.local",
                  "ingressClassName": "",
                  "pathType": "ImplementationSpecific",
                  "tls": []
                }
              },
              "init": {
                "enabled": true
              },
              "patch-provider": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/krateoplatformops/patch-provider",
                  "tag": ""
                }
              },
              "service": {
                "externalIpAvailable": false,
                "type": "NodePort"
              },
              "vcluster": {
                "defaultImageRegistry": "",
                "enabled": false,
                "openshift": {
                  "enable": false
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false
                },
                "storage": {
                  "className": ""
                },
                "sync": {
                  "persistentvolumes": {
                    "enabled": true
                  },
                  "storageclasses": {
                    "enabled": true
                  }
                }
              }
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podLabels": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "automount": true,
              "create": true,
              "name": ""
            },
            "tolerations": [],
            "volumeMounts": [],
            "volumes": []
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2024-06-14T14:17:53Z"
    operators.operatorframework.io/builder: operator-sdk-v1.34.2
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: krateo-installer.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Installer
      name: installers.installer.krateo.io
      version: v1alpha1
  description: Install Krateo PlatformOps.
  displayName: Krateo Installer
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - core.krateo.io
          resources:
          - compositiondefinitions
          - compositiondefinitions/status
          verbs:
          - '*'
        - apiGroups:
          - composition.krateo.io
          resources:
          - installers
          - installers/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterroles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterrolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - configmaps/status
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/status
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          - horizontalpodautoscalers/status
          verbs:
          - '*'
        - apiGroups:
          - krateo.io
          resources:
          - krateoplatformops
          - krateoplatformops/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - roles/status
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - rolebindings/status
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          - serviceaccounts/status
          verbs:
          - '*'
        - apiGroups:
          - krateo.io
          resources:
          - krateoplatformops
          - krateoplatformops/status
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: krateo-installer-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: krateo-installer
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: krateo-installer
          control-plane: controller-manager
        name: krateo-installer-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=krateo-installer
                image: ghcr.io/krateoplatformops/krateo-installer:0.0.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: krateo-installer-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: krateo-installer-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Krateo
  - Installer
  - PlatformOps
  links:
  - name: Krateo Installer
    url: https://krateo-installer.domain
  maintainers:
  - email: matteo.gastaldellomiotto@gmail.com
    name: matteogastaldello
  maturity: alpha
  provider:
    name: krateo-installer
  version: 0.0.1
