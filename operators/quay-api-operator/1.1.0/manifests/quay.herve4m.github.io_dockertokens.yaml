apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: dockertokens.quay.herve4m.github.io
spec:
  group: quay.herve4m.github.io
  names:
    kind: DockerToken
    plural: dockertokens
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name in Quay
      jsonPath: .spec.name
      name: Quay name
      type: string
    - description: The status of the resource creation process in Quay
      jsonPath: .status.conditions[?(@.type == 'Successful')].status
      name: Success
      type: string
    - description: The error message when the resource creation process fails
      jsonPath: .status.message
      name: Message
      type: string
    - description: The state of the reconciliation process
      jsonPath: .status.conditions[?(@.type == 'Running')].reason
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Manage tokens for accessing Quay Container Registry repositories
        properties:
          apiVersion:
            description: |
              APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |
              Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of DockerToken
            properties:
              connSecretRef:
                description: |
                  Reference to the secret resource that stores the connection parameters to the Quay Container Registry API.
                  The secret must include the 'host', 'token' (or 'username' and 'password'), and optionally the 'validateCerts' keys.
                properties:
                  name:
                    description: Name of the secret resource.
                    type: string
                  namespace:
                    description: |
                      Namespace of the secret resource. By default, the secret resource is retrieved from the same namespace as the current DockerToken resource.
                    type: string
                required:
                - name
                type: object
              name:
                description: Name of the token to create or delete.
                type: string
              preserveInQuayOnDeletion:
                default: false
                description: |
                  Whether to preserve the corresponding Quay object when you delete the DockerToken resource. When set to 'false' (the default), the object is deleted from Quay.
                type: boolean
              retSecretRef:
                description: |
                  RetSecretRef is the secret resource that the DockerToken resource creates. This secret will store the data that the resource generates:

                  - auth - Base64 encoding of the username and the token (''username':'tokenCode''). Some client configuration files, such as the '~/.docker/config.json' Docker configuration file, require that you provide the username and the token in that format. You can decode the string by using the 'base64 --decode' command. See the 'base64'(1) man page.
                  - created - Token creation date and time.
                  - dockerconfigjson - Base64 encoding of the '~/.docker/config.json' configuration file. The 'containers-auth.json'(5) man page describe the format of the file.
                  - expiration - Expiration date and time of the token. By default, tokens do not expire. In that case 'expiration' is 'null'. Your Quay administrator might have activated expiration by setting the 'APP_SPECIFIC_TOKEN_EXPIRATION' directive in the 'config.yaml' configuration file.
                  - lastAccessed - Last date and time the token was used. If the token has not been used yet, then 'lastAccessed' is 'null'.
                  - name - Name of the application token.
                  - tokenCode - Token to use as the password.
                  - username - Username to use with client commands such as 'docker' or 'podman'. When you use a token with those commands, do not use your login name but use this username instead. For Quay, that username is always '$app'. Because the '$' character is a special shell character, you might have to protect it with a backslash or by using single quotation marks.
                  - uuid - Internal ID of the application token.
                properties:
                  name:
                    description: Name of the secret resource.
                    type: string
                  namespace:
                    description: |
                      Namespace of the secret resource. By default, the secret resource is created in the same namespace as the current DockerToken resource.
                    type: string
                required:
                - name
                type: object
            required:
            - connSecretRef
            - name
            type: object
          status:
            description: |
              Status defines the observed state of DockerToken
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
