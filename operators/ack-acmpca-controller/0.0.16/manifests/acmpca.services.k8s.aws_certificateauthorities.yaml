apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: certificateauthorities.acmpca.services.k8s.aws
spec:
  group: acmpca.services.k8s.aws
  names:
    kind: CertificateAuthority
    listKind: CertificateAuthorityList
    plural: certificateauthorities
    singular: certificateauthority
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CertificateAuthority is the Schema for the CertificateAuthorities
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CertificateAuthoritySpec defines the desired state of CertificateAuthority.


              Contains information about your private certificate authority (CA). Your
              private CA can issue and revoke X.509 digital certificates. Digital certificates
              verify that the entity named in the certificate Subject field owns or controls
              the public key contained in the Subject Public Key Info field. Call the CreateCertificateAuthority
              (https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html)
              action to create your private CA. You must then call the GetCertificateAuthorityCertificate
              (https://docs.aws.amazon.com/privateca/latest/APIReference/API_GetCertificateAuthorityCertificate.html)
              action to retrieve a private CA certificate signing request (CSR). Sign the
              CSR with your Amazon Web Services Private CA-hosted or on-premises root or
              subordinate CA certificate. Call the ImportCertificateAuthorityCertificate
              (https://docs.aws.amazon.com/privateca/latest/APIReference/API_ImportCertificateAuthorityCertificate.html)
              action to import the signed certificate into Certificate Manager (ACM).
            properties:
              certificateAuthorityConfiguration:
                description: |-
                  Name and bit size of the private key algorithm, the name of the signing algorithm,
                  and X.500 certificate subject information.
                properties:
                  csrExtensions:
                    description: |-
                      Describes the certificate extensions to be added to the certificate signing
                      request (CSR).
                    properties:
                      keyUsage:
                        description: |-
                          Defines one or more purposes for which the key contained in the certificate
                          can be used. Default value for each option is false.
                        properties:
                          crlSign:
                            type: boolean
                          dataEncipherment:
                            type: boolean
                          decipherOnly:
                            type: boolean
                          digitalSignature:
                            type: boolean
                          encipherOnly:
                            type: boolean
                          keyAgreement:
                            type: boolean
                          keyCertSign:
                            type: boolean
                          keyEncipherment:
                            type: boolean
                          nonRepudiation:
                            type: boolean
                        type: object
                      subjectInformationAccess:
                        items:
                          description: |-
                            Provides access information used by the authorityInfoAccess and subjectInfoAccess
                            extensions described in RFC 5280 (https://datatracker.ietf.org/doc/html/rfc5280).
                          properties:
                            accessLocation:
                              description: |-
                                Describes an ASN.1 X.400 GeneralName as defined in RFC 5280 (https://datatracker.ietf.org/doc/html/rfc5280).
                                Only one of the following naming options should be provided. Providing more
                                than one option results in an InvalidArgsException error.
                              properties:
                                directoryName:
                                  description: |-
                                    Contains information about the certificate subject. The Subject field in
                                    the certificate identifies the entity that owns or controls the public key
                                    in the certificate. The entity can be a user, computer, device, or service.
                                    The Subject must contain an X.500 distinguished name (DN). A DN is a sequence
                                    of relative distinguished names (RDNs). The RDNs are separated by commas
                                    in the certificate.
                                  properties:
                                    commonName:
                                      type: string
                                    country:
                                      type: string
                                    customAttributes:
                                      items:
                                        description: Defines the X.500 relative distinguished
                                          name (RDN).
                                        properties:
                                          objectIdentifier:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    distinguishedNameQualifier:
                                      type: string
                                    generationQualifier:
                                      type: string
                                    givenName:
                                      type: string
                                    initials:
                                      type: string
                                    locality:
                                      type: string
                                    organization:
                                      type: string
                                    organizationalUnit:
                                      type: string
                                    pseudonym:
                                      type: string
                                    serialNumber:
                                      type: string
                                    state:
                                      type: string
                                    surname:
                                      type: string
                                    title:
                                      type: string
                                  type: object
                                dnsName:
                                  type: string
                                ediPartyName:
                                  description: |-
                                    Describes an Electronic Data Interchange (EDI) entity as described in as
                                    defined in Subject Alternative Name (https://datatracker.ietf.org/doc/html/rfc5280)
                                    in RFC 5280.
                                  properties:
                                    nameAssigner:
                                      type: string
                                    partyName:
                                      type: string
                                  type: object
                                ipAddress:
                                  type: string
                                otherName:
                                  description: |-
                                    Defines a custom ASN.1 X.400 GeneralName using an object identifier (OID)
                                    and value. The OID must satisfy the regular expression shown below. For more
                                    information, see NIST's definition of Object Identifier (OID) (https://csrc.nist.gov/glossary/term/Object_Identifier).
                                  properties:
                                    typeID:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                registeredID:
                                  type: string
                                rfc822Name:
                                  type: string
                                uniformResourceIdentifier:
                                  type: string
                              type: object
                            accessMethod:
                              description: |-
                                Describes the type and format of extension access. Only one of CustomObjectIdentifier
                                or AccessMethodType may be provided. Providing both results in InvalidArgsException.
                              properties:
                                accessMethodType:
                                  type: string
                                customObjectIdentifier:
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  keyAlgorithm:
                    type: string
                  signingAlgorithm:
                    type: string
                  subject:
                    description: |-
                      Contains information about the certificate subject. The Subject field in
                      the certificate identifies the entity that owns or controls the public key
                      in the certificate. The entity can be a user, computer, device, or service.
                      The Subject must contain an X.500 distinguished name (DN). A DN is a sequence
                      of relative distinguished names (RDNs). The RDNs are separated by commas
                      in the certificate.
                    properties:
                      commonName:
                        type: string
                      country:
                        type: string
                      customAttributes:
                        items:
                          description: Defines the X.500 relative distinguished name
                            (RDN).
                          properties:
                            objectIdentifier:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      distinguishedNameQualifier:
                        type: string
                      generationQualifier:
                        type: string
                      givenName:
                        type: string
                      initials:
                        type: string
                      locality:
                        type: string
                      organization:
                        type: string
                      organizationalUnit:
                        type: string
                      pseudonym:
                        type: string
                      serialNumber:
                        type: string
                      state:
                        type: string
                      surname:
                        type: string
                      title:
                        type: string
                    type: object
                type: object
              keyStorageSecurityStandard:
                description: |-
                  Specifies a cryptographic key management compliance standard used for handling
                  CA keys.


                  Default: FIPS_140_2_LEVEL_3_OR_HIGHER


                  Some Amazon Web Services Regions do not support the default. When creating
                  a CA in these Regions, you must provide FIPS_140_2_LEVEL_2_OR_HIGHER as the
                  argument for KeyStorageSecurityStandard. Failure to do this results in an
                  InvalidArgsException with the message, "A certificate authority cannot be
                  created in this region with the specified security standard."


                  For information about security standard support in various Regions, see Storage
                  and security compliance of Amazon Web Services Private CA private keys (https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys).
                type: string
              revocationConfiguration:
                description: |-
                  Contains information to enable Online Certificate Status Protocol (OCSP)
                  support, to enable a certificate revocation list (CRL), to enable both, or
                  to enable neither. The default is for both certificate validation mechanisms
                  to be disabled.


                  The following requirements apply to revocation configurations.


                     * A configuration disabling CRLs or OCSP must contain only the Enabled=False
                     parameter, and will fail if other parameters such as CustomCname or ExpirationInDays
                     are included.


                     * In a CRL configuration, the S3BucketName parameter must conform to Amazon
                     S3 bucket naming rules (https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).


                     * A configuration containing a custom Canonical Name (CNAME) parameter
                     for CRLs or OCSP must conform to RFC2396 (https://www.ietf.org/rfc/rfc2396.txt)
                     restrictions on the use of special characters in a CNAME.


                     * In a CRL or OCSP configuration, the value of a CNAME parameter must
                     not include a protocol prefix such as "http://" or "https://".


                  For more information, see the OcspConfiguration (https://docs.aws.amazon.com/privateca/latest/APIReference/API_OcspConfiguration.html)
                  and CrlConfiguration (https://docs.aws.amazon.com/privateca/latest/APIReference/API_CrlConfiguration.html)
                  types.
                properties:
                  crlConfiguration:
                    description: |-
                      Contains configuration information for a certificate revocation list (CRL).
                      Your private certificate authority (CA) creates base CRLs. Delta CRLs are
                      not supported. You can enable CRLs for your new or an existing private CA
                      by setting the Enabled parameter to true. Your private CA writes CRLs to
                      an S3 bucket that you specify in the S3BucketName parameter. You can hide
                      the name of your bucket by specifying a value for the CustomCname parameter.
                      Your private CA copies the CNAME or the S3 bucket name to the CRL Distribution
                      Points extension of each certificate it issues. Your S3 bucket policy must
                      give write permission to Amazon Web Services Private CA.


                      Amazon Web Services Private CA assets that are stored in Amazon S3 can be
                      protected with encryption. For more information, see Encrypting Your CRLs
                      (https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#crl-encryption).


                      Your private CA uses the value in the ExpirationInDays parameter to calculate
                      the nextUpdate field in the CRL. The CRL is refreshed prior to a certificate's
                      expiration date or when a certificate is revoked. When a certificate is revoked,
                      it appears in the CRL until the certificate expires, and then in one additional
                      CRL after expiration, and it always appears in the audit report.


                      A CRL is typically updated approximately 30 minutes after a certificate is
                      revoked. If for any reason a CRL update fails, Amazon Web Services Private
                      CA makes further attempts every 15 minutes.


                      CRLs contain the following fields:


                         * Version: The current version number defined in RFC 5280 is V2. The integer
                         value is 0x1.


                         * Signature Algorithm: The name of the algorithm used to sign the CRL.


                         * Issuer: The X.500 distinguished name of your private CA that issued
                         the CRL.


                         * Last Update: The issue date and time of this CRL.


                         * Next Update: The day and time by which the next CRL will be issued.


                         * Revoked Certificates: List of revoked certificates. Each list item contains
                         the following information. Serial Number: The serial number, in hexadecimal
                         format, of the revoked certificate. Revocation Date: Date and time the
                         certificate was revoked. CRL Entry Extensions: Optional extensions for
                         the CRL entry. X509v3 CRL Reason Code: Reason the certificate was revoked.


                         * CRL Extensions: Optional extensions for the CRL. X509v3 Authority Key
                         Identifier: Identifies the public key associated with the private key
                         used to sign the certificate. X509v3 CRL Number:: Decimal sequence number
                         for the CRL.


                         * Signature Algorithm: Algorithm used by your private CA to sign the CRL.


                         * Signature Value: Signature computed over the CRL.


                      Certificate revocation lists created by Amazon Web Services Private CA are
                      DER-encoded. You can use the following OpenSSL command to list a CRL.


                      openssl crl -inform DER -text -in crl_path -noout


                      For more information, see Planning a certificate revocation list (CRL) (https://docs.aws.amazon.com/privateca/latest/userguide/crl-planning.html)
                      in the Amazon Web Services Private Certificate Authority User Guide
                    properties:
                      customCNAME:
                        type: string
                      enabled:
                        type: boolean
                      expirationInDays:
                        format: int64
                        type: integer
                      s3BucketName:
                        type: string
                      s3ObjectACL:
                        type: string
                    type: object
                  ocspConfiguration:
                    description: |-
                      Contains information to enable and configure Online Certificate Status Protocol
                      (OCSP) for validating certificate revocation status.


                      When you revoke a certificate, OCSP responses may take up to 60 minutes to
                      reflect the new status.
                    properties:
                      enabled:
                        type: boolean
                      ocspCustomCNAME:
                        type: string
                    type: object
                type: object
              tags:
                description: |-
                  Key-value pairs that will be attached to the new private CA. You can associate
                  up to 50 tags with a private CA. For information using tags with IAM to manage
                  permissions, see Controlling Access Using IAM Tags (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html).
                items:
                  description: |-
                    Tags are labels that you can use to identify and organize your private CAs.
                    Each tag consists of a key and an optional value. You can associate up to
                    50 tags with a private CA. To add one or more tags to a private CA, call
                    the TagCertificateAuthority (https://docs.aws.amazon.com/privateca/latest/APIReference/API_TagCertificateAuthority.html)
                    action. To remove a tag, call the UntagCertificateAuthority (https://docs.aws.amazon.com/privateca/latest/APIReference/API_UntagCertificateAuthority.html)
                    action.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              type:
                description: The type of the certificate authority.
                type: string
              usageMode:
                description: |-
                  Specifies whether the CA issues general-purpose certificates that typically
                  require a revocation mechanism, or short-lived certificates that may optionally
                  omit revocation because they expire quickly. Short-lived certificate validity
                  is limited to seven days.


                  The default value is GENERAL_PURPOSE.
                type: string
            required:
            - certificateAuthorityConfiguration
            type: object
          status:
            description: CertificateAuthorityStatus defines the observed state of
              CertificateAuthority
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              certificateSigningRequest:
                description: |-
                  The base64 PEM-encoded certificate signing request (CSR) for your private
                  CA certificate.
                type: string
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: Date and time at which your private CA was created.
                format: date-time
                type: string
              failureReason:
                description: Reason the request to create your private CA failed.
                type: string
              lastStateChangeAt:
                description: Date and time at which your private CA was last updated.
                format: date-time
                type: string
              notAfter:
                description: Date and time after which your private CA certificate
                  is not valid.
                format: date-time
                type: string
              notBefore:
                description: Date and time before which your private CA certificate
                  is not valid.
                format: date-time
                type: string
              ownerAccount:
                description: The Amazon Web Services account ID that owns the certificate
                  authority.
                type: string
              restorableUntil:
                description: |-
                  The period during which a deleted CA can be restored. For more information,
                  see the PermanentDeletionTimeInDays parameter of the DeleteCertificateAuthorityRequest
                  (https://docs.aws.amazon.com/privateca/latest/APIReference/API_DeleteCertificateAuthorityRequest.html)
                  action.
                format: date-time
                type: string
              serial:
                description: Serial number of your private CA.
                type: string
              status:
                description: Status of your private CA.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
