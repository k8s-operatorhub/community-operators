apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: filesystems.efs.services.k8s.aws
spec:
  group: efs.services.k8s.aws
  names:
    kind: FileSystem
    listKind: FileSystemList
    plural: filesystems
    singular: filesystem
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.fileSystemID
      name: ID
      type: string
    - jsonPath: .spec.encrypted
      name: ENCRYPTED
      type: boolean
    - jsonPath: .spec.performanceMode
      name: PERFORMANCEMODE
      priority: 1
      type: string
    - jsonPath: .spec.throughputMode
      name: THROUGHPUTMODE
      priority: 1
      type: string
    - jsonPath: .status.provisionedThroughputInMiBps
      name: PROVISIONEDTHROUGHPUT
      priority: 1
      type: string
    - jsonPath: .status.sizeInBytes.value
      name: SIZE
      type: integer
    - jsonPath: .status.numberOfMountTargets
      name: MOUNTTARGETS
      type: integer
    - jsonPath: .status.lifeCycleState
      name: STATE
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FileSystem is the Schema for the FileSystems API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FileSystemSpec defines the desired state of FileSystem.
            properties:
              availabilityZoneName:
                description: |-
                  Used to create a One Zone file system. It specifies the Amazon Web Services
                  Availability Zone in which to create the file system. Use the format us-east-1a
                  to specify the Availability Zone. For more information about One Zone file
                  systems, see Using EFS storage classes (https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html)
                  in the Amazon EFS User Guide.


                  One Zone file systems are not available in all Availability Zones in Amazon
                  Web Services Regions where Amazon EFS is available.
                type: string
              backup:
                description: |-
                  Specifies whether automatic backups are enabled on the file system that you
                  are creating. Set the value to true to enable automatic backups. If you are
                  creating a One Zone file system, automatic backups are enabled by default.
                  For more information, see Automatic backups (https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups)
                  in the Amazon EFS User Guide.


                  Default is false. However, if you specify an AvailabilityZoneName, the default
                  is true.


                  Backup is not available in all Amazon Web Services Regions where Amazon EFS
                  is available.
                type: boolean
              backupPolicy:
                description: The backup policy included in the PutBackupPolicy request.
                properties:
                  status:
                    type: string
                type: object
              encrypted:
                description: |-
                  A Boolean value that, if true, creates an encrypted file system. When creating
                  an encrypted file system, you have the option of specifying an existing Key
                  Management Service key (KMS key). If you don't specify a KMS key, then the
                  default KMS key for Amazon EFS, /aws/elasticfilesystem, is used to protect
                  the encrypted file system.
                type: boolean
              fileSystemProtection:
                properties:
                  replicationOverwriteProtection:
                    type: string
                type: object
              kmsKeyID:
                description: |-
                  The ID of the KMS key that you want to use to protect the encrypted file
                  system. This parameter is required only if you want to use a non-default
                  KMS key. If this parameter is not specified, the default KMS key for Amazon
                  EFS is used. You can specify a KMS key ID using the following formats:


                     * Key ID - A unique identifier of the key, for example 1234abcd-12ab-34cd-56ef-1234567890ab.


                     * ARN - An Amazon Resource Name (ARN) for the key, for example arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab.


                     * Key alias - A previously created display name for a key, for example
                     alias/projectKey1.


                     * Key alias ARN - An ARN for a key alias, for example arn:aws:kms:us-west-2:444455556666:alias/projectKey1.


                  If you use KmsKeyId, you must set the CreateFileSystemRequest$Encrypted parameter
                  to true.


                  EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with
                  Amazon EFS file systems.
                type: string
              kmsKeyRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              lifecyclePolicies:
                description: |-
                  An array of LifecyclePolicy objects that define the file system's LifecycleConfiguration
                  object. A LifecycleConfiguration object informs EFS Lifecycle management
                  of the following:


                     * TransitionToIA – When to move files in the file system from primary
                     storage (Standard storage class) into the Infrequent Access (IA) storage.


                     * TransitionToArchive – When to move files in the file system from their
                     current storage class (either IA or Standard storage) into the Archive
                     storage. File systems cannot transition into Archive storage before transitioning
                     into IA storage. Therefore, TransitionToArchive must either not be set
                     or must be later than TransitionToIA. The Archive storage class is available
                     only for file systems that use the Elastic Throughput mode and the General
                     Purpose Performance mode.


                     * TransitionToPrimaryStorageClass – Whether to move files in the file
                     system back to primary storage (Standard storage class) after they are
                     accessed in IA or Archive storage.


                  When using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration
                  API action, Amazon EFS requires that each LifecyclePolicy object have only
                  a single transition. This means that in a request body, LifecyclePolicies
                  must be structured as an array of LifecyclePolicy objects, one object for
                  each storage transition. See the example requests in the following section
                  for more information.
                items:
                  description: |-
                    Describes a policy used by Lifecycle management that specifies when to transition
                    files into and out of storage classes. For more information, see Managing
                    file system storage (https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html).


                    When using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration
                    API action, Amazon EFS requires that each LifecyclePolicy object have only
                    a single transition. This means that in a request body, LifecyclePolicies
                    must be structured as an array of LifecyclePolicy objects, one object for
                    each transition. For more information, see the request examples in PutLifecycleConfiguration.
                  properties:
                    transitionToArchive:
                      type: string
                    transitionToIA:
                      type: string
                    transitionToPrimaryStorageClass:
                      type: string
                  type: object
                type: array
              performanceMode:
                description: |-
                  The Performance mode of the file system. We recommend generalPurpose performance
                  mode for all file systems. File systems using the maxIO performance mode
                  can scale to higher levels of aggregate throughput and operations per second
                  with a tradeoff of slightly higher latencies for most file operations. The
                  performance mode can't be changed after the file system has been created.
                  The maxIO mode is not supported on One Zone file systems.


                  Due to the higher per-operation latencies with Max I/O, we recommend using
                  General Purpose performance mode for all file systems.


                  Default is generalPurpose.
                type: string
              policy:
                description: |-
                  The FileSystemPolicy that you're creating. Accepts a JSON formatted policy
                  definition. EFS file system policies have a 20,000 character limit. To find
                  out more about the elements that make up a file system policy, see EFS Resource-based
                  Policies (https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies).
                type: string
              provisionedThroughputInMiBps:
                description: |-
                  The throughput, measured in mebibytes per second (MiBps), that you want to
                  provision for a file system that you're creating. Required if ThroughputMode
                  is set to provisioned. Valid values are 1-3414 MiBps, with the upper limit
                  depending on Region. To increase this limit, contact Amazon Web Services
                  Support. For more information, see Amazon EFS quotas that you can increase
                  (https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the
                  Amazon EFS User Guide.
                type: number
              tags:
                description: |-
                  Use to create one or more tags associated with the file system. Each tag
                  is a user-defined key-value pair. Name your file system on creation by including
                  a "Key":"Name","Value":"{value}" key-value pair. Each key must be unique.
                  For more information, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference Guide.
                items:
                  description: |-
                    A tag is a key-value pair. Allowed characters are letters, white space, and
                    numbers that can be represented in UTF-8, and the following characters:+
                    - = . _ : /.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              throughputMode:
                description: |-
                  Specifies the throughput mode for the file system. The mode can be bursting,
                  provisioned, or elastic. If you set ThroughputMode to provisioned, you must
                  also set a value for ProvisionedThroughputInMibps. After you create the file
                  system, you can decrease your file system's Provisioned throughput or change
                  between the throughput modes, with certain time restrictions. For more information,
                  see Specifying throughput with provisioned mode (https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput)
                  in the Amazon EFS User Guide.


                  Default is bursting.
                type: string
            type: object
          status:
            description: FileSystemStatus defines the observed state of FileSystem
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              availabilityZoneID:
                description: |-
                  The unique and consistent identifier of the Availability Zone in which the
                  file system is located, and is valid only for One Zone file systems. For
                  example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web
                  Services Region, and it has the same location in every Amazon Web Services
                  account.
                type: string
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time that the file system was created, in seconds
                  (since 1970-01-01T00:00:00Z).
                format: date-time
                type: string
              fileSystemID:
                description: The ID of the file system, assigned by Amazon EFS.
                type: string
              lifeCycleState:
                description: The lifecycle phase of the file system.
                type: string
              name:
                description: |-
                  You can add tags to a file system, including a Name tag. For more information,
                  see CreateFileSystem. If the file system has a Name tag, Amazon EFS returns
                  the value in this field.
                type: string
              numberOfMountTargets:
                description: |-
                  The current number of mount targets that the file system has. For more information,
                  see CreateMountTarget.
                format: int64
                type: integer
              ownerID:
                description: The Amazon Web Services account that created the file
                  system.
                type: string
              sizeInBytes:
                description: |-
                  The latest known metered size (in bytes) of data stored in the file system,
                  in its Value field, and the time at which that size was determined in its
                  Timestamp field. The Timestamp value is the integer number of seconds since
                  1970-01-01T00:00:00Z. The SizeInBytes value doesn't represent the size of
                  a consistent snapshot of the file system, but it is eventually consistent
                  when there are no writes to the file system. That is, SizeInBytes represents
                  actual size only if the file system is not modified for a period longer than
                  a couple of hours. Otherwise, the value is not the exact size that the file
                  system was at any point in time.
                properties:
                  timestamp:
                    format: date-time
                    type: string
                  value:
                    format: int64
                    type: integer
                  valueInArchive:
                    format: int64
                    type: integer
                  valueInIA:
                    format: int64
                    type: integer
                  valueInStandard:
                    format: int64
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
