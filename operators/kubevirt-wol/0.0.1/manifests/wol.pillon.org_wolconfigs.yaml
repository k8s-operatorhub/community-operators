apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  creationTimestamp: null
  name: wolconfigs.wol.pillon.org
spec:
  group: wol.pillon.org
  names:
    kind: WolConfig
    listKind: WolConfigList
    plural: wolconfigs
    shortNames:
    - wolcfg
    singular: wolconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.discoveryMode
      name: Discovery Mode
      type: string
    - jsonPath: .spec.wolPort
      name: WOL Port
      type: integer
    - jsonPath: .status.managedVMs
      name: Managed VMs
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: WolConfig is the Schema for the Wake-on-LAN configurations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WolConfigSpec defines the desired state of WolConfig
            properties:
              agent:
                description: Agent configuration for the WOL DaemonSet
                properties:
                  image:
                    description: Image is the container image for the agent (optional,
                      defaults to controller's agent image)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy for agent container image
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector is a selector which must be true for
                      the agent pod to fit on a node
                    type: object
                  priorityClassName:
                    description: PriorityClassName for agent pods
                    type: string
                  resources:
                    description: Resources describes the compute resource requirements
                      for agent pods
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  tolerations:
                    description: Tolerations allow the agent pods to schedule onto
                      nodes with matching taints
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  updateStrategy:
                    description: UpdateStrategy for the DaemonSet
                    properties:
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          type = "RollingUpdate".
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              The maximum number of nodes with an existing available DaemonSet pod that
                              can have an updated DaemonSet pod during during an update.
                              Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                              This can not be 0 if MaxUnavailable is 0.
                              Absolute number is calculated from percentage by rounding up to a minimum of 1.
                              Default value is 0.
                              Example: when this is set to 30%, at most 30% of the total number of nodes
                              that should be running the daemon pod (i.e. status.desiredNumberScheduled)
                              can have their a new pod created before the old pod is marked as deleted.
                              The update starts by launching new pods on 30% of nodes. Once an updated
                              pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
                              on that node is marked deleted. If the old pod becomes unavailable for any
                              reason (Ready transitions to false, is evicted, or is drained) an updated
                              pod is immediatedly created on that node without considering surge limits.
                              Allowing surge implies the possibility that the resources consumed by the
                              daemonset on any given node can double if the readiness check fails, and
                              so resource intensive daemonsets should take into account that they may
                              cause evictions during disruption.
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              The maximum number of DaemonSet pods that can be unavailable during the
                              update. Value can be an absolute number (ex: 5) or a percentage of total
                              number of DaemonSet pods at the start of the update (ex: 10%). Absolute
                              number is calculated from percentage by rounding up.
                              This cannot be 0 if MaxSurge is 0
                              Default value is 1.
                              Example: when this is set to 30%, at most 30% of the total number of nodes
                              that should be running the daemon pod (i.e. status.desiredNumberScheduled)
                              can have their pods stopped for an update at any given time. The update
                              starts by stopping at most 30% of those DaemonSet pods and then brings
                              up new DaemonSet pods in their place. Once the new pods are available,
                              it then proceeds onto other DaemonSet pods, thus ensuring that at least
                              70% of original number of DaemonSet pods are available at all times during
                              the update.
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of daemon set update. Can be "RollingUpdate"
                          or "OnDelete". Default is RollingUpdate.
                        type: string
                    type: object
                type: object
              cacheTTL:
                default: 300
                description: CacheTTL is the cache time-to-live in seconds for VM
                  mappings
                minimum: 0
                type: integer
              discoveryMode:
                default: All
                description: DiscoveryMode determines how VMs are discovered
                enum:
                - All
                - LabelSelector
                - Explicit
                type: string
              explicitMappings:
                description: ExplicitMappings provides explicit MAC to VM mappings
                  (used with DiscoveryMode=Explicit)
                items:
                  description: MACVMMapping defines an explicit MAC address to VM
                    mapping
                  properties:
                    macAddress:
                      description: MACAddress in format xx:xx:xx:xx:xx:xx
                      pattern: ^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$
                      type: string
                    namespace:
                      description: Namespace where the VM resides
                      type: string
                    vmName:
                      description: VMName is the name of the VirtualMachine
                      type: string
                  required:
                  - macAddress
                  - namespace
                  - vmName
                  type: object
                type: array
              namespaceSelectors:
                description: |-
                  NamespaceSelectors lists namespaces to watch for VMs
                  If empty, all namespaces are monitored
                items:
                  type: string
                type: array
              vmSelector:
                description: VMSelector is a label selector for VMs (used with DiscoveryMode=LabelSelector)
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              wolPorts:
                default:
                - 9
                description: |-
                  WOLPorts are the UDP ports to listen for Wake-on-LAN packets
                  Default: [9]
                items:
                  type: integer
                maxItems: 10
                minItems: 1
                type: array
            type: object
          status:
            description: WolConfigStatus defines the observed state of WolConfig
            properties:
              agentStatus:
                description: AgentStatus contains information about the agent DaemonSet
                properties:
                  daemonSetName:
                    description: DaemonSetName is the name of the created DaemonSet
                    type: string
                  desiredNumberScheduled:
                    description: DesiredNumberScheduled is the total number of nodes
                      that should be running the daemon pod
                    format: int32
                    type: integer
                  numberAvailable:
                    description: NumberAvailable is the number of nodes with available
                      daemon pods
                    format: int32
                    type: integer
                  numberReady:
                    description: NumberReady is the number of nodes with ready daemon
                      pods
                    format: int32
                    type: integer
                type: object
              conditions:
                description: Conditions represent the latest available observations
                  of the WOLConfig state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastSync:
                description: LastSync is the timestamp of the last VM mapping update
                format: date-time
                type: string
              managedVMs:
                description: ManagedVMs is the number of VMs currently being monitored
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
