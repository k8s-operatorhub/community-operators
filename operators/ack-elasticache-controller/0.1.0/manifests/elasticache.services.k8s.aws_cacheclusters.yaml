apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: cacheclusters.elasticache.services.k8s.aws
spec:
  group: elasticache.services.k8s.aws
  names:
    kind: CacheCluster
    listKind: CacheClusterList
    plural: cacheclusters
    singular: cachecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.engineVersion
      name: VERSION
      type: string
    - jsonPath: .status.cacheClusterStatus
      name: STATUS
      type: string
    - jsonPath: .status.configurationEndpoint.address
      name: ENDPOINT
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CacheCluster is the Schema for the CacheClusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CacheClusterSpec defines the desired state of CacheCluster.


              Contains all of the attributes of a specific cluster.
            properties:
              authToken:
                description: |-
                  Reserved parameter. The password used to access a password protected server.


                  Password constraints:


                     * Must be only printable ASCII characters.


                     * Must be at least 16 characters and no more than 128 characters in length.


                     * The only permitted printable special characters are !, &, #, $, ^, <,
                     >, and -. Other printable special characters cannot be used in the AUTH
                     token.


                  For more information, see AUTH password (http://redis.io/commands/AUTH) at
                  http://redis.io/commands/AUTH.
                properties:
                  key:
                    description: Key is the key within the secret
                    type: string
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              autoMinorVersionUpgrade:
                description: |-
                  If you are running Redis engine version 6.0 or later, set this parameter
                  to yes if you want to opt-in to the next auto minor version upgrade campaign.
                  This parameter is disabled for previous versions.
                type: boolean
              azMode:
                description: |-
                  Specifies whether the nodes in this Memcached cluster are created in a single
                  Availability Zone or created across multiple Availability Zones in the cluster's
                  region.


                  This parameter is only supported for Memcached clusters.


                  If the AZMode and PreferredAvailabilityZones are not specified, ElastiCache
                  assumes single-az mode.
                type: string
              cacheClusterID:
                description: |-
                  The node group (shard) identifier. This parameter is stored as a lowercase
                  string.


                  Constraints:


                     * A name must contain from 1 to 50 alphanumeric characters or hyphens.


                     * The first character must be a letter.


                     * A name cannot end with a hyphen or contain two consecutive hyphens.
                type: string
              cacheNodeType:
                description: |-
                  The compute and memory capacity of the nodes in the node group (shard).


                  The following node types are supported by ElastiCache. Generally speaking,
                  the current generation types provide more memory and computational power
                  at lower cost when compared to their equivalent previous generation counterparts.


                     * General purpose: Current generation: M7g node types: cache.m7g.large,
                     cache.m7g.xlarge, cache.m7g.2xlarge, cache.m7g.4xlarge, cache.m7g.8xlarge,
                     cache.m7g.12xlarge, cache.m7g.16xlarge For region availability, see Supported
                     Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                     M6g node types (available only for Redis engine version 5.0.6 onward and
                     for Memcached engine version 1.5.16 onward): cache.m6g.large, cache.m6g.xlarge,
                     cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge,
                     cache.m6g.16xlarge M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge,
                     cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types:
                     cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge
                     T4g node types (available only for Redis engine version 5.0.6 onward and
                     Memcached engine version 1.5.16 onward): cache.t4g.micro, cache.t4g.small,
                     cache.t4g.medium T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium
                     T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous
                     generation: (not recommended. Existing clusters are still supported but
                     creation of new clusters is not supported for these types.) T1 node types:
                     cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large,
                     cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge,
                     cache.m3.2xlarge


                     * Compute optimized: Previous generation: (not recommended. Existing clusters
                     are still supported but creation of new clusters is not supported for
                     these types.) C1 node types: cache.c1.xlarge


                     * Memory optimized: Current generation: R7g node types: cache.r7g.large,
                     cache.r7g.xlarge, cache.r7g.2xlarge, cache.r7g.4xlarge, cache.r7g.8xlarge,
                     cache.r7g.12xlarge, cache.r7g.16xlarge For region availability, see Supported
                     Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                     R6g node types (available only for Redis engine version 5.0.6 onward and
                     for Memcached engine version 1.5.16 onward): cache.r6g.large, cache.r6g.xlarge,
                     cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge,
                     cache.r6g.16xlarge R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge,
                     cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types:
                     cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge,
                     cache.r4.16xlarge Previous generation: (not recommended. Existing clusters
                     are still supported but creation of new clusters is not supported for
                     these types.) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge
                     R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge,
                     cache.r3.8xlarge


                  Additional node type info


                     * All current generation instance types are created in Amazon VPC by default.


                     * Redis append-only files (AOF) are not supported for T1 or T2 instances.


                     * Redis Multi-AZ with automatic failover is not supported on T1 instances.


                     * Redis configuration variables appendonly and appendfsync are not supported
                     on Redis version 2.8.22 and later.
                type: string
              cacheParameterGroupName:
                description: |-
                  The name of the parameter group to associate with this cluster. If this argument
                  is omitted, the default parameter group for the specified engine is used.
                  You cannot use any parameter group which has cluster-enabled='yes' when creating
                  a cluster.
                type: string
              cacheParameterGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              cacheSecurityGroupNames:
                description: |-
                  A list of security group names to associate with this cluster.


                  Use this parameter only when you are creating a cluster outside of an Amazon
                  Virtual Private Cloud (Amazon VPC).
                items:
                  type: string
                type: array
              cacheSubnetGroupName:
                description: |-
                  The name of the subnet group to be used for the cluster.


                  Use this parameter only when you are creating a cluster in an Amazon Virtual
                  Private Cloud (Amazon VPC).


                  If you're going to launch your cluster in an Amazon VPC, you need to create
                  a subnet group before you start creating a cluster. For more information,
                  see Subnets and Subnet Groups (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                type: string
              cacheSubnetGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              engine:
                description: |-
                  The name of the cache engine to be used for this cluster.


                  Valid values for this parameter are: memcached | redis
                type: string
              engineVersion:
                description: |-
                  The version number of the cache engine to be used for this cluster. To view
                  the supported cache engine versions, use the DescribeCacheEngineVersions
                  operation.


                  Important: You can upgrade to a newer engine version (see Selecting a Cache
                  Engine and Version (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)),
                  but you cannot downgrade to an earlier engine version. If you want to use
                  an earlier engine version, you must delete the existing cluster or replication
                  group and create it anew with the earlier engine version.
                type: string
              ipDiscovery:
                description: |-
                  The network type you choose when modifying a cluster, either ipv4 | ipv6.
                  IPv6 is supported for workloads using Redis engine version 6.2 onward or
                  Memcached engine version 1.6.6 on all instances built on the Nitro system
                  (http://aws.amazon.com/ec2/nitro/).
                type: string
              logDeliveryConfigurations:
                description: Specifies the destination, format and type of the logs.
                items:
                  description: Specifies the destination, format and type of the logs.
                  properties:
                    destinationDetails:
                      description: |-
                        Configuration details of either a CloudWatch Logs destination or Kinesis
                        Data Firehose destination.
                      properties:
                        cloudWatchLogsDetails:
                          description: The configuration details of the CloudWatch
                            Logs destination.
                          properties:
                            logGroup:
                              type: string
                          type: object
                        kinesisFirehoseDetails:
                          description: The configuration details of the Kinesis Data
                            Firehose destination.
                          properties:
                            deliveryStream:
                              type: string
                          type: object
                      type: object
                    destinationType:
                      type: string
                    enabled:
                      type: boolean
                    logFormat:
                      type: string
                    logType:
                      type: string
                  type: object
                type: array
              networkType:
                description: |-
                  Must be either ipv4 | ipv6 | dual_stack. IPv6 is supported for workloads
                  using Redis engine version 6.2 onward or Memcached engine version 1.6.6 on
                  all instances built on the Nitro system (http://aws.amazon.com/ec2/nitro/).
                type: string
              notificationTopicARN:
                description: |-
                  The Amazon Resource Name (ARN) of the Amazon Simple Notification Service
                  (SNS) topic to which notifications are sent.


                  The Amazon SNS topic owner must be the same as the cluster owner.
                type: string
              notificationTopicRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              numCacheNodes:
                description: |-
                  The initial number of cache nodes that the cluster has.


                  For clusters running Redis, this value must be 1. For clusters running Memcached,
                  this value must be between 1 and 40.


                  If you need more than 40 nodes for your Memcached cluster, please fill out
                  the ElastiCache Limit Increase Request form at http://aws.amazon.com/contact-us/elasticache-node-limit-request/
                  (http://aws.amazon.com/contact-us/elasticache-node-limit-request/).
                format: int64
                type: integer
              outpostMode:
                description: |-
                  Specifies whether the nodes in the cluster are created in a single outpost
                  or across multiple outposts.
                type: string
              port:
                description: The port number on which each of the cache nodes accepts
                  connections.
                format: int64
                type: integer
              preferredAvailabilityZone:
                description: |-
                  The EC2 Availability Zone in which the cluster is created.


                  All nodes belonging to this cluster are placed in the preferred Availability
                  Zone. If you want to create your nodes across multiple Availability Zones,
                  use PreferredAvailabilityZones.


                  Default: System chosen Availability Zone.
                type: string
              preferredAvailabilityZones:
                description: |-
                  A list of the Availability Zones in which cache nodes are created. The order
                  of the zones in the list is not important.


                  This option is only supported on Memcached.


                  If you are creating your cluster in an Amazon VPC (recommended) you can only
                  locate nodes in Availability Zones that are associated with the subnets in
                  the selected subnet group.


                  The number of Availability Zones listed must equal the value of NumCacheNodes.


                  If you want all the nodes in the same Availability Zone, use PreferredAvailabilityZone
                  instead, or repeat the Availability Zone multiple times in the list.


                  Default: System chosen Availability Zones.
                items:
                  type: string
                type: array
              preferredMaintenanceWindow:
                description: |-
                  Specifies the weekly time range during which maintenance on the cluster is
                  performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                  (24H Clock UTC). The minimum maintenance window is a 60 minute period.
                type: string
              preferredOutpostARN:
                description: The outpost ARN in which the cache cluster is created.
                type: string
              preferredOutpostARNs:
                description: The outpost ARNs in which the cache cluster is created.
                items:
                  type: string
                type: array
              replicationGroupID:
                description: |-
                  The ID of the replication group to which this cluster should belong. If this
                  parameter is specified, the cluster is added to the specified replication
                  group as a read replica; otherwise, the cluster is a standalone primary that
                  is not part of any replication group.


                  If the specified replication group is Multi-AZ enabled and the Availability
                  Zone is not specified, the cluster is created in Availability Zones that
                  provide the best spread of read replicas across Availability Zones.


                  This parameter is only valid if the Engine parameter is redis.
                type: string
              replicationGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              securityGroupIDs:
                description: |-
                  One or more VPC security groups associated with the cluster.


                  Use this parameter only when you are creating a cluster in an Amazon Virtual
                  Private Cloud (Amazon VPC).
                items:
                  type: string
                type: array
              snapshotARNs:
                description: |-
                  A single-element string list containing an Amazon Resource Name (ARN) that
                  uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot
                  file is used to populate the node group (shard). The Amazon S3 object name
                  in the ARN cannot contain any commas.


                  This parameter is only valid if the Engine parameter is redis.


                  Example of an Amazon S3 ARN: arn:aws:s3:::my_bucket/snapshot1.rdb
                items:
                  type: string
                type: array
              snapshotName:
                description: |-
                  The name of a Redis snapshot from which to restore data into the new node
                  group (shard). The snapshot status changes to restoring while the new node
                  group (shard) is being created.


                  This parameter is only valid if the Engine parameter is redis.
                type: string
              snapshotRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              snapshotRetentionLimit:
                description: |-
                  The number of days for which ElastiCache retains automatic snapshots before
                  deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                  taken today is retained for 5 days before being deleted.


                  This parameter is only valid if the Engine parameter is redis.


                  Default: 0 (i.e., automatic backups are disabled for this cache cluster).
                format: int64
                type: integer
              snapshotWindow:
                description: |-
                  The daily time range (in UTC) during which ElastiCache begins taking a daily
                  snapshot of your node group (shard).


                  Example: 05:00-09:00


                  If you do not specify this parameter, ElastiCache automatically chooses an
                  appropriate time range.


                  This parameter is only valid if the Engine parameter is redis.
                type: string
              tags:
                description: A list of tags to be added to this resource.
                items:
                  description: |-
                    A tag that can be added to an ElastiCache cluster or replication group. Tags
                    are composed of a Key/Value pair. You can use tags to categorize and track
                    all your ElastiCache resources, with the exception of global replication
                    group. When you add or remove tags on replication groups, those actions will
                    be replicated to all nodes in the replication group. A tag with a null Value
                    is permitted.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              transitEncryptionEnabled:
                description: A flag that enables in-transit encryption when set to
                  true.
                type: boolean
            required:
            - cacheClusterID
            type: object
          status:
            description: CacheClusterStatus defines the observed state of CacheCluster
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              atRestEncryptionEnabled:
                description: |-
                  A flag that enables encryption at-rest when set to true.


                  You cannot modify the value of AtRestEncryptionEnabled after the cluster
                  is created. To enable at-rest encryption on a cluster you must set AtRestEncryptionEnabled
                  to true when you create a cluster.


                  Required: Only available when creating a replication group in an Amazon VPC
                  using redis version 3.2.6, 4.x or later.


                  Default: false
                type: boolean
              authTokenEnabled:
                description: |-
                  A flag that enables using an AuthToken (password) when issuing Redis commands.


                  Default: false
                type: boolean
              authTokenLastModifiedDate:
                description: The date the auth token was last modified
                format: date-time
                type: string
              cacheClusterCreateTime:
                description: The date and time when the cluster was created.
                format: date-time
                type: string
              cacheClusterStatus:
                description: |-
                  The current state of this cluster, one of the following values: available,
                  creating, deleted, deleting, incompatible-network, modifying, rebooting cluster
                  nodes, restore-failed, or snapshotting.
                type: string
              cacheNodes:
                description: A list of cache nodes that are members of the cluster.
                items:
                  description: |-
                    Represents an individual cache node within a cluster. Each cache node runs
                    its own instance of the cluster's protocol-compliant caching software - either
                    Memcached or Redis.


                    The following node types are supported by ElastiCache. Generally speaking,
                    the current generation types provide more memory and computational power
                    at lower cost when compared to their equivalent previous generation counterparts.


                       * General purpose: Current generation: M7g node types: cache.m7g.large,
                       cache.m7g.xlarge, cache.m7g.2xlarge, cache.m7g.4xlarge, cache.m7g.8xlarge,
                       cache.m7g.12xlarge, cache.m7g.16xlarge For region availability, see Supported
                       Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                       M6g node types (available only for Redis engine version 5.0.6 onward and
                       for Memcached engine version 1.5.16 onward): cache.m6g.large, cache.m6g.xlarge,
                       cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge,
                       cache.m6g.16xlarge M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge,
                       cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types:
                       cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge
                       T4g node types (available only for Redis engine version 5.0.6 onward and
                       Memcached engine version 1.5.16 onward): cache.t4g.micro, cache.t4g.small,
                       cache.t4g.medium T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium
                       T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous
                       generation: (not recommended. Existing clusters are still supported but
                       creation of new clusters is not supported for these types.) T1 node types:
                       cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large,
                       cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge,
                       cache.m3.2xlarge


                       * Compute optimized: Previous generation: (not recommended. Existing clusters
                       are still supported but creation of new clusters is not supported for
                       these types.) C1 node types: cache.c1.xlarge


                       * Memory optimized: Current generation: R7g node types: cache.r7g.large,
                       cache.r7g.xlarge, cache.r7g.2xlarge, cache.r7g.4xlarge, cache.r7g.8xlarge,
                       cache.r7g.12xlarge, cache.r7g.16xlarge For region availability, see Supported
                       Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                       R6g node types (available only for Redis engine version 5.0.6 onward and
                       for Memcached engine version 1.5.16 onward): cache.r6g.large, cache.r6g.xlarge,
                       cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge,
                       cache.r6g.16xlarge R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge,
                       cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types:
                       cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge,
                       cache.r4.16xlarge Previous generation: (not recommended. Existing clusters
                       are still supported but creation of new clusters is not supported for
                       these types.) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge
                       R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge,
                       cache.r3.8xlarge


                    Additional node type info


                       * All current generation instance types are created in Amazon VPC by default.


                       * Redis append-only files (AOF) are not supported for T1 or T2 instances.


                       * Redis Multi-AZ with automatic failover is not supported on T1 instances.


                       * Redis configuration variables appendonly and appendfsync are not supported
                       on Redis version 2.8.22 and later.
                  properties:
                    cacheNodeCreateTime:
                      format: date-time
                      type: string
                    cacheNodeID:
                      type: string
                    cacheNodeStatus:
                      type: string
                    customerAvailabilityZone:
                      type: string
                    customerOutpostARN:
                      type: string
                    endpoint:
                      description: |-
                        Represents the information required for client programs to connect to a cache
                        node.
                      properties:
                        address:
                          type: string
                        port:
                          format: int64
                          type: integer
                      type: object
                    parameterGroupStatus:
                      type: string
                    sourceCacheNodeID:
                      type: string
                  type: object
                type: array
              cacheParameterGroup:
                description: Status of the cache parameter group.
                properties:
                  cacheNodeIDsToReboot:
                    items:
                      type: string
                    type: array
                  cacheParameterGroupName:
                    type: string
                  parameterApplyStatus:
                    type: string
                type: object
              cacheSecurityGroups:
                description: A list of cache security group elements, composed of
                  name and status sub-elements.
                items:
                  description: Represents a cluster's status within a particular cache
                    security group.
                  properties:
                    cacheSecurityGroupName:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              clientDownloadLandingPage:
                description: |-
                  The URL of the web page where you can download the latest ElastiCache client
                  library.
                type: string
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              configurationEndpoint:
                description: |-
                  Represents a Memcached cluster endpoint which can be used by an application
                  to connect to any node in the cluster. The configuration endpoint will always
                  have .cfg in it.


                  Example: mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211
                properties:
                  address:
                    type: string
                  port:
                    format: int64
                    type: integer
                type: object
              notificationConfiguration:
                description: |-
                  Describes a notification topic and its status. Notification topics are used
                  for publishing ElastiCache events to subscribers using Amazon Simple Notification
                  Service (SNS).
                properties:
                  topicARN:
                    type: string
                  topicStatus:
                    type: string
                type: object
              pendingModifiedValues:
                description: |-
                  A group of settings that are applied to the cluster in the future, or that
                  are currently being applied.
                properties:
                  authTokenStatus:
                    type: string
                  cacheNodeIDsToRemove:
                    items:
                      type: string
                    type: array
                  cacheNodeType:
                    type: string
                  engineVersion:
                    type: string
                  numCacheNodes:
                    format: int64
                    type: integer
                  transitEncryptionEnabled:
                    type: boolean
                  transitEncryptionMode:
                    type: string
                type: object
              replicationGroupLogDeliveryEnabled:
                description: |-
                  A boolean value indicating whether log delivery is enabled for the replication
                  group.
                type: boolean
              securityGroups:
                description: A list of VPC Security Groups associated with the cluster.
                items:
                  description: Represents a single cache security group and its status.
                  properties:
                    securityGroupID:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              transitEncryptionMode:
                description: |-
                  A setting that allows you to migrate your clients to use in-transit encryption,
                  with no downtime.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
