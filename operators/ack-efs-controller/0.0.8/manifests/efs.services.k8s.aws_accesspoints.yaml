apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: accesspoints.efs.services.k8s.aws
spec:
  group: efs.services.k8s.aws
  names:
    kind: AccessPoint
    listKind: AccessPointList
    plural: accesspoints
    singular: accesspoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.accessPointID
      name: ID
      type: string
    - jsonPath: .spec.fileSystemID
      name: FILESYSTEMID
      type: string
    - jsonPath: .spec.rootDirectory.path
      name: ROOTDIRECTORY
      type: string
    - jsonPath: .spec.posixUser.uid
      name: POSIXUSERUID
      type: integer
    - jsonPath: .spec.posixUser.gid
      name: POSIXUSERGID
      type: integer
    - jsonPath: .status.lifeCycleState
      name: STATE
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessPoint is the Schema for the AccessPoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessPointSpec defines the desired state of AccessPoint.
            properties:
              fileSystemID:
                description: The ID of the EFS file system that the access point provides
                  access to.
                type: string
              fileSystemRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              posixUser:
                description: |-
                  The operating system user and group applied to all file system requests made
                  using the access point.
                properties:
                  gid:
                    format: int64
                    type: integer
                  secondaryGIDs:
                    items:
                      format: int64
                      type: integer
                    type: array
                  uid:
                    format: int64
                    type: integer
                type: object
              rootDirectory:
                description: |-
                  Specifies the directory on the EFS file system that the access point exposes
                  as the root directory of your file system to NFS clients using the access
                  point. The clients using the access point can only access the root directory
                  and below. If the RootDirectory > Path specified does not exist, Amazon EFS
                  creates it and applies the CreationInfo settings when a client connects to
                  an access point. When specifying a RootDirectory, you must provide the Path,
                  and the CreationInfo.


                  Amazon EFS creates a root directory only if you have provided the CreationInfo:
                  OwnUid, OwnGID, and permissions for the directory. If you do not provide
                  this information, Amazon EFS does not create the root directory. If the root
                  directory does not exist, attempts to mount using the access point will fail.
                properties:
                  creationInfo:
                    description: |-
                      Required if the RootDirectory > Path specified does not exist. Specifies
                      the POSIX IDs and permissions to apply to the access point's RootDirectory
                      > Path. If the access point root directory does not exist, EFS creates it
                      with these settings when a client connects to the access point. When specifying
                      CreationInfo, you must include values for all properties.


                      Amazon EFS creates a root directory only if you have provided the CreationInfo:
                      OwnUid, OwnGID, and permissions for the directory. If you do not provide
                      this information, Amazon EFS does not create the root directory. If the root
                      directory does not exist, attempts to mount using the access point will fail.


                      If you do not provide CreationInfo and the specified RootDirectory does not
                      exist, attempts to mount the file system using the access point will fail.
                    properties:
                      ownerGID:
                        format: int64
                        type: integer
                      ownerUID:
                        format: int64
                        type: integer
                      permissions:
                        type: string
                    type: object
                  path:
                    type: string
                type: object
              tags:
                description: |-
                  Creates tags associated with the access point. Each tag is a key-value pair,
                  each key must be unique. For more information, see Tagging Amazon Web Services
                  resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference Guide.
                items:
                  description: |-
                    A tag is a key-value pair. Allowed characters are letters, white space, and
                    numbers that can be represented in UTF-8, and the following characters:+
                    - = . _ : /.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: AccessPointStatus defines the observed state of AccessPoint
            properties:
              accessPointID:
                description: The ID of the access point, assigned by Amazon EFS.
                type: string
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lifeCycleState:
                description: Identifies the lifecycle phase of the access point.
                type: string
              name:
                description: The name of the access point. This is the value of the
                  Name tag.
                type: string
              ownerID:
                description: Identifies the Amazon Web Services account that owns
                  the access point resource.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
