apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: grants.kms.services.k8s.aws
spec:
  group: kms.services.k8s.aws
  names:
    kind: Grant
    listKind: GrantList
    plural: grants
    singular: grant
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Grant is the Schema for the Grants API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GrantSpec defines the desired state of Grant.
            properties:
              constraints:
                description: "Allows a cryptographic operation (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
                  only when the encryption context matches or includes the encryption
                  context specified in this structure. For more information about
                  encryption context, see Encryption Context (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context)
                  in the AWS Key Management Service Developer Guide . \n Grant constraints
                  are not applied to operations that do not support an encryption
                  context, such as cryptographic operations with asymmetric CMKs and
                  management operations, such as DescribeKey or RetireGrant."
                properties:
                  encryptionContextEquals:
                    additionalProperties:
                      type: string
                    type: object
                  encryptionContextSubset:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              grantTokens:
                description: "A list of grant tokens. \n For more information, see
                  Grant Tokens (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token)
                  in the AWS Key Management Service Developer Guide."
                items:
                  type: string
                type: array
              granteePrincipal:
                description: "The principal that is given permission to perform the
                  operations that the grant permits. \n To specify the principal,
                  use the Amazon Resource Name (ARN) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
                  of an AWS principal. Valid AWS principals include AWS accounts (root),
                  IAM users, IAM roles, federated users, and assumed role users. For
                  examples of the ARN syntax to use for specifying a principal, see
                  AWS Identity and Access Management (IAM) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam)
                  in the Example ARNs section of the AWS General Reference."
                type: string
              keyID:
                description: "The unique identifier for the customer master key (CMK)
                  that the grant applies to. \n Specify the key ID or the Amazon Resource
                  Name (ARN) of the CMK. To specify a CMK in a different AWS account,
                  you must use the key ARN. \n For example: \n    * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
                  \n    * Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
                  \n To get the key ID and key ARN for a CMK, use ListKeys or DescribeKey."
                type: string
              name:
                description: "A friendly name for the grant. Use this value to prevent
                  the unintended creation of duplicate grants when retrying this request.
                  \n When this value is absent, all CreateGrant requests result in
                  a new grant with a unique GrantId even if all the supplied parameters
                  are identical. This can result in unintended duplicates when you
                  retry the CreateGrant request. \n When this value is present, you
                  can retry a CreateGrant request with identical parameters; if the
                  grant already exists, the original GrantId is returned without creating
                  a new grant. Note that the returned grant token is unique with every
                  CreateGrant request, even when a duplicate GrantId is returned.
                  All grant tokens for the same grant ID can be used interchangeably."
                type: string
              operations:
                description: A list of operations that the grant permits.
                items:
                  type: string
                type: array
              retiringPrincipal:
                description: "The principal that is given permission to retire the
                  grant by using RetireGrant operation. \n To specify the principal,
                  use the Amazon Resource Name (ARN) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
                  of an AWS principal. Valid AWS principals include AWS accounts (root),
                  IAM users, federated users, and assumed role users. For examples
                  of the ARN syntax to use for specifying a principal, see AWS Identity
                  and Access Management (IAM) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam)
                  in the Example ARNs section of the AWS General Reference."
                type: string
            required:
            - granteePrincipal
            - keyID
            - operations
            type: object
          status:
            description: GrantStatus defines the observed state of Grant
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              grantID:
                description: "The unique identifier for the grant. \n You can use
                  the GrantId in a ListGrants, RetireGrant, or RevokeGrant operation."
                type: string
              grantToken:
                description: "The grant token. \n For more information, see Grant
                  Tokens (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token)
                  in the AWS Key Management Service Developer Guide."
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
