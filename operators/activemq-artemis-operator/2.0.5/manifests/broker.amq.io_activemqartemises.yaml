apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: activemqartemises.broker.amq.io
spec:
  group: broker.amq.io
  names:
    kind: ActiveMQArtemis
    listKind: ActiveMQArtemisList
    plural: activemqartemises
    shortNames:
    - aa
    singular: activemqartemis
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The state of the resource
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A stateful deployment of one or more brokers
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                description: Specifies the acceptor configuration
                items:
                  properties:
                    amqpMinLargeMessageSize:
                      description: AMQP Minimum Large Message Size
                      type: integer
                    anycastPrefix:
                      description: To indicate which kind of routing type to use.
                      type: string
                    bindToAllInterfaces:
                      description: Whether to let the acceptor to bind to all interfaces
                      type: boolean
                    connectionsAllowed:
                      description: Max number of connections allowed to make
                      type: integer
                    enabledCipherSuites:
                      description: Comma separated list of cipher suites used for
                        SSL communication.
                      type: string
                    enabledProtocols:
                      description: Comma separated list of protocols used for SSL
                        communication.
                      type: string
                    expose:
                      description: Whether or not to expose this acceptor
                      type: boolean
                    exposeMode:
                      description: Mode to expose the acceptor. Currently the supported
                        modes are `route` and `ingress`. It is ignored when the field
                        `Expose` is false. Default is `route` on OpenShift and `ingress`
                        on Kubernetes. \n\n* `route` mode uses OpenShift Routes to
                        expose the acceptor.\n* `ingress` mode uses Kubernetes Nginx
                        Ingress to expose the acceptor with TLS passthrough.\n"
                      enum:
                      - ingress
                      - route
                      type: string
                    ingressHost:
                      description: 'Host for Ingress and Route resources of the acceptor.
                        It supports the following variables: $(CR_NAME), $(CR_NAMESPACE),
                        $(BROKER_ORDINAL), $(ITEM_NAME), $(RES_NAME) and $(INGRESS_DOMAIN).
                        It is required for the acceptors exposed with the ingress
                        mode when the ingress domain is not specified.'
                      type: string
                    keyStoreProvider:
                      description: Provider used for the keystore; "SUN", "SunJCE",
                        etc. Default is null
                      type: string
                    multicastPrefix:
                      description: To indicate which kind of routing type to use
                      type: string
                    name:
                      description: The acceptor name
                      type: string
                    needClientAuth:
                      description: Tells a client connecting to this acceptor that
                        2-way SSL is required. This property takes precedence over
                        wantClientAuth.
                      type: boolean
                    port:
                      description: Port number
                      format: int32
                      type: integer
                    protocols:
                      description: The protocols to enable for this acceptor
                      type: string
                    sniHost:
                      description: A regular expression used to match the server_name
                        extension on incoming SSL connections. If the name doesn't
                        match then the connection to the acceptor will be rejected.
                      type: string
                    sslEnabled:
                      description: Whether or not to enable SSL on this port
                      type: boolean
                    sslProvider:
                      description: Used to change the SSL Provider between JDK and
                        OPENSSL. The default is JDK.
                      type: string
                    sslSecret:
                      description: Name of the secret to use for ssl information
                      type: string
                    supportAdvisory:
                      description: For openwire protocol if advisory topics are enabled,
                        default false
                      type: boolean
                    suppressInternalManagementObjects:
                      description: If prevents advisory addresses/queues to be registered
                        to management service, default false
                      type: boolean
                    trustSecret:
                      description: The name of the truststore secret.
                      type: string
                    trustStoreProvider:
                      description: Provider used for the truststore; "SUN", "SunJCE",
                        etc. Default in broker is null
                      type: string
                    trustStoreType:
                      description: Type of truststore being used; "JKS", "JCEKS",
                        "PKCS12", etc. Default in broker is "JKS"
                      type: string
                    verifyHost:
                      description: The CN of the connecting client's SSL certificate
                        will be compared to its hostname to verify they match. This
                        is useful only for 2-way SSL.
                      type: boolean
                    wantClientAuth:
                      description: Tells a client connecting to this acceptor that
                        2-way SSL is requested but not required. Overridden by needClientAuth.
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              addressSettings:
                description: Specifies the address configurations (deprecated in favour
                  of BrokerProperties)
                properties:
                  addressSetting:
                    description: Specifies the address settings
                    items:
                      properties:
                        addressFullPolicy:
                          description: what happens when an address where maxSizeBytes
                            is specified becomes full
                          type: string
                        autoCreateAddresses:
                          description: whether or not to automatically create addresses
                            when a client sends a message to or attempts to consume
                            a message from a queue mapped to an address that doesnt
                            exist
                          type: boolean
                        autoCreateDeadLetterResources:
                          description: whether or not to automatically create the
                            dead-letter-address and/or a corresponding queue on that
                            address when a message found to be undeliverable
                          type: boolean
                        autoCreateExpiryResources:
                          description: whether or not to automatically create the
                            expiry-address and/or a corresponding queue on that address
                            when a message is sent to a matching queue
                          type: boolean
                        autoCreateJmsQueues:
                          description: DEPRECATED. whether or not to automatically
                            create JMS queues when a producer sends or a consumer
                            connects to a queue
                          type: boolean
                        autoCreateJmsTopics:
                          description: DEPRECATED. whether or not to automatically
                            create JMS topics when a producer sends or a consumer
                            subscribes to a topic
                          type: boolean
                        autoCreateQueues:
                          description: whether or not to automatically create a queue
                            when a client sends a message to or attempts to consume
                            a message from a queue
                          type: boolean
                        autoDeleteAddresses:
                          description: whether or not to delete auto-created addresses
                            when it no longer has any queues
                          type: boolean
                        autoDeleteAddressesDelay:
                          description: how long to wait (in milliseconds) before deleting
                            auto-created addresses after they no longer have any queues
                          format: int32
                          type: integer
                        autoDeleteCreatedQueues:
                          description: whether or not to delete created queues when
                            the queue has 0 consumers and 0 messages
                          type: boolean
                        autoDeleteJmsQueues:
                          description: DEPRECATED. whether or not to delete auto-created
                            JMS queues when the queue has 0 consumers and 0 messages
                          type: boolean
                        autoDeleteJmsTopics:
                          description: DEPRECATED. whether or not to delete auto-created
                            JMS topics when the last subscription is closed
                          type: boolean
                        autoDeleteQueues:
                          description: whether or not to delete auto-created queues
                            when the queue has 0 consumers and 0 messages
                          type: boolean
                        autoDeleteQueuesDelay:
                          description: how long to wait (in milliseconds) before deleting
                            auto-created queues after the queue has 0 consumers.
                          format: int32
                          type: integer
                        autoDeleteQueuesMessageCount:
                          description: the message count the queue must be at or below
                            before it can be evaluated to be auto deleted, 0 waits
                            until empty queue (default) and -1 disables this check.
                          format: int32
                          type: integer
                        configDeleteAddresses:
                          description: What to do when an address is no longer in
                            broker.xml.  OFF = will do nothing addresses will remain,
                            FORCE = delete address and its queues even if messages
                            remaining.
                          type: string
                        configDeleteDiverts:
                          description: What to do when a divert is no longer in broker.xml.  OFF
                            = will do nothing and divert will remain(default), FORCE
                            = delete divert
                          type: string
                        configDeleteQueues:
                          description: What to do when a queue is no longer in broker.xml.  OFF
                            = will do nothing queues will remain, FORCE = delete queues
                            even if messages remaining.
                          type: string
                        deadLetterAddress:
                          description: the address to send dead messages to
                          type: string
                        deadLetterQueuePrefix:
                          description: the prefix to use for auto-created dead letter
                            queues
                          type: string
                        deadLetterQueueSuffix:
                          description: the suffix to use for auto-created dead letter
                            queues
                          type: string
                        defaultAddressRoutingType:
                          description: the routing-type used on auto-created addresses
                          type: string
                        defaultConsumerWindowSize:
                          description: the default window size for a consumer
                          format: int32
                          type: integer
                        defaultConsumersBeforeDispatch:
                          description: the default number of consumers needed before
                            dispatch can start for queues under the address.
                          format: int32
                          type: integer
                        defaultDelayBeforeDispatch:
                          description: the default delay (in milliseconds) to wait
                            before dispatching if number of consumers before dispatch
                            is not met for queues under the address.
                          format: int32
                          type: integer
                        defaultExclusiveQueue:
                          description: whether to treat the queues under the address
                            as exclusive queues by default
                          type: boolean
                        defaultGroupBuckets:
                          description: number of buckets to use for grouping, -1 (default)
                            is unlimited and uses the raw group, 0 disables message
                            groups.
                          format: int32
                          type: integer
                        defaultGroupFirstKey:
                          description: key used to mark a message is first in a group
                            for a consumer
                          type: string
                        defaultGroupRebalance:
                          description: whether to rebalance groups when a consumer
                            is added
                          type: boolean
                        defaultGroupRebalancePauseDispatch:
                          description: whether to pause dispatch when rebalancing
                            groups
                          type: boolean
                        defaultLastValueKey:
                          description: the property to use as the key for a last value
                            queue by default
                          type: string
                        defaultLastValueQueue:
                          description: whether to treat the queues under the address
                            as a last value queues by default
                          type: boolean
                        defaultMaxConsumers:
                          description: the maximum number of consumers allowed on
                            this queue at any one time
                          format: int32
                          type: integer
                        defaultNonDestructive:
                          description: whether the queue should be non-destructive
                            by default
                          type: boolean
                        defaultPurgeOnNoConsumers:
                          description: purge the contents of the queue once there
                            are no consumers
                          type: boolean
                        defaultQueueRoutingType:
                          description: the routing-type used on auto-created queues
                          type: string
                        defaultRingSize:
                          description: the default ring-size value for any matching
                            queue which doesnt have ring-size explicitly defined
                          format: int32
                          type: integer
                        enableIngressTimestamp:
                          description: Whether or not set the timestamp of arrival
                            on messages. default false
                          type: boolean
                        enableMetrics:
                          description: whether or not to enable metrics for metrics
                            plugins on the matching address
                          type: boolean
                        expiryAddress:
                          description: the address to send expired messages to
                          type: string
                        expiryDelay:
                          description: Overrides the expiration time for messages
                            using the default value for expiration time. "-1" disables
                            this setting.
                          format: int32
                          type: integer
                        expiryQueuePrefix:
                          description: the prefix to use for auto-created expiry queues
                          type: string
                        expiryQueueSuffix:
                          description: the suffix to use for auto-created expiry queues
                          type: string
                        lastValueQueue:
                          description: This is deprecated please use default-last-value-queue
                            instead.
                          type: boolean
                        managementBrowsePageSize:
                          description: how many message a management resource can
                            browse
                          format: int32
                          type: integer
                        managementMessageAttributeSizeLimit:
                          description: max size of the message returned from management
                            API, default 256
                          format: int32
                          type: integer
                        match:
                          description: pattern for matching settings against addresses;
                            can use wildards
                          type: string
                        maxDeliveryAttempts:
                          description: how many times to attempt to deliver a message
                            before sending to dead letter address
                          format: int32
                          type: integer
                        maxExpiryDelay:
                          description: Overrides the expiration time for messages
                            using a higher value. "-1" disables this setting.
                          format: int32
                          type: integer
                        maxRedeliveryDelay:
                          description: Maximum value for the redelivery-delay
                          format: int32
                          type: integer
                        maxSizeBytes:
                          description: the maximum size in bytes for an address. -1
                            means no limits. This is used in PAGING, BLOCK and FAIL
                            policies. Supports byte notation like K, Mb, GB, etc.
                          type: string
                        maxSizeBytesRejectThreshold:
                          description: used with the address full BLOCK policy, the
                            maximum size in bytes an address can reach before messages
                            start getting rejected. Works in combination with max-size-bytes
                            for AMQP protocol only.  Default = -1 (no limit).
                          format: int32
                          type: integer
                        maxSizeMessages:
                          description: the maximum number of messages allowed on the
                            address (default -1).  This is used in PAGING, BLOCK and
                            FAIL policies. It does not support notations and it is
                            a simple number of messages allowed.
                          format: int64
                          type: integer
                        messageCounterHistoryDayLimit:
                          description: how many days to keep message counter history
                            for this address
                          format: int32
                          type: integer
                        minExpiryDelay:
                          description: Overrides the expiration time for messages
                            using a lower value. "-1" disables this setting.
                          format: int32
                          type: integer
                        pageMaxCacheSize:
                          description: Number of paging files to cache in memory to
                            avoid IO during paging navigation
                          format: int32
                          type: integer
                        pageSizeBytes:
                          description: The page size in bytes to use for an address.
                            Supports byte notation like K, Mb, GB, etc.
                          type: string
                        redeliveryDelay:
                          description: the time (in ms) to wait before redelivering
                            a cancelled message.
                          format: int32
                          type: integer
                        redistributionDelay:
                          description: how long (in ms) to wait after the last consumer
                            is closed on a queue before redistributing messages.
                          format: int32
                          type: integer
                        retroactiveMessageCount:
                          description: the number of messages to preserve for future
                            queues created on the matching address
                          format: int32
                          type: integer
                        sendToDlaOnNoRoute:
                          description: if there are no queues matching this address,
                            whether to forward message to DLA (if it exists for this
                            address)
                          type: boolean
                        slowConsumerCheckPeriod:
                          description: How often to check for slow consumers on a
                            particular queue. Measured in seconds.
                          format: int32
                          type: integer
                        slowConsumerPolicy:
                          description: what happens when a slow consumer is identified
                          type: string
                        slowConsumerThreshold:
                          description: The minimum rate of message consumption allowed
                            before a consumer is considered "slow." Measured in messages-per-second.
                          format: int32
                          type: integer
                        slowConsumerThresholdMeasurementUnit:
                          description: Unit used in specifying slow consumer threshold,
                            default is MESSAGE_PER_SECOND
                          type: string
                      type: object
                    type: array
                  applyRule:
                    description: How to merge the address settings to broker configuration
                    type: string
                type: object
              adminPassword:
                description: Password for standard broker user. It is required for
                  connecting to the broker and the web console. If left empty, it
                  will be generated.
                type: string
              adminUser:
                description: User name for standard broker user. It is required for
                  connecting to the broker and the web console. If left empty, it
                  will be generated.
                type: string
              brokerProperties:
                description: Optional list of key=value properties that are applied
                  to the broker configuration bean.
                items:
                  type: string
                type: array
              connectors:
                description: Specifies connectors and connector configuration
                items:
                  properties:
                    enabledCipherSuites:
                      description: Comma separated list of cipher suites used for
                        SSL communication.
                      type: string
                    enabledProtocols:
                      description: Comma separated list of protocols used for SSL
                        communication.
                      type: string
                    expose:
                      description: Whether or not to expose this connector
                      type: boolean
                    exposeMode:
                      description: Mode to expose the connector. Currently the supported
                        modes are `route` and `ingress`. It is ignored when the field
                        `Expose` is false. Default is `route` on OpenShift and `ingress`
                        on Kubernetes. \n\n* `route` mode uses OpenShift Routes to
                        expose the connector.\n* `ingress` mode uses Kubernetes Nginx
                        Ingress to expose the connector with TLS passthrough.\n"
                      enum:
                      - ingress
                      - route
                      type: string
                    host:
                      description: Hostname or IP to connect to
                      type: string
                    ingressHost:
                      description: 'Host for Ingress and Route resources of the acceptor.
                        It supports the following variables: $(CR_NAME), $(CR_NAMESPACE),
                        $(BROKER_ORDINAL), $(ITEM_NAME), $(RES_NAME) and $(INGRESS_DOMAIN).
                        It is required for the connectors exposed with the ingress
                        mode when the ingress domain is not specified.'
                      type: string
                    keyStoreProvider:
                      description: Provider used for the keystore; "SUN", "SunJCE",
                        etc. Default is null
                      type: string
                    name:
                      description: The name of the connector
                      type: string
                    needClientAuth:
                      description: Tells a client connecting to this connector that
                        2-way SSL is required. This property takes precedence over
                        wantClientAuth.
                      type: boolean
                    port:
                      description: Port number
                      format: int32
                      type: integer
                    sniHost:
                      description: A regular expression used to match the server_name
                        extension on incoming SSL connections. If the name doesn't
                        match then the connection to the acceptor will be rejected.
                      type: string
                    sslEnabled:
                      description: ' Whether or not to enable SSL on this port'
                      type: boolean
                    sslProvider:
                      description: Used to change the SSL Provider between JDK and
                        OPENSSL. The default is JDK.
                      type: string
                    sslSecret:
                      description: Name of the secret to use for ssl information
                      type: string
                    trustSecret:
                      description: The name of the truststore secret.
                      type: string
                    trustStoreProvider:
                      description: Provider used for the truststore; "SUN", "SunJCE",
                        etc. Default in broker is null
                      type: string
                    trustStoreType:
                      description: Type of truststore being used; "JKS", "JCEKS",
                        "PKCS12", etc. Default in broker is "JKS"
                      type: string
                    type:
                      description: The type either tcp or vm
                      type: string
                    verifyHost:
                      description: The CN of the connecting client's SSL certificate
                        will be compared to its hostname to verify they match. This
                        is useful only for 2-way SSL.
                      type: boolean
                    wantClientAuth:
                      description: Tells a client connecting to this connector that
                        2-way SSL is requested but not required. Overridden by needClientAuth.
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                description: Specifies the console configuration
                properties:
                  expose:
                    description: Whether or not to expose this port
                    type: boolean
                  exposeMode:
                    description: Mode to expose the console. Currently the supported
                      modes are `route` and `ingress`. It is ignored when the field
                      `Expose` is false. Default is `route` on OpenShift and `ingress`
                      on Kubernetes. \n\n* `route` mode uses OpenShift Routes to expose
                      the console.\n* `ingress` mode uses Kubernetes Nginx Ingress
                      to expose the console with TLS passthrough.\n"
                    enum:
                    - ingress
                    - route
                    type: string
                  ingressHost:
                    description: 'Host for Ingress and Route resources of the acceptor.
                      It supports the following variables: $(CR_NAME), $(CR_NAMESPACE),
                      $(BROKER_ORDINAL), $(ITEM_NAME), $(RES_NAME) and $(INGRESS_DOMAIN).
                      It is required for the console exposed with the ingress mode
                      when the ingress domain is not specified.'
                    type: string
                  name:
                    description: The name of the console. Default is wconsj.
                    type: string
                  sslEnabled:
                    description: Whether or not to enable SSL on this port
                    type: boolean
                  sslSecret:
                    description: Name of the secret to use for ssl information
                    type: string
                  trustSecret:
                    description: The name of the truststore secret.
                    type: string
                  useClientAuth:
                    description: If the embedded server requires client authentication
                    type: boolean
                type: object
              deploymentPlan:
                description: Specifies the deployment plan
                properties:
                  affinity:
                    description: Specifies affinity configuration
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node matches the corresponding matchExpressions; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: |-
                                An empty preferred scheduling term matches all objects with implicit weight 0
                                (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: |-
                                    A null or empty node selector term matches no objects. The requirements of
                                    them are ANDed.
                                    The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the anti-affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling anti-affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the anti-affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the anti-affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: Custom annotations to be added to broker pods
                    type: object
                  clustered:
                    description: Whether broker is clustered
                    type: boolean
                  containerSecurityContext:
                    description: Specifies the container security context
                    properties:
                      allowPrivilegeEscalation:
                        description: |-
                          AllowPrivilegeEscalation controls whether a process can gain more
                          privileges than its parent process. This bool directly controls if
                          the no_new_privs flag will be set on the container process.
                          AllowPrivilegeEscalation is true always when the container is:
                          1) run as Privileged
                          2) has CAP_SYS_ADMIN
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      capabilities:
                        description: |-
                          The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the container runtime.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: |-
                          Run container in privileged mode.
                          Processes in privileged containers are essentially equivalent to root on the host.
                          Defaults to false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: |-
                          procMount denotes the type of proc mount to use for the containers.
                          The default is DefaultProcMount which uses the container runtime defaults for
                          readonly paths and masked paths.
                          This requires the ProcMountType feature flag to be enabled.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: |-
                          Whether this container has a read-only root filesystem.
                          Default is false.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: |-
                          The GID to run the entrypoint of the container process.
                          Uses runtime default if unset.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: |-
                          Indicates that the container must run as a non-root user.
                          If true, the Kubelet will validate the image at runtime to ensure that it
                          does not run as UID 0 (root) and fail to start the container if it does.
                          If unset or false, no such validation will be performed.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: |-
                          The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: |-
                          The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random SELinux context for each
                          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: |-
                          The seccomp options to use by this container. If seccomp options are
                          provided at both the pod & container level, the container options
                          override the pod options.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: |-
                              localhostProfile indicates a profile defined in a file on the node should be used.
                              The profile must be preconfigured on the node to work.
                              Must be a descending path, relative to the kubelet's configured seccomp profile location.
                              Must be set if type is "Localhost". Must NOT be set for any other type.
                            type: string
                          type:
                            description: |-
                              type indicates which kind of seccomp profile will be applied.
                              Valid options are:

                              Localhost - a profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile should be used.
                              Unconfined - no profile should be applied.
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: |-
                          The Windows specific settings applied to all containers.
                          If unspecified, the options from the PodSecurityContext will be used.
                          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: |-
                              GMSACredentialSpec is where the GMSA admission webhook
                              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                              GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: |-
                              HostProcess determines if a container should be run as a 'Host Process' container.
                              All of a Pod's containers must have the same effective HostProcess value
                              (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                              In addition, if HostProcess is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: |-
                              The UserName in Windows to run the entrypoint of the container process.
                              Defaults to the user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  enableMetricsPlugin:
                    description: Whether or not to install the artemis metrics plugin
                    type: boolean
                  extraMounts:
                    description: Specifies extra mounts
                    properties:
                      configMaps:
                        description: Specifies ConfigMap names
                        items:
                          type: string
                        type: array
                      secrets:
                        description: Specifies Secret names
                        items:
                          type: string
                        type: array
                    type: object
                  extraVolumeClaimTemplates:
                    description: Specifies Extra Volume Claims Templates for the broker
                      pods
                    items:
                      properties:
                        metadata:
                          description: Specifies the desired metadata of a volume
                            claim
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: |-
                                Annotations is an unstructured key value map stored with a resource that may be
                                set by external tools to store and retrieve arbitrary metadata. They are not
                                queryable and should be preserved when modifying objects.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: |-
                                Map of string keys and values that can be used to organize and categorize
                                (scope and select) objects. May match selectors of replication controllers
                                and services.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                              type: object
                            name:
                              description: |-
                                Name must be unique within a namespace. Is required when creating resources, although
                                some resources may allow a client to request the generation of an appropriate name
                                automatically. Name is primarily intended for creation idempotence and configuration
                                definition.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                              type: string
                          type: object
                        spec:
                          description: |-
                            Specifies the desired characteristics of a volume claim
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the desired access modes the volume should have.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: |-
                                dataSource field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim)
                                If the provisioner or an external controller can support the specified data source,
                                it will create a new volume based on the contents of the specified data source.
                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: |-
                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                volume is desired. This may be any object from a non-empty API group (non
                                core object) or a PersistentVolumeClaim object.
                                When this field is specified, volume binding will only succeed if the type of
                                the specified object matches some installed volume populator or dynamic
                                provisioner.
                                This field will replace the functionality of the dataSource field and as such
                                if both fields are non-empty, they must have the same value. For backwards
                                compatibility, when namespace isn't specified in dataSourceRef,
                                both fields (dataSource and dataSourceRef) will be set to the same
                                value automatically if one of them is empty and the other is non-empty.
                                When namespace is specified in dataSourceRef,
                                dataSource isn't set to the same value and must be empty.
                                There are three important differences between dataSource and dataSourceRef:
                                * While dataSource only allows two specific types of objects, dataSourceRef
                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                  preserves all values, and generates an error if a disallowed value is
                                  specified.
                                * While dataSource only allows local objects, dataSourceRef allows objects
                                  in any namespaces.
                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace of resource being referenced
                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: |-
                                resources represents the minimum resources the volume should have.
                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                that are lower than previous value but must still be higher than capacity recorded in the
                                status field of the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: |-
                                storageClassName is the name of the StorageClass required by the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeAttributesClassName:
                              description: |-
                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                If specified, the CSI driver will create or update the volume with the attributes defined
                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                will be set by the persistentvolume controller if it exists.
                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                exists.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                              type: string
                            volumeMode:
                              description: |-
                                volumeMode defines what type of volume is required by the claim.
                                Value of Filesystem is implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                    type: array
                  extraVolumeMounts:
                    description: Specifies mount options for extraVolumes
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  extraVolumes:
                    description: Specifies additional Volumes to be attached to the
                      broker pods
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: |-
                            awsElasticBlockStore represents an AWS Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly value true will force the readOnly setting in VolumeMounts.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: boolean
                            volumeID:
                              description: |-
                                volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: |-
                                fsType is Filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: |-
                                monitors is Required: Monitors is a collection of Ceph monitors
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: boolean
                            secretFile:
                              description: |-
                                secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                            secretRef:
                              description: |-
                                secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: |-
                                user is optional: User is the rados user name, default is admin
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: |-
                            cinder represents a cinder volume attached and mounted on kubelets host machine.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is optional: points to a secret object containing parameters used to connect
                                to OpenStack.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeID:
                              description: |-
                                volumeID used to identify the volume in cinder.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items if unspecified, each key-value pair in the Data field of the referenced
                                ConfigMap will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: |-
                                driver is the name of the CSI driver that handles this volume.
                                Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: |-
                                fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the associated CSI driver
                                which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: |-
                                nodePublishSecretRef is a reference to the secret object containing
                                sensitive information to pass to the CSI driver to complete the CSI
                                NodePublishVolume and NodeUnpublishVolume calls.
                                This field is optional, and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            readOnly:
                              description: |-
                                readOnly specifies a read-only configuration for the volume.
                                Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: |-
                                volumeAttributes stores driver-specific properties that are passed to the CSI
                                driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                Optional: mode bits to use on created files by default. Must be a
                                Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  mode:
                                    description: |-
                                      Optional: mode bits used to set permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: |-
                            emptyDir represents a temporary directory that shares a pod's lifetime.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          properties:
                            medium:
                              description: |-
                                medium represents what type of storage medium should back this directory.
                                The default is "" which means to use the node's default medium.
                                Must be an empty string (default) or Memory.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                The size limit is also applicable for memory medium.
                                The maximum usage on memory medium EmptyDir would be the minimum value between
                                the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                The default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: |-
                            ephemeral represents a volume that is handled by a cluster storage driver.
                            The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                            and deleted when the pod is removed.

                            Use this if:
                            a) the volume is only needed while the pod runs,
                            b) features of normal volumes like restoring from snapshot or capacity
                               tracking are needed,
                            c) the storage driver is specified through a storage class, and
                            d) the storage driver supports dynamic volume provisioning through
                               a PersistentVolumeClaim (see EphemeralVolumeSource for more
                               information on the connection between this volume type
                               and PersistentVolumeClaim).

                            Use PersistentVolumeClaim or one of the vendor-specific
                            APIs for volumes that persist for longer than the lifecycle
                            of an individual pod.

                            Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                            be used that way - see the documentation of the driver for
                            more information.

                            A pod can use both types of ephemeral volumes and
                            persistent volumes at the same time.
                          properties:
                            volumeClaimTemplate:
                              description: |-
                                Will be used to create a stand-alone PVC to provision the volume.
                                The pod in which this EphemeralVolumeSource is embedded will be the
                                owner of the PVC, i.e. the PVC will be deleted together with the
                                pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes` array
                                entry. Pod validation will reject the pod if the concatenated name
                                is not valid for a PVC (for example, too long).

                                An existing PVC with that name that is not owned by the pod
                                will *not* be used for the pod to avoid using an unrelated
                                volume by mistake. Starting the pod is then blocked until
                                the unrelated PVC is removed. If such a pre-created PVC is
                                meant to be used by the pod, the PVC has to updated with an
                                owner reference to the pod once the pod exists. Normally
                                this should not be necessary, but it may be useful when
                                manually reconstructing a broken cluster.

                                This field is read-only and no changes will be made by Kubernetes
                                to the PVC after it has been created.

                                Required, must not be nil.
                              properties:
                                metadata:
                                  description: |-
                                    May contain labels and annotations that will be copied into the PVC
                                    when creating it. No other fields are allowed and will be rejected during
                                    validation.
                                  type: object
                                spec:
                                  description: |-
                                    The specification for the PersistentVolumeClaim. The entire content is
                                    copied unchanged into the PVC that gets created from this
                                    template. The same fields as in a PersistentVolumeClaim
                                    are also valid here.
                                  properties:
                                    accessModes:
                                      description: |-
                                        accessModes contains the desired access modes the volume should have.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: |-
                                        dataSource field can be used to specify either:
                                        * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller can support the specified data source,
                                        it will create a new volume based on the contents of the specified data source.
                                        When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                        and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: |-
                                        dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                        volume is desired. This may be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding will only succeed if the type of
                                        the specified object matches some installed volume populator or dynamic
                                        provisioner.
                                        This field will replace the functionality of the dataSource field and as such
                                        if both fields are non-empty, they must have the same value. For backwards
                                        compatibility, when namespace isn't specified in dataSourceRef,
                                        both fields (dataSource and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty and the other is non-empty.
                                        When namespace is specified in dataSourceRef,
                                        dataSource isn't set to the same value and must be empty.
                                        There are three important differences between dataSource and dataSourceRef:
                                        * While dataSource only allows two specific types of objects, dataSourceRef
                                          allows any non-core object, as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                          preserves all values, and generates an error if a disallowed value is
                                          specified.
                                        * While dataSource only allows local objects, dataSourceRef allows objects
                                          in any namespaces.
                                        (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                        (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of resource being referenced
                                            Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                            (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: |-
                                        resources represents the minimum resources the volume should have.
                                        If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                        that are lower than previous value but must still be higher than capacity recorded in the
                                        status field of the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: |-
                                        storageClassName is the name of the StorageClass required by the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                      type: string
                                    volumeAttributesClassName:
                                      description: |-
                                        volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                        If specified, the CSI driver will create or update the volume with the attributes defined
                                        in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                        it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                        will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                        If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                        will be set by the persistentvolume controller if it exists.
                                        If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                        set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                        exists.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                        (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                      type: string
                                    volumeMode:
                                      description: |-
                                        volumeMode defines what type of volume is required by the claim.
                                        Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: |-
                                wwids Optional: FC volume world wide identifiers (wwids)
                                Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: |-
                            flexVolume represents a generic volume resource that is
                            provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: |-
                                readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is Optional: secretRef is reference to the secret object containing
                                sensitive information to pass to the plugin scripts. This may be
                                empty if no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed to the plugin
                                scripts.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: |-
                                datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: |-
                            gcePersistentDisk represents a GCE Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              format: int32
                              type: integer
                            pdName:
                              description: |-
                                pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: |-
                            gitRepo represents a git repository at a particular revision.
                            DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                            EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                            into the Pod's container.
                          properties:
                            directory:
                              description: |-
                                directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                git repository.  Otherwise, if specified, the volume will contain the git repository in
                                the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: |-
                            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md
                          properties:
                            endpoints:
                              description: |-
                                endpoints is the endpoint name that details Glusterfs topology.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            path:
                              description: |-
                                path is the Glusterfs volume path.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: |-
                            hostPath represents a pre-existing file or directory on the host
                            machine that is directly exposed to the container. This is generally
                            used for system agents or other privileged things that are allowed
                            to see the host machine. Most containers will NOT need this.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          properties:
                            path:
                              description: |-
                                path of the directory on the host.
                                If the path is a symlink, it will follow the link to the real path.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                            type:
                              description: |-
                                type for HostPath Volume
                                Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: |-
                            iscsi represents an ISCSI Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://examples.k8s.io/volumes/iscsi/README.md
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              type: string
                            initiatorName:
                              description: |-
                                initiatorName is the custom iSCSI Initiator Name.
                                If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: |-
                                iscsiInterface is the interface Name that uses an iSCSI transport.
                                Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: |-
                                portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            targetPortal:
                              description: |-
                                targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: |-
                            name of the volume.
                            Must be a DNS_LABEL and unique within the pod.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        nfs:
                          description: |-
                            nfs represents an NFS mount on the host that shares a pod's lifetime
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          properties:
                            path:
                              description: |-
                                path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the NFS export to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: boolean
                            server:
                              description: |-
                                server is the hostname or IP address of the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: |-
                            persistentVolumeClaimVolumeSource represents a reference to a
                            PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            claimName:
                              description: |-
                                claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              type: string
                            readOnly:
                              description: |-
                                readOnly Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fSType represents the filesystem type to mount
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode are the mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  clusterTrustBundle:
                                    description: |-
                                      ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                      of ClusterTrustBundle objects in an auto-updating file.

                                      Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                      ClusterTrustBundle objects can either be selected by name, or by the
                                      combination of signer name and a label selector.

                                      Kubelet performs aggressive normalization of the PEM contents written
                                      into the pod filesystem.  Esoteric PEM features such as inter-block
                                      comments and block headers are stripped.  Certificates are deduplicated.
                                      The ordering of certificates within the file is arbitrary, and Kubelet
                                      may change the order over time.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          Select all ClusterTrustBundles that match this label selector.  Only has
                                          effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                          interpreted as "match nothing".  If set but empty, interpreted as "match
                                          everything".
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      name:
                                        description: |-
                                          Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                          with signerName and labelSelector.
                                        type: string
                                      optional:
                                        description: |-
                                          If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                          aren't available.  If using name, then the named ClusterTrustBundle is
                                          allowed not to exist.  If using signerName, then the combination of
                                          signerName and labelSelector is allowed to match zero
                                          ClusterTrustBundles.
                                        type: boolean
                                      path:
                                        description: Relative path from the volume
                                          root to write the bundle.
                                        type: string
                                      signerName:
                                        description: |-
                                          Select all ClusterTrustBundles that match this signer name.
                                          Mutually-exclusive with name.  The contents of all selected
                                          ClusterTrustBundles will be unified and deduplicated.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the ConfigMap,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            mode:
                                              description: |-
                                                Optional: mode bits used to set permissions on this file, must be an octal value
                                                between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: |-
                                                Selects a resource of the container: only resources limits and requests
                                                (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          Secret will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the Secret,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: |-
                                          audience is the intended audience of the token. A recipient of a token
                                          must identify itself with an identifier specified in the audience of the
                                          token, and otherwise should reject the token. The audience defaults to the
                                          identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: |-
                                          expirationSeconds is the requested duration of validity of the service
                                          account token. As the token approaches expiration, the kubelet volume
                                          plugin will proactively rotate the service account token. The kubelet will
                                          start trying to rotate the token if the token is older than 80 percent of
                                          its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                          and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: |-
                                          path is the path relative to the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: |-
                                group to map volume access to
                                Default is no group
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                Defaults to false.
                              type: boolean
                            registry:
                              description: |-
                                registry represents a single or multiple Quobyte Registry services
                                specified as a string as host:port pair (multiple entries are separated with commas)
                                which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: |-
                                tenant owning the given Quobyte volume in the Backend
                                Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: |-
                                user to map volume access to
                                Defaults to serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: |-
                            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/rbd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              type: string
                            image:
                              description: |-
                                image is the rados image name.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            keyring:
                              description: |-
                                keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            monitors:
                              description: |-
                                monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                            pool:
                              description: |-
                                pool is the rados pool name.
                                Default is rbd.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is name of the authentication secret for RBDUser. If provided
                                overrides keyring.
                                Default is nil.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: |-
                                user is the rados user name.
                                Default is admin.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs".
                                Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef references to the secret for ScaleIO user and other
                                sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: |-
                                storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: |-
                                volumeName is the name of a volume already created in the ScaleIO system
                                that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: |-
                            secret represents a secret that should populate this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values
                                for mode bits. Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items If unspecified, each key-value pair in the Data field of the referenced
                                Secret will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the Secret,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: |-
                                secretName is the name of the secret in the pod's namespace to use.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef specifies the secret to use for obtaining the StorageOS API
                                credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeName:
                              description: |-
                                volumeName is the human-readable name of the StorageOS volume.  Volume
                                names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: |-
                                volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                namespace is specified then the Pod's namespace will be used.  This allows the
                                Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                Set VolumeName to any name to override the default behaviour.
                                Set to "default" if you are not using namespaces within StorageOS.
                                Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: The image used for the broker, all upgrades are disabled.
                      Needs a corresponding initImage
                    type: string
                  imagePullSecrets:
                    description: The image pull secrets name used to retrieve secrets
                      for image pulls.
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  initImage:
                    description: The init container image used to configure broker,
                      all upgrades are disabled. Needs a corresponding image
                    type: string
                  jolokiaAgentEnabled:
                    description: If true enable the Jolokia JVM Agent
                    type: boolean
                  journalType:
                    description: If aio use ASYNCIO, if nio use NIO for journal IO
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Assign labels to broker pods, the keys `ActiveMQArtemis`
                      and `application` are not allowed
                    type: object
                  livenessProbe:
                    description: Specifies the liveness probe configuration
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: |-
                              Command is the command line to execute inside the container, the working directory for the
                              command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                              not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                              a shell, you need to explicitly call out to that shell.
                              Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: |-
                          Minimum consecutive failures for the probe to be considered failed after having succeeded.
                          Defaults to 3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            default: ""
                            description: |-
                              Service is the name of the service to place in the gRPC HealthCheckRequest
                              (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                              If this is not specified, the default behavior is defined by gRPC.
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: |-
                              Host name to connect to, defaults to the pod IP. You probably want to set
                              "Host" in httpHeaders instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: |-
                                    The header field name.
                                    This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Name or number of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: |-
                              Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: |-
                          Number of seconds after the container has started before liveness probes are initiated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                      periodSeconds:
                        description: |-
                          How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: |-
                          Minimum consecutive successes for the probe to be considered successful after having failed.
                          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Number or name of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: |-
                          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                          The grace period is the duration in seconds after the processes running in the pod are sent
                          a termination signal and the time when the processes are forcibly halted with a kill signal.
                          Set this value longer than the expected cleanup time for your process.
                          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                          value overrides the value provided by the pod spec.
                          Value must be non-negative integer. The value zero indicates stop immediately via
                          the kill signal (no opportunity to shut down).
                          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: |-
                          Number of seconds after which the probe times out.
                          Defaults to 1 second. Minimum value is 1.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                    type: object
                  managementRBACEnabled:
                    description: If true enable the management role based access control
                    type: boolean
                  messageMigration:
                    description: If true migrate messages on scaledown
                    type: boolean
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Specifies the node selector
                    type: object
                  persistenceEnabled:
                    description: If true use persistent volume via persistent volume
                      claim for journal storage
                    type: boolean
                  podDisruptionBudget:
                    description: Specifies the pod disruption budget
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selector:
                        description: |-
                          Label query over pods whose evictions are managed by the disruption
                          budget.
                          A null selector will match no pods, while an empty ({}) selector will select
                          all pods within the namespace.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      unhealthyPodEvictionPolicy:
                        description: |-
                          UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                          should be considered for eviction. Current implementation considers healthy pods,
                          as pods that have status.conditions item with type="Ready",status="True".

                          Valid policies are IfHealthyBudget and AlwaysAllow.
                          If no policy is specified, the default behavior will be used,
                          which corresponds to the IfHealthyBudget policy.

                          IfHealthyBudget policy means that running pods (status.phase="Running"),
                          but not yet healthy can be evicted only if the guarded application is not
                          disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                          Healthy pods will be subject to the PDB for eviction.

                          AlwaysAllow policy means that all running pods (status.phase="Running"),
                          but not yet healthy are considered disrupted and can be evicted regardless
                          of whether the criteria in a PDB is met. This means perspective running
                          pods of a disrupted application might not get a chance to become healthy.
                          Healthy pods will be subject to the PDB for eviction.

                          Additional policies may be added in the future.
                          Clients making eviction decisions should disallow eviction of unhealthy pods
                          if they encounter an unrecognized policy in this field.

                          This field is beta-level. The eviction API uses this field when
                          the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).
                        type: string
                    type: object
                  podSecurity:
                    description: Specifies the pod security configurations
                    properties:
                      runAsUser:
                        description: runAsUser as defined in PodSecurityContext for
                          the pod
                        format: int64
                        type: integer
                      serviceAccountName:
                        description: ServiceAccount Name of the pod
                        type: string
                    type: object
                  podSecurityContext:
                    description: Specifies the pod security context
                    properties:
                      fsGroup:
                        description: |-
                          A special supplemental group that applies to all containers in a pod.
                          Some volume types allow the Kubelet to change the ownership of that volume
                          to be owned by the pod:

                          1. The owning GID will be the FSGroup
                          2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                          3. The permission bits are OR'd with rw-rw----

                          If unset, the Kubelet will not modify the ownership and permissions of any volume.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: |-
                          fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                          before being exposed inside Pod. This field will only apply to
                          volume types which support fsGroup based ownership(and permissions).
                          It will have no effect on ephemeral volume types such as: secret, configmaps
                          and emptydir.
                          Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                          Note that this field cannot be set when spec.os.name is windows.
                        type: string
                      runAsGroup:
                        description: |-
                          The GID to run the entrypoint of the container process.
                          Uses runtime default if unset.
                          May also be set in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence
                          for that container.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: |-
                          Indicates that the container must run as a non-root user.
                          If true, the Kubelet will validate the image at runtime to ensure that it
                          does not run as UID 0 (root) and fail to start the container if it does.
                          If unset or false, no such validation will be performed.
                          May also be set in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: |-
                          The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified.
                          May also be set in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence
                          for that container.
                          Note that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: |-
                          The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random SELinux context for each
                          container.  May also be set in SecurityContext.  If set in
                          both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: |-
                          The seccomp options to use by the containers in this pod.
                          Note that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: |-
                              localhostProfile indicates a profile defined in a file on the node should be used.
                              The profile must be preconfigured on the node to work.
                              Must be a descending path, relative to the kubelet's configured seccomp profile location.
                              Must be set if type is "Localhost". Must NOT be set for any other type.
                            type: string
                          type:
                            description: |-
                              type indicates which kind of seccomp profile will be applied.
                              Valid options are:

                              Localhost - a profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile should be used.
                              Unconfined - no profile should be applied.
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: |-
                          A list of groups applied to the first process run in each container, in addition
                          to the container's primary GID, the fsGroup (if specified), and group memberships
                          defined in the container image for the uid of the container process. If unspecified,
                          no additional groups are added to any container. Note that group memberships
                          defined in the container image for the uid of the container process are still effective,
                          even if they are not included in this list.
                          Note that this field cannot be set when spec.os.name is windows.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: |-
                          Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                          sysctls (by the container runtime) might fail to launch.
                          Note that this field cannot be set when spec.os.name is windows.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: |-
                          The Windows specific settings applied to all containers.
                          If unspecified, the options within a container's SecurityContext will be used.
                          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: |-
                              GMSACredentialSpec is where the GMSA admission webhook
                              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                              GMSA credential spec named by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: |-
                              HostProcess determines if a container should be run as a 'Host Process' container.
                              All of a Pod's containers must have the same effective HostProcess value
                              (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                              In addition, if HostProcess is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: |-
                              The UserName in Windows to run the entrypoint of the container process.
                              Defaults to the user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: string
                        type: object
                    type: object
                  readinessProbe:
                    description: Specifies the readiness probe configuration
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: |-
                              Command is the command line to execute inside the container, the working directory for the
                              command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                              not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                              a shell, you need to explicitly call out to that shell.
                              Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: |-
                          Minimum consecutive failures for the probe to be considered failed after having succeeded.
                          Defaults to 3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            default: ""
                            description: |-
                              Service is the name of the service to place in the gRPC HealthCheckRequest
                              (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                              If this is not specified, the default behavior is defined by gRPC.
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: |-
                              Host name to connect to, defaults to the pod IP. You probably want to set
                              "Host" in httpHeaders instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: |-
                                    The header field name.
                                    This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Name or number of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: |-
                              Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: |-
                          Number of seconds after the container has started before liveness probes are initiated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                      periodSeconds:
                        description: |-
                          How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: |-
                          Minimum consecutive successes for the probe to be considered successful after having failed.
                          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Number or name of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: |-
                          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                          The grace period is the duration in seconds after the processes running in the pod are sent
                          a termination signal and the time when the processes are forcibly halted with a kill signal.
                          Set this value longer than the expected cleanup time for your process.
                          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                          value overrides the value provided by the pod spec.
                          Value must be non-negative integer. The value zero indicates stop immediately via
                          the kill signal (no opportunity to shut down).
                          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: |-
                          Number of seconds after which the probe times out.
                          Defaults to 1 second. Minimum value is 1.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                    type: object
                  requireLogin:
                    description: If true require user password login credentials for
                      broker protocol ports
                    type: boolean
                  resources:
                    description: Specifies the minimum/maximum amount of compute resources
                      required/allowed
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  revisionHistoryLimit:
                    description: Specifies the Revision History Limit of the statefulset
                    format: int32
                    type: integer
                  size:
                    description: The number of broker pods to deploy
                    format: int32
                    type: integer
                  startupProbe:
                    description: Specifies the startup probe configuration
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: |-
                              Command is the command line to execute inside the container, the working directory for the
                              command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                              not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                              a shell, you need to explicitly call out to that shell.
                              Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: |-
                          Minimum consecutive failures for the probe to be considered failed after having succeeded.
                          Defaults to 3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            default: ""
                            description: |-
                              Service is the name of the service to place in the gRPC HealthCheckRequest
                              (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                              If this is not specified, the default behavior is defined by gRPC.
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: |-
                              Host name to connect to, defaults to the pod IP. You probably want to set
                              "Host" in httpHeaders instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: |-
                                    The header field name.
                                    This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Name or number of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: |-
                              Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: |-
                          Number of seconds after the container has started before liveness probes are initiated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                      periodSeconds:
                        description: |-
                          How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: |-
                          Minimum consecutive successes for the probe to be considered successful after having failed.
                          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              Number or name of the port to access on the container.
                              Number must be in the range 1 to 65535.
                              Name must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: |-
                          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                          The grace period is the duration in seconds after the processes running in the pod are sent
                          a termination signal and the time when the processes are forcibly halted with a kill signal.
                          Set this value longer than the expected cleanup time for your process.
                          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                          value overrides the value provided by the pod spec.
                          Value must be non-negative integer. The value zero indicates stop immediately via
                          the kill signal (no opportunity to shut down).
                          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: |-
                          Number of seconds after which the probe times out.
                          Defaults to 1 second. Minimum value is 1.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        format: int32
                        type: integer
                    type: object
                  storage:
                    description: Specifies the storage configurations
                    properties:
                      size:
                        description: The storage size
                        type: string
                      storageClassName:
                        description: The storageClassName to be used in PVC
                        type: string
                    type: object
                  tolerations:
                    description: Specifies the tolerations
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: Specifies the topology spread constraints
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: |-
                            LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine the number of pods
                            in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: |-
                            MatchLabelKeys is a set of pod label keys to select the pods over which
                            spreading will be calculated. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading will be calculated
                            for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            MatchLabelKeys cannot be set when LabelSelector isn't set.
                            Keys that don't exist in the incoming pod labels will
                            be ignored. A null or empty list means only match against labelSelector.

                            This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: |-
                            MaxSkew describes the degree to which pods may be unevenly distributed.
                            When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                            between the number of matching pods in the target topology and the global minimum.
                            The global minimum is the minimum number of matching pods in an eligible domain
                            or zero if the number of eligible domains is less than MinDomains.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 2/2/1:
                            In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |   P   |
                            - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                            scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                            violate MaxSkew(1).
                            - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                            When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                            to topologies that satisfy it.
                            It's a required field. Default value is 1 and 0 is not allowed.
                          format: int32
                          type: integer
                        minDomains:
                          description: |-
                            MinDomains indicates a minimum number of eligible domains.
                            When the number of eligible domains with matching topology keys is less than minDomains,
                            Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                            And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                            this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less than minDomains,
                            scheduler won't schedule more than maxSkew Pods to those domains.
                            If value is nil, the constraint behaves as if MinDomains is equal to 1.
                            Valid values are integers greater than 0.
                            When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                            For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                            labelSelector spread as 2/2/2:
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |  P P  |
                            The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                            In this situation, new pod with the same labelSelector cannot be scheduled,
                            because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew.

                            This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: |-
                            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                            when calculating pod topology spread skew. Options are:
                            - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                            If this value is nil, the behavior is equivalent to the Honor policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        nodeTaintsPolicy:
                          description: |-
                            NodeTaintsPolicy indicates how we will treat node taints when calculating
                            pod topology spread skew. Options are:
                            - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                            has a toleration, are included.
                            - Ignore: node taints are ignored. All nodes are included.

                            If this value is nil, the behavior is equivalent to the Ignore policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        topologyKey:
                          description: |-
                            TopologyKey is the key of node labels. Nodes that have a label with this key
                            and identical values are considered to be in the same topology.
                            We consider each <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket.
                            We define a domain as a particular instance of a topology.
                            Also, we define an eligible domain as a domain whose nodes meet the requirements of
                            nodeAffinityPolicy and nodeTaintsPolicy.
                            e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                            And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                            It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: |-
                            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                            the spread constraint.
                            - DoNotSchedule (default) tells the scheduler not to schedule it.
                            - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                              but giving higher precedence to topologies that would help reduce the
                              skew.
                            A constraint is considered "Unsatisfiable" for an incoming pod
                            if and only if every possible node assignment for that pod would violate
                            "MaxSkew" on some topology.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 3/1/1:
                            | zone1 | zone2 | zone3 |
                            | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                            to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                            MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                            won't make it *more* imbalanced.
                            It's a required field.
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                type: object
              env:
                description: Optional list of environment variables to apply to the
                  container(s), not exclusive
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              ingressDomain:
                description: The default ingress domain. It is required when any acceptor,
                  connector or console uses the ingress mode and does not specify
                  an IngressHost.
                type: string
              resourceTemplates:
                description: Specifies the template for various resources that the
                  operator controls
                items:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Custom annotations
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Custom labels
                      type: object
                    patch:
                      description: Custom attributes applied as strategic merge patch
                        by the operator
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    selector:
                      description: Select which resources to match, an empty selector
                        will match all resources
                      properties:
                        apiGroup:
                          description: APIGroup is the group version string of resources
                            to match
                          type: string
                        kind:
                          description: Kind is the type of resources to match
                          type: string
                        name:
                          description: Name is the pattern matcher for the Name of
                            resources to match
                          type: string
                      type: object
                  type: object
                type: array
              restricted:
                description: Restricted deployment, mtls jolokia agent with RBAC
                type: boolean
              upgrades:
                description: Specifies the upgrades (deprecated in favour of Version)
                properties:
                  enabled:
                    description: Set true to enable automatic micro version product
                      upgrades, it is disabled by default.
                    type: boolean
                  minor:
                    description: Set true to enable automatic minor product version
                      upgrades, it is disabled by default. Requires spec.upgrades.enabled
                      to be true.
                    type: boolean
                required:
                - enabled
                - minor
                type: object
              version:
                description: The desired version of the broker. Can be x, or x.y or
                  x.y.z to configure upgrades
                type: string
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentPlanSize:
                format: int32
                type: integer
              externalConfigs:
                description: Current state of external referenced resources
                items:
                  properties:
                    name:
                      type: string
                    resourceVersion:
                      type: string
                  required:
                  - name
                  - resourceVersion
                  type: object
                type: array
              podStatus:
                description: The current pods
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
              scaleLabelSelector:
                type: string
              upgrade:
                properties:
                  majorUpdates:
                    type: boolean
                  minorUpdates:
                    type: boolean
                  patchUpdates:
                    type: boolean
                  securityUpdates:
                    type: boolean
                required:
                - majorUpdates
                - minorUpdates
                - patchUpdates
                - securityUpdates
                type: object
              version:
                properties:
                  brokerVersion:
                    type: string
                  image:
                    type: string
                  initImage:
                    type: string
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.scaleLabelSelector
        specReplicasPath: .spec.deploymentPlan.size
        statusReplicasPath: .status.deploymentPlanSize
      status: {}
  - name: v2alpha1
    schema:
      openAPIV3Schema:
        description: ActiveMQArtemis is the Schema for the activemqartemises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                items:
                  properties:
                    anycastPrefix:
                      type: string
                    connectionsAllowed:
                      type: integer
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    multicastPrefix:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    protocols:
                      type: string
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              adminPassword:
                type: string
              adminUser:
                type: string
              connectors:
                items:
                  properties:
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    host:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    type:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                properties:
                  expose:
                    type: boolean
                  sslEnabled:
                    type: boolean
                  sslSecret:
                    type: string
                  useClientAuth:
                    type: boolean
                type: object
              deploymentPlan:
                properties:
                  image:
                    type: string
                  journalType:
                    type: string
                  messageMigration:
                    type: boolean
                  persistenceEnabled:
                    type: boolean
                  requireLogin:
                    type: boolean
                  size:
                    format: int32
                    type: integer
                type: object
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2alpha2
    schema:
      openAPIV3Schema:
        description: ActiveMQArtemis is the Schema for the activemqartemises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                items:
                  properties:
                    anycastPrefix:
                      type: string
                    connectionsAllowed:
                      type: integer
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    multicastPrefix:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    protocols:
                      type: string
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              adminPassword:
                type: string
              adminUser:
                type: string
              connectors:
                items:
                  properties:
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    host:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    type:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                properties:
                  expose:
                    type: boolean
                  sslEnabled:
                    type: boolean
                  sslSecret:
                    type: string
                  useClientAuth:
                    type: boolean
                type: object
              deploymentPlan:
                properties:
                  image:
                    type: string
                  journalType:
                    type: string
                  messageMigration:
                    type: boolean
                  persistenceEnabled:
                    type: boolean
                  requireLogin:
                    type: boolean
                  size:
                    format: int32
                    type: integer
                type: object
              upgrades:
                description: ActiveMQArtemis App product upgrade flags
                properties:
                  enabled:
                    type: boolean
                  minor:
                    type: boolean
                required:
                - enabled
                - minor
                type: object
              version:
                type: string
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2alpha3
    schema:
      openAPIV3Schema:
        description: ActiveMQArtemis is the Schema for the activemqartemises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                items:
                  properties:
                    amqpMinLargeMessageSize:
                      type: integer
                    anycastPrefix:
                      type: string
                    connectionsAllowed:
                      type: integer
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    multicastPrefix:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    protocols:
                      type: string
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              addressSettings:
                properties:
                  addressSetting:
                    items:
                      properties:
                        addressFullPolicy:
                          type: string
                        autoCreateAddresses:
                          type: boolean
                        autoCreateDeadLetterResources:
                          type: boolean
                        autoCreateExpiryResources:
                          type: boolean
                        autoCreateJmsQueues:
                          type: boolean
                        autoCreateJmsTopics:
                          type: boolean
                        autoCreateQueues:
                          type: boolean
                        autoDeleteAddresses:
                          type: boolean
                        autoDeleteAddressesDelay:
                          format: int32
                          type: integer
                        autoDeleteCreatedQueues:
                          type: boolean
                        autoDeleteJmsQueues:
                          type: boolean
                        autoDeleteJmsTopics:
                          type: boolean
                        autoDeleteQueues:
                          type: boolean
                        autoDeleteQueuesDelay:
                          format: int32
                          type: integer
                        autoDeleteQueuesMessageCount:
                          format: int32
                          type: integer
                        configDeleteAddresses:
                          type: string
                        configDeleteQueues:
                          type: string
                        deadLetterAddress:
                          type: string
                        deadLetterQueuePrefix:
                          type: string
                        deadLetterQueueSuffix:
                          type: string
                        defaultAddressRoutingType:
                          type: string
                        defaultConsumerWindowSize:
                          format: int32
                          type: integer
                        defaultConsumersBeforeDispatch:
                          format: int32
                          type: integer
                        defaultDelayBeforeDispatch:
                          format: int32
                          type: integer
                        defaultExclusiveQueue:
                          type: boolean
                        defaultGroupBuckets:
                          format: int32
                          type: integer
                        defaultGroupFirstKey:
                          type: string
                        defaultGroupRebalance:
                          type: boolean
                        defaultGroupRebalancePauseDispatch:
                          type: boolean
                        defaultLastValueKey:
                          type: string
                        defaultLastValueQueue:
                          type: boolean
                        defaultMaxConsumers:
                          format: int32
                          type: integer
                        defaultNonDestructive:
                          type: boolean
                        defaultPurgeOnNoConsumers:
                          type: boolean
                        defaultQueueRoutingType:
                          type: string
                        defaultRingSize:
                          format: int32
                          type: integer
                        enableMetrics:
                          type: boolean
                        expiryAddress:
                          type: string
                        expiryDelay:
                          format: int32
                          type: integer
                        expiryQueuePrefix:
                          type: string
                        expiryQueueSuffix:
                          type: string
                        lastValueQueue:
                          type: boolean
                        managementBrowsePageSize:
                          format: int32
                          type: integer
                        match:
                          type: string
                        maxDeliveryAttempts:
                          format: int32
                          type: integer
                        maxExpiryDelay:
                          format: int32
                          type: integer
                        maxRedeliveryDelay:
                          format: int32
                          type: integer
                        maxSizeBytes:
                          type: string
                        maxSizeBytesRejectThreshold:
                          format: int32
                          type: integer
                        messageCounterHistoryDayLimit:
                          format: int32
                          type: integer
                        minExpiryDelay:
                          format: int32
                          type: integer
                        pageMaxCacheSize:
                          format: int32
                          type: integer
                        pageSizeBytes:
                          type: string
                        redeliveryCollisionAvoidanceFactor:
                          type: number
                        redeliveryDelay:
                          format: int32
                          type: integer
                        redeliveryDelayMultiplier:
                          format: int32
                          type: integer
                        redistributionDelay:
                          format: int32
                          type: integer
                        retroactiveMessageCount:
                          format: int32
                          type: integer
                        sendToDlaOnNoRoute:
                          type: boolean
                        slowConsumerCheckPeriod:
                          format: int32
                          type: integer
                        slowConsumerPolicy:
                          type: string
                        slowConsumerThreshold:
                          format: int32
                          type: integer
                      type: object
                    type: array
                  applyRule:
                    type: string
                type: object
              adminPassword:
                type: string
              adminUser:
                type: string
              connectors:
                items:
                  properties:
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    host:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    type:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                properties:
                  expose:
                    type: boolean
                  sslEnabled:
                    type: boolean
                  sslSecret:
                    type: string
                  useClientAuth:
                    type: boolean
                type: object
              deploymentPlan:
                properties:
                  image:
                    type: string
                  journalType:
                    type: string
                  messageMigration:
                    type: boolean
                  persistenceEnabled:
                    type: boolean
                  requireLogin:
                    type: boolean
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  size:
                    format: int32
                    type: integer
                  storage:
                    properties:
                      size:
                        type: string
                    type: object
                type: object
              upgrades:
                description: ActiveMQArtemis App product upgrade flags
                properties:
                  enabled:
                    type: boolean
                  minor:
                    type: boolean
                required:
                - enabled
                - minor
                type: object
              version:
                type: string
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2alpha4
    schema:
      openAPIV3Schema:
        description: ActiveMQArtemis is the Schema for the activemqartemises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                items:
                  properties:
                    amqpMinLargeMessageSize:
                      type: integer
                    anycastPrefix:
                      type: string
                    connectionsAllowed:
                      type: integer
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    multicastPrefix:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    protocols:
                      type: string
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              addressSettings:
                properties:
                  addressSetting:
                    items:
                      properties:
                        addressFullPolicy:
                          type: string
                        autoCreateAddresses:
                          type: boolean
                        autoCreateDeadLetterResources:
                          type: boolean
                        autoCreateExpiryResources:
                          type: boolean
                        autoCreateJmsQueues:
                          type: boolean
                        autoCreateJmsTopics:
                          type: boolean
                        autoCreateQueues:
                          type: boolean
                        autoDeleteAddresses:
                          type: boolean
                        autoDeleteAddressesDelay:
                          format: int32
                          type: integer
                        autoDeleteCreatedQueues:
                          type: boolean
                        autoDeleteJmsQueues:
                          type: boolean
                        autoDeleteJmsTopics:
                          type: boolean
                        autoDeleteQueues:
                          type: boolean
                        autoDeleteQueuesDelay:
                          format: int32
                          type: integer
                        autoDeleteQueuesMessageCount:
                          format: int32
                          type: integer
                        configDeleteAddresses:
                          type: string
                        configDeleteQueues:
                          type: string
                        deadLetterAddress:
                          type: string
                        deadLetterQueuePrefix:
                          type: string
                        deadLetterQueueSuffix:
                          type: string
                        defaultAddressRoutingType:
                          type: string
                        defaultConsumerWindowSize:
                          format: int32
                          type: integer
                        defaultConsumersBeforeDispatch:
                          format: int32
                          type: integer
                        defaultDelayBeforeDispatch:
                          format: int32
                          type: integer
                        defaultExclusiveQueue:
                          type: boolean
                        defaultGroupBuckets:
                          format: int32
                          type: integer
                        defaultGroupFirstKey:
                          type: string
                        defaultGroupRebalance:
                          type: boolean
                        defaultGroupRebalancePauseDispatch:
                          type: boolean
                        defaultLastValueKey:
                          type: string
                        defaultLastValueQueue:
                          type: boolean
                        defaultMaxConsumers:
                          format: int32
                          type: integer
                        defaultNonDestructive:
                          type: boolean
                        defaultPurgeOnNoConsumers:
                          type: boolean
                        defaultQueueRoutingType:
                          type: string
                        defaultRingSize:
                          format: int32
                          type: integer
                        enableMetrics:
                          type: boolean
                        expiryAddress:
                          type: string
                        expiryDelay:
                          format: int32
                          type: integer
                        expiryQueuePrefix:
                          type: string
                        expiryQueueSuffix:
                          type: string
                        lastValueQueue:
                          type: boolean
                        managementBrowsePageSize:
                          format: int32
                          type: integer
                        match:
                          type: string
                        maxDeliveryAttempts:
                          format: int32
                          type: integer
                        maxExpiryDelay:
                          format: int32
                          type: integer
                        maxRedeliveryDelay:
                          format: int32
                          type: integer
                        maxSizeBytes:
                          type: string
                        maxSizeBytesRejectThreshold:
                          format: int32
                          type: integer
                        messageCounterHistoryDayLimit:
                          format: int32
                          type: integer
                        minExpiryDelay:
                          format: int32
                          type: integer
                        pageMaxCacheSize:
                          format: int32
                          type: integer
                        pageSizeBytes:
                          type: string
                        redeliveryCollisionAvoidanceFactor:
                          type: number
                        redeliveryDelay:
                          format: int32
                          type: integer
                        redeliveryDelayMultiplier:
                          format: int32
                          type: integer
                        redistributionDelay:
                          format: int32
                          type: integer
                        retroactiveMessageCount:
                          format: int32
                          type: integer
                        sendToDlaOnNoRoute:
                          type: boolean
                        slowConsumerCheckPeriod:
                          format: int32
                          type: integer
                        slowConsumerPolicy:
                          type: string
                        slowConsumerThreshold:
                          format: int32
                          type: integer
                      type: object
                    type: array
                  applyRule:
                    type: string
                type: object
              adminPassword:
                type: string
              adminUser:
                type: string
              connectors:
                items:
                  properties:
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    host:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    type:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                properties:
                  expose:
                    type: boolean
                  sslEnabled:
                    type: boolean
                  sslSecret:
                    type: string
                  useClientAuth:
                    type: boolean
                type: object
              deploymentPlan:
                properties:
                  image:
                    type: string
                  initImage:
                    type: string
                  jolokiaAgentEnabled:
                    type: boolean
                  journalType:
                    type: string
                  managementRBACEnabled:
                    type: boolean
                  messageMigration:
                    type: boolean
                  persistenceEnabled:
                    type: boolean
                  requireLogin:
                    type: boolean
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  size:
                    format: int32
                    type: integer
                  storage:
                    properties:
                      size:
                        type: string
                    type: object
                type: object
              upgrades:
                description: ActiveMQArtemis App product upgrade flags
                properties:
                  enabled:
                    type: boolean
                  minor:
                    type: boolean
                required:
                - enabled
                - minor
                type: object
              version:
                type: string
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2alpha5
    schema:
      openAPIV3Schema:
        description: ActiveMQArtemis is the Schema for the activemqartemises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis
            properties:
              acceptors:
                items:
                  properties:
                    amqpMinLargeMessageSize:
                      type: integer
                    anycastPrefix:
                      type: string
                    connectionsAllowed:
                      type: integer
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    multicastPrefix:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    protocols:
                      type: string
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    supportAdvisory:
                      type: boolean
                    suppressInternalManagementObjects:
                      type: boolean
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              addressSettings:
                properties:
                  addressSetting:
                    items:
                      properties:
                        addressFullPolicy:
                          type: string
                        autoCreateAddresses:
                          type: boolean
                        autoCreateDeadLetterResources:
                          type: boolean
                        autoCreateExpiryResources:
                          type: boolean
                        autoCreateJmsQueues:
                          type: boolean
                        autoCreateJmsTopics:
                          type: boolean
                        autoCreateQueues:
                          type: boolean
                        autoDeleteAddresses:
                          type: boolean
                        autoDeleteAddressesDelay:
                          format: int32
                          type: integer
                        autoDeleteCreatedQueues:
                          type: boolean
                        autoDeleteJmsQueues:
                          type: boolean
                        autoDeleteJmsTopics:
                          type: boolean
                        autoDeleteQueues:
                          type: boolean
                        autoDeleteQueuesDelay:
                          format: int32
                          type: integer
                        autoDeleteQueuesMessageCount:
                          format: int32
                          type: integer
                        configDeleteAddresses:
                          type: string
                        configDeleteQueues:
                          type: string
                        deadLetterAddress:
                          type: string
                        deadLetterQueuePrefix:
                          type: string
                        deadLetterQueueSuffix:
                          type: string
                        defaultAddressRoutingType:
                          type: string
                        defaultConsumerWindowSize:
                          format: int32
                          type: integer
                        defaultConsumersBeforeDispatch:
                          format: int32
                          type: integer
                        defaultDelayBeforeDispatch:
                          format: int32
                          type: integer
                        defaultExclusiveQueue:
                          type: boolean
                        defaultGroupBuckets:
                          format: int32
                          type: integer
                        defaultGroupFirstKey:
                          type: string
                        defaultGroupRebalance:
                          type: boolean
                        defaultGroupRebalancePauseDispatch:
                          type: boolean
                        defaultLastValueKey:
                          type: string
                        defaultLastValueQueue:
                          type: boolean
                        defaultMaxConsumers:
                          format: int32
                          type: integer
                        defaultNonDestructive:
                          type: boolean
                        defaultPurgeOnNoConsumers:
                          type: boolean
                        defaultQueueRoutingType:
                          type: string
                        defaultRingSize:
                          format: int32
                          type: integer
                        enableIngressTimestamp:
                          type: boolean
                        enableMetrics:
                          type: boolean
                        expiryAddress:
                          type: string
                        expiryDelay:
                          format: int32
                          type: integer
                        expiryQueuePrefix:
                          type: string
                        expiryQueueSuffix:
                          type: string
                        lastValueQueue:
                          type: boolean
                        managementBrowsePageSize:
                          format: int32
                          type: integer
                        managementMessageAttributeSizeLimit:
                          format: int32
                          type: integer
                        match:
                          type: string
                        maxDeliveryAttempts:
                          format: int32
                          type: integer
                        maxExpiryDelay:
                          format: int32
                          type: integer
                        maxRedeliveryDelay:
                          format: int32
                          type: integer
                        maxSizeBytes:
                          type: string
                        maxSizeBytesRejectThreshold:
                          format: int32
                          type: integer
                        messageCounterHistoryDayLimit:
                          format: int32
                          type: integer
                        minExpiryDelay:
                          format: int32
                          type: integer
                        pageMaxCacheSize:
                          format: int32
                          type: integer
                        pageSizeBytes:
                          type: string
                        redeliveryCollisionAvoidanceFactor:
                          type: number
                        redeliveryDelay:
                          format: int32
                          type: integer
                        redeliveryDelayMultiplier:
                          type: number
                        redistributionDelay:
                          format: int32
                          type: integer
                        retroactiveMessageCount:
                          format: int32
                          type: integer
                        sendToDlaOnNoRoute:
                          type: boolean
                        slowConsumerCheckPeriod:
                          format: int32
                          type: integer
                        slowConsumerPolicy:
                          type: string
                        slowConsumerThreshold:
                          format: int32
                          type: integer
                        slowConsumerThresholdMeasurementUnit:
                          type: string
                      type: object
                    type: array
                  applyRule:
                    type: string
                type: object
              adminPassword:
                type: string
              adminUser:
                type: string
              connectors:
                items:
                  properties:
                    enabledCipherSuites:
                      type: string
                    enabledProtocols:
                      type: string
                    expose:
                      type: boolean
                    host:
                      type: string
                    name:
                      type: string
                    needClientAuth:
                      type: boolean
                    port:
                      format: int32
                      type: integer
                    sniHost:
                      type: string
                    sslEnabled:
                      type: boolean
                    sslProvider:
                      type: string
                    sslSecret:
                      type: string
                    type:
                      type: string
                    verifyHost:
                      type: boolean
                    wantClientAuth:
                      type: boolean
                  required:
                  - host
                  - name
                  - port
                  type: object
                type: array
              console:
                properties:
                  expose:
                    type: boolean
                  sslEnabled:
                    type: boolean
                  sslSecret:
                    type: string
                  useClientAuth:
                    type: boolean
                type: object
              deploymentPlan:
                properties:
                  clustered:
                    type: boolean
                  enableMetricsPlugin:
                    type: boolean
                  extraMounts:
                    properties:
                      configMaps:
                        items:
                          type: string
                        type: array
                      secrets:
                        items:
                          type: string
                        type: array
                    type: object
                  image:
                    type: string
                  initImage:
                    type: string
                  jolokiaAgentEnabled:
                    type: boolean
                  journalType:
                    type: string
                  livenessProbe:
                    properties:
                      timeoutSeconds:
                        format: int32
                        type: integer
                    type: object
                  managementRBACEnabled:
                    type: boolean
                  messageMigration:
                    type: boolean
                  persistenceEnabled:
                    type: boolean
                  podSecurity:
                    properties:
                      runAsUser:
                        format: int64
                        type: integer
                      serviceAccountName:
                        type: string
                    type: object
                  readinessProbe:
                    properties:
                      timeoutSeconds:
                        format: int32
                        type: integer
                    type: object
                  requireLogin:
                    type: boolean
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  size:
                    format: int32
                    type: integer
                  storage:
                    properties:
                      size:
                        type: string
                    type: object
                type: object
              upgrades:
                description: ActiveMQArtemis App product upgrade flags
                properties:
                  enabled:
                    type: boolean
                  minor:
                    type: boolean
                required:
                - enabled
                - minor
                type: object
              version:
                type: string
            type: object
          status:
            description: ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis
            properties:
              conditions:
                description: |-
                  Current state of the resource
                  Conditions represent the latest available observations of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  ready:
                    description: Deployments are ready to serve requests
                    items:
                      type: string
                    type: array
                  starting:
                    description: Deployments are starting, may or may not succeed
                    items:
                      type: string
                    type: array
                  stopped:
                    description: Deployments are not starting, unclear what next step
                      will be
                    items:
                      type: string
                    type: array
                type: object
            required:
            - podStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
